{"embedding_dim": 768, "data": [{"__id__": "chunk-9a9b142a0850998d07730b2140384430", "__created_at__": 1760487567, "content": "# Bitcoin Core: The Reference Implementation\n\n## Understanding Full Verification Nodes\n\nFull verification nodes are the backbone of the Bitcoin system, providing critical validation of every confirmed transaction against all network rules. They independently verify the integrity of bitcoins to prevent counterfeiting, debasement, and other issues. This verification is crucial because people only accept money if they believe it will retain value for future spending.\n\nBitcoin Core is the reference implementation used by most full node operators since the network's beginning. It allows users to examine blocks, transactions, and other blockchain data that their node has autonomously verified without relying on any central authority. Running your own node gives you authoritative information about Bitcoin's state not because some entity designates it as such, but because your node independently verifies everything.", "full_doc_id": "doc-9a9b142a0850998d07730b2140384430", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_1.md", "vector": "eJwN0o1XVFUCAPDQDDTUSUQGZoaZee++9+597414VkO0RAk7FEuEH4kKaOLiWq7B5kcGSZpRlJLJAvI1MG/eu3fuuzODsmfFEtGQPpTC8oChgmFu0cklTVO33TpZv7/hN1m9rIrtW8IJSXdD+1y75OJ9HcaD5jU115vVMAg24W+D/doYuiHV0KP0bbwsOIymte4A9+t1gZ+5GinbOCpXHPhBe4mOKFUJ20HSgY99vcJlk9Ln+XiFV2sbZqIB8zBP3Z8KdnRS3QqvtM5VNcNg/Z6nlVX2N9XD6Kr5H1quNs3ITVgtJgXHHCvkysQCfEnPaRqIb1a+li4FCjzjYap6m4sP95KI1jzPCXmQDoIUZy9eZJ3vxnIxPekeoq/QsG5p6XacFL7Xx6MyMcx/Rgu4qa5PRJ52Apx01ltqKRFe1nzBDq4G5Yg0TgiMkWY3j+vZFV8j69SnePLV5ewUuamXx3b4JvBL2Ie2b8SSoGkfMffTVH4PXOm57t+A27QddIp7KjsC+9VR9GfjNM2Cl61x7ENQKj6j/Co/Tvvqo0MWsENxCnuEq40J6kGjQe+kj0n31HXeLt4hZ4dSD55jD+vPAGegzr6ORLBIeS1eCv/P+owrmq32PpiOY9UNxCfdwX9CN+U0zkK7bBu4e/WzbNUzdgIKisUBJiNqlIlFtdOCx/TlxlciZLvbchKXeh8AbYmnHS+jObC4QU10KmFjpf4E2z3NQVMZ3Z/hettf6O80bvJVju24QwiRouhe6oXD5lllgY8jP7FR7bx+3H5ixtyWvfG3fCVotbARtyCOHwneRqU0yTdaidDfmjfBWJLLvQcfJEF4nCzFJRDjImGeOiDlwYlagbwNpUpAXSas0H4ShhOugi2JT5M5zfNZsW8DeQ2edt6DXUosTmuuqjtD4sgIOpSYis+rPwYjiBWU8dj1nfZlMIY+QhaDha6V8nb0Ai3hc1if5LIeCWWZPWCFP99dCt6iS94tZAt9IZAMb+M+w+JZJxxT1zZGV78F3Ep8femMdtPmzAz8t2mOM9pSaeSH7zhG9XZ5r+vzdwuQolWA3omj3r14REh2v+7kQgahrbPRFp+Puxi4x59VK0K1IY9rhGXYf5OnBGeaz8n+wCrwg6c/HuN0uLe2Va00DjfeCebAWr0nbiiBiYvgTlekVAVeNKPFTPQa+sQRSZ/nMnyLXefpo/CQ8qjerTUbFbHX1LXcGfqFnumabKxw5nKF9qvKMJsvL8bTYWZ9uy2Niwh9zdegJQn/sFa710p71AZzvr8b7dNq5Lswyr5djIL54kOBWK2GRtGLOAVdk6poFpkHnoJfAM1jalEkzzxI/+XE6FM+F7epX9rrLevFLLDLcZf9ak4yrTTZfc58X0i2/9vAwgRXVDAOnfZP4p7g/xkYx8q5CrCTFal/pemwvGmbNhvY6Ofax6wP9EALrAbnxPXCCLqPYNLjjkFlAdSWgcqELuMUfs4jGoDu1xaaF2iq6yEuGQX8F0BDaIDGe3VvnhRXN4f1Y+jvNrBcrp+qjxPtofXwBZJgPwWq7N2Bz1ihvzHCQf7HW98YZ2Q3bBaHWp8i25hCF7AO0hkz2YwN/+zLFuYJNn7EvxncUg5bP2haYxbLE9iTcHog3HIlsJstMCthwDYEtzZvq99svifMBRdMXiVsXCjbzBQ3Yo6W4kH3S0qKmSKV2pf+cXC8bHiOKl0TU5Jmy2OCo7XZKrJocZK5IwzbDtFdDUuCG83x6JjehRP9B9kd1l59oK7lzVf12Y4b0iXtfnUQvEMFfEMYlubqU6tSaYz4hvUX87q+leymkdZoDLlb4hjIwReNZCmF3qBHrM/Cx0mUd54wS5nJ8rXM+EHDSQfF69oaR0ngDJlFT3BparqxinXQv5vTyBZjs57hnuKLNGKIGPpIfITEQJsjip5gl2leaLq1if0Y9xdjtT8dHIMT0ANGmusb0mPn6aieIg4ZK6UYBcNF4qbEIrXQzzELjQq2tf4OXUycUw=="}, {"__id__": "chunk-a9d2e059a3cdbbac0d90b4a4dc0202ed", "__created_at__": 1760487592, "content": "## Alternative Clients, Libraries, and Toolkits\n\nThe Bitcoin ecosystem includes many alternative clients, libraries, and toolkits in various programming languages, offering developers native interfaces for their preferred languages:\n\n**C/C++**\n- **Bitcoin Core**: The reference implementation\n\n**JavaScript**\n- **bcoin**: A modular full-node implementation with API\n- **Bitcore**: Full node, API, and library by Bitpay\n- **BitcoinJS**: Pure JavaScript library for Node.js and browsers\n\n**Java**\n- **bitcoinj**: A Java full-node client library\n\n**Python**\n- **python-bitcoinlib**: Python Bitcoin library and consensus library\n- **pycoin**: Bitcoin library by Richard Kiss\n\n**Go**\n- **btcd**: Full-node Bitcoin client in Go\n\n**Rust**\n- **rust-bitcoin**: Library for serialization, parsing, and API calls\n\n**Scala**\n- **bitcoin-s**: Bitcoin implementation in Scala\n\n**C#**\n- **NBitcoin**: Comprehensive library for the .NET framework\n\nThese libraries provide various levels of functionality, from simple transaction creation to full node implementation, allowing developers to build applications using familiar tools and languages.", "full_doc_id": "doc-a9d2e059a3cdbbac0d90b4a4dc0202ed", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_10.md", "vector": "eJwFwQtUFOUCAGDtgZbGS1YU2J2Z3Zl//n9mlpdvpVOIZalZHQozbxFiXikiT2aZmKmZSaQWUO7Ksrvz+h8zu5qvq14upB2zktTDzTRNUkvLyvJ6jfCUQd93v1WkHdx2MPmwNs1ZZTcKO5xrbL9xCH6sgNxh4g/0f7atXxCfUxfRbjdLGuGaqusfag1FZ8mv8js4itfjW1sisVWBXYohHLPzxXe8dXwtV8IuBkMRf7AY+YIr3EJ0dFQq/FU9qhWhCfoFJVufy9YUJPL7xBNKAPC0xwqiOstDXDUVfKTORAvsVmsfa3Z34WfgRqFq8+2g3L9PySf17Le2ITRT6yLn6J3SW9I4txxG4zvAdL6W5dLHjb1iwWhV6OXeJEN43uiVO8gBPdU+Q9dYwbwG8Wdyq7hQ3cwukY5AZ3SE6kUXnWGJZp5jHYJmPkSv5YTheM1lOe5V+NTmTHmK/zV6WcgSx7BLdkFrCzsPTekMmiY2oapRfTgtJLNufr1qKCvJXOOqdkNqTMxAperbnAetd86ajxHA/65MBP9pqwSNQHSS8YqkV3xWnYzHcjfjFfRB8aFEvrRUWuKctA67Kc5hGKJCcISTQgbgFVIdz3Ynq4PtBlnzDLI7tcbou/EJeWPMz8StzT7rCa+L/oLMORv40ezTQnq+m8G9BF8WFtvvJUaDqdZJOEveq6Qrojz0/SAskuKxJjFGW7l7rFuMNK8LVxJe6MsDardH9e0BpeTb7DH6s+iAmQvDFPDb8QC7FGlvqAKDrG3mSjbABzYXBjrUK/wy5z55EK52FxmvhGpHOsFe/XTb5NFvWdPkpYGJ1jfKj8TBmRwGw/Bayktl6HnIad96N7j/ihTr36Bq8Y7oEnsJnS3vd+8JjkUlUqnaH19uFbNScTZe4IkqwPwYSOQF87w0HKxGR4yaxB9WnfRhlqxOUg5BPvuwX2CV9AFcbL0QVgDgD5EvuQphQ1uCDtiqTiQu8phZpm1vqgo2kxaWKfcouYkU3XHrRMF/Qj6vN4AW55FkA+BC7WiGPZx9BGYFDMFL1kV+ChyJvyqtb7Jiu4y7vavFi9ZidM7BxufaBNa+VQMKPcNVyt/RsY4uLEoMwKvgO38iPl+KEl19NL1HKMSeDUjR6L/N95GpzIQL5Wdy9rAFYJ84HT1njI9lRU6Bolin5crrtLTwLyxt20z/Ba1Juo3exag0WFkbPgHM9N/VfroffmqUykPFXqNIHJzstXdkefQS/4qMWVoNJGQ450MTcaBtb2iGbyGsyG1RPPEd+mn2ZOT5WFR6kcum3SzMRqqVgSzYI/5EN3nb4stRcTBX60Tfo+P2pHeZ5tC5yipymZbx6ewO+7p1Dm5CQuvLvhKanpxn/5+W0fv4g7iHApQS2OkYcqWN21b45+MS72zuVGRqcjvqxi+h2+Ab8BS6CvfnfUELzI3ov8bCrRXaINYUnRZbhtbQTlzS9idtxl3+ehGBxxUAVxOdJcPHY4OjhcTrXCYfxnvBI3yaVGZm0pFknX+8qb3xNJjvbLL/4a7FPlCQ6OI0c6oyzplD2gNXWI4zxj6ZkNjrOR/AO53qaJ8SxCPEXrvWHqJ6pQF6b2Q3fx7PgaP0GVYJ/tpS3LMiMKeIn/q63R8oaXlC2UhStf6ERHYnjoqV1tv2OTJHtNT2hOlncLd63b4hV6MauTFek39cKxOofiQWwvNAIalI7qHH2SW/gEvFz9HTKBUnwXCnYYuEtwvXcYrxIO7w/zNjnjaAV7srAz7pupCBfSOXUaC8KUTJA6ye+80sF05nHUUHmlKsfnzDCGpT7A18h/8ptcabo3wVvkl+kg5zXzOXg2tb+tU8e55UIuwk5XSx6IU30UnU9LQGqux6q4FeseulY065kZLMgmHnE3mmVUO7aNDoorXiQVYuLc0zSUiuk3aDSS1/ShHrWHxneCPZKQyxMrTparWcKfZuyZMvxMdRyUywtdbfanqfOQ=="}, {"__id__": "chunk-96216aaea06f86fb88cfe4e516febc8f", "__created_at__": 1760487627, "content": "## The Security and Independence of Running a Full Node\n\nBy running Bitcoin Core, you gain the ability to independently verify all Bitcoin transactions according to consensus rules without trusting any external authority. Your node downloads and validates the entire blockchain, ensuring that all transactions follow Bitcoin's rules. This provides fundamental security guarantees that aren't possible when using third-party services.\n\nYour full node gives you direct access to blockchain data and network status, letting you verify payment receipt, validate transaction inclusion, and monitor the network's health. This independence is core to Bitcoin's design philosophy - it's a decentralized system where individuals can participate directly without intermediaries. As you continue exploring Bitcoin, your node will serve as both a learning tool and a practical component of your interaction with the Bitcoin network.", "full_doc_id": "doc-96216aaea06f86fb88cfe4e516febc8f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_11.md", "vector": "eJwN1ItTFGUAAHA0xWAUFRS54467fX/f3i43mY7hA0MbEkMSpVTAVJRMKzLzQaaBqGlRKHKAwHG3u7ff7reP01BIG83QHpqFEDnq5GCm+ajMyiyytMfvj/jlwE6RbJtnb/KX7yXd6b5D9D6cYDjF3OBO+lWmuqnLHCzlw9tknrnC/K3phnFGaFULwBRzPVpD5YFlegWfzeYZy3ABmOUsG4aVOFQDJ+Ess4dlhQXpnvBdcBMPlL5RnI3HQI3QyZwjVvDj5D/thvTf4aDWfDHAJ5rZuELIZAh6FTPDLKG6qVzwN9UeEpqbQ+VwCfwWVfn6Y6BQKb1s5kY/Vs77S4Q5Bqgq4y4hIsKyr8CFkXPSXusaHq08L8+mZqYO0IeDWnCHyVfb5KbmJUysNIEa6a9UZ3iL2X59qJ4T7mDjifvUXfS3RsvZ4Q/Mky0njPutCcJXQpU1HtVF3lN/IE5S31k5ZJF3op0fWm5q5m56bKQRXtxT4Bqi9ujD3aPMf+BYXy9fn9aNM7kUrNtBZiT3pbAZlJpZTYft6SQl6Moi16fyAd8RtNgda+0Enfzp4FDmMvRbGbWkvTKwSlprzpXj1HhrEuwI62C6fRXddt8i79D98nl+G9oCilzbU+vFR0kGF+8pTSs0FO86rZfwBHSWsBxsIcIjk2XappR7aD7DooH7jnolZS07mY4jT0MNLJZepJ1EXORHfMcU2e7Ia7hWe0ZqpRaEr4eTU7sCXeg05Y/8rNzXptI55gihP/i19pe1S31b+dUTkccHjzPOBtq3J3hd+hReYdKic4R4PM39kHYZJLr+gQ6p1uECCRr2zY04Axm+cvkLagF/lF7ETES14HW+hGv3rZFWK5kog3yQKXOVN/4+8GFDSD2mheEv5GnuBOwxOtSkQL+6GYfBPsePiBKS7R713WAV9ME/1On2GdnDKOxmNkbo5rVoARpiJ6lTA+sthzGIf8HbG1g+5ph+xLs3ArA45jB0qKvJjb4HUIzwlpal7aWbhcFqd1oZ7gqeNaA8pHkEvQkl2uUeS34Vbkldn1zmqqB3sizT4BSVq65C+gwRY+xANUoWrPSWcZONPiYq9BklUVr62jzhGSjMNDpQjzBP2w5J4ah8IRLP3tQ+Eopbq73TzCtcW0tKcBcdz5TAYm4dTJIFlMTugAX8Grke+5mL9FQqCw8QknzeyAb0gyFBJF5g5pn7ESYu0Z3u66Qd6uW3a9McGWiskCv9G5jLTDEOMG1cMQnJlxk/nCq68Doy3Zeth+m2cDIznx1CtoB0JaqyGq951cdJzN0yesw2z2zqKIgR93n60F2zXeunD4El1Bv0NXhBbQiILYUtnqBol5rbrPnymFHPGfc53MTg2ylnQoydIqyRHmMOBo7rB1EeLZsL9V+FPPkJpo58Gt90pWpfhOYY7XASV8MuBdXkWiobnNMW4KQ0AEfrK6O54JKzRcuVbgknlPeVMmK+GQ19TC+mT/nivH5GtTLrd6WMVuvAlaGDtAy8VK7UK9iVOInNSNuFpxB/obOA91ySo5LH+BnneUT9K0mNiHJxsJDxKy7UY83St5r5apy6FU2wauVS/hF3dd0o9ZNQK0hjLjZIxk+gp8XBJuAaCalulIiauVVECRhO8i0nzdjgPeAzYsVN1jbcZSylf9O60QujYx1+WIjz2IvcDlSkJ8LPxWN8s7QjPZGvp29Ky4iruLFhOn4uuiHahOMlJ4bW/xHJG0J9adn2CmO5UuQoCufItDqevEyUwVJiDrqnf0hR/Ex1K9XZkMBNrHnY+N4oMtORSk+IdDo7eJLAmkM5RY8wZmvvJL5CNyj5wx71NsElZocaD0R0BBfCKXKcXO0+2TpC+xYGfSxu0zeqjbjT+LNuHO71+sLXUt9UnzSfTe5TeNDKfqYV2E8Zk60qyFj7d29EP0nt7AD2FH+BusHdQpXqeFxBvOTqU02QyWfwB8F1UuaOhMcZc82Z+LXgf6KAnas="}, {"__id__": "chunk-f743eb967c01da15fc375a8647be91ad", "__created_at__": 1760487647, "content": "## From Bitcoin to Bitcoin Core\n\nBitcoin began as Satoshi Nakamoto's implementation, which was completed before the whitepaper's publication to ensure it worked properly. This original software evolved into what is now called Bitcoin Core to differentiate it from other implementations. As an open source project under the MIT license, Bitcoin's code is freely available to download and use for any purpose.\n\nThe Bitcoin Core project has grown substantially since its inception. By 2023, it had over 1,000 contributors, with around a dozen developers working nearly full-time and several dozen more contributing part-time. Bitcoin Core implements all aspects of the technology, including wallets, transaction and block validation, block construction tools, and all modern peer-to-peer communication protocols.\n\nWhile Bitcoin Core serves as the reference implementation, many system aspects introduced after 2011 are documented in Bitcoin Improvement Proposals (BIPs). These specifications provide standardized documentation for major upgrades and technical implementations that extend beyond the original whitepaper.", "full_doc_id": "doc-f743eb967c01da15fc375a8647be91ad", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_2.md", "vector": "eJwNzI1TFNcBAPBiByQTPmL5EDiO2719u/ve3h6xxpQ0EKKZVG1ixkHTFCRRUdpKwajFD6oRlFFMakRU0OO4j93b9/a9/YCYjgHHJAoSP6sZOzSCSdUmJVocM51EMx2Rmvb3B/wy0MHgjve8fV+o/7HTY6Z8kY4bP3Oz1Cro0xSIDN56CC6kXYOppMZtChu9G2QfrjgSEJYxLKWpvawY1KfO9ZfbA8Fy85R3Or0vloNG+oQ1Gjgh1CvpYj2qJU/Je8F0OIT2qT+Sq808OJ/OdS6r69VdYAStUPeSg/SN4NnIiH5XKCE54migUNbMiXinM63zRKACvWevRrzfVi+Q2+5QdEni9eIudNi/LP6Uf8i6wO83PJ4MvUR83051BpAYqfN+LmWT4vz0wu3oPNsd22AciDytdaBWdZsG8+tVxIBbKX0rjXIjcKWbxbaK1+kh/PyRZHsmltX9wQKbc+6BpMIZQiX9ygrBJvEVdz2ebV0i06Taou/gze5JuDB3nqmSF+xj0j04ggbpHLYOWZ5XXawsELcr7coey4+fdT4AXeqYbILaojUBC4+z3XZQOKpeOZjMvwo3WUnmXCfdyevpt9Yam60Z9DO00/iFetxeBYIgCX8If03GA0dBafsg/kv8MvzUzxyv5z7xyJNYx0/kfYJO4SnzYu47+lq1G09zZ8aTTUncSo+6K3im7fa3yRE8qDwjPipMiQ/BFFzO76Jj2g1jkv03/ke4MNqO93QfkleDtuyN6O+J9K7+xKDyNXugzGHPJR70fGx/Cgi/M7bKXwVe8Jlej8TZFM4Gd5waWaJ/stzQUM5JbV1gVrSB+0EpO7gIVRurwU0QLlokYjUHlnoX483wLTkES4K30Tn2B7Ex4uFeig72MP0oy4SHHQl9ib4TJ9XfRgb1NcJCeMT6AW1R7+EpWG2+SRhOP/Q8GCYldgzH+DuRLWCNagevmS05uvuvTsReYw3mVn0DGI9elI4RQx9wgmySXg+kaCfMm6hRfjmo5V2nIc95Zam5FjdZVYlRlgWaQDE6RpNsTegoyFM6Dr+ot8gbOE6sNAoKV0X2FaYI35A6ayN30nzOVxNN833EVHgenbYn+p4GTXRS3iLtZYusVhGYFfC4fMZKis0u+g2pUfsj9VaTOeXNKDpurhCuwRA6DSs5Tmiza7kJ5bGCfxhL2VV9k5Rs3iUpcmewleWTAacSPlSXw2skHF9ZVAEbyI9hHxRQr31Gbo5/Lk6i9fiqGOrbpDfDNH2B8HJPveQEnmGLaHLBOsNLr8iLE4/x/wyYKCKU4T9btqN5q+Sd3Nl4G/aRfUoSGlNPFj2yJZrDpsG3A4WwILdZrcZZsDEYxO0zW9lb2nn+hPk6uMyiICaNmNn+q/ivpEWsYOXORml57HG2RH4Xjjli8GOyLb9B31G0R3iSVXnbe2/BmsBM2CZ/KGF5Ur4ZymDQPxtmsp6+GwqHa0M3yEI1QrLtr3tGSYfRDZtIhiiAalRmZZIrrB+8qCwHc91TZgBvTgB+R/yj7inymhMG37Jh8xL/N9Kjj1nN5FDs6v/fYa1Wq6W3vHXCg+w0KpJfOg3ktiHgLe4CmgGOw5WQ90/oDIYLhhPLnKiSgvsCHVaudxj7aAom4lI2kBgp5CLeWC7/GeqkYeV31hAtdVv5+YlzuNQRfOuDXe5P+VTpEV9nHBMbipnSQnyzHkel/KWuslCfHYXTe7+y69wJZhk/Z/OpK+XJ34PVUov1pd3MZ8Jx9g0/mmgWd4EHcoacbH4RfigVx5oKkJZlzdPzpTtuGo6T/VYXFRPQv92T210RP0DuojnkEfneyJdE8nthm0eD56xbdNRqpl2kXdzK7sq3Z/yKVls3YDPMYktdZp4293gzf3LGynj3354yWuIsdxRxhxmShzk5fJ1uZp3u+54rpFFKjbdE3xEPiGukhrx+7k12Fg+GB8L3BSmRBJcEpjgsz8OL1Uwyy3nWHMV12v8A/D2lkQ=="}, {"__id__": "chunk-77fe674973a53c249322d35ec85b37d4", "__created_at__": 1760487657, "content": "## Compiling Bitcoin Core from Source Code\n\nBitcoin Core's source code can be obtained either by downloading an archive from the official website or by cloning the GitHub repository. To clone the repository, use the `git` command:\n\n```\n$ git clone https://github.com/bitcoin/bitcoin.git\nCloning into 'bitcoin'...\nremote: Enumerating objects: 245912, done.\n...\n$ cd bitcoin\n```\n\nAfter cloning, you should select a specific release version rather than using the default latest code which might be an unstable or beta version. List available release tags using `git tag` and then check out the desired stable version:\n\n```\n$ git tag\nv0.1.5\n...\nv24.0.1\n...\n$ git checkout v24.0.1\n```\n\nThe build process begins with the `autogen.sh` script which generates build scripts appropriate for your system:\n\n```\n$ ./autogen.sh\n```\n\nNext, run the `configure` script to customize the build process. You can view available options with `./configure --help`. Common configuration options include:\n\n- `--prefix=$HOME`: Install in your home directory instead of system-wide\n- `--disable-wallet`: Skip the wallet implementation\n- `--with-incompatible-bdb`: Allow incompatible Berkeley DB versions for wallets\n- `--with-gui=no`: Build only the command-line tools without the GUI\n\nAfter configuration, compile the code using `make`, verify with `make check`, and install with `make install`:\n\n```\n$ make\n$ make check\n$ sudo make install\n```\n\nThe default installation puts executables in `/usr/local/bin`, which you can verify with:\n\n```\n$ which bitcoind\n/usr/local/bin/bitcoind\n```", "full_doc_id": "doc-77fe674973a53c249322d35ec85b37d4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_3.md", "vector": "eJwNzYtXFFUDAHCgiCiREBDQXXZ3Zu7MnTuzKC8faceA1EjyUVKUoliadpRKsbY8aJJaZBwMUloeuzuzc2fm3pnZAj2laRlGWmkiVvhKOtGXfj6+vkzreHpp/f6BX6JI0LRuyZ4r3W0uMQU50fmOplqS/5gQ497KvDb6WzOQ2ypVSlSPvXMWdln/y6vTj6lVaIta6YuDN5TDzFbwmjZob4d/0G6S3En5gGeCMtHeDSeA6vENqf9Fx2kSHBD/8rQE06TH4Q38Ih+n6lZMTpCG+A+lCjGVDmW45fntYTEHLDE+FBtAubEL95M5ZHrKSvljUcbF6DK4jthwmzNL5aPFeafFOPJ06HLoaz3AzFDT0Kox23GVVUQh9wUNGflSf5QR6zxdTIRUGYva07Ve12KxSV7izXAlooCB7Cudv+qTuA2gKnbODEod+KCaaKw2atVC/2H/UrPDGA/L8XTmpsrrm/kSIS165M0Uq4d+xr+tnfT4XM9x78Hl/86HrRfEKJ8ihS1MH0XI3eew4qsoQfoIDkZr9DjCgS5fivB61iORfvHv4Pu5y/AJ31QxQR3KpbDceoBLsH9n/PhJWoJH2A8ZCt+n9UuX8E3jpFCsPyP8x7hf3GoEhCeMGiGEFirvGByZEKrM2enWreTWhfwvoEJZBh9Wl8vrmWT6lTffNRD9idTFEiK1kd+8cXCn+pQsKTXgeMcCtFspDRfQC74hLkU7Dy4JV6Pr4Dk2yD8LKCkFT+aeZ+rsTEGz69EXytXMW8yZVo+SkDs5u12zwTKznpuCK/Tb/V7+UecO0Ei+sa/gS9rmyC6xxRxLZdRnxIvx+ieRDcwtkT1MHd8Im0Id6kZ4Cv4g9sIRwYPmWW5NeIt2nzbLK+qfbQ3AZ6xOOBHOxqv8z9L5arXxhpZiFnANMBCdKZfik3aV0C0WcMXRame5kxIa9vb6XpSzpaluXZ2sx2U8YXxJG0FZuIJ9mVzXu/Au7LLmqInqPO56eE/0AGIypuc1uIrAbWC/XGBu7JylXNUHTR83nUvlMqJ32oXiWP4edLT5pw7kSsB+l0vZx9SGliIPSOH7rMDYYr1se7JxDZYx8bnnxCvOFuf/YJ82PquZWx2ZaMbJ75pHYZZUA77Hw+w2ugL9CDQyycxixnQBfDH9OVgIZvK96jw+5tSDZeLr6Ijra+Ph0B256WyLqQrf+R1SYE4z+oKVedeFb6neVQhkONp7Gp5hb/jd1pkOoL3preZ3bBrIbiYL+bvFDzBS7yFnpIP+U06bmj860xyVPRK+6n2eT4VrIVB26t+TQfsQ74IOvzfqVw6QUXxWaIr/XbMH95IBoxz2oG1oH/8Vmk1mCNuQikvFBiLY89zDliBEzHa4ACXhah/ruWCl6vfh902C3yCT6CY4CddbF9FlZVp4ZFcb8SorzINojbNa/Cs4RzggviTEu1cJhbiZqM1Q+JHsdBrAWzsCSkhLknu1ID2rVOBYtCWnMi0dZWSHxU/JUQ57ZoRPixf0EmcdrVSyoleVR1w1kNcLyW3uRgOzRd4F9Bg/hQgUtbWbq+76IXttNAmEfY0MSyx7i1kcK6ExbhQXdOab+/k0c4hbPKY0fIFpIa34lHkRbTBf4Ufn7GmdGrkd11Bf6sdaC1gY/t1w08PwiJBvDUiLuldaZXa+iEi3e4Y5F270b7Mysz4BVK1Qqph+OEpWIppfFyo4NCa7qTYnDlyx98cmx9Zba8ha/RjeC5sEn3pcHGfdbz+g1bFz1T/drTmHWJg+Qq4XRjqD7Ao+U2NJie9ncq/npK/cPqEPkaSsYn2c0HTra8JjnUVWMKdIPi/UZj7FeoRb7ROhU97VMM05Z3S7HqLjaI/wYPZi2d820UjOvMkkswkk39qj7NaW6t3uEn3jJrfSblWTDGsYQBxip0ST6DXSTFc6g6AofEjLj+z1rjf/lGbDA7lert7+vH0dNnCdOhzOQxl5thC/48FIIVzkLbMu22PNOeY/em2UPg=="}, {"__id__": "chunk-df98849158bc00c2f2da389c9845f0a2", "__created_at__": 1760487677, "content": "## Running a Bitcoin Core Node\n\nBitcoin's peer-to-peer network consists of nodes run by individuals and businesses. Running your own node provides an authoritative view of the blockchain with local verification of all transactions. This gives you independence from third parties and helps strengthen the overall network.\n\nRunning a node requires substantial resources: initially downloading over 500 GB of data, processing about 400 MB of transactions daily (as of 2023), and requiring at least 1 TB of disk space for long-term operation. If your internet connection has bandwidth limitations or data caps, you may need to configure your node accordingly or use alternative data sources like Blockstream Satellite.\n\nCommon reasons to run a node include:\n- Avoiding reliance on third parties for transaction validation\n- Maintaining transaction privacy by not disclosing wallet transactions to third parties\n- Developing Bitcoin software requiring API access to the network\n- Building applications that validate transactions according to consensus rules\n- Supporting the Bitcoin network by increasing its robustness", "full_doc_id": "doc-df98849158bc00c2f2da389c9845f0a2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_4.md", "vector": "eJwN1PtXFNcBAGCTKA3WEuW9wO7O7NyZufPgVV+tRI3FpMYivqgxBleBmqPRE0Kxp9TEUN8aCCLIY2XZnWXvnbn3zi5oQkyDRENC1HpqgieJGm2V9mgbYjxtDkSQcEjzD3w/fuul61lZp+ZGXFm/6RwNLoBXgxLdhp/P7Emva42X/4gZfcN4TBkCs9lrkTe5VjqoriY/4X7GunyUd+qjdBf/YcazbJB0wIJQrLihfQHItlbSHZFlcjb8NHNJyxtwp837dzkLUAPco5mHyprPQB6lRpblzFdfR1X6LO0+GzM/09bCYx5DkWmR531wT65KnUq+QV8f+0j/nXpyxuvqgUBS5m3PNbrc7m+vzc7XX0Jj8gCchb6ofaR1u5JCVLCKVJAy/9bQUfEdcT6eqsVJvxc5ctvIST0t/YC75H9kbXTXJF3XvOSAtQ1EObd0S26mcaRDcHBP0VpjDnuYcUX/LPPzyF6SZ/zCsw3KKQnsQfqllk9ZHiliIbsNvnJ8DrzvWuh/SxgiI6GzTFGXq8d0r6OaVaoR89XoE2KhirV85aGZG662o2KpYqeL8D24CVaHovKX9k51rlpirRDaxILo9o4ddlL45wYzPwhkowk2CddZpTA+0pLgwzdBp1SY9Lki4XrlprTGkZv5n442iwWuNP3PWthcbOYLu8E84I2MyN9aVeKR8DWSEizAS+QdJuhc5CnB1LXdk88FoNNzgX9VyE9/z0q3Cli9q8HcY00nxY5N4mZrF/CCpWKn9WRSu5R3fD/+u+dZy60vChUbjfQ5esFxDgwfOcT/NbTX+StYw+02TumCItlB5So5zV5GLXJPYFTsbt3KTVc+wbmwPRwN1WmF/LJQv9YHi6Rc3C2/qIlwhn6L6wlfw4dcE6Et4QowlhBDNgrbLA2WgWnyWWWeZbeLPieO2lT8WEi2busV5BWj4kexT9hnlrANjz4Ku+U77uV6juZn42Qrq3y8zwhFyvCIY8qJWFRNmvFX4SnWOrr4iSeVREsNTmgKV6+vd5Sao9LCzGlhsWOSeN1xEUftR2mFqaXo5WhVxsGGXu1K+3H/gbrcmXMzZgf6G3rxkFTtnsDDRLQep+fk4hNvKnG4WJ7Uz5CuSP++SjyafEedTWqsScVrLVVKMw/jWPu7YD5z6KcD/Wnd+HvwMVdhenFpSrIaL4TAd/VdeKXoVqcogE9pdkhFcHNakUEUr/oUiiI/+63bl7lFTrR9dMy5QK1HB5TUpj5VCH8CZlp+TWgrQSViGnvNXS7s9Yy7BlMbNUMbp1+YNxWApvKcUeF5RF4jDsEbXAs6SYrNhQmNAIBs5iBWxpLYYfmS/gOIw/PxbnNCJqot/le6qvyU+LBXWBA+z02zu625rNyqbsihGWIveJFcBrJ7hF3QEswxHgl3MaYaWE/rAjv1EdOhNHn85AXu3+RpaY11Tzks90hvCXJ6E1ivuNBd+gBcVv6F4qIblLdRf6gnWKkvJX+Z+TX/a/ZCYqenmzutBZ0rNZe9D3nELrQY3k8+z9bRAfd8/yj40hDBWvQ0ZcJL1jtilpDuewak0qEfPxmmwDMLxTiJ8UvQ2viBscWuokZkNSo3zjpXsAF0Up3DnxIH0I0aHjYl36zvxzHqQf+kEkC1fB45ghvMWPjP8CrpBp6HjrBK4X1IrSk6F/Gxb+mwsYqcxw7rjHhQbbLP7XGIX53oQaWyK2u1LlBnVo1aL1SSxVIOW4RWk/JITLSRzPStYH8zqBITONgxzufZ16kTQfGSJeHxwJ8aZ7T2iWMNAfI9f8HzNtxLmsG7eKC9zdiOe0gxu4Ovhfa3xQRLtMT6B7Q3o0lpMi+GL7ZdhOXGHuOwOKrGs0IzQUiziglT/+AfObolUGatJZelEWVXqD/wZ6OOfEO1tHfZSvi8ayi8kRy2c4zH8PT2KO9oG2P3zU3Mpzxgd7lL3HO8LR2VejVB/hAOonik4cTwsYx7vnl6nbpZuAUGRY8a6yHmfusZ+tD8P11Oqyk="}, {"__id__": "chunk-809df5b104774be839a96a4da9c744da", "__created_at__": 1760488506, "content": "## Configuring the Bitcoin Core Node\n\nBitcoin Core looks for a configuration file in its data directory at startup. To locate this directory, run `bitcoind -printtoconsole` and check the output:\n\n```\n$ bitcoind -printtoconsole\n2023-01-28T03:21:42Z Bitcoin Core version v24.0.1\n...\n2023-01-28T03:21:42Z Default data directory /home/harding/.bitcoin\n2023-01-28T03:21:42Z Config file: /home/harding/.bitcoin/bitcoin.conf\n...\n```\n\nThe configuration file offers over 100 options to modify the node's behavior. Key configuration options include:\n\n- **`alertnotify`**: Executes a command when alerts are raised\n- **`conf`**: Specifies an alternative configuration file location\n- **`datadir`**: Sets the directory for blockchain data\n- **`prune`**: Reduces disk space requirements by deleting old blocks\n- **`txindex`**: Maintains a complete index of all transactions\n- **`dbcache`**: Sets the size of the UTXO cache\n- **`blocksonly`**: Minimizes bandwidth by only relaying confirmed transactions\n- **`maxmempool`**: Limits the transaction memory pool size\n\nFor a full-index node suitable for API access, you might use:\n```\nalertnotify=myemailscript.sh \"Alert: %s\"\ndatadir=/lotsofspace/bitcoin\ntxindex=1\n```\n\nFor a resource-constrained system:\n```\nalertnotify=myemailscript.sh \"Alert: %s\"\nblocksonly=1\nprune=5000\ndbcache=150\nmaxmempool=150\n```\n\nAfter configuration, you can run Bitcoin Core in the background with `bitcoind -daemon` and monitor its progress using `bitcoin-cli getblockchaininfo`.", "full_doc_id": "doc-809df5b104774be839a96a4da9c744da", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_5.md", "vector": "eJwFwQ1QFNcBAGCFmMSRsyLyz3F7t3/v7e5JamKKTUQqaFFqRSCJ09GM5lQcBKk/2AQ1agn4i0YNKMdxt3v33tv3dveIbaKicRCpToyWaWuZGq0G29oyGqy1qSjBSfp9c8AftLsnLsU7/GVdxTkr4AdkrdNLl/tniYeyJ0lb2jmzHgwqfdPOk+NOIv0vtdT7Yj2XL9yLHYDjtGfB9P15wgCpYz/UztApsVci1T7DqEATuv7GXRKyX/qdDIFt/4+chj+LzhPvaWeA2/c2LATVVlteGUgWmtUqpZH66Wv+rrZPuN9Cgaz0/AtUBe8db6VX2cfm5+p+7iD3qXo3el3Z5fmGzbem0JCiyTs6Q9IDYXbsMYgIRG3Hciyb5Olq+uLYqySkJBi9Of+UBnAC/Sv5pbzFwMZp+Nb076eWewbBHJSE6zsX6GNgjbzOPodGxK0o2t6M79BkeF9L1RZZfmstWip+K3r0MqplPPVOc1oxM0rNcfKN2MZwSfS68Rn/yExwHyF5ygIlCw6jmc41Lc286GyCC7X56hX5G7wSX7C2IpfvMPTJL/JLtArhWvIWBEUL+PQJ5kTYaFW7X3AeeboJZjtIAF3EY2CZlScnMYM7hl3Cl2IfSoSfHnJpNvdAvq3c5uvpj/EI+kvOjPQ1eKn4E/EHUeoc5m6FiDrN6I9twKWHy7m37FXxdu4BN05cLdXgOHieb5LKUAq8jrdlbmABkGaepXtQDFZzWTnnj5wTz4mj7CKyxDb0GUXufJSszc/8eUuFpRh7297zrkINR04jkrJNqDM6c/+jlku37N2wmo2wEqtOPIKfwA3ha96JyhVW6f27r5ush1+AAiIrUeXP/ED7KshggdijLkI3Y5VCge4ygq0vZfwqeyoL8gWoRTkjfyW+4k8NTfQu0meSMeqCo/zzmPfH6Fd4RUYS99AYpSnOM5ImN8LB3IC2XJzO3oj9m71Iw6E344tTP/IdBEvpEzQeFQiZdpPpRT8VduK27BB4PzgPnPJIZE3WVWUyexysNjPBXbYg9wT3nW8yOxYfL56STyhno/vMoOL3BPhWz3PCmli/fBQko4V4hlRIK7zjjVrwONXEdcoG1hIvCi+kXx/rBS0sj7Spz7CszdFux6bZAW8h3as2hzd3lLAn0rJwCku38nkXOBZ5R+jLuMt6215WrmrJ/KhZt/OPfEc4ZMa1HjhMK6251sLosJamFlsl0Y/xt1KC94DQwOnaHqtR3ufeqDTxD6Nv+oqc1YItzQBLRJ6dhYe0l1kbC0FAvUART0pDYIpcBLeRS/g12k+u5E7yOaKDT+d+iUfhd2JQC6CeaAKdFVnpq4GrhHzwC7jSOINKvXv0MX2APja+NktobU4X3g0D4gf2OCk7abGzCMas191EWGbfI7owk/rtyVqX0Yc6uO2+Ync3fkHtNpm6UTTBPjgrFDS+yP6NnkoDsU3abLbfKfTX5orRQXQBHjKPRt43H7JhnIgzhXlKlXuS+nurJwfLq/l+seWjEScx4gkvTyrlazJ3ABfpt5o63kZeMR80dI7yDWx2RzPU7MrI98brrX1Z0z3N0nrzljXDnmvfwH3Iw3WbQvsA2BWxM2v5A75r0lbyji6Rz6WnucPwPTQo9CDHkIxdwXorQzzK0j8E8adeLqcIn1TL45fJHftEuk42526O3oHT/SP0w2Bj1kl+S7ghK6qVgoDpzzuq/lraLqwTVpB/GG+w57oWO+lOLR4fbyQJsFBYl+mSh8wldthaL2JyOGJ3VqdExFeVSvAucyufCFWiYBX7itkFNBLaSxT0KJLnHaIVUo1+Xqny7aa2nixWeQnbNOFP0hJahnR+tjJk9xzPmLpfp6wGmPwpRfU+o01kD3w3w20OGDeNdJJrl+v3jUR+u3iZ7iQbzTRfEb2pN+A75DLdiybEXeIwW9v5AC0VDmbfkIaU0Q4XP2ZdpDewF7umXJaiwNHmdjI4T+7lesQf4fsxJ5Rk/R/YxKVC"}, {"__id__": "chunk-154554274041c5ff555efb1701a4e8f7", "__created_at__": 1760488099, "content": "## Bitcoin Core Command-Line Interface\n\nBitcoin Core implements a JSON-RPC interface that can be accessed using the `bitcoin-cli` command-line helper. This allows for interactive experimentation with the API capabilities. To see available commands:\n\n```\n$ bitcoin-cli help\n+== Blockchain ==\ngetbestblockhash\ngetblock \"blockhash\" ( verbosity )\ngetblockchaininfo\n...\n```\n\nFor detailed help on specific commands, include the command name:\n\n```\n$ bitcoin-cli help getblockhash\ngetblockhash height\n\nReturns hash of block in best-block-chain at height provided.\n...\n```\n\nKey status commands include:\n- `getblockchaininfo`: Shows blockchain state including height and verification progress\n- `getnetworkinfo`: Displays network node status, connections, and network details\n- `getmempoolinfo`: Provides information about the memory pool of unconfirmed transactions\n- `getwalletinfo`: Shows wallet status if a wallet is loaded", "full_doc_id": "doc-154554274041c5ff555efb1701a4e8f7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_6.md", "vector": "eJwNlPlzFFUCgJeEsENAcieTpDuZnn79+vV0z5C4KhgFYVkIkE0iYEQ5ZJdE3IiokFUiVQpyFCFyDOQgyVzdM328190jl8CAFgWLqbiAhgpHdpUrBostA1sQN0oh6vIXfN/3y+faZkrL9/8rnuSt+/jGR41sLum2tlirJZnaDduECmMTZqgA31hUr1+0d4EXyNvSPTg04XP6K03zJFyZMTWc6rxrnDVdvqkkoc3sGOR6Aa8DK5nnmbFSHXSKO+3twZPwATwPWr1J8Bk0UbwYdZJjvr96boObgluaGkvTFngzcJ6Q7vITD6oGA4ozkqFmm3LMkl4QSo16Eef4pBDIN6fg5yNjvPPhPtATnQOh3e05QbHuVP2H0DK9DbeiK4FqepFwQr9Y1AM+3UsMn5qAw117lMZAhveeOxFUJBvzeqtyl9ogXOVybD9eiOgopfnVHouKnZYOSKn2kzgbOtQ94PlHvGBBlTwY7w2Umy3yoHJbbUHtYHNxDTtbu9RxFV/m8qWbSNfSSLo3WWXit6UaaEknhGDsjLERD+ZXornFO4S94cPSfAxbR9s0myJO087szRNqySyu2r5h3N/9vvkOpvSDOI6KzJhQZeYwa+W+8HfsUnMxjFB/8CSHIT3Od4sdVMpJlfqGZ417CnkCLoLfuRtMPxBCn4gz9PXka3q0gYMllhq32Cpuvrs89nfQJ/2bvVw0Wc0Hw2q6s4HsQ6uMQuPtCOIfxDK1b5UtaBL6B87yTFP6C4H9LP81bhYdyoHIf8yf1D4uBWjUWPm8a1bzl+Bv2riCAqEMdJj97CZ81Py58CZbZnwgXVcPcU8IXmMujKotcg76BmdqHwkl7I98QaeIRqdmo2eFdHLfuAFXZoiIUEcicnqt+SGcgjO9eR6X8JWn3M2zj2tpmqdTBsXoDPGJ18xdaq5nenABW9U2yh5d0BZqgHXUq4LG79TGu3LwSGyTPs1ekr3fyXDlpIk96Dolv4S34Ht5i8EvoRTOEvPcy4WtMQp/qh5BSL4VajMl0C2PwGT+YBeP1fjhjkngoVDGvUuSJIdAwUNyUXa7K02YzbS6C61FBcfo08xwaAcnO4+r58Rzekn8uCv+qHQEria/GMPI3fGadArVKbNIsv8seUWaA+nOgLkVWeCzwHZ5HhtA11wCyqPmWWH6V/gBqtCm6xfCFTku93FyUagRnWqtVmq/XDwgbZPqcC4ZYMZzS4OSP0PJ8l2xAig3+k8h4T7VqnK2TaJN7LWireBFvIir9hWbh8k74kh0OmgGjq4lnjsgBR5VHoslTK9Zr01g4srs4pX4CrdCOAIfopn0ukCb2YRrmSu0QxiBx/gU1wxmCfuK2sCtNyv1iswefKT9PN6HVDRRHy/QBV/or4Gf8MloN6g3eoiG/pzfqW+QJuH+3DHp2zp+T2+W3x/TZa4RPk8vF9d43gQfKmH2y3CT1quPcJfw93FaWkWaim5FG+BVfC76dPMMarluM9+DJL4UrUNHyR5lLTcI6zzXYzutjZEVzAzOD+qpFv5CoROPda+Rl3Gr2IFIGTUZPxawwTjtt+gY4z2mDv+gfqHOMXutCnLf3K6BwE01yawOPSXMozKa9uH9rg1gqGjl5lG4XXRgxnMyNqA+hQ/oEa0crbYk8Td1ozKZ1HR+4oljh4TNP5HLdg18y/wfVRZ9Rij1rSclxc1w7SO/VHqvbyHSAk+WTJYO8c/JCv2WtY57QB58PMrMIVVGpv2jvpCrY4ezzoq1mCUOvSKUjA90+JUMUNkeRrW5f7R74F/4V91Lg6lcr9W4e2xnqn1Y6+4qxZfUC+C6+y5I0j8LDunbxd1qIn1x4I54OjCXHipuEV633o3VGjPxVLKZS8jHPH0uh9JvTOST+CzcZ1arQySTmq3y7asLdvEPsYjTzBr0stLIWhP6lRvaHnWFxbnKHh3wTnuCyeJOMp0orqyD3+BKvTK2LPr4Dn/hFuG/kpdegOr130Wu6fX4sppQN+L/A8gQljs="}, {"__id__": "chunk-dbb8a333d3deb5bf8da5c4c8bb36c3ba", "__created_at__": 1760488061, "content": "## Exploring and Decoding Transactions\n\nYou can retrieve and examine any transaction using its transaction ID (txid) with the `getrawtransaction` command, which returns the serialized transaction in hexadecimal:\n\n```\n$ bitcoin-cli getrawtransaction 466200308696215bbc949d5141a49a4138ecdfdfaa2a8029c1f9bcecd1f96177\n01000000000101eb3ae38f27191aa5f3850dc9cad00492b88b72404f9da13569\n...\n```\n\nTo decode this into a human-readable format, use the `decoderawtransaction` command:\n\n```\n$ bitcoin-cli decoderawtransaction [hex-string]\n```\n\nThe output shows the transaction's components, including inputs, outputs, values, and destination addresses. Each transaction input references a previous transaction's output via its txid. By following these references, you can trace chains of transactions backward through the blockchain to see how bitcoins move between owners.\n\nNote that transaction IDs are not completely authoritative until confirmed in a block due to transaction malleability, which allows modifications to unconfirmed transactions that change their txids.", "full_doc_id": "doc-dbb8a333d3deb5bf8da5c4c8bb36c3ba", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_7.md", "vector": "eJwFwQlwFeUBAGCTEEKIMQcEeHlvN3v8u/vv9ZISWnQMDXJJkxFMjaGSEqvA0JhBoamOoLQRJMQctQkEAt137L5/d/9/dwM1KkfD4WBbgjLpjJIpBVuhEImcgQ4oNXb6fS/ATG3kjxX9lera/QPCHTnfyvZr/FD0qFRjV9Ky05VcH9ONKXAixqLD9ibuXaXWqSP7xPz+G8wVpdc+EnsHfOkPeqbyiVNrd4ujIFteHhv2P5W/cbPLxnY0adnefmsHtziSrv9PfVhuSH0kHRNzvLZot1xFi/JSbQ9eYnfo38UJSelDxgNxOkhPlaLNxvtkyBqBB2JHyUzZcyPaKyDhhU3O6tYhmEMh2Cw87x2U9+4+wM6wtjg57qfWavhLJ6HSUhh/DKq4tJKtyDAfil9BK+V17GFlbFYOjmmqV4P2uQuFVu24lEUMd5cgO1OdK3ASOw4LlGNyHr/IPcGOFWfLlYnH/IqSdbAtOCtA/Nwuzv4FUwt1/GspJBTiUTji7ez8SssQLjur7QL9bcc9kMs9I9/Q7jPXPZD6EcrHdEk6fNWkkptgVvG8370TRNVSmJnYSCRY37sNiv6DSPu+rX4cr8JLglXyFnSAj3i55ojdTgoik/va5QzvmvgxaSwa1EYTF8xBW7VaY5vkCo+FY1Qx86bXLE5NDMBDYq+3CPXiW0YmWexPn5JblB2pdi8XP63coWax3bEPlWXeNu5Y6nzJD80PvKsPjwLHmgmzJAN+zi13xgsZvkiYTFIhObFCnY7mgeP9byFW+sLIsIepEbghwUnNO0/b52EeMzMQYD0pdsfNjN/79iX5S4uL/CCclaymOuEp1JSIIYufo+pwDjiLtwlEOAVU5ZxdjMup7YUUuDZjOaL3HiEHQTn5qWLBHPlx5T3p7qzZJI29GIlI7e73HivcDEz3ODVOzVQXOG3BGuqjvS1AFt4U22CW+1msFT9ItaBpXhcganX8r965vix6GfoshiIL0SAzyq5IPiRdTz2qNFrL+H+DDvVf7jfgyeQb1r2eDsFi6kFuLNrf6V4UR7RmYUP87yXze77gaQTiV60FvaXgEJ7q/IeZi59lGF+XEPiVH4F13svBoZ65qYzIJeV1V3U26gN0CtyUH5ta7jXZ99kf68L0KFjnTMCvpfPhG/zT0inmczifm7Iz138lGeI6YE3iZ86SCKuMKLPBFqFc7nHy3FqyRngtelK7hceoQeEtu42+DibH/egLwWm2x3bhnmQmc1DbaFXA9QULLCBrRp72aLTBp4yditCXTu8WnkEvCj1mo/JUMjvMFI55551/SPXCQoulXW4l7IItfCG11h/xz5hNuzstA06INWIhbk6shrddTKWCSft3J5N+LjcNzw0/okRT08Sl+VzwobGZLOt7G0vuH7zHE2XGJVsCnLFSPMytL1pDmWYGm7KG+IvMTeW29AaI4yq21hwlUToNnsVdQb5S4b2M8skG8b94gLR79QVXbUY4JzcrdcpSmNZPEifoCXBaeRLsdXZZVWYO/EkIhGZHsDsZ/c29y92SWpVhd0MfjR+xvxK/N97v/hPVwA+TFibMtyTfw457z7+Dx/hS8V2yNP5npsd6gr82a33XBXkMTVhl8X54Bt1TLtB/2Z7nvW4KSDWzSIsgcYOpOm8QdWlRYmnVwVPOVtIL5gVD/Jm+03qlfhIp/IQZjzSiowBq2YLihkvX6bzowEbhmNefeSSZ118VJJy7yQHSIbSKq8SJvlfZSuckfk7sKDluqOCC2VnyW6kJPotv+GvDOXIDeK3wMrPC/oBba0/x01Gdo3tHrH9SrWAx39u1wiXuCb3AyxN/DiVtGDUQVZgkhMgQs6MohGYE82F5qIGpBpXO87gEboe3wRDeiOf6g+5LsTIsJb9Fu8hh7ib+DceSLBWile7Xwbe4zKkVpnlVYA/9CZ5BBfx3UqGXpk7yXjRG41X2ZnApvkjerrfF9sE0JDNJ6b4/7qX5L9H/B61kig4="}, {"__id__": "chunk-de2cc8a87f133bcf5b53b42f8b903b46", "__created_at__": 1760488066, "content": "## Exploring Blocks\n\nBlocks can be referenced by either their height or hash. To find a block's hash using its height:\n\n```\n$ bitcoin-cli getblockhash 123456\n0000000000002917ed80650c6174aac8dfc46f5fe36480aaef682ff6cd83c3ca\n```\n\nWith the block hash, you can retrieve detailed block information:\n\n```\n$ bitcoin-cli getblock 0000000000002917ed80650c6174aac8dfc46f5fe36480aaef682ff6cd83c3ca\n```\n\nThe output includes:\n- Block metadata: hash, height, version, timestamp\n- Confirmation count: how many blocks have been built on top of this one\n- Size measurements: stripped size, full size, and weight\n- Fields for security and proof of work: merkle root, nonce, bits, difficulty, chainwork\n- Lists of transactions included in the block\n- References to previous and next blocks in the chain\n\nThis information allows for detailed analysis of the blockchain structure and its contents.", "full_doc_id": "doc-de2cc8a87f133bcf5b53b42f8b903b46", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_8.md", "vector": "eJwFwQt0FNUBANDGkBpPIxIlH7LfmXkz780ny98PVYgkLRIbCzkEMURLIx97aIBiQy2nAoKAkJCGsuxuzGZ35/PevPlsJEFEm3NAaECSUiTRIFItNkAVqIAJiBQCvfe2zI+/tOcF94Y04jSBC+gonU4+snJCtahy53y+3mq1FHubkMd8gNeaCb3UuB2o9p/j+shQsgrd+8ts28VTcQWeTLzFtfzCopdMU3lceDV9hTrx81AM8Uptcbfzceo5MEUqFM3iLWIWPw2cUa6ZtcpFKSeQJVNxgWcuGS2X00W4Xxw0r4rzxXp7JLiHlelX7CHlFDoRqIQP6LulQfhm+iPiD0aLP1OvcA1oiZKZLpMfgl8wjeq38ZlGjfm9ICc28qPkVvqPZKLgblJw+42l6jksGu/xJaGnW0LgLGrG28iGWBB8E9PCUftTrLGX6e5kMcgeswQwynplOl4cP4ViwrG8o7Gv215s+5CtduN8F8mxXzNeNNZJMhna1SQcy7/GBvB0tC6UnVuNm50xUq11IN2OPhcqlDyYbflSR3ImsVa8VH1OblM7pf/FouIi9wHlpjg3cU5lihvNP6Go/RCdkOvB041OzDr9kmucFB6zt2Ecn6gOCh7SLz+iM/KzdC34RaSjkKOZ5F6wCezgVyYWRbvRVmGys8cYSpQpYX0OvVQwQr8MDNOZbi9q3L5F/QPHgevi4sIMPrKrEW4iXXpE24nX6RlW3JeSQ7jIexM1cWHhPiPiPaOv8OVb53iL7hGraYS+40Zpi56pXtEOBDPEB5UG8Ip5n7pGnJyY4bJ8jTvUetR+Mref2SXNxkkzm28nC+iAdie2VyzQlkjZ0iUG8N10mCtFTWgc6sWrEo/D/li73geP0DvJfeHJ7PNuH6yRxoheENE7mAbyX/qUOkms21hsPCv32oNkHv+GdhPe0VvdmubFguut8PaMHc2fb7manOoUpTzajHRcfwLwws/xNLDBHMsd5LeBGdzzvn2pKXQ9eoSbV5xPXyP93hOwMX4U/kCOgXb1HXgLlYCyB5vcemuv/3X/PUawT0sn8HDwO1zH/mdcdnBaYDXZweepU7ifMAV4SFTZ20QTL5lVbk/rokg49RZwjX9amUpDYBbqgXpegbuG7X77mPy9dgEcxJ1gFCpPLbP+LV3luvSr3KP+mNHtH4vaYQN9Rl1qnPHdL3UZkngKDNBUyott9rAYBra+w2oS65jl3Jvo5XinXOn0CUxyv0TgIFeDbtln8+q1bLzSHyEXmIrx1+0yPRd9or/P/gbW568V/hadF+4Nbn67255o/b2tRC7wLCHpKAGnE4XK7/kwrHW09LX4+WAH/JCbIu8VE8x8NZOvx3MDPdaX5rtWgTMQy6BdfBea7xyXovx564XgNHzSUxdRaYnuwhxfs7UWTVA7/BltS60votvh53CWehxhFqJvhEr/sDbiWw7r3HARg3agHzlzwEw6njtNF6CttCC1TIPGS6l1ycvgZ8pyEIa5brteDh6WgtJ6zyFnfOp3iVfQv8aV60e43kSM1ODtfAPcDO73dMWfobyR21aOszyb9Mv+y6QnsFIr0da4+5xfplvUWbiMO0U58K0itVWp+43jbRXI8a8wITnEKc4flSKLqDutbP0keUPrcz/jb6Wq+Ur749RbYtC+Ir3qZpEBZyckzmy5jl6TV8uPpqvor/gQ73NzuA9Cm8QnjMwQE5rLfKUPg3JrO1dIu1zR9tu/bqqMC4U/GC/jfDoAPyGivdX3W+MpMpKoSa7g7zIT4EV80D2SnCo+6Q8b7xetMnOd1epoe5+5Bd+yjnO7nbPgp2jCw/20xm1Bp2k0OInfL36aegzPEZuVi9Z3fKc6Ciy0NsMD7EyUj5FznSSD3cJgfBld6sRsiC+MjTJebS/4MVmo/5neFBeSLHgjcc+b5040s4hf2WDfYPLyF5gddCt7GJTS15FOqwRTDdH30CqwUXg3dDF5QDmMS4HLfm3+1W6hd9X/A6HUtP8="}, {"__id__": "chunk-f97f10a6ebe743a2a262c08f3276a50a", "__created_at__": 1760488506, "content": "## Using Bitcoin Core's Programmatic Interface\n\nWhile `bitcoin-cli` is useful for exploration, Bitcoin Core's JSON-RPC API is designed for programmatic access. The API uses HTTP as the transport protocol, and requests are formatted as JSON.\n\nAuthentication to the API uses credentials stored in the `.cookie` file created by Bitcoin Core on startup:\n\n```\n$ cat .bitcoin/.cookie\n__cookie__:17c9b71cef21b893e1a019f4bc071950c7942f49796ed061b274031b17b19cd0\n```\n\nYou can make direct API calls using tools like `curl`, or use wrapper libraries in various programming languages. For example, using Python with the `python-bitcoinlib` library:\n\n```python\nfrom bitcoin.rpc import RawProxy\n\n# Create a connection to local Bitcoin Core node\np = RawProxy()\n\n# Run getblockchaininfo command, get block count\ninfo = p.getblockchaininfo()\nprint(info['blocks'])\n```\n\nMore complex tasks, such as retrieving transaction details or calculating the total value in a block, can be accomplished by chaining API calls:\n\n```python\nfrom bitcoin.rpc import RawProxy\n\np = RawProxy()\n\n# Get a specific block\nblockHash = p.getblockhash(123456)\nblock = p.getblock(blockHash)\n\n# Calculate total value in the block\ntotal_value = 0\nfor txid in block['tx']:\n    tx = p.getrawtransaction(txid, True)\n    for vout in tx['vout']:\n        total_value += vout['value']\n\nprint(\"Total value in block: \", total_value)\n```\n\nThis programmatic access enables automation and integration of Bitcoin Core functionality into applications and services.", "full_doc_id": "doc-f97f10a6ebe743a2a262c08f3276a50a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch03-bitcoin-core/mastering-bitcoin-3rd-edition_chapter-3-bitcoin-core_9.md", "vector": "eJwNz4tXFWUCAPAbCRqIIPLw8rjM3Jnvm2/mziWkc5YwWRYfraG5amKHLQuiI708ipasq5VZmZwUJUAucLl3Ht83883cuUhu0vGRnUqORcrutgcNsM7aSmngivnIxUV2f//B77g3219w6ECX4Le7LmmX0SMkFHkjCuWfxSVW1NtCh/Qi8yRyCZtzXNERVENdQqN+gtHUksgTYmIgHyeAwcAgodY53yp7H5jjTQlulwY4HTdJy1nZfwYqYmrEcZfrzyo94mZ/iXAVLJOncB/xPfiK/DfubTQl9+VAyvr/rQ8KF4QJ6yy/lWeCd9QD2vP2AuVV/8Ogzp6X+i0YkO5o30X+RRKM+f7NuUNGN7jJ3LamS/lY9zxHP279T3q1/gBzLfR2sMy7xjvCZ/g+UXyYg4vgvNmDpIDNlneyP7dflROMbWZ3OFmYh4bB7sgaswtWmOfwJnLXOROslMt8Y06VUcMvIrNhihSlbd6WwK5IpeUyP8Cl/MCcfniB3QVOCoishyfNO7DCv0BajV+gJdI61bQG5AxYI86AcvvLJMP+UknKvuypQ33ElIZpTutotIprlBi6AeehPmtb25QzbBZlV1Fn+v3OPcvFtlunUbkpSF3eRD6jdbHp8l0J3UXP4gQ8KR/jm+3DZI+5Vvp9yk1rOPMblMndsO9D7sZO6W7SlmgTU4zHZgQtxznKJ/Dl6EjcQhwnj6dtMyu1SmbQ7BItWsEmqnPpeSORT2beVDbk2l4G9pOlvjDbrDrmb4Vaa68w2dFAVkSyLIkN5jTBxPCTjBQ8zibllhnfgq+Y6fQBcF0tjU7oNWCmvhKOkHR1A0x2kv0L+QoaIxzu6AweFbfAfjRJqnzF/H5YIf1g2soJ9jV+Dl/Cb85KYhMi16Ryc4m8RIoF1f5NXFNaBhlRetW/8lF4zCxE65x11At2Ny/iK4M9ztac7zIH2Z38NPSkN8Zx56Y7KbhFu2bNMk3x16wt5BZXFGaJh14yRXJW0sz4nCbJ8MbKzXRSgziMRhWkb6Wnleq2l4S57GXuLWvUuet9jd8vHW7J61wph8AqOI5nCBfYGOF7eB78pPbxde0iqjVi+Xwa6rwultizuzaiMbUe3+QGrHwtJO1RPxd3ihHtI3ouu8r6s29f/HRltROf815oGMW0FYpAPM5p4Ktst/M6eEkqFU8rx8k5bRxMeZjQW9IL8uOkEe+1euEF+UGp1/yQPoH+Alzubu2TztXyZ8YkOqtMoB44LcChxU4pTuLyhT/AaaRXlPx1TgW5gpLRZViLevCQOJ+/xt4hmdoonUV+YrLR7vCljsVGWeMt/kVhoe8w9z55xPqvUQjixVI0Dj3imtZc/p5QgLvDF5WvjRvqKewKTdlBdFI+GzqRe3CObO9QXbhHTUX/NIJWO1wQXGxckWMtxvMmYZT6uUuwxH4a2YhUpgfNFCukwKwRUIR/sZaDOPC6vjQ6JNeHD3AT9GF5lZXVeVXvxfXmR55kdq/wNEqADXitEaX5mX3o8Q8ynPmdx5qXs+dRm3f9/z9R6xVk8aNsHZ8X3IYz7edxuqeBpIYgXaaF6Z5wDZ2wW50U6rbfIO8p/rRJe6WVzP0IAsxjRnXuUu6d4DPGmFUgtUT+IXP3/eAVnXj7j/QZod9pRYuUVe0z+YOBMhi2gHzJmYcV51H0WeQL9229i0vMu238pu1+JGSpxjLm3bxXQTGzNv/vPrxvB9b5Qqef36/MPHTKbKCIPuXcsMrFU+iUvkL60oyLHMJZoNC8nlHELt27HHwIO0K1kYPsLaGEifEUsL/SeqauPWInWe8b3dqP2X7+EBwDm3A6vRi6KQY6DwTuoTrwjbvBLTfPZT1Os5FEt+tN9Dl0VFXEllSU4TZLmX1pyB6iaeEjpFbbSXeQ08pF8DlZo2yPnoHVVhzM9xwxMu2rynkrRnnIWQF/ZxTqxVqRGAOLmd1oV8djZhD8SV2vjOubZCRtT2uQb6dt3J+JY81fzGq6gfwPNX6gVA=="}, {"__id__": "chunk-48013eb6cd2837371c141315b6b7cfc8", "__created_at__": 1760488526, "content": "# Keys and Addresses in Bitcoin\n\n## Public Key Cryptography and Bitcoin\n\nPublic key cryptography forms the foundation of Bitcoin's security model. It uses mathematical functions that are easy to calculate in one direction but infeasible to reverse. Bitcoin specifically uses elliptic curve multiplication, where a private key (k) is multiplied by a generator point (G) to produce a public key (K). This relationship can be expressed as K = k × G.\n\nThe private key is a randomly generated number between 0 and n-1, where n is the order of the elliptic curve (approximately 1.1578 × 10^77^). This number must be kept secret as it grants control over bitcoins. The public key is derived from the private key and can be shared with others to receive funds. When transactions are created, the private key generates signatures that can be verified against the public key without revealing the private key itself.\n\nBitcoin uses the secp256k1 curve, defined by y² = (x³ + 7) mod p, where p is a large prime number (2^256^ – 2^32^ – 2^9^ – 2^8^ – 2^7^ – 2^6^ – 2^4^ – 1). While mathematically complex, this curve enables the creation of unforgeable digital signatures that prove ownership of bitcoins.", "full_doc_id": "doc-48013eb6cd2837371c141315b6b7cfc8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_1.md", "vector": "eJwNzY1zFNUBAHCBGAg5MCEkJL27vb29t7vv7e4dXyM2flUYJwHz0UAdYkYFQyagETEUFdoATmJqUCLC6SXhLh97t+/tvre7lwwJjkIik5YGkxYUbC1IQOWjjmiZlilEWmin/f0DvxpBipQdqrOXRlbZD/HLlOzE9KKn3CuqD15zy8F1/IpRDR6WjsJMnGI7ra3sRWUe1WGKkfwVQtA4R8akp/lfpT9ylqKzQY1nwRgU1edxq+8NWC1uBA4oVjfas+BNr0e94f9IWaI0yc8Jx8V8Eg2XanuTXSII4+4fjREY9b/M4lJE+FJZSbfyMWPSv9y9LsXQfMlr/im8Uq/Q6rnPnSW8gC1tEg+YBfBBtdEGYo//O7mQzqR3yRJGEpEgaC6Vcsl5XpdrpUGWLeTS/fEC4wM4AccoBwOqwC5Sj5jJDXK30G+tuDUcOqvnBAg8TLLABaVWu04z7kNgbuCUr9nAhok/61jk5JqfUWZr3nLpn3KJ3BYfPtCWuiOvwc/wg+F/QI8xkzSpCjuWTigvwYnC6YpmyNFPzDO+YbEKrPXx+qPhLdQD8t0sJSFV4Sk+V/ZYD5lp90ZnqRRzM/EAqbTq4B/1I4rHajeaAS/v4S7oddp/+hrRX/GcYIdSQk7TpV3FBzvj61Mv2M3xN+VX1VP6ReG14C8KVkiuu1Paxwrki+y0g+Wfzv9L3yjw4M1IxE/4D/OV6F3SBR+l49LXJjHXGUVoxD9hXpC6+14WFtEm6YHkNj2wX4wjM0NdZktMZhXmKP5bslloA7vVHcEZ2hepnPROFOk54d7yy6Sf3us0pC4HhuUabigY4CrJoFym3+ZegDNItjSpVPHLFS89heJoMdyo3u56JfCNpCfaxddC18wZwS8tGdxx98BmHksr0KcWMKP05EHCguoXqNU8AHl3Rv92mKH2C42phem/H7jD3xLO+UbhTQ07g/iSuw5v713krLLK/FrPZZrP3iXFZBoMod+TbLTY91hRs7qgZUqdRfaB1T29sAqXWBmpCsslXVqNLoZuk1h/sXzD3Apr7BXJ14NjOIdT+R1coqBDgtKWPsI0axf8RNlJYn0KMfcP8Pnmf9OHhfvNpXqpWrTgfVYe/t7u467JU1aOXS82wrCaSzFco7eiPLgp5O1W/KHwV6IHPLz/hDMOxzRJrk5e6uk0r3RfwVPmbHVdGLqQfGcuhDXKL/kOy9f1JDoA/9W9V5v9XlSLLviJ8XlyQLsc2psaUW66Q/4ceJ/Z0rMJr1J2K2Vstf4qn1m4Fiwz1iUL9W24XmoFPQLPHid9+E05lqylZ/As1qtOqZEwDLU6tel93mxQLe0IzAuNoLeNS8BQONzG1btpttCc6UaLPKkSXx7a4DxOrtIO1pK6H2jkHeFboykxD9zBG5wf1LruKbAcDzvf6O3/PzeZj6nviLVoCDbEPoYe+Zg033lQ7AVBq6A/AH/X2z37jHeu+gYZtP6QmIeP5tWjFtgEb8tX1ZdomT5MTgrr0YlAOY3Ypb4ynAkrrC10nLzuHBKPywPSV2Jxam7nnK67lAU3W88Sxcjv+5nhJj9FyHuIcslG57yxUczwH7KPd6/lqoM/gkppb3IzXP1+gibpNHHKHlFP4g09UXso+QxuTJ6mHyPoeyR5lgS5r0EFC6G3nMWG5MwBD9hvq0fZFvitNurWgHY4M5gi9/i2RQblCfq9eo+y2wJFWbCOtaNeGmI77Pn0Q7GGnXFmw2PGSuzXrzq77OcPNgCvb0kvxDnGZakRfUh30XF/JVgfK2LH2l+cy0n5gRK7xPLiX/ercPJglsShMfs8D1hU/bl/V/ASuik8mZpmVoI8dI5MJMb5CJ2k12Fb8m6okf6bNdCm6L3ae4ynLWwAZ6WOkCojzY+iiO8J/GfSKZfj8+A3RjO5YT9nVdoTXMAayjwhHLHL6AewvmCqdw6MszWEyHsKHwE+mCUL4QbpBzQdm2oeanefdius7cb/AKaIjcY="}, {"__id__": "chunk-db176ce9d9365c3867c0cd6ce3d17c98", "__created_at__": 1760488283, "content": "## Vanity Addresses\n\nVanity addresses are valid Bitcoin addresses containing human-readable patterns, like \"1Love\" or \"1Kids\". They're created through a brute-force process: repeatedly generating key pairs until finding one that produces an address with the desired pattern.\n\nThe difficulty increases exponentially with the pattern length:\n- 4 characters (e.g., \"1Kids\"): requires checking about 11 million keys (≈1 minute on a desktop PC)\n- 7 characters (e.g., \"1KidsCha\"): requires checking about 2.2 trillion keys (≈3-4 months)\n- 10 characters (e.g., \"1KidsCharit\"): requires checking about 400 quadrillion keys (≈46,000 years)\n\nLonger patterns typically require specialized hardware (GPUs) or vanity mining pools that outsource the work. Once found, vanity addresses function like any other Bitcoin address - the vanity pattern doesn't affect security.\n\nHowever, vanity addresses have become rare in modern Bitcoin usage for two main reasons:\n1. They're incompatible with deterministic wallet generation\n2. Using the same address multiple times (address reuse) reduces privacy for both the recipient and those transacting with them\n\nUnless these problems are solved, vanity addresses will likely remain uncommon despite their memorable appearance.", "full_doc_id": "doc-db176ce9d9365c3867c0cd6ce3d17c98", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_10.md", "vector": "eJwNzYlTVGUAAHAvLHTFFnDdhV32vX3X9337WA1SzCMTFXWI0cEGO82xvCjMzDQdu0BRswxBjoVl9+07v3cAmjaKoVZG6agYSWSYTZJ4DSoapmJo/f6B31sheszSL4P1J/0n8DbuB/QuvdxzoO4OnIFilQvG52pWZHLtCnIdc0xP1zeZ2/XtqDy6NWgXm3Y0+XLDfxhL5VfVLiVZuclPqxjHVnBuOAgUCxN9zew5pgv9UdsZ4K0VcEH8friBc6T21V4Lx4GB8lp3bOogWOT0B9rQIEVVYuCKYK5V6Cfoqb5DroroHpAotJlblPn8beqIfgGNVhR+msZ40lI2iNv9bxQXBx9WQtRujKFLfDeon43belPxOpygDI5kUwfYb6QWECNY0elm38CBchxRrS6hlqMp0Stsvn+cdsTMFtrZ1eUGt0VYoLSQtTLQRGq28IHtFZ8DJEW71HzwvPQUVZLSaDTjBuJiw8aojEutUdRNoZvrZYbtItROeautBRaQi/gMxi2tVWbBXrXJqHYfhrHEYfpVtSQlT4uWZrBzcB+RaXYQQesW833dXpAd/U0Wq8/QJ1S5RNNH0jo4Z4SiP+KOyHnwrXsm0Y2HVWc6Z4lHuS8MAXhAkHV4HhCpiNXq1caQxzknsZTcIy1XjfCTKE+9AUcIH4Ac9glrtqbpZ32bdaZOgL8mOek9qK7qbxQMHfOtQQIswR/Zx+gdwW/0OD0N9HA3cZbiINOVGi7H9Yn7aeEkG6DtzH49ie/TS8Rq7W3pWujFhHjCRu2n20EaPYa6IJ0Odwtl+obUM3i4lqtvwU9KC0FASmA6KfsoF2gpjYpnmE7vQaSABPocSNUuwSK0FE1CWNwhpzF/JvemPLZjrjrPMwN30GmYhCbTKtjYX4TfR2+KILrf+Bju8n+Hl4H9oQqpLUyAD928OrR+nONfJwJVnnpuPjjqLBUzzBg5j55rOYww6Id78eLwMxxLvsztob8kMtE2X6jqIv8jHM5HrBWUZW8FQD6iQqlI9xsx/unsvNpMMNLKkTuoAWi7mq70S9m4X+uTvlILcRa5xplEnJRsylTHUtSFD1Hr9XOVTrZN7jQriH1axJ4GjqvTlYeI0hulMn4C8751HT5iAlBUZlJjlSwwFLhcC325dBsqJDi3d9RLegE8DTbZJruz6WXaStDLrOU28h3Aa3HKPXEacnMHyUXGLSmEKE+p0J961f0sn21MtzfXvA1dICKc4Ef+P2REoTKQFXE9k89K5umye0y1L0BkqrNqzosjjJX8P2VD1BHiTu1P5QXY6GHxE+Jeb4EvgRnP9RHvafPqWqN23qT3gi4Qx0/AU1Js/rvKPtFr/qTdVn7WbeRBqQFHYC4+Gpwgtod2B8+7qvCb5ftkC3u9reJGs5sfYgbpOVXdZo/6lwKd76jFsIj+Bc7gPk1eDEeiZdxFjOnGRF0ustaxppLom1groQNaDt5WfUm/qx3a9R1C/kTmIXdV3ekdje/vWAXiCafFqKfU62wlUyBPVB9poomCQDtE30UtdJyQJT3QH7C79LdwT1AEz+mxZJxwtmyBOdzqtYYkF8OX2ai8aNQJcF9eVj7e/WaYBAvI47gM32J241J+PCgkBe2+RirDamz4huCQ0sP5ahM44K/EY+kiq9nIND10jjEZjDVaQQtaab3uWAMP+wPiHfZK6mf8QWVxICuVEwfs7GSf02f5SKPHWm3E48FwsMQq8WC18akgUwP0Mu1F1u0p8aZrPSAd/+puRneFfKUMXWGKtH+12eTZijyiRZ6qx+oN3jxrAHPJ+Rp9G0CcFzmvK/48tRpYqIHw43L1cbrSH0+sTtpMLRQAXg8MEGAuRxKkZK03+oh/PHxZuKrNDM9mZnBL5HRwMukZ1eOl5K/BTGkua3e9hlcZBUqGccV9PXpKHlqTpJJWuysOF8o3YULdRjyIiJYX8fdhiJ0amASy2J9EJyeDLVqMVSeWGv8B56ylAQ=="}, {"__id__": "chunk-9ed95b4ac3230365ea2d4c404a16645d", "__created_at__": 1760488471, "content": "## Paper Wallets and Key Management\n\nPaper wallets are physical documents containing printed Bitcoin private keys, often including the corresponding addresses for convenience. While once popular as a cold storage method, they are now considered obsolete and dangerous for several reasons:\n\n1. The software generating paper wallets might be compromised\n2. They create single points of failure\n3. They don't fit well with modern wallet recovery systems\n4. They encourage address reuse\n5. Many users don't properly understand how to securely create, store, and use them\n\nModern best practices recommend using deterministic wallets with recovery seed phrases, possibly combined with hardware signing devices for enhanced security. This approach provides better protection against physical damage, theft, and user error compared to paper wallets.\n\nThe evolution of Bitcoin addresses from simple public keys to complex script commitments reflects the protocol's development toward greater efficiency, security, and privacy. With each innovation, from hash-based commitments to bech32m encoding, Bitcoin has improved how users can reliably and securely receive funds while preparing for future protocol enhancements.", "full_doc_id": "doc-9ed95b4ac3230365ea2d4c404a16645d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_11.md", "vector": "eJwN04lTVHUAwHHHA1yvhECu3eW9fe/33u8dHBYKijbAiFDplBpo1ohoWqGOIWMzplhojjkignHsArv77vd7x+Y43qKYhWgpHWokFZolCiqVB4WKlX/Cdz7zPYCv55P3zbSbuZnWMlTEfEW0aL+iVP8H2EnZD4NONVGJbiZy6BI13ei0ePQxH+Uvp7dqsfpq5zym2p6Dvm4+hV629vKLd95r/lyQ4Qb2mFgsZcKl9O9sr+ZM7jK8DIsuwO1MFr/fb1MZ8h/+LfrFpPakMnkmVw63S6N8D2EdtsC+SNtUCowEk2mS7NIu26eoXWwePR+9kTRCqebz4srUCImt7E4Keml1G6Bh0FJ4gsSIR5ZLceqZoWJqvvciVkQXa0+cWd5dbBVKIm9FlwbS6DR4FLT6pjANfIvepXXTjWAMO8i+j4rMfPikoU2MoWw9V87mKa5DXy+8QJ6QU5kVepr5bPM14Y4tOufIs80j9B3/OnCTKIXbcZeUAm4InfSHyT/Sy7Ew63t+vjIhBLhIuJgu41qVnMQWdWfiSjZfXggj0W62x0rH55g+JoKsxPpACHi0C8rq0F81Gvmi/Zp3np2h1cMUz9uwzGDEReo31efFHSiPzVQ/IpcE20EUX6IstmaTZ7F5ytytmtHpHyPEerqle8RN4gx5BFaZEeAZ4wfhbyvd3kwUxFZoMwggbeGOJ/bHbKWmwGGIIEpRKk35L1lp0aP4SYRDy4bDGr8WHqrTPIQUWz8QmE2Wo42wBx307VWnWxxTCHrxO3AGthKE4O2EdcjhmoJOmHOpY3KJIaOv0G1UAS+pbfR86t3AAbi/yYkKa97RvoS9zBCe5stFi9hwtoKZwe51OYJ15E/qORjubRdrw7eay8iloSBLM01QZvqVJZ5DcQmuIdvNbWA71cn4Kn20rQbzmaVkoVUcukE4gMMTAXPg9eQFRreSZBdpy/Q39RrFAbvIK2qYeth5SeskOtwtwQJKwCUwnvEyl/kw6+e6W1Q7RxuDitvIR5Xae6Aa+yT+kP91u00ZEY1Bt/zEjBAmEiM+FRXOuVqaVLOSjkkYUDPUNbTNXMdaPaXqP+5MuA2V2uciJihH6Z3MyrjT5mxmvzkaZGNjjb+00WR/4Dy3yXcSVkfEwCtQUZ3ulzwbmSGyHdyhp9p57ABcRH2Gveq5K5nx97R3yTr2Eb/Lfl8Z1Avgl0nZ4Bd/T/UWsgyMa34vqTNQzF1Ve7Qq1Mty5EVPH1xkbpy425lCugm5qRLUctHG5bGTlQQtr+4fX5lwCF+P49xJkCuOVHYqZ5U9TLT/hOZUNmjj+B6Yy9wghtBy+4iQBleRw8kCfjyzJuo/Vzgfb0WhylCLvlTFzarAD2ItnQ0r9LvuIaRoQJyEbsSPhAWow2iuHxvzkZHD9blvMrFgqrFW7BBKhW6rkJPAFXiAWeFMENSnhbKdD7PxBcZueywMkx6JNZjJnn1qNAbbIdVKXXQqN8SkcdvYChSFP7TWikFqAXlUT1R1rFtc2FiljpTXIDK0PxAnd7Hh8L7SZA4Im/QxdBb6zd+HV0CEspSJ/N+1t4xWgwh1aGvpDcBrFCjjyJvSn0QVJYhnqFQlR0/Q62FF40N2EBwA99ExqdwYh583konvAukaQofrf+L+1ZfQkdo544L5vavZcEDWPJ1wmF9nZ4BXYRa7L65XXMVHsy9bJfw9ZnrAqW4my40yOMzca1wzR4rXyWlGuDkr9pTY7iz33jIzUQx4hZrkL9JT9CW4i8fJEuVzY5PyB5lFLETnpOHuIOwHPv03dSDRDh3yXPKYEt5wV38+frr9LWhDH0c20I+5Li1MC3NNhWeEAjVd2IO+VX3krPGFUVelBqvPaPTc5vmmB/YJI0K/nfgWvKY+plrd67WNKANNhqvlB7BN+UIftPuNKWYdVmQcdzqI+0a0+afHAw7KDnj/6TNZ9FXhHTgXGP7nuGP0I4ZULDgBb9NkK9dv6/8D07uqxw=="}, {"__id__": "chunk-0f8f4dc74cca5572c8e9eeb950941983", "__created_at__": 1760488485, "content": "## Transaction Scripts and Public Keys\n\nIn Bitcoin, when Alice pays Bob, she doesn't directly use his public key. Instead, she creates an output script that defines conditions for spending the bitcoins, while Bob later provides an input script that satisfies those conditions. This script-based approach allows for flexible spending conditions beyond simple public key verification.\n\nThe original Bitcoin implementation used a very basic script for payments called Pay-to-Public-Key (P2PK):\n```\nOutput script: <Bob's public key> OP_CHECKSIG\nInput script: <Bob's signature>\n```\n\nWhen executed, these scripts combine into `<Bob's signature> <Bob's public key> OP_CHECKSIG`. The OP_CHECKSIG operation consumes the signature and public key from the stack, verifies the signature is valid for this transaction, and returns 1 if valid or 0 if invalid. The transaction is valid if a non-zero value remains on the stack.\n\nWhile this system works, P2PK requires communicating a full public key (65 bytes) to the sender, which proved unwieldy. P2PK was primarily used in early Bitcoin versions but has since been replaced by more efficient methods.", "full_doc_id": "doc-0f8f4dc74cca5572c8e9eeb950941983", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_2.md", "vector": "eJwN0Y9zFNUBwHGEBlAkQfKLO+7H3u57u+/t7h0UHcBklAAnwww/TDIxULUIQVITTGKgHBXbWgs50tBkIKYmocnd/t73djdBYguDApVAnUIoDdBAsZ2GQkjVUizEWhSM5U/4fr5j3L+ife9ud2PiiZ4RkERJzR/8hqajD4lLSBsYMVaCIe0kSkoBUOWNEMZIyXc8J2xyZ+iH+jq9R7kSqHcHnMu0UF6mTyDNRs3+PsSn3tdrQ0P2Z3g5Ohn+2rkU2uZUpCbLD0eJ9Cz7Sri/YzIF0f34Lvel1MivNWLWDmkSk2P3gYw8BQ8bNRwIP0Q73SFpMz7EbiGyPAvcQZ92v05WcmcJjh4wvyXVfJa0gtaJ/UylcFB5mZS7L5JprMF+i84y39cHwU0uCySVGWCmclt9UsUwUyw011uPiryTMJ6MJJhL6kWx2SPmX7l5Vosucpz2GH8BDeI52i56OPwIrRYytSLnPsTMDWeTCbuSqVfRlOBNEOMOouzu57u+QKtpNu9E4/JrBjFmYOCwvbn4ijwYGRNUJ6RVkOLZJeLewDg3ERXI/XYglfROSfniNK1GiKjnFT6Q4Q12m0DxJNJE/0dahQ/Nq2iFAy1m/x7remgkVRJ9RIuj08aPfO2y07XZKQ/+lvlYT+Q+SpdaT0AZtOsTcB0E3LPTG50RdonzD6XZbXhQ9FXnZ74qn6CWo5lwS0RvjQkD5gF8vH05HjCeMqdoW/Ecoyy4RxzvqgH16lF2obCeWQED+VeVvfi48ULgE/NNcjP9cfAjLg5vw0tt97gxpppOl85Fpjq1/HI6Rrda2WCHdQK/psdDTF61Zom7QjfMTXCz9/Xe+Q8Mr+CfdfQLZaIM70Tf58rtVYGxlAL/yXzgLMSveFVwT29KfB2FcUbLMWe5+hJdCBfTOlwGkvax0JGeqSSXLZJLYZ012z2XzuKPBAtS2+QfyJNpgvvUW6C66SI6yJUy+9J1xoX0aXOp1dBWrT+uAHjd9+eAJu1lXhJDZAuoBJloEZnHfUdhzfHUbn6ciXNzzRCtzcsEM6PrhEn2TfQBHM4/nNpKc4SpkXv8U92tHavSqeA+cS7xCav2LOLWwdvu5d5DBiFvgIgQJcusFvwfOhoaijRb1Jdkz6ASUYMb+ARpBUmcEPz6MP9r3BUslOaja95RcFCM4h3pTe23/JLvb02SdUZcHGt3FVLotkZ2SXfFi/TN2cc7K2f+LliMM0C9fJotBXHKyv9lOPBR6C3vCMyGu8FG8PdWRzoqFVlz039B81WqJNhnZiw16pR6cIovZC7YYaNdXcx7eKL7MtekFMkE75Re4Gt6VlNFzw3pMBn+ClWKUyyao4krvYR2yy2geUIe/bk63unnMzDW4nCWu8M7i77oPt3wNrNWn2xfA7+yo3SReFV7mB3wTyJzYV9nvR5zS9AksEZ4B77Fz1PvgSp2mVPRGedD5rrez9G+dIn7DukV1rgFZGfg6eBG8j15Y6gH/xHOi66iDz4YrWYCP85V0LTTYv2irYu/YD5j+EiFmR3JxIVTz4jH2i67X5ox8gfQYihkq1kOgH0gWICK1VIvqld7o04Zs5NfaR00K9CL2u+lMKgxyP77fBOdFdiMGk1ZOmG6+d3Er3aqkDtMPsE/Zq6ksuwBLihu1EdRQ+9do9a6FtG9p1GhOST8MNbk/kZ8FUH8jTkKDskbQKNrR4vRRfgTtjJd6L0Lp5mgJ989h9pgnpfFbJdvqJn2fVu3fIRX1qIhTebLsV9/TlRwyhx2TuXf6kjxa7UC7ZwB+Sf8z9OL6bhqWD+NjIaHcV/OArPMmmg3ys3+N7ix8FVUlp5OinGNWEvec+Z0lVLdmYBPKo0d160xd1vgQGA3XmP+215oUafMuqeNKp9r5wODrGEZzgIskCV5bzu5RPAWOBscH3yPUq4G/ons9o5zTbjfyAF12i+tomAMrMbrWYcdwlXducz5yNKIYW8n33XP2g1d/wfK4JdF"}, {"__id__": "chunk-8e5d66b0ebd2e7182c13447d3c630417", "__created_at__": 1760488527, "content": "## Hash Functions and Payment Security\n\nBitcoin uses cryptographic hash functions to create compact commitments to larger data. A hash function takes input data of any size, scrambles it, and outputs a fixed-size value. For a secure hash function, it's computationally infeasible to find a different input that produces the same output. This allows Bitcoin to create secure commitments to public keys without revealing them until spending.\n\nBitcoin commonly uses SHA256 and RIPEMD-160 hash functions. To create commitments to public keys, Bitcoin applies SHA256 followed by RIPEMD-160 (known as HASH160), producing a 20-byte result instead of the 65-byte public key:\n\n```\nA = RIPEMD160(SHA256(K))\n```\n\nThis hash can be used in Pay-to-Public-Key-Hash (P2PKH) scripts:\n```\nOutput script: OP_DUP OP_HASH160 <Bob's key hash> OP_EQUALVERIFY OP_CHECKSIG\nInput script: <Bob's signature> <Bob's public key>\n```\n\nWhen executed, this script duplicates the public key, hashes it, and verifies it matches the commitment from the output script before checking the signature. This system allows payments to be sent to much shorter 20-byte hashes rather than full public keys, making addresses more manageable while maintaining security.", "full_doc_id": "doc-8e5d66b0ebd2e7182c13447d3c630417", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_3.md", "vector": "eJwN0ftXFNcBAOAUJaKWEzTKwsLuzu7eO3PnAYJihWCJaBFjSNSSAFVbH6hVUapRKoocjkRPsEqlhugK+5jZvffOvbuzRk/ltAkRS+tRE+VQjSkkbR5iQ0Qa4yNtgzam+Qu+Hz4oxbXdp9Oj6zUxjkG3uBw307L4tazj6mxrCShNn463iIucovJ0pBtX0QVsqXYOD3sDnWbgGGpyjKet7iyWZn3Ge+RqUJKZxA2/R86hZ4K/gS+JbdpOOUM9bxVEPiNn0vfD97UXxVd9i+EldyqZpL2plQb3KANoZ7gl8kt5wNiR3g9WO3PkuQY2DXyZJlmT3UXyHTEcqVHy2035YGQubwr92RXK6gbLSS+ZkJUab1VssBqW0624nRTxYrEuc0DogOvD58Wp0iqYTYRAF5kZsoHnpCJV4gdIi1ru2RwX9GlwhATV98xv8WZR1/tP/Mixj/wNZivb0THuYaDz/ZBd7jNHg5sCL2S8a5UFk+kO6pdeat8uvypeAbe9u802mBL9p7c4+xa0+Z/Ac9TTbLd1TTmmXhe7tWfIZvAn41dkRPm9u136PJinCew/U/dGj8hXpfw3fiit07aT4sjC6DLSKknx8eZUkswoag9XoIHoSdMGNsBTGfOSb2mo4yJw0Wjoxxr1Hgjv011uHNxGnuK1xgbPWTCRF8gbXSH0oH2mpad2RvvAbGo/GZcqRHugy/mc26fKYgQ0m18os9hSoYSOly5HVsRqI/Olr+kRnoJegQvwcn5NEHTRYzoNT649R0P0bTMcS2KP09Zl9qTWo5fVHCVXKXG7zGr1w1B/bBTdt5byR3xT8Le0R8nrHHTMPzEWHvWMw/XhMfU8DgsXtGelFdrXvBQ2gmeM9eriw0e/lw0cfN2EDR3DXp1d8ibFpsgLPVxaBgDL1S+ym0cT4rvQHrmDznCcs3bxKjQg7XeeidTGlYlrU1fCQc825S3lX7z8UGK8iLQJqvXl0U+lDVJV4BX7GnzcMYga0q/qpb7V7uJAl2LPmI4OOT8KFWAsP+QLMn9OZhg17GPpKXAsWBj8wjqlHzFeRLcdD+kfFBNH9JdDNzxNcCHcLI0GvGySy7Rf//6+13hIKhnwTmJNJ+3URb5yXkFv4efZ37V9UQdIEC7hC3QRMuABdZXzH0KylQnWSj1iHi52EtTvOS9XeMdZcTlfW62ms3tCwsGNzkGz14pnzVcOs0RfduwqCspcbLZuOAfgCvGW7YY6JozLeof0OdpImbJWnBDsQb8+OfR0l2EH9d5yXCFvzZ6BF+sFcNsbeyGIHgpMY63ufnELWkT+Z1Qe7sHdYq3jHlvm/6mhKfnAUIpAHbdZj48P+ifrS6SVypOoNlLlfqCuir7nH7FK/I87xmJ1Rp+X4/vyqKlKV/BQ/BCS9OFINixg0zNaHY14VtSvBcOviW/rDTzXnuA63fkJs2uFgWxjnVoHPkr7hSfN+UT0ursS3TXnxcGEmt+VsnNsnpYTGSN3SSo+Sy6h+/JcucrbqPaxibaIe6v/giL4/sJraQutwGOogNbg7+gaLkqFmU3uRjUxJUa/5KLVIjfrozTHl+dJxJ9OeRY+b15md/hF603h5rTJsp83sB5lu2eyo8t3E/ghcmtms7kXLY/eUSea76QMx7bpuh9HztKQkniiPmMnHaC7xYesTN0U50au5QDVfEy0Wd8p9ZoS88lD4lUw5LODXu1n6JPIV8p/0SMwBkfguyRJrOZ5sW9id+1/lRJIOy+TafouUhJ4wD7glcZqtc3YQx6dGE6ZCe2yHz+iiZ7FsA7uMX6Aq10VxpZMiaUxT/go/0lqudErzpWm4Cxcx2o1t54RSFDSxJ3gIPtcGlF24Eb2JDLNNVYh6jcEeR+ZY50yocC0eMfHZCX/d3QWW8AanPuxF1YaqrmEVqNvSH/gA/2iK99K1b/llXJL9DYNu2bze3wO3CgVOoa8U2OD9DVQ47gHG+FZ+bb2R/yhKhxPzmTAz6G1hnLb/wHIzZ+A"}, {"__id__": "chunk-3891b5bc84d44bbfbed2a7a9ef8fe53c", "__created_at__": 1760488538, "content": "## Base58Check Encoding\n\nTo make Bitcoin addresses user-friendly and error-resistant, the protocol uses a special encoding called Base58Check. Base58 is similar to Base64 but omits easily confused characters (0, O, l, I) and symbols (+, /). The Base58 alphabet consists of:\n```\n123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\n```\n\nBase58Check adds a version prefix and checksum to the data being encoded:\n1. Add a version prefix byte (e.g., 0x00 for P2PKH addresses)\n2. Calculate a \"double-SHA\" checksum: `checksum = SHA256(SHA256(prefix||data))`\n3. Take the first 4 bytes of this checksum and append them to the data\n4. Encode the result (prefix + data + checksum) using Base58\n\nThis process creates addresses that are:\n- Compact and easy to share\n- Error-detecting (mistakes in transcription are almost always caught)\n- Format-specific (different prefixes create visually distinguishable formats)\n\nFor example, P2PKH addresses begin with \"1\" (e.g., 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa), while P2SH addresses begin with \"3\". This encoding became the standard for Bitcoin addresses until the introduction of more advanced formats.", "full_doc_id": "doc-3891b5bc84d44bbfbed2a7a9ef8fe53c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_4.md", "vector": "eJwN0/tXFXUCAHAFimBRqBCuXO69M3de3+/M3Fubkg/S8kGFoJVgHs2gyOrsLj2ALS3FR7uYaJdHQRfhPubOfGfm+50ZoMS0MrU0fOVamku2ndZ8gifXs2qcbAXO9g98fvu8BT+Hcz+44dwTZI1ST5W8TzlDUhxPMAq24w7mXjPRtdtYAlqEVExzlj61Z3FgiP5VKQOlVueE6fwR6z8mMOJk0MoCTZGTSPRdB4VKE0nzLBBmeheJx/iK4MP2FXexfhqWgoxgHRizg2wOd0wNSZVSEZKk20Ave7pzL5+kfx8PSt5YoHGJPEFdxoVwn10stgVm+W4p/5JOmc3iF+iCNS7xJboBsnWXtkippQ6Yh+FG/ywxG283i7UexAurla742+L7DJV7gtCR2WQ+fTN3fHyj6vI1BpJIOZohphr7nUI2mQlTNrhpTldCQsiYi1q7XvE+3ymJPKz1R+1qmGH0Mt6Uko5Rs1kq7R5F01A9OgrSzOWepUwt62cfaBvmizqnceflftCIH3Q8cIY51zbZEfAO2yvO0T9n9+LLifs63vRPZUqNUWkXfj1eiXS4UPpem4PfjlWh/xqp9hR0nf/Z3hGnyGyzQVyp5UgS6TGf0mxT53/Tl8M1CSCVW01cGVNB15qjHUQZjA/m2Fi2ssR0SaZz5RxyP7wTOkZf9HachsLhNkdW9sReJadBiOIC6XknaZu9L1hh1APKvpa3H80nIOKCtLmZLAX/oDaxa9AfXQPIS3XjbWpK7CVhsbrHuEBeslq92T6RWsnPhE8oFHdQPW6cps5GGuwceap1TEkzyv3VXD3IbFvPZeWlOxsEPpKc2Az30VGxTnyBYtkcdy2tS6/REf8AvcI4p4WVAT+llZlF8SxynjlDzolfisvcI9xetGdSEXkP3EYKoCQ/pDCBn0gQ3xT/xyzmWrnknunoCB6NU0w3GJZGctz+Lc7ANq/+uC0aW8J9YK32VZvbd5HUMBs839Il7FHv8KS3AnOEJTIUFkS8xv1sCX5WGI99uojP8s94avz1psu5ik6yu2VXxz/JRdYg6b5G6zN2ofEVT8u79XW/WwL1CX1CrYAXuUPqq3Ct850zFyQZm/KepJ/TQ06NmIk83lTpNXStaynbzn8kLvXMzPyIxPIvwb/qb0SfgRIcYuPwBiy3WkGDxDYNCWNkIu4lGdQK169yVA441fYUqxe8Lq0VUu03orfkInAp+oM05ksKNps3QVcsRSzjX2aqYAO5yqZE56nM3Y/iG+wwnOZsw6tgDwlHamCl2p6d5kkGtZF1uq7uV/r0dvmU2qfey15RaPEyt0AoSBxAGc7j2nz1F2GQ/5RtABfURk+y9KG5aPJlUqxM1u4gdeolrdc7DwD8kDDd952dpJXpBfonYHys3uih103Wu1PgWXoRP5ObTN5TK/ObKZ+1GczyF0ph704+zLoFjT9lVdGH/C+Tc/Yv/HPakFvD2+EwKsZJyE3NVjX0ANUibpKQsKH7x7//ITu1c0Ss3lpHbJyTOEnfw0GMfv+5HXfjI2qIGwPjjJDB4sMknylCf3MPencJrxhJLSX0KrLK3omzunf7+4XHmGwcU96UanAtyojXqT/CB9HtJNWcL+RaRNrCnOdq9DvV1cTW+8lE/hpdDkZoBYxvOYOf5P/sTCK3nFvMMtzJJWFdMqVKvJ6bCGz+lLo676B8Fkx7v1TaKpstreEWIBgV4nU1rXuSU8Xl39WhBckjkFEO5J8wq61iZzjzaSYWLVWq6DVGpidXnqAfNcdgM/s0um72QxfY7DvMn1NWsVPY81ah/xsthmawUeti0xG9F+xJTCRsYh684BpnHmJ2wAFyt/UulU5eRAWBVHRQ3I/aravkA/YH+LH5G2nHx+M95meRrThPWY9+xj8ZhaRZ/BZrTJ65vOuAs9D6t94s9eubEn+Kl5Ah8jAobXfwLmDbBegv8LgZgjuYnb4zsuG9ojyi7ZO/BilkpZGpriD/ByA+oQ8="}, {"__id__": "chunk-dc2d9dd618e0d6b45b752a463ba94030", "__created_at__": 1760488555, "content": "## Compressed Public Keys\n\nA significant optimization in Bitcoin was the introduction of compressed public keys. Since an elliptic curve is symmetrical around the x-axis, a public key's y-coordinate can be derived from its x-coordinate and a single bit indicating whether y is even or odd. This allows public keys to be represented in just 33 bytes instead of 65 bytes.\n\nAn uncompressed public key begins with the prefix 0x04 followed by the x and y coordinates:\n```\nK = 04F028892BAD7ED57D2FB57BF33081D5CFCF6F9ED3D3D7F159C2E2FFF579DC341A07CF33DA18BD734C600B96A72BBC4749D5141C90EC8AC328AE52DDFE2E505BDB\n```\n\nA compressed public key uses prefix 0x02 if y is even or 0x03 if y is odd, followed by just the x-coordinate:\n```\nK = 03F028892BAD7ED57D2FB57BF33081D5CFCF6F9ED3D3D7F159C2E2FFF579DC341A\n```\n\nBoth forms represent the same public key, but using compressed keys results in smaller transactions, allowing more payments per block. Compressed public keys became the standard in Bitcoin and are required for certain protocol features. However, they produce different address hashes than uncompressed keys, so a single private key can generate two different Bitcoin addresses depending on which public key format is used.", "full_doc_id": "doc-dc2d9dd618e0d6b45b752a463ba94030", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_5.md", "vector": "eJwFwQ9UFGUCAHCKIA0RBIKFXZbZ2W9mvm9mFk/NU8JLuQR9JqampKmYzyyLq8t3jzT/3Nn5h1MMFVZkl9nZ+T/fNzsYZRllammdf/A9u1eeaMcBeioVKpxw784y7/fr5AaKR9o/dK8KdOJHKQ2W4F7jkFkuPgxyE7Vcev40s0Ufw63jf/ERkmedNCT+ESqMNphvJVTu1eBOvE/5De5zn3Gm8puazgZY6s98hL0Z26VUgGwLUe8F+8V6523uLu1jJf1qcR2sjpTSUXiS2stP50cX7oQzQjh4Dj/Np3mqSS9zBNSxKwtle3K8Md7kStww1OEDTPFd0u9FwaokHUXz1aoQNDfZF1BHKAUPoBNsH5q3TzaTzSo8ZES4f2sPw1n2+7EU9nJ+lpOMxpNrnnH+ueAVmO7mcauFOrzC3A371GJ2hvCBuQtncEXOG+SDgKPWwGTqFL/KWaoy3BDLgj9S2aRLinmPJp4y/mvkEAqtjDTuTeVrUI+0ymgR1nifAONCMso/8Bh5JyTie26VcJq75VnBLXPuKunGxzQMX+T+x5w3MgVkf+S/baaIs7hR6npJon4YW66lO+3Ak1V06FtrgGQk7gmTDAfoWrexh/LDJWAOlcNvNrx8Cb0eedF5rQh3FRzJKPfek5eQlOYqUMqXWXFuCf0JqFHuOz+zSY4dvIIj7n4ug92CO5kRcxzfaaQGyqEAe5uGmYWWyP1L2YAHg2PFfuunlpsgriEk42Ppb/o22bI+mH1d+Tl4yh0kc61TgQVWKy0qDcxRftmeBthj3DcK2LelZ9pKqUXWddsmA/ZEtVqYmN0F/iFV0+dBFncjsJDt1KrhNHF2hs7Nsk9SF7gtYljExmF7IchScpI9zDqyERy0LqGvDz0Z/idcAG8xuvkC6CaXioBzGIZRX/MDJuq8hvOCqbC36GN9aVuTdCy4UT/NjEJtqNM2MWr7nfpAW+HsxFPZCHvRsawZ6mprDPMoXGZtB0WyAqaHkpufR7fsPbn1eSu5OWkrnC1Uh37GCYv5BVfAS6TWnReglaWoVlOwTC/Rmn0Zlkt/Lz0V28rUqhPsVL1HiDDlxmvBSbnddgNTjXvcvvhV83O8HJzD7VqNMDrxXK4PqU4PfgNWglohyVgV6NUmsaXitgPfx5NQSnESh6gLbK0zxDfy42GS9GZ+qjVVvmpyZkg8I4jur/QDiU66ky+FDbjSbkYb0Uwjt3gs0x3agddHr1F2qETcLJfAdrdO+zr4aWxK4Iz1EEoR55JZyjbvMarPU8DnmpXmQXUvf4k5Y8iknZQ/vl4cAz4nP9iGslPcwW/gm+B8t8spiA+aTzAHW+/QYRg1Zvvz+GvW6niuu5lMpL7F063ZzHfNz/KLyRfyGsKTmVYLHB2pooK4136dqTNedO7BG/q7uuJbiuvNTCU7d1WiVfDyF7lz1gLP9UgFI6rfOMP5aWwZ2f/eAQbYN8B4cxe33CK+5dF28zvjLHOCuSuoQoE4SAp9o3E00AUrLDthSPWBzthiqsQ8svVdq8syG+/oYdDGXDDCkRTjiCPC+faX+K92kz9MhuRfs6db5zhhZ7rriQ7BETiBrDVGmIxATB6W661F+flsnXHFegeOIrv5o8r9eH/iS99W87AlkZteRn1dfSXxlu8b6i/Rl2ANYTNvJ+axUedyKB3rqLV42LmulUDNn6k8Sv8i9MQsXI+A8IdGnz8NnrIvoWvmNPIiOW8yDG/m6FPgV+RJ4471W3cPyd63lj7p/cmYCdeB1Wgie9xEZnFwP/xR3m7/BxM1oN1suEx2a33y44mvgrR0kevnFju1hfMTMxHdUhasRcl8TtF27yjOw/zNdO0cisUvJ8rYDkCBNf5F7g7zhjSCHljHcT/JoirsCQWf2S/TCbiWatCS9cP8q9RY7jaeDQYcyXfWrQZx/PfYGKrS2uWWCdtix82nWX/b5LYgd8KfyU+CFdzKULfOoSkFk/lC8CerAw/rtvZ/tjGkag=="}, {"__id__": "chunk-81ef4891378458276aff1cd16cbf4c17", "__created_at__": 1760488560, "content": "## Pay-to-Script-Hash (P2SH) Addresses\n\nPay-to-Script-Hash (P2SH) was introduced in 2012 via BIP16 to solve a key problem: how to enable complex spending conditions without requiring senders to understand them. Rather than putting complex conditions in the output script, P2SH places a commitment (hash) to a redemption script.\n\nThe process works as follows:\n\n1. The receiver creates a redemption script with desired spending conditions (e.g., requiring multiple signatures)\n2. This script is hashed using HASH160: `commitment = RIPEMD160(SHA256(script))`\n3. The output script follows a simple template: `OP_HASH160 <commitment> OP_EQUAL`\n4. When spending, the input script includes the full redemption script plus data to satisfy it: `<data> <redemption script>`\n\nFor example, to create a 2-of-2 multisignature requirement:\n```\nRedemption script: <public key 1> OP_CHECKSIGVERIFY <public key 2> OP_CHECKSIG\nOutput script: OP_HASH160 <hash of redemption script> OP_EQUAL\nInput script: <signature2> <signature1> <redemption script>\n```\n\nP2SH addresses use Base58Check encoding with version prefix 0x05, resulting in addresses that start with \"3\". This innovation allowed complex scripts to be used without burdening senders with their complexity, enabling advanced features like multisignature setups.\n\nHowever, P2SH has a security limitation: it's vulnerable to collision attacks when multiple parties construct the redemption script, offering only 80 bits of collision resistance in these scenarios instead of the expected 160 bits.", "full_doc_id": "doc-81ef4891378458276aff1cd16cbf4c17", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_6.md", "vector": "eJwN0IlXFGUAAHBUTBHxwQqysLPH7Hwz830zsyq+PAnSDn0m4lFiiWl5lKYvpaSeB0KZjxJFFJBrd5iZneObmV1I07Qo0nySiphPLbPDJDoMTETNI59Wvz/hN5m8yf38oWa9JnibekucKMG32rhiXhW6Ay5zLCoO3oVrCYfcy65Ii0aetgn1wEjeuOt8e8Qt5Y7zXVayx7hD9gD7IrZg73bT3IlXU17fb9L8hHWa19zK7QhM5t6zjqp7I61aOf0b96X3mnkknKNNxDr4MsD48gN7/MeV/enX4EGiWPMo7cB23QydCXGqaI+0y+ELzEJwPK7Qn6otccdiPig0njSL+Cn4k+Rma6FwKvotO6oOEGcwI2PDa0p0YdVMbjTH+WL4f9KHgAWO9WT/xl3JxeSzaWmBTCVOx5AHu22f8bzQbe6DRVZZeLFfUvtryzxvem8AH4iBxerM6NhS0rjO1BlZhLtxNlvQFPCzzlzvUugLZ3oP1x6BU6uflROc3eaL2pZRldJseYeRwcRbM+1j/u/4W3Qu6gr3pbjINSrFBLUWulP9gl1r9vP1RIDwKXmCLkn+CrUqG4iluE8aAEsjm5VZWqx8khvhKoIefNBYXVONFSYYPBwgpEfgXwaACwM3/aekPuUZ1KE7UiUrw9hI7mem6FMEUv4BxLp7ws3UCetR/Ko6tanS94Dp0DZqUlWKEA9OU2rKVGGXuRxNDToYUb2MHzfbeJfaZwyEeSlTQI51Un4B1oBLIA7aYBU6ag3E/XCN2jJ8sb8ajw1/x54FtdwB9x9VhRwhL8ZO/nzkF/yj1uYsxePgHDW97izV0lCIEvQi+wR3LrQOVnAEfY9rwtNBkpBXN0bIAvdxjK9byQ6eFrtwlW+NmUrCaDbycH44iczWOo1WvBLss28krUCvRSq351gTzJXMm3B5KM5uN1bpk9yZcFAwR8iB16Uecmi0XU0ES6yLDflIpF+iW+iB+Bzwch9Sc/AWGYNTxCbga5jo36oPRqTay12xs9BH9fGGZbW4L4AeMEFbaolaBVkbuMaese6Bt4h056vhOOoKe4LqQkdEl3ie+1sqQcDMdfapzSGDqcALosPwohABbhNDzI3yUGES7o/WKQ/VsoZh/I9pZ5l1aVne5/Ar3vf9M4QC4xa6k7pNm8x73DMjO/i7XAd3W88ZsWrny05Xo8NmBJGfhT/GnbgK/Ap/4tPs2aAE1Mt5ngqhDOYKZ2um+fupv1OdDfmMVFluT4NxdBF4SR8qPoQpwkX9UbwNnLKmgxlaRsMlI5HtpY+JfjBIzZCfAjQMwUPK5/BfXywzmrpANoFaM14vqGe0KqOVHcJd5YoY4I0XCqLj6a8jTyZ/kzJjhMMczGwIRrlxVJVQoey3m1CWlm3ki/eMzMY6bk1wpBErOLx50KVuMN9gXycn6k+buWA9+4Q+Xv6G7mIapU1+Xd27R2d/V/6xJc+cum4jHlOoWCkVLweTyCT8azADLuc+QA50wfyqNCwD5nHhBuLN7/V2I0+el0gYsxTS+AN/QYwRJ6It3HnPYdxmHzLH82OUxEhlOJbJJsaps0BbcC2+Yb8XsSWr9nW+WDxWO5h3AJoeDM4NH+11hz9RneEdoMto5jh9J6qIBPF6yRHark6AupIplpeUBWO5I3iVpzpa0zjHivn/9BLVzxrEdwo58lXmHVSIWvUAWovus3f065xTmIfySI3cZlVoy3CJmaD9ydeDxxRK2Y3GSUlKkb6SnG/9FNos9OpUip7egecKz8NyPAxXex/SClqijSJqcLK2Ajbr9QPj/NXhYcpC6TJTk3og7GLf0rOEg+wiogTuFsroSuMHmAbn4n22SM/TFtnFCGt7uXRtJN7ti4RjeDr5MyMfn7Y4dT9Zb3yubnb3pLdZmfIDwa/uMaojC6jaaIU53z4KbxuWuqlGVD2RAvgcXBPaCudbNK6lx6NEYgXDwAL0mdnu3qN1pOSp57RDkdlBCv8HPuWYbQ=="}, {"__id__": "chunk-fb2303a77867371bbac24aaa078b569f", "__created_at__": 1760488583, "content": "## Bech32 and Segregated Witness\n\nIn 2017, Bitcoin introduced Segregated Witness (segwit), which prevents transaction ID manipulation and increases block capacity. This upgrade required new output script types, and a new address format called bech32 was created to support them.\n\nBech32 addresses solved several problems with Base58Check:\n\n1. They use a single case (lowercase letters) plus numbers, making them easier to read aloud and transcribe\n2. They can detect errors and help users locate where mistakes occurred during manual entry\n3. They encode more efficiently in QR codes\n4. They support a forward-compatible upgrade mechanism\n\nA bech32 address consists of:\n- A human-readable part (HRP) - \"bc\" for Bitcoin mainnet, \"tb\" for testnet\n- A separator character \"1\"\n- A data part containing the witness version and program\n- A 6-character checksum\n\nExample bech32 address: `bc1q9d3xa5gg45q2j39m9y32xzvygcgay4rgc6aaee`\n\nHowever, bech32 had a flaw: certain addresses could have characters added or removed without invalidating the checksum. This was fixed in an updated format called bech32m, which is now used for segwit v1 (taproot) addresses and later versions, while the original bech32 remains used for segwit v0.", "full_doc_id": "doc-fb2303a77867371bbac24aaa078b569f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_7.md", "vector": "eJwNz3tQFPcBwPGkoEVbFJAAcq+929fvt7cXBnxE0EQQoRcfwfIq44jUEOujmsapBokjo7GjmCZlBA857vZu9/a3u7/f7p7AWIlGQ5NGDU4dmZhRI4rYlGZGg44msR2TMtZ/vn9+Zr6fsdt8iwaajsPAiNbOHHpxNy5GbWYd388Xdez1FepjzkpyndpMEa3b3WP68EsF37Ot7IcwqBc41gon1FRuATmcfwr9QI36EvY4+/PAXfi5vt2+CH8P4oGlYELESezYiFJBG/xRPEL/zZwJi72LPAX+NUIQ/Rl6mapEuj4ubHWwdl7OlO85Lp/+HX0psUi/Yvp75gW+Vedbu9gCPCggvcQa54bwMXExvQWVeoNwmbVCpJi3WZr8T72JfiR13k6+izmf9YF2XzlH9SmTpF0V413xX7neYT8UYXpE38ic7V1oSZEJdofzIayzg+hL/0fmgPEd6GdSqCZ/MS+hZnKaXRL5F3c2tg+VKjIYTx5E6VoQzwQlz+qXs8F4bL22wndNnc7VBThmSp9P0sWpuMt6nLgNMsABPssqi45ps1Abl+V8XncmX4GrHRIhuAHcThSGWxUa7cPTlAX2KpRGTSW/5BqtSVwEjstTYJrZbI3os5UU7y4t5P8PF2Av4YXeJ3BpxvtKvedd1Ead4dbYd6QdTDrXbZRy89hC6gHfp2ZEc6xZhJiGvQR8qu9Gy7mvuzpgHCyn98R+AhvI/kSmmutw6DvIBT5XvG4FcAUrMnPm1iI+cZSdIVyPF6u1doe4X583N1dfQ2aw1SAee8Aug4YscospiiSlldEFpsc/QOq1YfJb6q66PFDAz5SMnGBOnCmPnpYr+e0ZW4FT8PG50T8ZP+Ey4Tp7ig8rllnulrUDz6RG/aCSb77qXWqH2AJOEyt8XYmNzu+4EJNqrYXV4CQfpZr097T79DrwV95tFNohYx0zJkWYdu5poEZn6CpSOKfBuGo0oybmKQPxJuqm+xJV6W7SHjlaQo7uZsYpVnKrxBQ0jDKOFQmvxTr5Gn2zNWj2cpTzJfBR4p92lXcOcwc8pnfasvcTvdh71Tyf5nfXZ+l8hRLzlDA3YvX5feEDjp7YfPKykG2fSL4ZzjcytIdgtjXd3S5MKC+AtcIi/CqJgz7fO0Ib3e5tiAZgI9NLVyv7QKlH7ikTzjsiZhV8BM9xk4lXqBRPeWxvoiS6VMwGZWYt2Ur2iPfEJ+AL3YueE77hHbN9cD879CJvn+ZC8hFBBiOJB6CfPHWe4U9QX8Q7Ip8DKvA4WStFwDn9XVwCTqn9HKN969+Y8Wv8vl6UWO+5KZylfqGvlO6jTn+Cb4USJxub7JT8A0qzMBeOwEbwVWRYU8QQ2pm9lZSrl5RSu0rNpr9xXuAlZZIKo3um2/zYWR7DLhsdM3fybVIrboITxnrO7VlN2qQr3KT3cqItcIFexu6k/KxMu/lM0EkIqmA34EN9HmYbWpw1ic77L2pRLbfnTtSh/Zf7N/01POi/BUvwW+HqbIcyAYf4LfZsczuO+lZ0D6tdmqK1WJvUMpnlv2cuaFnhNF3Avzz6R/1W95hW6k8lNfpJdrfxqXbZXJh0oxJXPxxVhpw1fDUe9P2MydFuwemoAgfxZZjlCvtGmRXe15QSWKk9kavzHoFteW9Fr+JMAcNrZL/wur2bvGwfAQPqXrbetLkr/jr80DcNfkzf8KxhBsXpcEQbErcEhhOVzB+OTZFUYQbqRBahXHHUbBy10sQ8NCidUq/qLcaGUFDabryBP4t+4C1iasU0Ze6z71H2NqLREtaV2UD1Ko2oz1HKHbZa2L9IBb7N4cu4V4oYw/5quZbtjEeEILUpqmnHQZ/rHlqJiHpXLxR/w66mduE38D/QNe4rEeeNJlMds2ieyuOc+cV8tt5h3nbFzaPCm2SH96TagO4cX6e04pasG3Jv+Jb8nhEie70XmRP034Uf7Bp7ALL6GHsIrupu9r/N7AGZ+WeA4U6xC+zD0Snl/68Xlm4="}, {"__id__": "chunk-b490435ce7da15bea4e3a832e23e2156", "__created_at__": 1760488591, "content": "## Different Script and Address Types\n\nBitcoin has evolved through several address types, each representing different script patterns:\n\n**P2PK (Pay to Public Key)**\n- Earliest form, rarely used today\n- Output script: `<pubkey> OP_CHECKSIG`\n- Input script: `<signature>`\n\n**P2PKH (Pay to Public Key Hash)**\n- Legacy addresses starting with \"1\"\n- Output script: `OP_DUP OP_HASH160 <pubkey hash> OP_EQUALVERIFY OP_CHECKSIG`\n- Input script: `<signature> <pubkey>`\n\n**P2SH (Pay to Script Hash)**\n- Legacy addresses starting with \"3\"\n- Output script: `OP_HASH160 <script hash> OP_EQUAL`\n- Input script: `<data> <redeem script>`\n\n**P2WPKH (Pay to Witness Public Key Hash)**\n- Segwit v0 bech32 addresses\n- Witness program contains a public key hash\n- Example: `bc1q9d3xa5gg45q2j39m9y32xzvygcgay4rgc6aaee`\n\n**P2WSH (Pay to Witness Script Hash)**\n- Segwit v0 bech32 addresses\n- Witness program contains a 32-byte SHA256 script hash\n- Example: `bc1qvj9r9egtd7mu2gemy28kpf4zefq4ssqzdzzycj7zjhk4arpavfhsct5a3p`\n\n**P2TR (Pay to Taproot)**\n- Segwit v1 bech32m addresses\n- Witness program contains a taproot output key\n- Example: `bc1p9nh05ha8wrljf7ru236awm4t2x0d5ctkkywmu9sclnm4t0av2vgs4k3au7`\n\nModern wallets primarily use bech32 and bech32m addresses, while legacy address types remain supported for backward compatibility.", "full_doc_id": "doc-b490435ce7da15bea4e3a832e23e2156", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_8.md", "vector": "eJwN0It/TXUAAHA2rzDbtFf3de55/37nnKFF4pOp1lDTKO8QkyG1h9aH0rS8FqrNXYa73bt7z+N3zu88tg/28JFIVm0WRqGHImwpfTwqaiTV90/4zpObQezuHTYpnbD6+PpL+fKjxk17krRfXKtPd92yz8SUkJ/yZ8DPWr5zHffgXelzjTJieu9vzYvBdqCbfHiiMclainOl3gqhDfXGgtEb94cXejO8J61z4IzYJI1zusgXkOUjBENaSBVpzcxNKiOaC7+RDihzJAlccp92vyMsQyOsVPokm8XtpwJ0cWiMNaWhBjwsGP5VkQSyPyqGJvODOYVZoz4vfaQ1yq2on7SmfrOkUl3gAZUzzuozUAVPJC/mXgJZlSOZodGO1PlKMjyZMsPzqv4nXS1lJZ2iDLhIa3FuRWbDd9CHoNo2zJVsRnSbFhvsCjeCf8TNbCM+YS8BjfJS4SlrjsaYC+CmhoIh6bqECgTX9ovMMn8zvK4v8Vbog9Fl2h7eRuzEI3WXRBqHGsaCTMnDxoLG0EP+K1oCfpCLq5vE/BV9SfoSbQ+11JdxAWIqPc4TIDZpPXV3nV5aPN3pDEwOm7FGEVdEUfC4dk35KhStHQrewxOkMYlnuXlGByOKmfJF8420OztrPSlpEdyJb/uD3Cx0B1ZW/MuWQi46kFqGX9sGjf31r3txJCNKxw/jTgtNdOLOYnm8UI+PcSXJQe5f1G0s2dlXKMMp6jVuut5DJBlVxNiEe2S9v1C+qVeAQuNedLn2luljNry/IcSxv3HZnlKmm+yFn2OuMnvs74S/7Pz/h2bWKFXV/O+hZm+PWo1iQBWhhiFcI6t0jheAVOZOqA1eAx7QBu+HJ8zRodkojnEpjJ7on2bvcqn15eInQiL4kv1aW6nx5nH+EbONXw0HqA3MAudeXb8dG0GlayTOboB1TzB5wgWlFLrTm9OCrvHOOJyC+1sbtm9iZ7JeqzzxWbaTJCu7QiswRTZTj/NucR9ZJVWZNMiiAnAvTnV/jBLwbLQWrifa2JmhGqfQE0heJm1NSLfP8ouDF4NNKE/vptTwclaKjGIRNS/tUdBLzxU7FF2rAVHc2VBQkYF+4lfANvNtNQfkWZO5wXAdNU2vhVXsOpAHCtm5xudMDBwNCvAlYSKzmhwj3POGnbGgBbbCCrlI7mt4lDFJ70f6SGlSkl2EbdwEy8RfhcPReNoFf2Qaiez0VLcvvUXfwwpGnDTSGyBq2d22j7Z4LzlY2y5fpR4Xllh90MvcGe0XZi4TCuRqo/UtUEXHtWHoLeVK5AJ5PhDSWllZPicOALXsOXDK+dXy6Y9RqYCCFIeEcr08+o8Ug3XPAfu85sanzCNqO/oAcSKtfsE/HTpq9nVnRsvMKXC8Prd2Lfgt7XlnlvSQcpiq3rzSJDzTtmVWleAr4ns1JYOK3dmRLr8IDjK5GDJ/UAvQ5fp3+VpPMVbrStmgfVj/nsqJtiqHfCn8g0weXZB+3jyoZhkvbFkMJ3CfWaJViBu5FUQztmRGH2CU6kf9VVwsnC9fxWXybH0bmBF50YDaV7yERigVQoTB1gWr23GFc/wTgUu96rbEvWpf8CQVn7Q1IZNbbJ1ELHdb28davlUsoTeHzsqHzCasg5uRpa4EdWPwFLxluGFyQ7a10jlGxFpxYLLjF9YOX2TlMX9ziUK/uvytnmE/k0PMX6TTgiuaE+gBrWY734a+wzH2DeYI58JBxRG9no99HVix2s1BmsBNSIuLTqRpRHNXhA/NPbgbPO07zB035xP5vk5tPRKMDrmcXW++wjWGn2MuJa8y71LddrK0nNzCPcxmim9HcswYMEWcpuzAfnK9PsiYKb6J2vkWPMDaZ7QTq6X79CHGKv0xbZc7FrShVN+wuoPmVLPEPAKO4RtUOt6UMMr+1s7Br4ukfpQh3DUYOj+EWti0ihnCbnOrwQmXDTdoAc/ALNGPwnxvZQOfWzfKus9pUmbh/wATCZjm"}, {"__id__": "chunk-84cd9217dff76901e7dc07cf3e45f769", "__created_at__": 1760488621, "content": "## Private Key Formats\n\nA Bitcoin private key is fundamentally a 256-bit number, but it can be represented in several formats for different use cases:\n\n1. **Hexadecimal Format**\n   - 64 hexadecimal digits (each representing 4 bits)\n   - Example: `1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD`\n\n2. **Wallet Import Format (WIF)**\n   - Base58Check encoding with version prefix 0x80\n   - Example: `5J3mBbAH58CpQ3Y5RNJpUKPE62SQ5tfcvU2JpbnkeyhfsYB1Jcn`\n\n3. **WIF-compressed**\n   - Same as WIF but with added suffix 0x01 before encoding\n   - Results in addresses starting with K or L\n   - Example: `KxFC1jmwwCoACiCAWZ3eXa96mBM6tb3TYzGmf6YwgdGWZgawvrtJ`\n\nThe \"compressed\" in WIF-compressed doesn't mean the private key itself is compressed (it's actually one byte longer). Instead, it signals that this private key should be used to derive compressed public keys. This distinction is important because a single private key can create two different addresses depending on whether compressed or uncompressed public keys are used.\n\nPrivate key formats were primarily important in early Bitcoin wallets where keys were individually generated and managed. Modern deterministic wallets typically don't expose individual private keys, instead using seed phrases to backup all keys at once.", "full_doc_id": "doc-84cd9217dff76901e7dc07cf3e45f769", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch04-keys-and-addresses/mastering-bitcoin-3rd-edition_chapter-4-keys-and-addresses_9.md", "vector": "eJwNz2lQVVUAAOBUWlwQ1Mdivu2u75xzL8/IxhSLkUlBbXBUKDNMUyslWjRNUUhM0FxIQFFjeffd/Z5z730EaoWZaSo5oQKjNS1DpiJDaVYjtDgu1d/v3/cm81laT/PEmCTQznFtFpqsXrfayXEUX3+/yYCwfsL7TWMEPQ94e6V1khyUHxJu+5aBxD3ziZ9/EMTjz+WAZ5ON3C7uaiBeXTyuhCHCXfa7upSQ/HC5d5/vmfAgYyTcNLYS/kXNTMsM/hR9ybuMXkcvFcuFfvUA+l7oD3Sbk8VX6HznIHTY87AjNG+Pp+YreZFbi64IpWi1eULsSrpPyDA90gC1SxoRLooURivAaWEqbkSH+SlCUE81epXNeFs0PlH2/Auw/WlwSGAGLToS2GA2hIZQI+FFWG53sm/AiO0ld9G7vsvcSuQla8kF7jI+F53F5kr99FrYA7v16cq3XCf/I30nEE8qrJfBlNgJOQMPIha/PZBDX+NikI2mq2E0xnuMSh/PwPf8h+zx4ZH4zVguWsDztXP5S1aYGWIsajzKtvNjQI9hw+KkbcErmAhJvKkmGw4z3wxEd+Gfxz5eT8U6yAR7lBvHNWk/0HHmclPSHwi+0/BF7QpYQ7LEOVo3+0XoTzzcucEVewqYXpWy3td2h2LsWOkKf0/vpbOZae4NZpF9jq7DKU3fcXH8DHsDSKYGUEDNr2zmv4Gd9el0q3GEv4gL3Zb/39OsnfoWNk/7o34frpUy1RKClJaqrg86qLB7yDxlrjNpvsc7KLgTPCTWSPPYPGW0tQN8KT0Z87KKdV7/13wH9wZ/gnNlD3hdLWCnhv4BOUobozfuDs1CW5MGc0caU4PXYAfcD2qkRA2zf49u8VUpFnlK68MJ4oSmZXwXWsyvBZ8a6/l0QwCj3DC8J6xSlsLz5nB3KF8IpwVL5ZsxH2gyJ+h9/lz2Q9Eyh5LrJCGywnzVbtMzuTjIuafNacpy62Yy4SfpLkXvX5k6RPg7MjHtDImlFDIan2ovtJbct996xR6NmLqpnItNN0/p99+Gnf5PSNjfFJGpdlOKKF4lMA5u0H8nOHERexMe0ThuY+1WtYWrspe7jzIr9FEfHAbZ+jDyFjpMQvt2CQk4z77HVqRUw/XWTr4gyY8mCQg/k/QbSBBauSlgAshyhgoT0TFY5S3zrDZpmcJ6dAHajtqdozjf9IGr4i0wW/fjNk6AzfIecV1is9hk1UUdMyC+AMarOlXqfhn8+n2PzHBPqB9xreJuexVGVH/DkrGzuev0ncYmuQF0cZzUaV41gB6XtjN4C79tveVtFoahxYjwFzBwsrXSYAVXwzJwOxihXk+aiSqtjXggttpJjKTbdwxJX8i2iRXW99xU9YA2zHjQO0cpSj5mlOBfwAtyJ/4EtMsf031cGl7gp71j2NPuZnFxoBrG66uSy6xyNgV0OGfhb8op53RTJyg2XtdYdbNQ6E7CAflVfasepv+EWcIZYQlMtQvAZuPMnjxQa82wclOLgzuCZdUjtaMRQNaQOdGNciv4FT6A51pHqSKHS8T6FP+a/QNsn7VDu4yU+pu21z4VU335qIhudNq0l7kBXdMKfI1sOXeXWYqftm1o63XCpspH6EzyEX3DOacMJmuoY1KmUmZEFQqWGJfAdPei+aLd7cshDEo3s0IL03xOFj0fVKZI0mfyu0IymE7mwHOI1Yrob6mncQJgcCtOsC/wKmwnrxkpcLB5KLjOum1nWBl0LdPCnTU1Lqm+GIyCHQ0rTJUKh97Q+tSH6yZ7quUcvYMc9LwW6XaflTdF5+11wRab9e91b8GMcWOUbfA9mMOuJ818BTphYTObYe2ZRhk4yZ7UsvVLbhWZrxwUFWOfnU3CofuNEdpZo4fJ4mRSalyJDufz5R9Bom3Lk90D2mz7Wui4WbZ3KPc5Hu6u5JHvD/wY95x743/vGRYGO6r7aSTiyGD4hFYS6g3tIrfsXHNv8D9H+KIN"}, {"__id__": "chunk-282248efca7d102eee360be7bb7553bb", "__created_at__": 1760488621, "content": "# Wallet Recovery in Bitcoin\n\n## Independent vs Deterministic Key Generation\n\nIn early Bitcoin wallets, each private and public key pair was independently generated. This required users to back up their wallet database frequently, especially when generating new addresses to receive payments. Failure to back up before receiving funds to a new address would result in permanent loss of those bitcoins.\n\nModern wallets use deterministic key generation instead of independent generation. This means all keys are derived from a single random seed using a repeatable algorithm. With deterministic generation, users only need to back up the seed once to ensure recovery of all current and future keys in their wallet.\n\nIndependent key generation created significant backup challenges. Each separately generated key required about 32 bytes to back up, plus overhead. To maintain privacy, users would create new key pairs for each transaction, making backups extremely cumbersome.", "full_doc_id": "doc-282248efca7d102eee360be7bb7553bb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_1.md", "vector": "eJwFwQ1UFHUCAHABwSRUksWWdXdndvc/M//5AB9gCdlmqYHvKn1n1OFHHWoK97q8C30eW2nZK6XIQl1A2I+ZnfnPzP8/M+sXXmhCSHqdPk95V/lxl4/z/Oh6Bqfi82mKr36/fniuOLav25kkHrWo9grhDfMxdMmmmCvsPPAn9L5rwXYjhLjDTLWRZV/XI6khcZe5m29NaloGuAb/ad7gW1Dl7hHzNPs3/Tx/AVUb5eJdzmXmQYVpkRL5Y9JxU4IaM1GcEooLLtDrWy2L0yy8UdgGl6Ba2BwIkzBuES6EXM521vFfZyRmDbucfU89iL7gatlSmIHLhUzlFfGhwCO4nHpJ/d2M57cx5hhTx152VsOI7hMeNmuISlNODd6pRRNL4kumHGaaUBD+j1wDmYksujtZAX8v3NYOwzPghPUPZQw8Tt9nKsRD1s/aSW4q+rsyqETis6NDYiZbTPKC//bNCZkwC2/Sv1Ob6F22DQas5XiWXB74Kvk9wMG1zDOpDm6LvwxOEreIVZ5RdF44r55Ii9KRznx2UGhQtyhfKU3MNljDJeFSa5AvJc9xnThbWsRf5b2hpYIdX+A643zMb0gccO60ncSzyQ9iufwaV2e04T7PXvgg8cCcBUv0GFPZVkgfkAa4Djsb/RG2WhOTfvO4u6/rtm+uFmE0jqN3MB320fht8ig7YC5Kh8AOfWVsr/gzjfhXvNPAyqDi/lCu9g5Z1aA5eNIa1pZyr28H2tqiKag9dUgbE3o9p3UXFY0P4O8F3mo0BlIbvZQ2LkA84z1fMMe4OeJkD1DepiuUZ5ydwU+m3XMostL3C3WYbkho9GX6NzCT9qv3jSF+RaoLeGGJ3Nz5ufks3wB7JS9X6x2feiE1hr8MDutVHaPgrp0NN1uz+TyJbdsuFhmndJc6NbTPKpN6xFx7mM9JV9vzA2GxB4aMlt0/FK33FRsZTC77jlRqLlRuOdfM/NBM3BAdhoAvwK9p3sK16jxqX+hJebEQbm0VhsVjwVelnc6q9odhgfhbhzWGSNgs0dfnuxJ5/ncNL65QIpQb9jBJu4hp8vQGroJ1zAfxy/IjbLEQy1nqbQrO5WZwM7mw/3yexX5OpPQ9NVuZIrPsKZV3BmIRMg9sAmFzApGDe9SKkv9Qqlip1sL5nFB0E54O5Ah/9nPsy4FAulWqh+/As0Wbk+ubdwGKfZ2cFZ6SfrT4zjOohO8vWSEsUv/V9RlVlaiDdLGEGqVedBbfoedKIhenRHGO3d2VM3WjUiBc86xlMiU3mdYxlOpWrgaP+tvhS6nnwUGhvL3WyjbrUELvFq+CZXYWXoWPiTeFsEgyppNTzkP6JehBKV8OLBDqjUazUNiPR5gN1qjxBDXdmawtlh22HhY6Xn4zGTVt8nQoFx6fmEb3zQOBDNJgceK3aAH35aO3cL9epv1FO2Z/JmzVGWYMDgQHC/fDxWhP+i7j0LmoPj0ntNDnTn0Xz2JHbF2L+EasN1PfMDHokZYLNN9j1MBR68P8O0Jp8Ai5qZXRfV2N3BXUikfQ1+SAUmMulmL8N2imHvP3kFswiN9HPPcGPItBvJu/mJjh3LOFNMSrQvXBhQ6t5oIxZRzfAt7SBsHklE4eJ3u4B12f0nbgXtTVkd18whpNPGvtYvrZD/AVEmQP8f/HnwLRjqCtVhXzX3JD7CccOiqcI9dD6+BfA5+gCcFo8ddwU7pQ3ClWKfO1qYkKbU1ghxm23rarldWw0x6z+vgnzb1UMZZJgXKRhoFJyWVomXIZyMI67mDipNaq1XZNp2L4Y9IgvBmNuCutNqfPepE8Bxqje41zXLV8UY4oL8CDcol8CW4Qnk6Nw6+qg/T+6VyqnC21d1vz4J7QH3CXPhtf0GNwqxQ2t+A72hqjm3YCE8iNvDqQiBVYP+ErbBk8wYjmR/Go/QtmrW2w0jJMGSSscpswPUDUM4UKx23moyNwBaO5c9zzpW7+MS6MvgWzEEgZ1ngNJX8FUYKYeA=="}, {"__id__": "chunk-f848dc185317d120883605e84c92924d", "__created_at__": 1760489034, "content": "## HD Wallet Path Structure\n\nKeys in an HD wallet are identified using a path naming convention with levels separated by slash (/) characters. Private keys derived from the master private key start with \"m\", while public keys derived from the master public key start with \"M\".\n\nSome examples:\n- m/0: First child private key from master\n- m/0/0: First grandchild from first child\n- m/0'/0: First normal grandchild from first hardened child\n- M/23/17/0/0: First great-great-grandchild public key following that path\n\nThe BIP44 standard defines a structured five-level path format:\n```\nm / purpose' / coin_type' / account' / change / address_index\n```\n\n- purpose: Always 44' for BIP44 wallets\n- coin_type: 0' for Bitcoin, 1' for Bitcoin Testnet, etc.\n- account: Allows users to subdivide wallets (0', 1', etc.)\n- change: 0 for receiving addresses, 1 for change addresses\n- address_index: Sequential index for addresses (0, 1, 2, etc.)\n\nThis standardized structure helps organize HD wallets in a consistent way across different implementations while maintaining the flexibility of the HD wallet tree.", "full_doc_id": "doc-f848dc185317d120883605e84c92924d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_11.md", "vector": "eJwN041TFFUAAHB0nBIDNZlTOO6O2723u+/tLmJhJiIahh0pKqOZmUUqCGWGkuZZYgb4gYgOGAp33Mfu3n68fbtYVlNqNgxqaVkaaqWF1gj2hU5hOKmTWb//4ZcbCgjTD0zpyKP6rQEmh0nAE5XPSTvcxf+iTOI8uMJY7vgYyMpx66PQDiIxuZkJLj+osBz4FXAGHiYA7lFG2ketW/xaprNlpqcBRMNN1GhjbtukaDc6TW3PmqzvZkvAi6gLrUP/ssdov3ce/Zr+kHg1MxI+KmxDzUy2uQ8tjCJrOl8lj+Tdo5tgK71Mm2LN4cv5QfYPJUdMYQjlR5+am7lFnlTxQb0mGgDDhZV2I9rjrBKFcJzM1LrNdCSCAFfAB8xH4CHn9Yxz+nC4KhoIngYO91CxgmxiygV/4nlS7itDvn3vca/bQ/RRMFvzsl1UruPR0We54fwa8B4uhLVqvbId9IdKjC2og3yLviWm/EK67JqFCtRkRGnA3AHbPGN86eOLvf1UsqmjUuni/gQhT2xkkpgbmlsOxi942qRpaqVY2HBQKE+p8emkI7MTzFM2MX72Y6sistve31jJDrWXuCgMcJ13dnwIsxuHXFsiXepYUG8ExXGJd2Gx7yUYFJLpiP2zNMzZqeD0jUbv2GvaLV+ZMSH9pGoxj4InsCSNINleF3na7uFrpH+1sn1b6fvRfFcRd5rBvvvjz3i9+CztDgn2Uf2uuDDslDphPNiTMAe/Hf/JWMLM1pvo4lADN8OuU2dhSclwFYEd0WY2JF5hl4MCfWLjWjbgPkYcwiz8Z/x5Mtn8x10rzGDr0LC93UiGt9yvG9fR88GhQBInsm8q46w86Qi3VjiBio0m/V222WC1q+mRNiVomjfo7/HvGVXuqZyfy4l/6a3FK3ZWWIXsVDg91M1+aA2a/WAk+oJDIGD3cQ7fy1aHyoO4eE664L5j9aVM1joNl7wY5KIJdrK82PhbrwNjx6yS8rmlrcXet5hyrhm9G8tqnwwzwFDjDFWte+IR/AFckVbK9ErfkatqnRbjj+tLzJbUJVQleCYsGYVaEyxjc+Mr204CnVmIrrWmwqvgHp6BzppHrK9ph/oq6EG7cLZ5TXgO07AOjiK2/jVEsVJRDbdIVRmbqbBQyVDURZgFl4kLhLHhU5bMDnCNaLHysBYMvR8XrRw9CVHia0aJUabNZj/j/cw32GdXcmkZJeFpwhs0n3nb6MV31B/FXma9cYh5rOOK/KPTNkaxcSORy86aa8SURcptbUPqFXAz8kdYUErAVtcJRTVa1PlKA79Wukv63HqsjwmBbcgprDb32vXjVjFJ8IdIF9gtOr0RwxAGzDow03rW7CJJJolx9AouD/pIXXtf+LJ8sHWqdt3cR29XnlYJzGHXW/lCkLvCbWZGy9URWTqgdhJW3MJlCi41V74k62nV1DcdF6BHSzMudix3/SZvcx939ahH8DGJMs6Ym9KX0fNRJdqPtqIeswfUm5V8EpsinTJXBjV3w55LwUSc0LoU3yGfghAoh6v4aXaUWUm9SXKNlGi+3JpRw9D6OhcQ32FqSZF9t2MjOAnWuJ+zfkq7AX/W9nN/eQ4xr6ANoUXkuHqZGlROcBEOw7+8Wf+finlGkFo0N5ZlcLhI2wGT7Wr4gN2LM0y/+SupQkdIN2rJ2mwvlW6CSWK+mecuFQfYRLtNfJwPqvW7BrzjSLn3JVxkfmXUAK/Qp+/E/fIB+XZzuXqJ3KcV+BLBY971nj1KE/sFGITfGSuwl9oFT7Gp5B74AKuK2TbCysIe9fN3ToTH4EZVZe8FV0edhOJUZVFkAxMR0rSIE4JaVIHflqrVM3Sq2s5OkcuCCC+zbeJIDnDzwZNGgXo4nE/H6ELyiX7ZNwY/ouVr3byfWqycJ6XSBTyCpJKS9oPKYORlqoIM0wLseLARx+BNck4/7zrv2IiegluY5Mwc+hTP4uHCA8w0fR1+0lyg/Qe1sJtj"}, {"__id__": "chunk-d14b1758deb8a3d44709401bcb40d5a5", "__created_at__": 1760489034, "content": "## Extended Keys and Hardened Derivation\n\nExtended keys are the combination of a key (private or public) and a chain code. An extended private key can derive complete branches of child private and public keys, while an extended public key can only derive child public keys. Extended keys are encoded using base58check with special version numbers that result in the prefixes \"xprv\" for private and \"xpub\" for public.\n\nA vulnerability exists in the basic HD wallet design: if a child private key and parent chain code are known, all sibling private keys can be derived. To counter this risk, HD wallets provide hardened derivation, which breaks the relationship between parent public key and child chain code.\n\nHardened derivation uses the parent private key to derive the child chain code, instead of the parent public key. This creates a \"firewall\" that prevents compromise of parent or sibling keys. Index numbers for hardened derivation range from 2^31 to 2^32-1 and are displayed with a prime symbol (e.g., 0').\n\nAs a best practice, level-1 children of master keys are always derived through hardened derivation to prevent compromise of master keys. This means an extended public key should be derived from a hardened parent rather than a normal parent.", "full_doc_id": "doc-d14b1758deb8a3d44709401bcb40d5a5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_10.md", "vector": "eJwN1ItXVGUCAHAGF3n6AFGG6Q5z79zv3vt9994ZrKRoh9iOiyWLePSYL6jQTukaugKrSGplqYG6PgofjMwwc9/fd+eORlliFJltPio3lfLRHmVzrSjXx6qVejg9fn/Ezw8p6VT3dceDzlvHrWUwbN3Qi51+uKqg2qzmxuv1XpqLCF92brEukdO6bBwNZKnTpWL8H1KptYHXE8v4MeYQKXCWocOwPmNt+y3/FfEr+GnsplWlNEOR44Jf2X3o3/pUsdoqD2BujlKx6w5TnwjBQ7JdeBuehoPgRdwnRGk6sRs6Wg8nxMdQnxs/6yscWqblUXxMnSNOVlz8OB4kHG6OGZHWc/mxzXwu95LTgPbBYXKP6iYTt69LjEWdZrMvCF7pGPDXhg8IdfZDQh2xQTP9Zy2d+xGHYoOwfse1zm9RC18FfpU+da5Z+XCqE/J+wH0dX6Is5ZdL3fp/wdvUX0D1uByOUg7Fj6BenCn8w2gyW9j8+FWou0bIJn1h2yb5pKWrTwcBGgAryXGpRM1MeuVfpHRvDwqZ1yPFoNUP1D6+O/AU2ShcGD5W89udkop0/2twHsy0p8eyEnsLT4CmxDm9zHEna+gnu0LcNZ2ynt32jicDnvI8KCux1XCGdyH8k4TgFXyRGYc67MqikbhXr0svFd8s/KTweyov/A7cY0E4jcxn0qwNe3q5bHq5+Rj9Hj0CeHGSq5U7wApPWWSPcZg/whwjN5iD8Kh2O6KDdm/Qm8QTvM/r6dZf8YfqTv0HUE5q8NaOYUX/x2fpRf5Q+Jh0kF3Ht0e/AC50LlZl/4u7qmPjlHKbuJiLwrv6Lbo9PDJ+UmgyKswqOF2fBe+K79EuMMrO5du5deJ6KWdcoxH3dSv76FZ1hrVaK1MmoH5cASFbI2jMWlLHNlhO0cHEc6iJX4NXUqnq604N2sgXCK3KoMMK+2Mz3T1KlrAoMCqRiBIrXRvSCx2fmeRpbod91piC5xtTWAp0d1az1ws+Yirkykil6MYNQq1YI6aadbvyyMfgKLkN/qnlUofVrc5j6h+MMG8Iy8lwcB/3AF8fneDZJKwEd6QNXLsxNuyCreKLOJvP5r7DKWiLPdq5y59lfMZOn1vfRB5F92KJ+kbgiWkDMI/+MVALEpGA1cYu5VuUH2AJOiedzk3jauH05GU4S2wV5mI9Xqbfiy+Hc3BSfFX6Ca8wPjcWj6wJbJFWJXJJCjt4z9TOS+IzaGdgWDxFyyLb0PPs37TH3QO2E7aYMbqnY3TXG1xb8RRShVn2ggZ8r0W+Be+ro7rS/Iu1mdktdgivtQoCa8AkK803eXRIfkJqRsWiJ7HEkdhG8Ch4O/IhfE76u5bl86AhK7Uo29lgu3BpIs16iFsUf0RuM1h8hvTERuISuMbcrywgIXuvPwNNTJbyJ9hp3NeciofTij9oBZ0FcoPyE+8HG3XT8BZR0fG2yu2lhkfqkkPMAZxOZ5MhOKtr0Dvbimh00S95zeB/Yjk8xH1pu3XTToFV4hJfPbGMgHCZnRqpsBrVd6MpTgcZIG5hkrAOl5tXN89xurZ/Em+zKGa+d5r+xxFfoBOdbr3bOuHcAq1oprDVsX0zwQe4Ea4GGf5y4YZRTcb8ftB+7Qx6kk2lszrzlFSngVEws6aaPYbT7O2ejxEmN+EZEsO99nnhBbtcLnCekmYHXYnLTL/wSL5N/JDAACrQa9CrImobjBjguHUE7if9yVrtBlMN7yjnrZ3xVeQiv5u84CxmvvM92L4I3mP3eY/G5oFMNNmMGnF8V2zgRlM5Y+83Z3nX+4J2T8yDdzsu/3YjuCuPz8MtvivGFrhQ0eEqdgNKdB0A52AZ/KxoQI/H86NLYjkoW1nLpaJMp8TeDIPw+8glchLvxfuo/Ohq5w13BDYq4/FN4wn5LX4XLRHdeJiUmFSSZZdm7tE/Ai/rv5JK6WewUC0VMuywlW1Q3AKqj56r9gZvsv3QiXXLB3c0mRn2XLvU+g2/vYvU"}, {"__id__": "chunk-ede360eda39a9d88313195332ae0c9bc", "__created_at__": 1760488835, "content": "## Deterministic Key Derivation\n\nDeterministic key derivation uses cryptographic hash functions to transform a single random seed into practically unlimited sets of seemingly random values. When the same seed is used with the same hash function, it will always produce the same set of values.\n\nFor example:\n```\n# Collect some entropy (randomness)\n$ dd if=/dev/random count=1 status=none | sha256sum\nf1cc3bc03ef51cb43ee7844460fa5049e779e7425a6349c8e89dfbb0fd97bb73  -\n\n# Set our seed to the random value\n$ seed=f1cc3bc03ef51cb43ee7844460fa5049e779e7425a6349c8e89dfbb0fd97bb73\n\n# Deterministically generate derived values\n$ for i in {0..2} ; do echo \"$seed + $i\" | sha256sum ; done\n50b18e0bd9508310b8f699bad425efdf67d668cb2462b909fdb6b9bd2437beb3  -\na965dbcd901a9e3d66af11759e64a58d0ed5c6863e901dfda43adcd5f8c744f3  -\n19580c97eb9048599f069472744e51ab2213f687d4720b0efc5bb344d624c3aa  -\n```\n\nThis approach allows a user to backup just their seed value (typically 32 bytes) rather than backing up each individual key. Even with millions of different addresses receiving bitcoins, all the user needs to back up is their seed and reference to the deterministic algorithm used.", "full_doc_id": "doc-ede360eda39a9d88313195332ae0c9bc", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_2.md", "vector": "eJwFwQ1QFFUAAODKREk0RE/guDt293b3vbe7p/Y7mZUwUknlDw1qofSvZpo/EJWopU2KFpoiInfewd7evt33dvdwsMYkIVDUwElNKCu11My8RFOrCVHKvq8NbpOcxjvjz8qV1nwfC1UCyOH44sAwJVWYS7/meoxPdCC+jnJ8TRbUhtNM5Ut8FS3cnqxf4RqFPvML/nDo1YZzlq626rOlh0gbLlQKtyb0XRv/k36GA3xu+YBdVFvBvqLsx2OlFNBH3xg1F6bhalSC9tCfwAYhKzxInw6usOlmucRGDuIU+sdmF1Od8ab6vXhUfEt4nmpgrHqHNAOcNcelTzJOKMVMeazXexCNd5KlXeFHmbxYyBrpb9AGa7/SfKOIXc8thV1MDbhGV8eKSHfNbPXO2Er0p16Ggxwb7oz5o8fZInRQSnY2kbVCmT48er4WkfPcz+JQOMQsZrv5jmwtkjAOBe8xO6LNxAbvUJ91JEJcfUIh/2/6MsTxvFhpuiIDAnVyZ/YhdYWSsi3mCAoDi5kp6ImML2OeaAl/imnhL4kv0hhfRNtgAh+Q5/BnYDn3oeTV++sWWv2QDG93QiPztZOx/+BvuEM6rmLjFBMCw2vXujvQSL2Rv4/MB6MCldle6ypmEDXGbvc6Bf4bGancU9owfrzSxD2H3iWr9FxrGdhlPNagi2XZ3ipOWgiSpPy6MtiQXMjfNNvRWmu06xa7n6TiNtE2JxnruFxOjT0Zz2QuwLtiKRr0phvL4YP4lj6T5gmbq2L4KrdjexNIVQoCFWEzskdsYJbirOyptISeo5O5ZPeQUJcnE3vFUzzacpF+kbIMpmbuFY+iqcZ1cSfe4N8slihPwxe0KqZZLzPW4Gf0Wu42LmEtgJW0UrwsLWEsJY88H/OYL4YGWcvlarSD2orgHLJUuQBsieThjoZmo7Cun0tiZom90KaTqx8238J98FMyXp+GBiqmeSOawi5g9sCCDZ/7W7lS8As4rbQGt0o/WFe480IflEhCLSMdepcRyGqCDn83vmVPxNfUaWCW8BCdDl/WDxtPwXamiZ0h5PjccEGwkU8SqRAIr94yzh/UBqJ2/Yf4AvqadoOZE7pXv8t6Hb2EN4n5oLQu3RbgTt2WP2Nb+Pf0GVwvZxsfsaXCcv5HH0IF6kvxApSGFqHPfbncOk+5HpEWOy5lNWij1Z67+XViZ2AgqrE2RefJ3RksrFSuRR8Zvc+YYvSIk+UddQNG/CPcsKZF59V3+s+B+uBQaYVCKDFGmRfFj7ge3c0JTkj4S7qg+slmfIDMjuYpE3iRyuoZfRY7Bj0d+CYcMhJOtufY0HIChH1uLHxmzlNdqAHPk3LIEZsZEXWCbId4ya2gJXZZrUxUuxXf9NYLi7QjWppdzHXSaVYZLKpdyf/DPO78bkbDD6tZ9iR0ObrKs0beyJ8Bh/jL2iSnNv1fETOjd1gmYAvD181LskBz9RatmY6OjlNLhV6lBC2GBSTMykbQM1KZL3DWV+Zcda9awX+neQwFd1tLs1pJqtIOWtQHeIlUEB0OtPaRJBGDTBLRfhFORoroM6Q3fnbYm1INmmIL6RGxamtXWg8vZCegq/40+cbax70R3ZmxxH0yPFQr5SKkO7Ktgaj7+RH+e6009DdKsXPRQmcVu8vR5RxrauAdvFv+Vr5Wp9WfhWf5wRunwwmB7WCW/TdYA973tLDnmDXVBHi0vwzdeSJ9ESynt9sMmqn9IZAtzfhJslL4TlilXYgAzzHxcXi/9JNx1QiwA/gKIWFlWxvgRHVqdJTziTNB99GLsFHvqU/AGgzrluADUj/bHzHAECUfXjRh+AH/B/htLRNWxbudKf4c9WN+tzoHR9Rm/wplbPQ2MwlfJ8A7h8Txu9DF7mYj1mtkkHzUXQz2GCfYw3StUUN3wt3GTUqyJhhi/Djcy18KjxENZz3tCn4ITtdsFOfyJ8b0+gLgGGn1rnM9Ym4ybX2Y8D/LP61m"}, {"__id__": "chunk-bd851df1079909110c7f2124838c8f3b", "__created_at__": 1760489041, "content": "## Public Child Key Derivation\n\nModern wallets use a technique called public child key derivation that allows public keys to be derived separately from their corresponding private keys. This works because of properties of elliptic curve cryptography, where adding the same value to both sides of the key generation equation keeps everything consistent:\n\nK + (123 × G) == (k + 123) × G\n\nWhere K is a public key, k is the corresponding private key, and G is the generator point of the elliptic curve.\n\nThis technique allows someone who only knows a public key to create an unlimited sequence of child public keys. The person who has the corresponding private key can then use the same sequence to create the matching private keys. This separation is powerful for security - the frontend wallet can distribute public keys without ever needing access to private keys, while a more secure hardware signing device can hold the private keys safely offline.\n\nThis arrangement is commonly used for hardware signing devices and provides a clear security boundary between the frontend wallet application (which distributes public keys) and the signing operations (which require private keys).", "full_doc_id": "doc-bd851df1079909110c7f2124838c8f3b", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_3.md", "vector": "eJwN0AtXFNcBAGAlPqq0BHQFYWF3dvbOzL0zA0GTQktE4yOoxcc58ZGeEsEGOUYS1DyKVTxHoHpQdE0IyGsf7OzMnXvvzCweFRuTmjRFjY+IJJ5QrQlSiI2GNLW15igm0fb7CV97Wnt2yZGpzrPyAzJ731WpSAtws+NjTR7hnPGO+z1uVA8ag+Ivut42d2FqTJqZkv03sh7V4gD5Hm/M+iX9Bl4MFx9e7TTDeW0tEfVgvf+GMihwTZHkGD0Kc/kv1dnOb6Xl4BHczdrVvfA7kBarkSYZIfmhmkrfRCGUA3Rqw9Z2Ro7zT+rZaANLQRdYS0K/fU4plu/J7SQRNYB98trWOvZfsJ51Zk/ypXZMhYUidLYK74sH5FV4HXvc/Jezgl5ub3XdCq/AOeKXYLvQz9I8A7T4ULLo9VSH8uhu9KKYyHroGbEIeOCPShVLY0PwV2yzmBwKkFm4DMWUVw7dFS+iBP9z5utZS8k20xHrzC8yMsxJrAllZfbwe2Ec1abHwkTV9QHQq2xXNnfcTZmrqqYRz4I7YEPGC/yHlhSebxz1CtxdsVYZoS5lWczH91JN6YBv+M6i/aGP2f5QpwV9da6U7qaQwhTSAMoNJv1b/xBfBzdjRN/kP6y+rj/OVYlusV2dzPdarXWKdJB0+K/b+wwfyENHQIG2G1xomyquck6DNmcC/I4VxDeAVVyj5kKKgSXF+YKfgDJgQrQCimwyqgFjdKO5C+W2TOm6IEUyZ3YUs+tisW9tuMncos83fybttOaaJTgIFhHKTWwv5QJKn5SqjouO2kGY6LtNnoIv023sGB3Bw8LL/Bg/zfhPaA7IhQUGNr6Ht/W3+AT5n5Ej4+utAeGap1F1lOHOz3QT3DN6uAOZa3FaKKB7fBusIulYFxNG/IdZ2Gimy4yglS+nogbrQdsg3udshZ8oAa4ovcCuD++ZccI9Fv5BXqmOt7Zo1SzPXunPZeV6jVQubCeNuILVmc2oPF1gE2AXyGtekX3C76ArtENxgXQ4GrwT24JnsAEbi6TpK+8r5J4V8a8O3c36A5bwp6Ii/llMFYyZN4US6RJ8R3iVVOCzIpEn4DXcueil4EZUZ3fHe9wbdN50izuj60mvfMzOMu5nNBOZ5Yi30/Yoxdpl2Hbor/AYWuJ9QvxhiqW6+M+kSqGoezEaka9JLvsZ7Xf6ftKLbzBR/knOUmtUnxgugZ3Z02CfvTFUDc/CaeAf6nSYm/OuK+H//6nZU7y3zDr4gv0ouBeeJO93XtV3yJvUNbQqsvfAPIPgWvySUBp9aCzl29xrUnPY0/QvxvPKNaGGntEWGXnqeOVdeVhYxALxPmFTC+OGuAX8JbjD9Rv+vlRgfSMCJ5Ht6Byhs/C34vjEp7ge9ntCmICfj+WrJTiePot+bZfDJ1pPWY1KH+Z9c+BmtjI6Dl42brBCeScqzLoB66Oy1BoMRBYSb0SVJuPi7tWSps335oFMWKZX+t+jNg5F4+i8kKh8IM1Fjeyybxsdp7nlb9Mi1qvRU02D3oHoJu2k0U9WMevQTV8j2i792nzaSPJ8TBytjPaQOV3LQh/hT4wqeRQ8a3jMKqes7SISpSusjSvkHmoBsRr5OoaDN7VRY4wtgLvIWyjT9xo4T8/o3XaR/yp7Q14H7pAWVs0lo1NWIYhb60Gq1S9fsh5TLbpOWJs9nZyWsErEfvx5R0x5m/dbpegOEmhK1kl3Pvm7iKxb9m2a1PUAXox5zI98n1qVxhTzqPNSaDPoEc9LC1sAt9yFlcVCmCbR5TQp8FVGDfZEDP1F8IF7yD5hVuCt8SWwUi+OLJF7YlPdC7U29UnhFPcj8ErHo5LrERcH/d5KPBS5r3Wyr4VS32uay/gpZUY++FyNs0E6REtJEl8rXGGz8B/BMy1lZAEW1YbM0/4Khxk/ZzPYbGcxHsZ36EExieY7tWqLsAefEcN0GZvHT0adydOU+q4jORNRGTwemSOVwunOn+yZdl/gf7U1plo="}, {"__id__": "chunk-63f1b53bb2a95394c2b6ba570834a053", "__created_at__": 1760489047, "content": "## Hierarchical Deterministic (HD) Key Generation\n\nHierarchical Deterministic (HD) wallets, defined in BIP32, are now used by virtually all modern Bitcoin wallets. They combine deterministic key generation with public child key derivation to produce a tree of keys where any key can be the parent of another sequence of child keys.\n\nThis tree structure allows for organizational meaning - different branches can represent different purposes, such as one branch for receiving payments and another for change addresses. In corporate settings, branches might represent departments, subsidiaries, or accounting categories.\n\nHD wallets are created from a single root seed (128, 256, or 512 bits). The root seed is input into the HMAC-SHA512 algorithm, producing a 512-bit hash. The left 256 bits become the master private key, and the right 256 bits become the master chain code. The master private key generates a corresponding master public key using elliptic curve multiplication. From these master keys, entire trees of child keys can be derived.\n\n![HD wallet tree](https://github.com/bitcoinbook/bitcoinbook/raw/develop/images/mbc3_0503.png)", "full_doc_id": "doc-63f1b53bb2a95394c2b6ba570834a053", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_4.md", "vector": "eJwFwQlwFFUCAFAUNwISTCjIOVcfv/v/7h5EwKigJBzRiitUhKICEpWAwOJKynDKIYZCrg2GI4bMZCYzff3u/7tnJoFIdBdI3IXoAsGglpACMSkiiwIuFhFFUeN7SQYEvzh0LCmi4e4mz0F41DlnTnN1FJX2cC/xr4NP7bNckC+MbTPy8KD1m3nfuGbuBH+ITlKnsqm8w+S4uD5Wmmimy6WTnj38N+xSczj4g5lBYdNfQJX8NJ8dnEr6manDFiqzxVdhSBgb+rm+JOBxO2FIuXdgpFTK/ZerdcoZitcmfoGlrlf4oUmCddVj9B/djeIKqQCmnHeUk/zz7BQw2/kHWKqPDu6L5vNHAEH1yQNwL49hrbHdvashdzRYGSgVVPiy9a9IOu4OL4puAYSUq2HwEleFxtMCxi93N3VZQ4Xl3GPcKXlp6t+66Euj88U/WMVY15SU5iof4LzRO9B848PGkLm16dW8KjjbvQA30ezYYhxRi9nNvkn8N9lmRi8Uwv3gs6BfGArGO49Dzjsx5ZfbpW7YKjWoD2qtfsxNCV3yz0A7yDCJj1czkrtJaeRngQGxEoygQ/hH3LtsCGS5E4wOu82arHxmLwaLnAPCAr1MGIY/wZ1KNleHthilUo20jtHcN+ybYjNdFJiWGO7LzBJ5aA7m/Qae4ev4vztFONMp9mw1KhIyHE9WmIeESjAUaf4n0EUwwGepGXuO4rp9QS49cYW0wJFRH+kFffVztVfIVf+vXJm22XQC7WSNXOeeDZ+zMtUW2s+uYrxsvdQDD4sthOiLhTZww10tMOpSWuAcOfAes0TxMFNgm/8j8U1w1NkWT8J0W+MelyfDN1nDVY122Kr0S8f2H8V3xTlkndGpPxEuemgzbeT+hivNXd4kqEMvkPXC/c5w7Y6TDivhJUuG97nNyR9EQzJRvjCQrFGvNz7k9MdH8WXof9qA1unUqKmcU3TZwxdZpDxFe+1pWkxbi5b5QrEuuCXnQ9ERVqNbsC5CPR2wRjqpFmo6zWCi9IR3ILrKc14b4pzHN8AA3KBuJdvFbhAPvOIN4nLuPLzgASAYkAVPliI8z24Ag/AXaxJ6lH6bvKX+1VqpmtxMfJPMkf9pcSiz8UHysPMf4TvrfSnDF/Zyhld8gR+ijmK6hHo0A4wVvRGU4KVMvgN9r6FQC75o1pm33RVSK2pxcpouRNNEPbiY3ek+65SIr4tfBm5KE9HB4BW9k6wyF8kLGwatHoGmZsY4bzc2A9dsJOWPW082me3a/lo/9sSceoa87yuG09VcWkTvRUrxddn2ZLq44ZnwvdzfhTvKl9CiHe5tv84/wJ7mRvPpqFpdYm2QOiO2YtB5dEPkcIIG0qQz4Ao8kwD8GnUeTtkp/6r4rUC1fcc4LeT4lyd6JRNUwnLQR4HVwxfHXbxSVsFVaRZq1i2mPZTFFKV0saGxN/p5okML+9YJWv3KSI/j57/Gmv1dTga4hk5J08QuECaZ/HP2Zfg1Koztsgv0R+AoBhjeyO7GveYSZzWYqM1TvpWeIhmB/qzH6jPoZVKMC1EMraWPmq2oRjtEjiS2p/bFMOhidzsL+enghBFC55kXhQXwbJM/cYwO+u5w78nRsR/zHzO55G1SAT9KVYM3muJmmzvXv0Qucb7ndxHWKKS3tawERWyiCm4OnqCTzR2oVvqUvMbuUeaje06VclZIi6+JX8PFCRNOMA46fnt5w3H0LN5NytivzDH7dwaQ22ZeYl6GvWaf3mnf4LfBCajbOmefy7kuZIslibdyT5EuvWfXc/j/ToW+MfUVd9s+jTeK+eY8psAJipdJkTfCvSs/qY/Kn8PHUHP8Z6stDnEcs74WNd1I4a3O/XQvDEuewGxzjFaLZzJXNR/9HZeLfXgEuWW3yrw3y+uhI7Vy6wwpdxcYs6y3CRbSyEV3HPwCTA/38e+SuJWhHZcqYmViBSgZZwuNCOMR0rKGn/SFVq6Dsv8E7dqlaQ=="}, {"__id__": "chunk-ace5338901b62e6d07a0d1b3f9b7a3c6", "__created_at__": 1760489073, "content": "## Seeds and Recovery Codes\n\nRecovery codes are human-readable representations of the seed used to derive all keys in an HD wallet. These codes are typically encoded as sequences of words rather than hexadecimal digits, making them easier to write down and verify. For example:\n\n**Hex-encoded:**\n```\n0C1E 24E5 9177 79D2 97E1 4D45 F14E 1A1A\n```\n\n**Word-encoded:**\n```\narmy van defense carry jealous true\ngarbage claim echo media make crunch\n```\n\nSeveral recovery code standards exist:\n\n1. **BIP39**: The most popular method for the past decade. Encodes random data with a checksum into 12-24 words.\n2. **Electrum v2**: Used in the Electrum wallet, includes a version number for improved reliability.\n3. **Aezeed**: Used in the LND wallet, includes two version numbers and a wallet birthday timestamp.\n4. **Muun**: A non-word code used with a PDF containing encrypted private keys.\n5. **SLIP39**: Allows a single seed to be distributed across multiple recovery codes with a configurable threshold.\n\nMost recovery code systems support optional passphrases for added security. With BIP39, Electrum v2, and SLIP39, every passphrase (including using no passphrase) produces a different valid seed. This provides plausible deniability but also risk if a passphrase is mistyped during recovery. Aezeed, by contrast, authenticates its passphrase and will return an error if an incorrect value is provided.", "full_doc_id": "doc-ace5338901b62e6d07a0d1b3f9b7a3c6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_5.md", "vector": "eJwN04tTVOUCAHAIy1IUCXfbBXbPY7/vPL5zlkVBLUAJlaJ0mkLNItBK7jVvJTSKwKhogokVimgksMvuOXse3/n2bBQh03OYHMv3ZN7bRXuoIWjKjKWhZjlZv//hd4tvQDN6H4s3SgdJwPxOKOlerM/Bt/g5XJU6FDxGT+DnuzaqS4N7gmvwOTIcme5fCy90rw/OJBW6W37RLtYzcFK82kxDF+hqupwpBvWUh3823CQuEdrk28EHs47blHTc2Ccw8H9oEl2vTIv+i+rUdsuz/Da+JZ4Ek53fmSn+us5Vdo10d/BkhBNNvd8IGR9aX8N1whrOxMk8z63l6jzX9TGmDP+F7uWOdn/vvV+8154jp7ouZf5kndKeNCvJZTCGBwSXnBApYR+jAlDDbb789gZtsa8WN8jD6olgrZQevYALxQtCH3pC9sdwZCX8FrucW/hPXM1cj3CSu+maFFrBOpUq3hHe/MDK1i8Eb7wJZOuU1eyetgXyLPiPlJM53RwWS7qdvvrAn9wsvgPTcl+ExNr434VV8KLAWpvIuIgQam/bFh5BX8bmiA7jOr0kVipfRU+oz3dfk3qshM7lxPNORaSIHIy+RTSyQ+xwJwhsaFh/ybVVy3PAqUeQ2zrCpSufw03+NLXf8gkVMMnYht8nBY5Bc2bKKm2uUmdeg7QwYHnZEqInzdIH7SZvYSgZxwEFJ0rftJcKLcwhlK2d5kqNUb7cROT9IIVeTe0Ek1AxPV1NVnVPFv6NOrSX4stUpy/DWr632vjM2CoUqWMub1o7yEPZvtmRIrOcF40cnEpXkmHrs642db46TxzVVPE0PwGuA+ciAa0D9urnhSzpNW1e9Gc86j7E61KqOBMzBknvhwGYRDqUh/VU8xlwmFSi1dDsKpfbI6uVYYNw0B4Be4RjxkNig+W165kdfDY/gteQTUzu1B9CN101vIUmK4dB2K5sz9VSyFKcCFvFLebtcH5HmtXFf619AU6/U0c3sueEAma66CFNsHrXCJLtH9kqszNyXm+EO9lKjxDsiw9aCxxl8IBndryXi0aXACFaTNtKM3ODfQH80Do1DAHxLTLH4OdAJauFhaTI/gsC9TAs8BXqr5MWqUlJ4FRR6n6D1LAZRomshlaGD9Dj+DP8kLEfroDrwTWUI9wD2sg+MZ9bl75VW6oXM0nmMjakLRLzEUemWXu1RKokUOWXo6WhZ+TngKnOkPd25ASG9DyjMXoeIbgTjPo4+yw3FC32/O5rCM4T5mcl287QkuZ6TDFlvo8dE13N7jw5EL6EC2LLW94z2vwD8CMTdpzS5ouJ/BUeeJ8368jm5BvgOfqcsF0OwtlGnnpZ+gZvFD+1l8WejkbJNmuKiNDLaIZxlP1qc685kf5VT9B3ZkTwbLJsd7+wNlYrOtKvoBYQ0nfoH9GXzPL4BFDGvgIrOmvgevWK85OuF2Nz+YfCt0mhPUj7Y+Wwx8hlRW3IdzXkMhL0cXgaWC0FpX6Ajd60p63zfD56UtxgplIUfZG9bIbUUs9+fLeVrbxu5corxCnGTatBg9ZBlGXdlfkhzBdPmY9rZWiusjG22B7/XoWmIUnos67v2s8N4laG92zQwlIjZq2w9QHzPR4Dx5WXpg7hNO3/1m9J39oDmXLkT/2adVRYgxKtFlE2bxmT8RGQGBuFvxj3yMvlDcZZ7Q2+ljvTXcr5xXJp0NwnE3lEqHW/K2zSxkfOGCmxkX9WnhUuZtwxb9BP6Zf5XGLiuNKKHgGVyojidC+gGEnjC7QRK+6+Ts/1OiwE1+/5A6TCE2YKfhMfwwkdNdRMKweO33MfjsfG06XG20IZ8snN2gmjh3+h/ar6b7Oa3qIhE/Nq5h3v9vR92Mb1/IGsRyMB8kjUGVnI7ABNeh2YojVqu8yJOB0t4AJwYcyh98SrrDv4DChkOrttatDwk51SIVWEF0lHbSa6zCMafTAV7Oa2+we6TnI51n8FpBxRKGIb/eG/ARHKlRc="}, {"__id__": "chunk-5465e1692d046953ffcba028aa7c4c1c", "__created_at__": 1760489319, "content": "## Backing Up Non-Key Data\n\nWhile keys are the most critical wallet data, modern wallets store other important information that can't be regenerated from a recovery code, such as transaction labels and metadata. When Bob creates an address to invoice Alice, he typically adds a label to identify the payment. Similarly, Alice labels her outgoing payment to Bob. These labels are stored only in their respective wallets and aren't shared on the blockchain.\n\nWithout backing up this label data, a user who restores from a recovery code will see only a list of transaction dates and amounts, making it difficult to determine what each transaction was for. This would be like having a bank statement with dates and amounts but no descriptions.\n\nSome wallets implement automatic encrypted backups of the entire wallet database, using a key derived from the seed to encrypt the data. This allows safe storage on untrusted services while maintaining the ability to recover all wallet data when needed.\n\nFor wallets supporting additional protocols like Lightning Network, backing up more than just the recovery code becomes even more critical. Lightning Network provides static channel backups but can't guarantee recovery in all scenarios.", "full_doc_id": "doc-5465e1692d046953ffcba028aa7c4c1c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_6.md", "vector": "eJwNlHtUFWUCwDNCyzIfd7Er3MfM3G9mvm9mLqSLuagHD7JrhKmAgs/KI0c307Oux8dZ1/KYepaHoScMuF7uY2buPL5vZm5YPogVxbAiTdTw0CnWx6qLGJXLmgc7UrD+/fvz9zs/BX4rlX7kT/ZLKXYN1cc+BNv0B6QaToS3vPfUQsZmlsMRcU6gJr0Gp9pDahXXrL2FNgDDvBrYKdXixf7ztuS8oYTZd9OLmNH+VHYIdTBlnlx+mHlPeiQ3SVVmFT8BXGdWCT1iX6wXbmIe7anCq4NRXoqflNr52fq/7Wnwtbqn7ZviMigk5vN3wQVOCA8rFtwEt4CwkiLmMz7hnHhFOe3N1O9kvpb4FOfC/sA5Iotl+joVOb1pzXZ98pjMNqQI/gNvyhl8juc91I/b45zHFQvpDD1Pemjc9bjgufgTYIxwloPoI+QxdqqnUIpzyOz19Wifst+gPL5UXRZuZ8vZZm51IJ2N6zzMdBwwTh5ScqHsftOXHa3mA2CN+aO4NvEjnB0sDE6ETsSLcrWfHBP2siXCFFRIVmkJagb9gB2CBLrwESHf+hP4ziiRIsISahs1nh9LZ4WqnQrYGW5ytmgJ8qzdgqZzzQjEF+CleBmeQyV1g88hxbFerxZ9Tlp+GOMm3/vwHT0llmXWHe7f16h69I70NnOQa2XLtV+eqicbtRmESZ6Qf5BrqUG2irsnPgfm+bfGJwktNYP0l3o6Pcp42fQkGmGj622+Dk3xMjDLdyFQbNwNlZuL+Aeai8uzB5SgmU16vbvALO/lWKl20oU4ld2qnJAvajtwpUc0um3Bc0arJS6+26iA/wP7vAXgFVCOm8J3tOiTv8EXqfXsDHMGzOJXoDuoS0GJYGga3g6foT5Tw+69znLOcfLFtcLCjAlSTmSxUqet8fVa/WJAHIu/Ey1rBOcFViIktZDJyc2+3A+OxUrQJ1KPtF4lHjt5xtiorHQuyQ3QCKRo1Y37vVNtOyI0LIEbYTn7L3YA7fBck+Y5x7lKcVD8u7PmHz8ZfqrL+DOYA07TvxLZfqTtAUsRi36w+tjRZju9RW3gFmRcCF2EnVSJe6mWZubB3eQ+L/t3+47B0c4Izue6tWvgHL+48vPkEbaQ3JJb6LeJ29rlKavfkDkNr4IfGB6xgxdjc2ETW0mPAm3cL+B13IlOwWeFi3q/Oir+LagK/NPcx84Upzute16yChLrMk+LtTCXvAhyfreX5YXtE0dLfuPXyE3lHXhJ/Iq5hjarpe4ziZ6IzZF4H/weUSQQ6KRztCBaHe2DLu5WQyqXPHjFl7RccgEel3mVmWMWmEfBXAGgCHTcfyAfWwAX8qX4eM15MYq+IAybyl3HGxNrrEM4plwmZdaJhMfzEP5M8rmFZId531VM/oJm0QNmkOwyZqKVzm0hlp4F1wo3anfj9dQT6qzHb6C1UqkLdLPDL0yGT1qNyQmHD4IucjlZQX2BF5lH9WKQkXSb20O/4Zv4QShHuC6dErNREW6JtOJubjO9zd+Hi3HGpBX+6Uo2uWa8a/id+ThoLpH+C/ZqZ+yTsfFWCBFtxOzgK+Aua4x2J35VHra/sTKTMdJAF7FrSY78R/aSWoKYwFUcoucqfzVvx+rp7rrxj+ubrX1mnk+02a2umeER6n54FBlSOXYSKiJF/F6nDmNcBluwxe9TXsF+eJBMhfmwPhzVhiPHhUcstL4S3gpGwU7qnvazvkIfpx1NriMF6Wn1ldYiPF/4UrntPmJXkg3xdeA/eGugyzdI5bFTgs/zjNltsN7X4U16LPkad8BV7HK6xVFJt91gpXpf0im8A1Yo1WSAXHTXKlOZA/yI4DDvG7Np/jGT9HazDY+xP0RemEbPA19bzcYS/oCwvxE/tvh8YsyUkehk81UqorTpm55Zb37PFYFsWjaGEldwrzXfugF6zC3GCvffZIJb+fH8DSsXHbK3GmfpBcqIiJUB9az0e2iBoNYJFrL79UYnTlDa/wHnbKs9"}, {"__id__": "chunk-728879dfb4f4df3ee1267180206a9c72", "__created_at__": 1760489155, "content": "## Backing Up Key Derivation Paths\n\nIn an HD wallet, there are approximately 4 billion first-level keys, with each having 4 billion possible children, and so on. When recovering from a seed, a wallet needs to know which specific paths in this vast tree were actually used.\n\nTwo approaches solve this problem:\n\n1. **Implicit Paths**: Following standardized paths defined by BIPs. For example, BIP44 defines `m/44'/0'/0'` for P2PKH scripts. Most single-signature wallets use implicit paths.\n\n2. **Explicit Paths**: Backing up the exact path information with the recovery code. This approach typically uses the Output Script Descriptors standard, which explicitly describes scripts and the keys or key paths used with them.\n\nExample descriptors:\n```\npkh(02c6…​9ee5)  # P2PKH script for the provided public key\nsh(multi(2,022f…​2a01,03ac…​ccbe))  # P2SH multisignature requiring two signatures\npkh([d34db33f/44'/0'/0']xpub6ERA…​RcEL/1/*)  # P2PKH scripts for keys at path M/1/* of the specified xpub\n```\n\nWallets designed for multiple signatures or advanced scripts increasingly use explicit paths with descriptors, while single-signature wallets typically follow standardized implicit paths.", "full_doc_id": "doc-728879dfb4f4df3ee1267180206a9c72", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_7.md", "vector": "eJwN0YtXFWUCAPDFdySBG/K6r3l88833zcxl65wwqROVipbsgq7BUctyV8HENMgIdQthhRIVUwK8wPXeec83j6uwurrmWaVsex4f66oI6lrB2dXStQ5oeWy1fv/CL5ObLIHe0x5AdxOMry48YhZ0X3bzuLD0H65Kb1U2RbeD86Kta+Znlk+vbu0Rr8Wq4HPkgr1ZWSbw3lgI7FuJefYLQmXs3yANDAXX7Z7OzdfGWbXxXrQyVCktdTYKAaaH3oV2sTORANaQLN8Z+wRaIC4x7kpXO2fR550KPAF8n+gRZkfmCjOCcyL92j8NxjkrtkivUqe6b+Pr/G5qHz5hPYiuxxNinj5EhbIWw1wXoRcDefxYs5g8oPc6B/V/+FPRZWY0xsGp/n4+SaUCXPxDrbFF0jx02KgNnBTzcyJ2TBnGg3givpd40x2Fr+524z8o/ugoLMSHo+Vty4yR7F9FjkXeUIrYdgviPq8PLX7vpXYYZLp+BD2UKLRFq80MnKds7r6de4FfxW1XGoUX6D7vmrgT5sMkvIB0q+v8Uxine23sZelNq0/43KjBU42k8Bk8HpSBMdiwqRB0/eit7HpyDXysTtBa4FazGefpa4xWWYyf4ZaaXwkT0z8DpVYKtVCajN72/g5eB7VWuTzJXKI0mHMUoiKQFuuH+8T7bSeUTbblMM7Xe87CbWY8q0Lxgm/A3/oRuhxogjVKO+SMQ3xZoM+u1b+RmgKPo3eEgbZZnX82UsEHainEZh+YnrOadexb1LMkXx+X0628YnbwjbwvVA3na5PYJ7lS+jv7Ekqxp3iF8g41PVLL+9Tn0F64gjOpKqaEYDHD+RvYiJdrUutBux+MEQokVXJk3brU1UjmcmuDb0VLmWT7MHM0mk8XYD+zSGjT6qwhKx79SQsLJXyao/JPJHqcOcxNvJNeoV33XLmJKnFfkk/yB6RxLa8xnW6V8Yz1f5uwa3kT1JqALjRmkZeppuABsAXngvfBIbxEfhab7jPch9xUabF3hy6y1svHHUc5xFnwhtVrfacuZ0qkq/wKO4z40FJoR+ZadxmZbxCvwEms37fN34UX6Zu5RXCncwqPuoPeIF0DsrImtCaTEvs49itfoiKlTiszH43vNdMlL3QDhOVWsOOX2Q52kC9M/R16Xngi+LD3NIohW9xofGWkgL+CsaEMZw+Oi/dZwBpVj+vJ4TLhAb3ADMOj2lpYLCYxt6X6DF6fBC7iYKBSbeZXOZ/oM2RgnZ/8OVyMPw03mSnBBnNIr2J5UCBDZp7+Fwhjhc6fnIsqp3LiDTbXzgAz2yrF01wHX47OuAOJ6kAvt7orCU2Dx6QBZYEyRrpKisWFToBsIL+3HrIPq1pnLl5JTvPDjGV0KeVGujJCX7LzyU14Ekxzl6Nf+5O5K+rX+kfUTfZjMs/qhFvoID4V70eZ2jruE6c+UScGWcaKJZ7KqFH3a1nkhP68l+s7aP2RXFcanSK6QHpcbOJ2k5TOn+yYkCm+CB70RGYHmA8e9V0yxmslzhbvnN7SPiN8ARwh06yFyg53Cvxergsd7RhG72vbtIPMNJRm9LhFidlGgHkaL/C2xyZHBtQbwgCcaKahqUqzS5H9INNZww2DBr4IjGR/YEbVDm8TvGhmG++am3gd0c6TKNVtIGvILXCPqMIfHD98LHzA/Y3xGPpRfofc8W0VVcbw9kn1koQqNTu6V+kYv9X8xv3IHkSr2GbnqFvPlMpftq+3d5HX2bM0HUtpruT/y26JX5Ea8HR7g50HVdjA895McwVZHdfY+/b8QCqch8kMdgMpM4/hI/Q5vd+6haL0EPMIPxjuNMeYRXQq+20MyRRpM//nfCssY57qWm/1OivJOV8OqgtQ7nT5Tvo9an+w2juipMOK+Ew7s7NcqgjMNmJeO/2KV+ONWErOalKsv0YNW/9yFrIUnme6UrIjKTthJjkAZ/G1XEN4EBSLrP0FJqEqy3UeskcjPwPTnZlh"}, {"__id__": "chunk-538fcde87c45c4ffd89978271e0574fd", "__created_at__": 1760489275, "content": "## BIP39 Recovery Codes in Detail\n\nBIP39 recovery codes represent a random number used as a seed to derive a deterministic wallet. The generation process has two main parts:\n\n**Generating a recovery code:**\n1. Create a random sequence (entropy) of 128 to 256 bits\n2. Create a checksum of the random sequence by taking the first few bits of its SHA256 hash\n3. Add the checksum to the end of the random sequence\n4. Split the result into 11-bit segments\n5. Map each 11-bit value to a word from a predefined dictionary of 2,048 words\n6. The resulting sequence of words is the recovery code\n\n**From recovery code to seed:**\n7. The recovery code from step 6 represents the entropy\n8. This entropy is put through PBKDF2 key-stretching with the salt \"mnemonic\" plus an optional passphrase\n9. PBKDF2 stretches the recovery code using 2,048 rounds of HMAC-SHA512 hashing, producing a 512-bit seed\n\nThe relationship between entropy size and recovery code length is:\n- 128 bits entropy → 12 words\n- 160 bits entropy → 15 words\n- 192 bits entropy → 18 words\n- 224 bits entropy → 21 words\n- 256 bits entropy → 24 words\n\nMost modern wallets use 128 bits of entropy for their recovery codes, which provides sufficient security for Bitcoin applications.", "full_doc_id": "doc-538fcde87c45c4ffd89978271e0574fd", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_8.md", "vector": "eJwNzotXVGUCAPCCVHQdUnnNyDBz7517v/t9994BUSBLMiOTOgn4wI49TGhTVkilzkFGUVdDKsVHchIcZgbm3rmP77v3DhoYZuULy/KBZlirddJ1Y32sehbb3bJY3e0f+J0fg34U/B/M6/pJvGYFXILQHQsZS83D4ALYbFZQlYpMh7njHVHv10ar3hMtJJOlv6G/MDb7mb0+dkScojeQyVZv/GMSFF+KpMH/qV2aFmpDVUYft5KtlGroecJY2ysUydPRDJQmhegTkXzzZCpriP4uyfG79hy3RG404uKIaC5eIPRqqbETlKxzHpdxSC9EjH8Nl28NgJykN1BmxhlS4CnXLqGWhArD6T0DLhOn1Lerf9dSO5G5EXsDt3GitoRZLfSCJMXNLWfv4nhbP2srp1yTlIPiU1kj2z4QD7qRfdm5Gg6h/f7D9nKfX5pGHJmrvF61zBvg2+FG5bbHQaWHo+w9LbcF6XlwlDUcKeq8jHND7+tb3WvcsxEN1F0BMaFjJv+uvxGmgHXRw6iZeM1TYr5nNUNRM03NXKfXyZYPcdPhY3gfSsPPZgbJVL8bLQ31u/cLb7qn4G67BySmuuxZ6jUjHadI27Qm+LS6zJOQMSS7QT1TCl8kC2GHugGkiQv1JLLcdZRtVHdg1vKxw8oNrjDYxY8Ob0RBAds7tFH4IH/T2Gkuo78wHsN/B4nwvHA/9CQc573OTco8Kv5szgUt8qfWVPUXcDnrs23BB/b5FkZrgzLMNQ47+4zng6/hagaSSvxP5abVC4yW3NZ77F5PgXCBfZkeq47l/0NOGlPVBlxrokg2eyeylz2UmiQUwRWgEg3KDrrXd3dnKiwWLoWDck9WIdMknIXvUFvwwtDp6Fu7j9OiomnfqJKusw+SWmE7UxztkRK4sV5MnoBDeD68DWrJsLDK3GGp7Lfy6+CPeIV9QcmPNGrDLsK7s+dFyrwb4sVySvsRo4GMidbx5Xi2WqMmWI9Qv+pX6U/Cce5LJhOMixZKB3BxeH7kr1wYb9MknIIPWQciE7gjuzOoE+Y+nNPpgChla3wiWqvXy7nyl0xSezlgmCvg+4dHyOMzt/OJWsXv+9qOc1w9+cjM2ZaplNEBuU3vxotFGn9HzYLrmeP22j98a0wTv3JLchHopbOdP8c4GMi6saNK6ON/YZPjt4RP0eLOEm4Pvg1PkCnuJR0vSnnidfsSvqJNAL6cYqnGuKiUCD+FzsoB0T/+fPbjeO1WB6hAVSwcdzAj2bwqH1MXq/lQZt6G1dkmGWM0jt+jpXtP8VEqOX0CQP6N+iO4zmqMlTLjpXWwXd/i+7dyBQSE18VFgNKuWotAA7/d9yAoQa1wc7jTDcRjegxB6w55iT1GtqgG6mYuire0GL8z9qbzKe2666R7gMshfbbmHPSuJINiquvP7KA6YDxHrNj30RH2v9ABrsZ3DixBiVQ/385esx7iOkwKB+wiPsOcRuWZMbRIu7g131PurguW6gsoXnL7y1CXfkCZoo6Bm6Q9Ao3vMA9BzJboI8KHQrOMm/bJyG/4efEBtEx5VJ3Z0ap+klYdLaE3sBZwWCwuhXkTq+399tw9I/EuoQLkWZz8KDvXMsC74RnR+2AGziNleAiI+F5aE3vJ95Z+VJ2uTxr3QjwAJtMrXXmkmB9Ar5kDvskkPzqoJ6BmuzihVRnpn+O/QqbiV4PJbBPbyxHJKZ7Fv4kXxE2cmLW3bbS6IrIK92u8tYD6Aq7qbMaqULO7GfzDKMAIv8L0eH7F5RO8+GvQKnVDh16AS1g8Ma4mmFAdzUrpAjVKv6XXkyotKfSMQps0LEibr4fUfPbH9NmZxfBzsC5S2uKAq2lXJJnUeU+TU2QO44696tnk/NC4i88xEWlZiLaCrYnK8HvP+ubo98ER+nFjCMfsP6E1fBffbrwSGyYzrOroC7DUd9oAzA+4wZokfAXPqO+gens9ruQspclXxfwXjcneTJ8XvyHNTJuyQNmHh7SC1v8DBW+SJA=="}, {"__id__": "chunk-643b0c8fb4ed9d8836e6df1f946e28a0", "__created_at__": 1760489304, "content": "## Private and Public Child Key Derivation\n\nHD wallets use a child key derivation (CKD) function that combines:\n- A parent private or public key\n- A chain code (256 bits)\n- An index number (32 bits)\n\nFor private child key derivation, the parent key, chain code, and index are combined and hashed with HMAC-SHA512. The resulting 512-bit hash is split in half. The right half becomes the child chain code, while the left half is added to the parent private key to produce the child private key.\n\nChild private keys are indistinguishable from random keys and can be used to make public keys and Bitcoin addresses. The child key derivation process can be repeated to create grandchildren, great-grandchildren, and so on to arbitrary depth.\n\nPublic child key derivation allows deriving child public keys directly from parent public keys without knowing the private keys. This enables useful security arrangements where a server can generate new addresses without having any private keys. The mechanism is similar to private key derivation but uses the parent public key as input.\n\nAn important consideration when using extended public keys is the \"gap limit\" - the maximum number of unused keys in a row a wallet will scan before stopping. If all keys up to the gap limit remain unused, the wallet must either refuse new requests, generate keys beyond the gap limit (risking recovery issues), or reuse previously distributed keys (compromising privacy).", "full_doc_id": "doc-643b0c8fb4ed9d8836e6df1f946e28a0", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch05-wallets/mastering-bitcoin-3rd-edition_chapter-5-wallets_9.md", "vector": "eJwFwQlYFFUAAOAAKTJ0TUFAYHfnfO/NzGpkGOoXh2h+mpYpnyJBh2hGUZpYWWGImqIVGRgge83OzJt5cwBpHplpHmmXQZaJmEdepWJqWiGG1f9/4G2RpmzUWr5nq0hZLRCIsk6b4vwIkvnleogrpv4gPyfHsr3cEHuR5sL34nxflbEFRIwOY9uwC95VdimXFb7ijDWjffdpmdpKbUlolNTLDYzUGv3wPBjPJgzPcsIwNz0Ttad1iK+D1rQK9TQ7jRSjSb4DqRbKQdVMohVEqxOKDQzHN84U6bCL2a1PlimnUlwqAdRfvokWDXoDXIXQqQNRWr7UquR6rsEudNR8HH6LcoQq7StSqmU5Gd7Tyk0mk7LwGe4wV0X9RrZSmabBPcw1yt1cgXwpPZZPJpuNZ/i2tCk842tykrUjqNx6jY31lqs75UoULcDAVK8f7G+KCo6kUrDV8K/4ormRL8XdRjrwrmkDndyPaHBjlveWCLCPOeU7CucNnYpjxfeM11pGSK9KLzBJfMhAoeddA/ED8mFKFbOwArNSLicHnEZpCIrnnkRnQbfdny5yuui2FOwkaqK1k8yF/fBtdksotp8YrAxN8hfBzb635ES0hD/Bz5Ha4Hf2BNpGGyJr0pdaJVqrupabIx8ZVsMcDRcJZXYsPGYVwi4Ttu3hp6VtCa/kdssPwAqzkM7mm9AOf2nSGrUsdWvqKicvsI+Pjr35/m1IR7rc80k9d4EarXDqqfBJLZO9ZXuME1qN9qmeQT8rD2AzpB+EQlirVTaPEy42jrHq+f1EVIK4Up/dGA0qjGY5TbsCRnIBJQ/Hiz2Bi2wBmkgXD2km5ZRJDRA2Cu/qXwemwjqjU35JnqDtlRON4XSn6gbnqNVsUqDWXAXP6v8pg61HhBmQI9ODvxpKy5eMC/YAMZDUluP6KLw+eEyp4R6TrpAGzWX+Y06WPzfLjB+8GXyhETZzyUkchybyo/FVbnvSo2yJNLepQLLwc9w0mIeKiYFnkTnGJ+ZgqgjX16Wo5dYNehx9HG4IaXo96wOl7h42WnOBKJTL36ZyyIzgBm+feE5vZ8+HboefhIusPqfJXaqN0cr5mfoQEiMmWisCX3EePMzJBbdCe8V9Xpve9GEULAYXtFloLYgTwbAy9js+pbVCWAxdwnKDCVYZ+SSon7LvROclh7Qr08MHPK8MV1CR86r1MUjiC1JOCjv5333VSp4xhsRJUfQcYxq4bDfg6+wmvZpfoXcJ+4e7zUX+yUlQCyzfs+x3/gz9mX8i79Y+S8L6Un0XuST8ATusQconSgmk0JsQwxXmUy2bat/3aN7t3vHoPADqDTVFmEvawV/OPpPRV1ueex12rHs8RPIL2kLdH/LIhXBdKMx5lAYSw/aCv8wO8JB7B+OB26wa/BPfjAucodIR6qnUM/BkpCTlVjDd227v4bMbOoPbWmtYbAwCO9hukKBnhSVtAZmu5PLp8AtUAmOgRnZF/NpZvgO0hd8hnD8tsJw+RN+vxqsRXGR96b4rziXko/54nOznDlpjwpcjDlnKfktfN2OY0UJ3aADJsdNb6xqOw2fkCrs5MoprIj8x63mROxXqMgLGCPMQ+kXPEydRMVRAp/XT5Hpimzkb7GI3k2YzOyBL1fZieKfl0bvNxcJAZ5/0oD0FZo7oIXv5evQPPG9+Q30tUVwPeZkfD18mGcFEeqGZA97GHucec0D6fWAeblXupm5YUZFl4SW2lPANu4ytAdl6lKd3vReeFgz1F/0lww2zA336KO4/8mdTVXi3KZFremfLTc8GfEluhB58Ua5SPhW3kjwmDuZDr1rNPi1cgyM9fjUUnB75nlzljjUnaAPVPmuEUc+5pUPGDD136AIyvw6wT5gbyQlmrL4Hz9T/Bon8Ju4x+w1ymJSR91oOrjsQwfgOFG9WWL3iK8xlYxXfZ6bJJWq+cDC1hU9j5vsmNIaE7SFJWMCew0Ntzl4Z+R8CHaXE"}, {"__id__": "chunk-c3979d0750fb52a77a6bdf19d207afbb", "__created_at__": 1760489319, "content": "# Bitcoin Transactions Fundamentals\n\n## Understanding Bitcoin Transactions\n\nUnlike physical cash transactions, bitcoins aren't tangible tokens that can be handed from one person to another. Instead, Bitcoin operates more like a land registry, where a database on every Bitcoin full node records who controls what bitcoins. A transaction is the data structure used to convince nodes to update this database, transferring control from one person to another without directly using their identities.\n\nWhen Alice pays Bob, she creates a transaction that tells the network to update its records to show that some of her bitcoins are now controlled by Bob. This transaction must follow specific rules and include various data fields that we'll examine in detail throughout this chapter.", "full_doc_id": "doc-c3979d0750fb52a77a6bdf19d207afbb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_1.md", "vector": "eJwNzo1zFNUBAPBS0oQQUkI0H+d97d3u231vdy8RAg2IGDNpCU1hGoEYIUA6hoCgAiWgRspgASs11ZiQhHCfe7tvd997txcCTDG1gDoU0ogTU6aKihhKU1JKHKSDOBUl9fcX/NxKV2lff5gtCh2nGAxIj0XesFY4X6kcuktDgdHod6wZHITTQpUFOfginU5Pwpnp+bGDOI8upwMou7Nd8nknWZzlojhXobfiKvAuynBeptNRJiClw3QdHDLeFWrNj7SLoW2hfyAdtSgL9MfZ+tIobA5cVkbkBvqkXS/v42yzXB3lxgL3BfPBZbyyYCNp4w6IC/QdpENt4r+Gp4Nlqf3Gw8GC0G2hEL+kTJXusOHi1VgDJqtO7koVkanqavEu/DcMGx+IWUKJ+D/SqCW1mqJjwjShTQ0E5+L/oLR+t+AZbYxLgUUgl7XpNfytjC4zH+ZENumL5b3KZryalPm3xKvQTu2z1Ofut7ULZAcYwc9pJ5KT4gSoj+4Sivif69uk37I5Qkq9Ko/Hp7B5wEU+SsXgdFSuPqowfFh3OT2yJSNxVmCFv0WS6b9IkVMHW1GZMMc1J6vP/BTvc74y18940C40j5L5zmap25svL0vt6G5OPGlPugcDgdAhkgW7WFZUUWutRNKt/5pE6On4eoKTIs5NHqTV4vXs2bAfJ8w2vN3MjXUxg9QYe+w99x8D+bFhuQ7GPGV4pRCOfpj43OoXYwUV9FHdB5dx4/Yh2OitFs/p98K7exs7F+a/xo/gb2RvD28uTk+yR4Qx30BM9xVzv7HO8YK4l+2ES40Dqa2iafyAddBBozr5Bcqkc8GJsNVxEzbF/8I9jw/zi0GrPEseeqAs+U/JDVd4M0NCUZA7H3wFVwaacBM2vF8wwf+OIyIOGjJDF8kW4rdrhIWJOmWZOJDaE/jUwYTj/yYcAh9S4nTMzOC2+wqDlcr50FN0qbbEmSs8pwdTQ923weuarlfRrp5LJmS/CuwFN/kAcaIL4SDoRe+Fl+Ji0KLkmAcKL/EH7Xc806WPwY9czFzEfsmPcufUPWKLyImfgE7wpn7dWh5e458PNuMXDj9snjX/jj6h3eEF7gYpjm6QPudbs5YGpXG1FQfZCTRhHAB+tcTsxc3Jn6GYjGLfgo30DzBPagfF+lqQgoIyAUY8e1OjSQutgsei97EtWrvACX/mH0PbS58mZ6x17H74lnwNnGL/jbVrIv8EcA4/ZIyh4VgNPM76EYz83nNK9VGDn1Fo4X3wWqBb8qptdqe3QZT1KXyD54gv3t0SXivVCv26EHnDrLIfgTloA6vXVhZ2wFMgVz0Sy0m30DFrE6iQbgW7xWx50NbEvyKXeSdntjPIVhkTqbWgkN3rqRG+JC94d1sn2QOyn06BFaDJ9LCrVq75JtkHX+EN30/he3n7+Qtms1CM70lT4J/USwhJ3eYqecgddJ4Fh6QHPfOcDCFtLqFnqEtxp6qdlPCq9f0Y/kKuVzLhhHwrPW6e1QThJmwWso2nHDOmJrbymlZLLpDr1i5+RsxlR+BRHEmct6fay/nrnRP6aXEIVNnAXy5cTF6hs/2b0+MsT+/wbjPKrSeU1zxb5WnREmyDSrGELCw+JvXhqzCB+8UfWnV2NlkGS+NvBUNAsoeNtrwJcYP1vnIy/ThRrLPSTfYldybJQQCH6BrkhjODLvNyx6uqB9XZmaUblVMB5juSfJ4tCc4y7qQbnNfZFa7VeTG6Qc6Q9ou1iRet37F5GnDdEPqkCt8VbhGcj3Zbt8kR33fQRMftH8cHhZUJI1hDdLLONtkMQzVG+UlfdmBruJ60qyvwbTrX+7IQs3LoORhHs2gjKeltJGVmMxqIr4nc4A3LJuXCCLrm30JT9KE+Lwv3vk3/mPVNcmf0qH6Cboo51CNX4rt0k3PHjpMeWMR8wpDdwH5iY4nBUU+Bq5MQfU3R1/4+ScadSrP8tLguYIqnoVuIkCynxDmr/x/0aJmN"}, {"__id__": "chunk-ea2d40edc51a7019775d19909b5626d1", "__created_at__": 1760489330, "content": "## Witness Structure Serialization\n\nUnlike inputs and outputs fields, the witness structure doesn't start with an explicit count of witness stacks. Instead, this is implied by the inputs field—there's one witness stack for every input.\n\nEach witness stack begins with a count of the number of witness items it contains. These items are then serialized as length-prefixed data elements. Legacy inputs don't contain any witness items, so their witness stack consists of just a count of zero (0x00).\n\nThe witness structure allows Bitcoin to separate authorization data (who can spend) from authentication data (proof of authorization), solving the circular dependency and malleability problems without breaking backward compatibility.", "full_doc_id": "doc-ea2d40edc51a7019775d19909b5626d1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_10.md", "vector": "eJwFwQ1wFNUBAGCBMon8GMMluST3t7u3b/e9vb2gBWpjIRpSJRUaRUhakFjHpAJWbCRMgGAcCgFGmQwECAmX27vb2923773dBCKNgoiCYGynM3ohwbHFHzpphAw/opEKhKH9Po+yXTnSF+p11KQbQOujR9MXaKNzWTDhAlsv9ONhMYHD0tviRvIi+YdTXiCrbcIrnV5jCx3wX1EajSG029pqbCWDRfuC+8yujrVCuTpO/OYKcSG8oz4PiXqJVYrTzNvi79Rd0TpVZfPQBqCxCZVHVrIPbVEibTHcGU0Y060js07DusQVqzXoAVlGDm4hlfAmKKFDEVvchL5K3qKfxLPpg+oJsQ7nIT+85CyHOdY1ZRup0OawYZoJpaz1XNq8SpoDKpjgPe7cUK0B4FdaNl5Tss2OkWZ0N/E8+y15E83BOeAoPcc/K85zf+k7daDf/FSsl9fK99kjeDHXIAhme7jcbLSfRu0MwGU0wIdSqrQUCcYa8Vdxg1bAOXQ+n6tehPfAKtIkL3E0x2dmRSakD+SMU5py9EEBRC74N/H9zNuVofHsOjYbLkYL5HeMEum4XhEWXcqvFut78/H7ThmNy49Yl5UBtwFfjg9YZXIVy1Z1s2+3j27eI6kDhUttnH7JfDB5n5im1cWP6v3gSVaszAPrvTvCO5080yQZq9m1iRcvsFeGWHiDeFLOUVqsGttbPGEtJy+nA8ZBPZec969X73dvdm4S2rlUai6ZH8vsjUPl0DEFOWJkkf4bOsSeOmSZNnjYelU/plQIW+VRWJw6rE9KvUFPKX00qd2if7X+XfRH9D2/z/7ceFhugu8W5pAahefWCvHI96ImFrjSzoURD5ylbTRfoTe1yTifLxSXE6foO3Y9OESmoDHwnPojuWIvO/C33GZ4hVXLLcpwviqXsWf0rZHFwkY4F6+kvtyj7Gc2CfdG1iitwtcycoaLs8QG1hicHhm1ysxXxar4B93/DYe4KdZL4TC/u6MHrRZL1D14KpbFGWi271+RJmMJbjdlcFr4HLQaWxwu8bgVU2+gHzDme2JNaLZ5I1YMXsML4bOUJc+aA8EzYg3dwU3iCtBnch7hSK8waNSH66OyfTytqbXOjfCqyHRyFX8WyEiPqe8Ge5TXrbtoY0QT/7erFM5C/wx7kK+jyR1GR9CoctquYhNalvSydC9xTS1AGfZR903mU1eXjAv3s1x6F/V7q3VFOmZMiv6C/RScrlVGTqFfm9PUNjcbLoVquhmHSC5sVe/SMvMWVxvPiWOc4Dvl6/ojkdJQBWKkm34RbpGe5H80upLR9HzYoXwjVYAakkemgFF+EBTBR+F7MJ586MBV6Tb5EOywGvabVKUzxEr6hGcV35k41J1n72ejhWese+ZJ+ph3nbvQv8xOuDthecEYnCbls/PmU/4hoOszpeG87yBI5AOPlJE/hsB1xGL9U/tkz+HgBnAtf3/xnxQeZ6xWc4VVxboD+dFKhUhfgOPJMnzCfMBaAvrU7c6uVIE1aPaCLPFbWt71ob0jcUc8DDcrQa42+bp7lF1KTC08zRpmIpFjAesYnBIsZYvwbTo1mSwYkEacMW4mZLg29qV3rT1DcfctI99aOcpy2i9PPvAR3u5bZ0x2qwNteSOdc+H5mHTwP/KLXLxnXfRWzxB7htwGdXuV8J/JPZmLCt1jb43IpfCcfVEeV+vhQ+b70bMqtT1wpLuKcijAlrAfyOMpJ5TaU+UsEJKpSm2PdsGKWRPQ0TLcN3TY12zuhH9Reqw38R3rLLroe8EckDqtvcIKOoZPOeP8750S6bn0a9LbaFunba8klerPwdOwVFwBs/gJcj1R5y+zTxrV+EvPO2QctchTuQidwCGjy98OT+iCey6nhGsNLeKlrj9oRfJIajtf7WpKmtSCedYZraZnG+HYBhAm4OAD8UbyNbkj/z08lOIQdTbj4YJ13rNyrtgG3oheDRyJPCH/BJG/wzlEiB7S/w8hFp/m"}, {"__id__": "chunk-095becd31a45a3997a385b91a020a735", "__created_at__": 1760489557, "content": "## Lock Time and Special Transactions\n\n### Lock Time\n\nThe final field in a serialized transaction is its lock time. This field restricts when a transaction can be included in the blockchain:\n\n- A lock time of 0 means the transaction is eligible for inclusion in any block.\n- A lock time between 1 and 499,999,999 is interpreted as a block height, meaning the transaction can only be included in that block or later.\n- A lock time of 500,000,000 or higher is interpreted as epoch time, meaning the transaction can only be included when the block's median time past (MTP) is greater than this value.\n\n### Coinbase Transactions\n\nThe first transaction in each block is a special \"coinbase transaction\" that:\n- Has only one input with a null txid and maximal output index\n- Contains a \"coinbase\" field instead of an input script (2-100 bytes)\n- Must not exceed the sum of transaction fees plus the block subsidy in its outputs\n- May include a commitment to all transactions in the block (since the segwit soft fork)\n\nOutputs from coinbase transactions can't be spent until they've received 100 confirmations (the \"maturity rule\").", "full_doc_id": "doc-095becd31a45a3997a385b91a020a735", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_11.md", "vector": "eJwFwQlUFGUAAGBTKymO5Ypzdnd2/pn5/5lZ1EhLQ0XDLgWjXkV2vCyTFMl8GsLzoDI0AUEwjgV2d65/Zv6ZWURNw7LDrORZ9oJKXxqZPS1Kw5dmWpn2fakof9K2nafIEjHJniH2e78GLdqAmyNG6RxjHvclcW85iZ1ARChkCu0Ec5HWInydGhUO9Mxw8gENE7XD0ce9N9lpbpn0dPQBP21+IhZJ1ex8oxFmcfvzlqpdKM8d5QroZLqKPYvGo+UeAS6jbiGfT9S0hsBsKU5M1zJwGX8vajZZtFzXMKTK4Bh4Sub1/awEZqhP0fuEOvksquMmuGut9jHH857XywnMrEK/2J3SnXAm5PGg/2/zfeNPplhZt20KmGKkMM16W/hj9w22lmClAG+mgNSqrc99BA6RG+lx1Fg00VDRt5aRwTDQPWkeYFGoFz7ovz34e6RAllU1sD7zh9BO863cQg24sR6fsp6sCSRRnDii7xV6/MPaRdhhdLLvSUdgW6jZ7RDi3bPuifAw3AH/CHxqD3FzzN1gAX+CRmyB9R97h7Wq54h9gW2Bqfo6axhdcFaoW3BL5GCgyKk1A3ajNhmx3u7O4/adpB4sdxB34PUm9II2VjqdFY4/Kk7Tltgd2tyOGi2Jw/K7dCu3F0X0jeom2ctd0ouNE5HBaCOb6RLSYmQrC7X7gMRW8UuQD+73FwYrjQH8GFmF28JHyIz4ShhTUMrH8LncUuQY08NNOem42vpMuEZvR83kXwXZt7oe/2KrX2uSza4SemrwBu8l/2i6Rh509vgfIDusKdo9/CiZK21Vh0Ir6CuqBSVhC3UoXB6YJb4v5tGFvuuRoNAKaVQcpJTXdcQ+Gwr5crWNegJ/zm6IxGJPoe1cMhrgtpIhugT34xpchV5BHZbENBE+s5dvZQfRa05arAm2CrY2mrM0e1beE+bRqIe4Sju+6uy29oDnuTKjWT+Pk9VabgCOsnvf7NOyc2zOlR3IdueHy9BsJOiHuSQ1ARTQ1WwGOwiKnYtuW2gX/5DggQ3EDq/gUoRK4zJo1LfkTMlJULvZRqXQWw+x/yoaAhU+D92ozHO/MMcb08KPiK8YI6RJSpZj4Cq3wirGGtNBVebdq4/jjrnf8QuQRMd0BzLsrp67onNAl3sQeZAaeFGdiVOMzXxJ5nf+h6V3hM0uiW/G/XxlMEcqNi15M4hDC2GYj1cOiVm9HVk1PAWfBEXeQbTBscAccHuoAQ6GJ+mc1EcySQV3t5qYdT/bQo9mnOOeAT+yP0XHGKW5ovI9PwkOk6/oNvwr0yc8IbZms1a12WW53LD/DeUA6hYrqOLkVHDNWYn3kZNOrXWaHKKP64ncOv4amZy72k63X1ZfIKvRh14OrzRzrQX6GeKRQmY6u665rvsyTmMXRFZb5fxL0VL+sjfm/0if5XO9m8gyoACSvTv2Kz1CFsplZj0fd1s3+cPfS0bVsdk90gZ0jFfgB+5nTHZ7AYj4xui3UWWmB4+n1mS+Y81rPkrye1YRIEcDpWgNKDd22F/YI/pC8w7MqGv5xTiBpehO8psznTzq1JjfUJOERc4FigvG7LfoCPswcOEmkpB2DC8Hz2Uo0hnlh+hh+UPjULQW7LRq/cNyir2G9KnzwQTfMJhpp+F6W+Y/cnVxbdZfnZS4Pzeovc3NB9NICZ8U3Ctpzj15F8UR7/nuCF1KpvPn3F8cm0zFLQ1D5NnWamEuV6Sd11r0xJjA3s8URbYxJe13pR8ENfBNY7I92foZ1lt7TBGUREuoCpyvXMflzFyrSzmGi+GlpImwQttg97G7SBFK5T3oUTyAV3If8Butqfzb4ZfAFet3eh/ye3t9iU4c3hM4w87uSjev2AH8j1XHLXNs9Jj+t0ZsWz8h+I2lsMrqU7b2xkW6nG7Ub9cz+VY7/t5ihMXse9YImI3POwc7r0cK0M3yrUDMW8RUw7qM7fBFcLR9tfWM/KrxPygEm8A="}, {"__id__": "chunk-bea718c5979ead2be75d5a6566c3553f", "__created_at__": 1760489346, "content": "## Transaction Weight and Measurement\n\nEach Bitcoin block is limited in the amount of transaction data it can contain. The modern unit of measurement is \"weight,\" with an alternative measurement called \"vbytes\" (where four units of weight equal one vbyte).\n\nBlocks are limited to 4 million weight units. To calculate a transaction's weight, each serialized field's size in bytes is multiplied by a factor and then summed. These factors were chosen to reduce the weight used when spending a UTXO, discouraging the creation of uneconomical outputs:\n\n- Most transaction fields (version, inputs count, outpoint, etc.): factor of 4\n- Witness-related fields (marker, flag, witness count, witness items): factor of 1\n\nFor a complete transaction like our example, we can calculate:\n- Version (4 bytes × factor 4) = 16 weight\n- Marker & Flag (2 bytes × factor 1) = 2 weight\n- Inputs fields = 168 weight\n- Outputs fields = 300 weight\n- Witness fields = 67 weight\n- Lock time (4 bytes × factor 4) = 16 weight\n- Total weight = 569\n\nThis weight system prioritizes efficient usage of the blockchain while maintaining backward compatibility with legacy transaction formats.", "full_doc_id": "doc-bea718c5979ead2be75d5a6566c3553f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_12.md", "vector": "eJwN0ItTFGUAAPAUX6hlKcjjjuN27/t2v2/3DjVNFEzmFBkpK4YeKqOOiQUKaWm+RnIoJS1FTXndHXe3t49vv29vz0eKWeYrEzWmh2VF9NCaQqh0LKfMIqnfn/AbKOPxqw++YX/g67SIdBU9bNXp/riB/8UPkC58yUxuddvjxDHyWXWSnhQvYQkUAJUmcm6MF8J9wmD2oXGQLo1LZIQUAKv5Pp0TVgC3NfT1BmGx/Mu4WrVSXELK6SRtMzjqJd4UlGY0wSNZieg6X55A2G3R5WsjJZGBcpr6p8FwVyzLaQ94qLWgaY1SR0TH03A2/45+Qdrv3ouROtmuArfSs3OmpR8ho+RTErPP4IFgGp/MHiTDg+XhXG066UE+5FSaudLQ1OjZRFdje0oprCYFWlVOwuGMD4E9tM7aCucJa4ODPDn2MG1mWoM9SqvfXUzdpBO5vPWGP1IdelXdDNN4hbXC6ZFE3Hw1Sn/NOBcO8xPxPtogfOJk9CucQz8XDolV4izRT2fBVt2y70EeeaG0Q81PLNFhzCP8AUudh3Fm9kJ0W2/jZ1nEexr8rL5Gsr03rGZ1auu8QIS7bo5Qd1lVbIn38dZUNMpeRbPUh1my88Wmb/FIdkb6mfSHVyI9MtO6j7s/5XNXt2dIKMG3wBO8FnlG/IDbj0vpe6SeW0P6jSmsyShO30FqWwxQBDajIuwHd1CT1EWyjWWsxnhXvcV+95RIv1sOdw0O6hfhMPFC4PbrMj8dtHhmm9ckPxlPXYlC+4b5gscJ/cLSwHG4RTiFAftJPKc/ZQwVxxsnlFfi9fCI0+kt5oeQav66uh524SPBEm1C4xjfG767Mp/nCuPdoFR6Ea8VV5sXlJdChcpKzxIqmcey37ISqXP3va3c8Sb5WpTv40keniZxz5jTPO1iPuuU+sjx6LzsY8JwdNP4zO6Ht4TWxg7xY2mbuN7oATPiwyKz9fPWJ/pRMU8tdwSyevVtrhB+C/gcec1QmRM5J+Q6Fkk/0ntjFeA6nt5yWDusnTJL7PJIFSDC+9Hj1nl9sfqKFJXOx+5HF8iT6g/WOrPHmMX9ALfSc44B/19tEtakXpaiwYRrhJwb22Dv9Ww09xgV3jJylNbKKyDhLqFVZIs1TRkMn/DaHiDXMUHqQUGj3lweugzaQTM8BBawBegBFMZ3y1Vpe+Fv+BjcIZR6x+AZbEq83wzAIb5O8TLbSG7i09wfmVvQ1T1XpBukDY12deMDGVWg3fuOdcVdZ1awqWhOy1au0rfdriFLwUfRkxnXwMoYgTPcY8AGWNG6KKWMJlO/t8f5klkeXZZlQkG+B9xUJ7DBRl/sFi+h9LEOVOndHR3eQoRJdLuebb8fmhmstT4Sf4w9pBH3IKtTetmdTNfDqfpavXtnvh6kuUE3+9XuQh69SR4Z0p0NkVTzDjcy9ht6DPSiTq4OLdOW44mybP/Lu4wyDdhnAKdPhF9ac6RH6Gi7MjOfZerfugrQfAyEnXj+vpOpaVpNuo0bOdsoj+wwDwrbQW1oEJ3Aqo2s6FJnUixD6IxMMSaZz1qnY7X0M82bscndzjaZZ92j2YZ4prXIfjY9xG+TY4kyQfFdJCu41TqzKtBfO68abuc36DvjNfnmbg8hOiKq1Qu62EjxPeHryHI9V1kFzhhMmkuj4avx2biCHEPl4TKxVFLMJwnKuqZQc6/wt0/DbeYuX4GvEhfpL2RuIia6m0atHLOP5Zt50X7uU/Gb/4+S0kabk+1LaLLrDq1NzfEcUPL4Br7CqKZM6xCKmgekpO+ZpyRIm9oBGmLNu67oYa7QOKD0oZOQMzXDlFOpIIhCh/hoFtOKuXvxF+yk6g/9Ex7HDgjjQAAejT1uL2S3XVtERamJ38WGGhPsv7CP3eAXBDQjQNOsN0XL/FOWhH8c/v0d0efYdRS0/gZPNB7WEzRTXif2MhXN13u1KdzOeDfygXWeWomNLZAuRoqksfC4VcxayMyx/wFUwqXT"}, {"__id__": "chunk-37345c1af938a9114091c967f18c7831", "__created_at__": 1760489532, "content": "## Transaction Serialization Format\n\nA serialized Bitcoin transaction is a structured binary format used to transmit transaction data across the Bitcoin network. Here's an example of Alice's serialized transaction in hexadecimal:\n\n```\n01000000000101eb3ae38f27191aa5f3850dc9cad00492b88b72404f9da13569\n8679268041c54a0100000000ffffffff02204e0000000000002251203b41daba\n4c9ace578369740f15e5ec880c28279ee7f51b07dca69c7061e07068f8240100\n000000001600147752c165ea7be772b2c0acb7f4d6047ae6f4768e0141cf5efe\n2d8ef13ed0af21d4f4cb82422d6252d70324f6f4576b727b7d918e521c00b51b\ne739df2f899c49dc267c0ad280aca6dab0d2fa2b42a45182fc83e81713010000\n0000\n```\n\nThis format is special because it's used to make commitments to transactions and relay them across Bitcoin's P2P network. While programs could use different formats internally, Bitcoin Core's format is reasonably compact and simple to parse, so many other Bitcoin programs use it.\n\nThe only other widely used transaction serialization format is the partially signed bitcoin transaction (PSBT) format documented in BIPs 174 and 370. PSBT allows an untrusted program to produce a transaction template that can be verified and updated by trusted programs with the necessary private keys.", "full_doc_id": "doc-37345c1af938a9114091c967f18c7831", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_2.md", "vector": "eJwN0ItTVOUCAPDkoQYJrvJcWPacs+fxfWe/1XzW7YlWZKEVEmEaQiaTkwpSJsLcnDBNRyMZAlrW3cPu2e985zvnLIRWGM5grylJHAu1YCoHb3ChunPJCuquunH7E36/F2Dyop7uSKcmK113SDbRQWd3jlgFnmmo00ZnA50ImqHQ2yw6gr+mW82nIrvQOq0On/Utsq6Kc9ESYst7JpxCKzpXSCu1SVwIkqAGskgMh2U7G/UMBupgt7G9/bmONvY6vN1TIDdhAfUSL+73pMolHaPyCHoEJ+tRd5FzihaialfMsZxbw+91tDi2mEXcKvSqOktbAFH7bLDDdoZM+WSc4kFZO8lm6YD8s3mesXPT4oC+W++zPsZT8lD6Z3whWEIXC2HpKptMLoLDSmreGgfmVqNSkhGaAZ9o6fSTvCTAc9+LMZrQ2itAa18owL+TfURayefIhfo1I4m5JbOIq/DdZ87ybZHYyGP8JtKiOsIcXyk9pU7ATJyJD4Bic5kURf+WfPqUMQYbrNetHdCGBkCaPZ8eYBv0+8Ub8hkpIW0gEOUyzEFykeyB28Ej+nySDd6n/8rsMSo67uLire3GUvOIdUSOMZuZEuuMajd20RMdS9lpoZzGg7VmKT/bnRp81dqQW+mf0EvYAjNHmS/GxHupyo0oMfGO3NHAG8en6Y5AiZWi17aOk0PESw7zR+ULzBow7Lrivqlv0V5WtyoD2pj5muMg+II8o1fKXjYAdpFP2+pDHsdV7ADX8UnpnLm/eV+kHkOQbu8XvmQHxR9DFS290g/6r3IFWWA+4L6EQ/o6jMh4+BSoC82D2Wox8IIYa6Sea57y9vDN8gegTnhcU5hr8ofyejDJrNDmZrcJ3WkG/o7225ZYHtATqeDfQXv5J8BN5ah9tuESXtR/l4B8jc6Cg8bytF71LOsFL1nTRhAItIX90LWKX+GuCnv5VmPImUCn9Xn0YZgkIONHLUuq0Sq1jrwlHT41TnwxvU8sZDLQTwv1gIsfgTu1e7lxBuobGVbs4b8FJ/BkZJXG5TZ4qoTV9H/BS3ycdCNUS4ccQ+qfztus9a1s+A/FKzQaO+UsOA7iQKP1R+cJNpHsCWqgj+Ybz3sS/I2uCVSGN4WvKMf4TaiGPcWWkcVgBk76Zea6VMw3gFvBNoGJFAu/S2WgXzhnRGm3OCaSrO3y0yjVCvxtPg9tiwrQpNlGVXExUHOLhO9dVegCXZjnIavRl0AkGz0brbdFD3NMuwmM0LTUhnzWBjIMFNdHGQ/KJ7CPHdbOypvTOnF1+Ch1msNyN5hr9qZN2xvAP2E2GoFvGvsoDtyaVyb1C98KC9E4jmNuBxe0UzjFmDFTVN6KU/5j3OlETKIxAcf8L9Akvp3mdcyhpY4HjV9wo1JgOtDD9JA45sK4Fk8ed/GcMQBF5z3ukP+S/Rh9A94l1Heedked/ZTtGuXL6HOKk+S7D5ofE1GN4lElKdAMb8iJ8q9iLHJS6PRHhRDYzVYTk+4P7c68qJ4SEnIrI/EhDy73D4biPF9pmY5Wmkgvswwp195lX2ElPTOwTfomaLNu4qmuCZUD8dxKCskMtI7Hg2ElkjMD8m28cVZbK9Xir9wfaI8K18Jrj7P0a7aIzAvvZ/YH13n72nOz3tUn0fnOInOl2QyetGwiP2cD8KNFWpVouN7jvgsudb2OfoCD5DTKhNvCsryP3xOpd63H/ZGfzalQrX0+/S8dddcINbmHgyfNauOyUOKqAUOKLN7tKxabpBz6DdWZv4QH8n4Ls8Ih/Gx6Ex6kpcSeETWztSb/MviY+D5tan/I6vLU659zsZbLUOW5SI+ULC0z+sxeupWOtiTDV3grQLk+a4jude2VlmYfoikdqdppfdZbiHQJWd7l4Ut8onEF5Jur3f8Ij+I5kThdJPPEAYOot/jSyaixI5jRXEX//rZKaDlf56xmioIKCso56iS/jW0WS5lxK2CUGwvs/wfY8qPi"}, {"__id__": "chunk-8e8e69a78d8f7a4d83a937b8fb16efea", "__created_at__": 1760489538, "content": "## Transaction Version\n\nThe first four bytes of a serialized Bitcoin transaction represent its version. The original transaction version was version 1 (0x01000000), which established the basic rules all Bitcoin transactions must follow.\n\nVersion 2 transactions were introduced with the BIP68 soft fork. This version adds additional constraints on the sequence field, but only for version 2 or higher transactions. Version 1 transactions remain unaffected by these new rules. BIP112, which was part of the same soft fork as BIP68, upgraded the OP_CHECKSEQUENCEVERIFY opcode to fail if used in a transaction with a version less than 2.\n\nVersion numbers are important for protecting presigned transactions. When someone signs a transaction without broadcasting it immediately (as happens in protocols like Lightning Network), they rely on that transaction being valid when it's eventually broadcast. By only applying new constraints to newer version numbers, Bitcoin upgrades can avoid invalidating these presigned transactions. Anyone creating presigned transactions should ensure they don't use features reserved for future upgrades.", "full_doc_id": "doc-8e8e69a78d8f7a4d83a937b8fb16efea", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_3.md", "vector": "eJwN0Y1XFVUCAHA0FNRcKUXeW94MM2/uzNy58x6s+zDMY2a2YUc4VkppbGm4m64fYHlsXTXCVDBblCzQwidvvu+9MwMKmLFmumG0tmZb6J5C1MpMcWUXTQHxVLa/f+F3HB1AweYZtD3qefvlKFImXLfLfSZyVZz0qylwHxkWRtZK4HM4Y64Rckd4uyPfmP32ARv7sbf6IkFcLN3Q/0d+53+p/oUUWgJ3jyQpicBVugCeEjtycsOrFde9Jh+WXgR96vXIp2oqbUWXaDohqBlhPorGKdn4La8exZjLzm6YwXGBPjAo3LZV6wqdmVkmL8LVYqvyW+f+qDbqInbh4J6SnC4uFUvij7zsvcq1BBYpPWTA+BzzpFDOYa9JvTASvheu1dYlJKdfXM8PCGWgVM6LnoaG5in/xlv8oNiCAiB/11h/jdWhGN6D9mPyBPYLKS7OVlfzH1pbQYjGlCt2uz1N/hz9vrFYdo2S+hqJYy12vN2p1Fq7nCFYYZ6WP0U6KOJR43ThItnssbAITpI7pMN0CbMh/i8uGb4MsuvOkzI0J17h5boMvx/d59Tr34L1blVdmztknuNK/Ry6gfa7oyKd9gSJp08aj6YXO0VMuzUR1bpDMB2/mT5ffgw/b1WSAqbDmx++pQ9nY2I+M9oxxJX2dPjfd1KwYja6+eZB8rF31lnvXNj1n+DahheV4bIMF+15OEK1Qxzr/FSn2zvIbBaic4lmsh22vHYqfGT3KK6CSRavZ24DmtUEW/2/S29jlQCcDsrFn5UOYRKZFe6H3dYdVowvcfcplfQzd45tysliETyxt9y45PTGo/LlUIXTol8OD4NtiAH5ZogcQjfQPH4p+kG8YT8OX+faJUrKtUug1T8vn/bHqAWwC21XNhouPmx+I77kvBR5gMmztkU7SZZdnugHjShA19GS+roA3rMAlqAz2SnsNKmbWux93oP+bf4YmAueyXohi+HStw029AcvN5SBPyc4LgPdyeyRajJHgwE4FV1wY2LFuCXOdpK8c59VJb2uJ/muuZAfqbahL92PxVbuGamGfDJ6k8NYK4VWCdRWyqvcatjP5Cs8mM+uEqv9ysZWbifuqh8j3sabyPDIzoTOnZLbna2ktz5VDEZle7PxEc0VTwZz96awEWGavB/Ok0D4Az9J+ALmo0pjhufYmdLfuE3mNeV8JEwxXe8kSzuis5RuN2gfkmfzIT4h8/APaiapkhY4Y2RTbIg3RJbRR4TJrBKskv76TpIoRQ33GukWC4x305bDq9teDX6XkgZPaout7+oDdIadK8YUFWeHLti9yhq0GX0l3e1P9cKJOTALZcOv5Vz117WpYLxSpS+1elyOzMSOe8X8GueBEepN9y64ypqN9znLtah1F0ijz9oLzJqMAToO9lqvSan8yXs+ik/UU9HT9F5pY/hYJIlfC7Zow2RvYqaXwhfKb3pzm4rUf5IyJ4MuUzn7gKs7BaQmsQE8IByLpAk/KgubgBCzmoU76E/4CdBCHtVmCheN9/Bu/Ql6xWn2lcDNuiPqZ/oGa0CfS0rFb5mQHmPWiMe1auEIKsV3e7fsvY0VtUcDZyTkTDA74VTyvloZXu18CGMNJeSkFQJvkC7VYZ8zJjljjUUkB3xvNYWfbwgEnqQfNLwtLrNnqhsbl3oH6W+EqNvHz3HPgoLIz/gMOlT3UGihxf5/czL8xBoRNSKTs6Zr73FfuUFmOV3sx+2x+Ps9/6AbJ65V8sE88WFjss15Q5ldOs/kaSExTVis3IRTam/pZfH7pRXQjPtp3UaSuc55hfA4bvR4g9pU/TljhWDrQw6DDyCa2MENasXyUtxDxstt8hT3BM2m56wX7BoY06qM4yjk6/SgcgPWcrP8anyCHndlqdg9HSo1mqwKXEb74EJyFrLaH62nGkd6V91g+Ki1WnnX2mqtsAvhSDhMKxfHuYW0E/SbUfk8mA7fUI+KnpJnbIkyoTb3Zb+ONFu/AOfPnq0="}, {"__id__": "chunk-9415060d311f99f8bcdfb06e0e5608c6", "__created_at__": 1760489557, "content": "## Extended Marker and Flag\n\nThe next two fields after the version were added as part of the segregated witness (segwit) soft fork. These fields use the extended serialization format defined in BIP144.\n\nFor transactions that include a witness structure, the marker must be zero (0x00) and the flag must be non-zero. Currently, the flag should always be one (0x01), with alternative values reserved for future protocol upgrades.\n\nIf a transaction doesn't need a witness stack, the marker and flag must not be present. This maintains compatibility with the original legacy serialization format. In legacy serialization, the marker byte would have been interpreted as the number of inputs (zero), which is invalid since a transaction can't have zero inputs. This signals to modern programs that extended serialization is being used.", "full_doc_id": "doc-9415060d311f99f8bcdfb06e0e5608c6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_4.md", "vector": "eJwFwQlUFGUAAOCepeZDFHB3YdmFnZmd+eefYwENlUArMw8ylVIjn2Ie4f1KPFLxUSgeIZlgRqCzuzOz/8z8MzuDCaGR2Msr0/I9I7I0Le/UyiIPzFfU962Hy/j+zTlNs8WF6BKbklWKqsyo+TZzn/MwJ90T41X1b2NFDgUdMIHZpn+M72UlylcJSm6KuyUmVJn6VmwhTmegyWtp8hTzCy5R0DmbLTf2ScVccfZYLs6vwLlyL/w6wdbfD33Ep8W/Em5EB9AruOe4BKM88DvXRUuWCYrCQfMq7aIlVZS6tVXcRTMP94qcg58po7EDs5g1sLe3Wa+Gp62nxDD5Cxos3W54EJ/JjyAawDd4lGuJnI/m+Ssj71P7pCXBT+ltTAKabZMZFeq0SEbmE0murIc4wUqAMnvHugcTQpvlJs7ArZEloJ9zQF9ADdcGkqvc84Fb/Vd7DJZnvLa7AHyn30QXQEs8mT8Uv5xaOrCHLg+m6D1CUF2Ms8V8PDKQLe7hT9d50ftwJHabB1P3wmGZ36pvOfMbz1BTPJlsc3WPch3fzqiOLsDnUClxHW6vL45h9itzbSNn1DHb6M+cs0h3lltH4ENlGVNlFcYHM6nWRPgmmkwfDvgzjxh3Yh1cciDfTAwOpXqMYsJlDQ1cDTcErqjFtAdioXZ3dPuJD7vNp9Eg47AzGB7Aq5SlybfCbjBAmAHnhJtAFSpT/khRVMffbPxJrhEvmXuZIqGKf2ynC2+NHdfcdfnyy3SRvR/uNA5TZXiDvr7xEm8pQ6l55ExPGigQiolkeSEu1Qmx2BwibUG99B79ef6B6wPpV/06GM7MIfNxgboGfUKPh0eZdilkAVYF5UxPXQ1ot58x16EhdAoqVFZlnLXy6Nl2Gx8Nf8cXoX7RiDdBLwD7cYcwXShhT9bIlMNXEZvQaD4Rd6ARO9tj85Qt9FKhK2tz7D9mNe5UJ1ibIkivTVfI20acWRF+Ct0G1eiibyCz0ueQg4S/4Gr6+7Q22cddBkKsBlRob0ZCOJccxdYkb61tNWuZbiOJLxa77E7qWGSR/wdrjDbHNdD4lpkR+821kcjUjfSgdRCWwKPEs3yFccwaT5cY04iFbJ31E9EhPmmOo4D4b6wdvxeYCZOEGK2re7UvqXLuck0z6SH6AdBQxoeU6niru1NIYxtiL5ploIwQWIK9wvfm3jDPaFuNu4wnewifg+/FF8MzdO+UQ+kYfhxKMM8GJlEHYAyOdO/ld9gTwXyOl0/i+/Jkrhdfa9dqJ2CWnG+6uKxAW/g3egSdGp6Jr+uN5tOqIBCbzkUlOMjjE7+Gs1gdJBmb8bPkSLoBdgX2cDeEV40rpAD34bDUYr2htWVMNU/4xxF5Vl8wJtZnwOO2x/YF+qMOXKn/qLucDpDjjVqdfJtxUBjAVuLT6RPSSjGpDwPzI218KzGWWR/JE2YFF5tbmL8/1E3wURNzQKPTI1YSF7IvID9mDQ3PVWLBF8QWroautKojK7U4tZa5BefiXNwSXh6cjO+GzxMEfmFHiymmW9pR7rxaqBbFjznTgcrMRlOoINffOBT5k12q51iztAqnr7aLyBevWZtgOz/K2AqjGR7rGputxbWx5iku11opZuKNBoc8DOlsb8hVuOB6tpDsay6SWoibeC2rOFfjnH2XuZM+hd/gf4T7hVsUeEV+yauRwdiyzKni98IRLyVc4Oqk/tTP727UTvJHzJX2omCuf7FvAR6kdXsf3ZEHl6NX0C5GhYO1s8pYrAr6xqLAOtGXfJeelvw39xfZR/knOgwXkD9lRNAWrYSY5G9ufIiXU/szE1XJumm8I46nR8OJ2lT4Ot0VmaF4DcHXaupGoetUPcVKRB8wgxzvhKhHaZu5SK1oqkARwuOdyz6pb+Cn1+egfOkUPs6125OC/UCecd9plB5YInt+1x5YqP4uv6tcI23/8/Wf8xtwH72Nmb7bx7xMrNs1PAug47AHrAaf0GV2d7zTLEH/A9cwmEk="}, {"__id__": "chunk-ee6a1c56605c8828c48c6d591ec56e70", "__created_at__": 1760489566, "content": "## Transaction Inputs\n\nThe inputs field contains several subfields, starting with a compactSize unsigned integer indicating the number of inputs in the transaction. The minimum value is one, and while there's no explicit maximum, the block size limit effectively constrains transactions to a few thousand inputs at most.\n\nEach input must contain three fields:\n1. An outpoint field (identifying the previous output being spent)\n2. A length-prefixed input script field\n3. A sequence field (indicating conditions on when the transaction can be mined)\n\n### Outpoint\n\nFor Alice to transfer her bitcoins to Bob, she needs to reference the previous transaction where she received those bitcoins. The outpoint contains a 32-byte transaction ID (txid) for the previous transaction and a 4-byte output index identifying which specific output from that transaction Alice wants to spend.\n\nWhen a full node encounters an outpoint, it looks for the referenced output in the blockchain. This provides critical information including:\n- The amount of bitcoins assigned to the previous output\n- The authorization conditions that must be fulfilled to spend those bitcoins\n- The block confirmation data (for relative timelocks)\n- Proof that the output exists and hasn't been spent already (preventing double-spending)\n\nCurrently, Bitcoin Core maintains a database of unspent transaction outputs (UTXOs) to efficiently track this information.", "full_doc_id": "doc-ee6a1c56605c8828c48c6d591ec56e70", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_5.md", "vector": "eJwV0nlUFGUAAHDkGWpqCe4KC7vLzu5c3zcDYR4JiqGWpuZ9PxNRLDUvNHxgWpniVYQIyLHsDrOz3zfzzcwunkheaGp59TzRSlMqCaish0pppl1///791XNnkpp3zzcvi3G1g8RM+rD2hftSuLeYLk7UjzFtwVZvqrYK7IBlrkfKFOOo7QEdox5yTcdf63keiX8Jp6uzVb852LgDFDyjZ758m1shbCANaNaHpdTxlIfsDO4cceNi53G0K8kqLBaKAslODuRp90SJaa3Ohccgi7qY0WIrvuMshPNiy6mj7m30WE+qvEnHJdvBjPiNZIXwjBwrVnHD9Os4ijiSinq17ygB25hcYyxMK4zwzNYm9YnX6/TeMqVlgn7sCLzZ3pe7ajtg3nCOR2dcTdpC+biwlj2Ap8Ej5mN1vv0D5Xyiyn4UyvUXuRbpf2imnBUrOybBT/hsElbaXLd9bcz6svtkuVMoH6hN4G7i7+KGWLtyVfwcbTpzjR0XOM//ZL7mkoQosYUCqhWuIe278vnR7GAhlT1hSoG/0D+BvnAAlw7rlEMwWmmn54brxTnifnceGUKP0YbEjdMeSz3RGmMSqccj1CmiVa/jXzWWK51rSvQKsF6JF68ou4R8/U7pPuGZmrPa0DIRG6SBfxcXs3PRZt9+4yLoVTWIu+DRieaO1h3ShFAaseBa4xz1RCtlurOykko3VO8DI9UU23RzR2mul+i67BBWqCXugzSiOnNZah7uw43Hu8nWhGsVAwSknvRZw98HKiyTqZcrr6KGGpjwGbMKZDnfpgZ6b6jJPCSX8BWSzzO4kVf9TnqNP9uy0HMFzJPkyib5b/s8mMJ7PT/gU3Sr8By9Ffb1diEjpcnBSPv54GNtj/+4udKfF+4G/hR3CbeYZ82hrubg80BDHfwC5yZSlrA0HC85PAnwLtuEqsOB6lT62z7WuFzYKPzCvFJSEOqoKnD1Ny5Jw4Cr/GOyHqX2MKWfuSRqgf0+k+e9p2azK63RfLPWwXXQbZzTKKTm4JzYbOVqMIsahh7pg81x2O6JhHHsCUcs66qqYZXAbbnFlkONZBvwSrUBzyUlbEp1MejPnGEzwafq0/AHxEIClv1Cou+BjoSnqMwz3NXDbEKR5CHVOymJvgiemHnidvp5OgUv4SfTE929uG6O1cZO6iTsAyFTrMXYMj1DuQ/pc3yjeDZ0Gr9nXPNMSG4DW0gT9ruP+KKtHZ51jmXwmH8Wny61cAWUwi0V6vV19Hp5c00On5hwg+6XZDFu4AP8dbrJNs0507nFcz0BUxmVr1Nvxqfhdukab+Ez9Efurza1MTa4G7RSq0LN5BZJ594N/ig9/f+qEcnsp2LM+eiQOdExAo80egcvGA+KhjNdpf6gOLjXqHXN863l1wVnS0sNR6Br4Cu9nbuJrMDkXyRL3BE7v+H2oVvuKDCd7exLphvR4eIp9Al9CbUHviD3CldwYyv+wvv0B/yvxNSNxFrLRDlT4kA9/JJJ5seH/L5GuZQWuVqwxxiFOxBFvUml2b+mDX1GYYQm8Rpo5csSR6HJoRFKiwNqqhqpXmH3ksOFGT3q0UHjkP5nuB2n+c7SshFB6oRGNCUmjx6NujtX4KvqXVZko6vT4MVgD7xJb9+pk348Q/qyXwTHFJ9T3/LvhBfJG/BpmKCp+hy4KFTH/iH1F2KEerVM6cp25lv069zy5DF8kZae/HLyf4rX0eWkX+xq7+HQ++YGdJJ0Cc+kNsJET0TCRmecWhnaYp/lysBWmOX6TWkQOCFKJaFONiGxgp6KTwcFbbl1d6CW9Az8LYXRdtfnGqRywKnEL7UB6HcxCl0Adz0Z0KFa9CZ+gnhCy3G/gzKUFnMZaHLfZtei1doP3pVgaUw5eEJw9Rn9MtHkLf5mbzpKJYPUxlAnWEBAQoaKAovDupmv/cpdIF3knugWwZqTOyhU4mWMYTbaBlXOqnrkekgP5x+Lpv8UGwrYwVSmzsgmfsz6/wX8WbCq"}, {"__id__": "chunk-b53ecdd98c4d207f64b8697ddb5357dd", "__created_at__": 1760489785, "content": "## Input Script and Sequence\n\n### Input Script\n\nThe input script field is a remnant of the legacy transaction format. For transactions spending native segwit outputs, this field is typically empty (length prefix set to zero). For transactions spending legacy outputs, this field contains the data needed to satisfy the conditions specified in the output being spent.\n\n### Sequence Field\n\nThe final four bytes of an input are its sequence number. Originally intended to enable transaction replacement, the sequence field has evolved to serve multiple purposes:\n\n1. **Original Transaction Replacement**: Initially designed to allow creation of multiple versions of the same transaction, with higher sequence numbers replacing lower ones. This was disabled due to potential abuse.\n\n2. **Opt-in Transaction Replacement**: BIP125 repurposed the sequence field, allowing transactions with sequence values below 0xfffffffe to signal they are replaceable by transactions with higher fees (Replace-by-Fee or RBF).\n\n3. **Relative Timelock**: BIP68 added a constraint that interprets sequence values less than 2^31 as relative timelocks. Such transactions can only be included in the blockchain after the previous output has aged by the specified amount.\n\nThe sequence value can be specified in either blocks or seconds, with a type-flag (bit 22) determining the unit. If the flag is set, the value is interpreted as a multiple of 512 seconds; if not set, the value is interpreted as a number of blocks.", "full_doc_id": "doc-b53ecdd98c4d207f64b8697ddb5357dd", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_6.md", "vector": "eJwN0wtTVNcBAGA0aCsgskUewj7u3sc55557d2OoREYYmJHidLBGMNpoaEgzEUsADSbx1WTG0ZBIFFGIgrvs6+59nXN3F2xHMeIjVmVawWZaY2NpB5JSH7WNGGOgRMVpv//wtbJ/R68fT01wktjn9bwn3ov4MpJ627FLqo1Ww2fUSTCgzBX+JTZEKkILCFZ2yZPBAlyaNk4faw7Pl+BY9Bydbz4ktVKTlhw5m14Jh9GbUpkxAmNtld4xKMCW+KvGYGSh/iYqweVSXN2N7mmq9kuRohXaKB6D5UoZ/SPu6RnhA3yd0hwShST1hbYL5IixOu+/aLU6Sn6O6tnZ0l7zYz10qNUZ8Ni1HmGSg8x4vECc65jiJ+zF5l5jjpUCf08WwSawQMkOenUn46TH8bC22s+4JrKa5Wnxu9gdqc7qpu2agy/lN4pMQmWeoPPWNV33TRsFnCE+FTZFKowS8JS+z2zRT2kLyFF+hg7zj/V1zoOBAHgP+WmzXAz2d3mxiwwGvsbX4Tvkototd9Hi3k5xIe8FnLYh9iQ8pF3z/VMoFBrxbmuLW6KvRy/FFNwPf8Kn63/J9+mrglUEdb7Bs4nvzCryrlEqdkarnd3Rr8yqI1K8DAWNDrxSexscppsiBzzPgHZTFr7g7mvfomXxciaTvY8e0VaxDdTBQN50+B8g2RrUvoovt/K1nWSKLwo3oRvgAP8H4UHWLE+EzII3IpWBZa4KIjk6ZI9ZFLgJGQwRsupIpliA/mMf0za3b0TnlHrQSlXS2LM+7OFm2TpChjMzVO+sdO9z/VSvobNhi7k59pr5Ad5IssFbYPRglva88JH4jhDWn49K+pz0ajAFiti5wZVspjTuuoM+Vp7GLukbQr/qeilySN/h+FOiMHKp97Z8VyoTp8V5xopMGwVge+wWnC+X6J1Hu+iketLN8wf8XouxDttPOVeZw8pdMUdOQw5xGd3HDgSuqqsiTvcpd7Lxbl4SuqxW8BML1/JP+Bzxun8r6lNCwZM9h3Pa0VYuNToLP9D7/N/rRvBvkdqoZH5Il9hSAlP4irw9tpBPzv0W1lkZ9obQcYdNsFjTvju/wPicrye70GL5hegpcS1N7ztr+vNPcN+zA9ZSulR+QGscZ/ldxgPtDH8DInk2n48GyHLxEd4GmgNj+LnoyIKXcZ5wJm533/Y0oF8HJVLpGwfn2YP8Z/InUkO81LJZt9hj3jNSofZn+ltYwC9nd8P9uUme88TO1uvrfTsd27JsuN7isZjfC7ay2eF1Yp73oTUWH0IpWoi0K9z/G1yAGbDTaKRMkBUGHFPZS2CplSZe1bGQgnV8S0iJ+8kl0udu0WY71glN0j3rtBZxr6Ez+pbYZ0ZbqMko1xcHc4TL0nigUbTMPaRaHzJvhVsWPVQMdaWrJaPb7EVPlYhSw+YYV5zN0dLQvHgVc9tuR2u163yR8YrvR35OSwU73HfJ5t4KYauRaV2gqaEi/d9+29HfMFV6ofIqnwY3wkmcb50EX2gji1rANvgLUkh9am1wQktEb3Kn42ZkJobzxsR1cnX3KI3H06P9/jL7MjPMzJfaSBe3XtxEPjHO6BtiH2jLHSM4NfF1qB300yZ0GEyZL8Nn9QOmjq4iJ/c2vhn6KzdmFEdfskq65sRPi5x7fNHPQkMBBe6MfZN9P8Gah8xdoCSBuW8cS8EJ+aJeE8l1DXJHDQvdxWukNDLh+dRzjHvMzrjrzP2BhthzMUs9wX2ofm4V23NwFWwB53KnQRNNElrZWsMDJ1Nd7nLxmtxCHtI9hp8jvqvqIe4tTQEF/BL6Ggnkb3OGzSrmRaY1191xmg6RG3hx4DIeNDvAHd8jI8/9vmg3dzDD5GL4Mlkt9aMXxRWuj0j9kUb4Y2bGnW5c4WME2k3hB/o8l41tNt+IPxuvxHtNH7RZNfr2xG3LqTTgL/VwNDn0qa5Y+0AW2kOc8jHqNUaZDHe6eBBsECe8w8YPUT1Zg14Rfmf1q0jvcf4P6sCdNg=="}, {"__id__": "chunk-7cc1bd6183ccd7cf5ff1c39512f6eaf9", "__created_at__": 1760489747, "content": "## Transaction Outputs\n\nThe outputs field begins with a compactSize integer indicating the number of outputs in the transaction. The example transaction has two outputs.\n\nEach output contains:\n1. An 8-byte amount field specifying the number of satoshis (smallest unit of bitcoin)\n2. A length-prefixed output script specifying the conditions that must be met to spend the bitcoins\n\n### Amount Field\n\nThe amount is an 8-byte signed integer indicating the number of satoshis to transfer. A satoshi is the smallest unit of bitcoin that can be represented in an onchain transaction, with 100 million satoshis in one bitcoin. Bitcoin's consensus rules allow outputs with values from zero to 21 million bitcoins.\n\n### Uneconomical Outputs and Dust\n\nDespite having no value, zero-value outputs can still be spent under the same rules as other outputs. However, spending an output increases transaction size and fees. If an output's value is less than the cost to spend it, it's considered an \"uneconomical output.\"\n\nSince uneconomical outputs burden full nodes without incentive to ever be spent, many implementations like Bitcoin Core discourage their creation through \"dust policies.\" These policies prevent the relay and mining of transactions with outputs below certain thresholds (typically 546 satoshis).\n\nOne exception exists: data carrier outputs (scripts starting with OP_RETURN) can have zero value since they're unspendable anyway.", "full_doc_id": "doc-7cc1bd6183ccd7cf5ff1c39512f6eaf9", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_7.md", "vector": "eJwN0o1XFVUCAHDdykUU3OSj+HiPmTd3Zu6dmRchRSmpkZtKQS7irhFgtSAGGZK5R9CX7pp4atECF5MH72PmvXvv3PmAdTuKmuZRFI+6YlrHtEwD9ZysxGzXFtP2tPv7G34fqZHc0h1lLtGiTrt8TSgzk8nF3ipllspoo5jk+ZqVmGelhVozCNMXWRwnKMvpIWGTccEqFwrgh/hHfbhjWe9Zc7F6nJTDNcbm7PthiTm/a6XRIJ/IpepkFLMWoTEqZkYeKtaK4WNWe2gpNy3+AnpU8YEjWrI2n+xgc9H51GwckKtyqnwNXa3dFXB8522SzyWiapZtX1cSom3ai+AQ2U2XeVf597DxwXtRhr7QPiJN5GSlwJ0TadB5PVseYLvgDqHFSEGz5QrvP60E6QRrJgXhWv4efymsY++o7bEyE3Nf0Clch/yLM8CFvYI5ycznu2M1/M8CryHrOeblj8d2yzpbRfMlQ3rE7REryALO431DqocLyKfwSvv9dIp0yv4dLs58RpkGztvFEnPX9g4pJ2AADqLp1m3SYK7bvlypFM7IBAbhbKsIX3a+UvPUSdKwNQtI+q6cEPks7d/8J9Yc+rd4lrVJ7sRJsLD3eOcINz+601tn7gAT8CQNWPtwTNlJE1kXP8/eZe7k+mkfqI+96jnlPKuuBw3aJc8i8wCeYP8jdpS941zw5ZPFwVvkKT5F+R6MCAG8Bsyx94aOsHGkH2+1X6c9EqHpcFRphDXq3KzSngs5trSq9bcCwiu1Q/hiaL+by5r0ifpS8Yf4rsg9eqb4EzotFqED0h5q+XpD1SkPs/m+ITaYk0Vn6KuCiSCDjIIS4T7OjjeCGWoMQvBnmi7nyXLPn8QUWmA0Gcksk75pbhXq4EnrFlfrjqKn/UXdx5FF6vWNVIOatUesVvzsO/Eh0t5Txz9Pvucn2Pv6ROkMuBH+AKzTHgV1wp2o6gbCZ7yF7jw23DFOH8AjVjP3jH6aHAON5ihHuZSYKa307RdbIpeQ0nE2J46XxAvxNSxYVTgAnqN77ensP/TXDz6tJkHVp0kl7FmQ/MBB40c6L34RpLNMVg3eM06C3+AR6GdPwjeUGlLrPAVGDY80pmyI95AflEF9PH/Re4q8S9syt4RNzQ82KlEzoEXEJQ9sZqe9a0V7u6XkRc/ZzWKbsmISJ13BiVwad1WZImdpg9om54DhmqkooC1Tl/dtNLeCL4W4GPzLgNWsLqONnlcyGCyP1Huz0UxnIOcoSCRb5b1djWK+NuJc976sPIF9+G7Pcrxdkrs49Ho0l/F6W7wwNKockm+aHliOfSgDtoitPuhucqA1F7wdbQUt5mNqGitET8IGW079yHkvnMoP26/iUzSQ0wIO0s+FguQmt0q1cHd8PZvJMmgS06x/2Y+r2VNnKwtC4+gx8X19vXwnnvT/CbOUMbHTdzTblVI8mjsW+hKNGH/sHZY7YRv9Pb6tpdEql0P/xbPwkHebclXJRwh2OQnEHzuSXikPwSXGE53ALMIX9IToADtpl/U44SCYLOSAV4L+YKXrc5pBvrCB5sXyhDG90vNa91SnxD7nzuwD7YokgJPuYGSO/5pdi1Y8eD22jT7vybLPk3XirXCT9ib5OHqMdcVXmwmo1krgvuUvi8Vksfh3NOju89e7t8w1zl24s7dV6eqs4WYowe6lKCtYFbqrp4oFueXKILvPf1jl1Dvm5dgWpztUSHc7FfZqzjD2W6NCmbTIl44nyknkD73Z0lXwhX0ts5QvJVcg1F6ij7sfwxXBo8AiP3OVeKg7QWo3pnNrPBV0C+pnldxiNFU/HD3oCWmfgCS00rcZLIp58Qb0iPINqcb9wcPmu7aK7jVc6aDez25GpsGb4BfhBn45o8w8x77mAqEP4EvSZEsKmXYR/Ku9EJjhtyS+7yd7G50gzzMLcBs7h9PcGZChelPnJ7ur3/8KFYMbGT4YVpq0S7E8IFlrRS8ZtmrIr2gH+R/FipxL"}, {"__id__": "chunk-1e9a483ea040430b01be336c5bce960d", "__created_at__": 1760489754, "content": "## Output Scripts\n\nThe output script contains the conditions that will need to be fulfilled to spend the bitcoins. Its length is indicated by a compactSize integer, and according to consensus rules, the minimum size is zero.\n\nWhile there's no explicit maximum size limit for an output script, a later transaction can only spend a previous output with a script of 10,000 bytes or smaller. Bitcoin Core's policy for relaying and mining transactions further limits output scripts to a few standard templates, encouraging best practices in script usage.\n\nAn output script with zero length can be spent by anyone (known as \"anyone-can-spend\"). These scripts are sometimes used for Bitcoin upgrades, where an existing anyone-can-spend script has new constraints added to it.", "full_doc_id": "doc-1e9a483ea040430b01be336c5bce960d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_8.md", "vector": "eJwN1AtXFNcBAGDxSFIVESMoAsvu7My9c+/MLB5rqA+UJpYYX7FqIxGr4oMkeopY88BHYuWgSSsYdYEEWHaX2d07c++dnZViqKE+4ttGbcBgMZoYrXJiCRZJisVKk9r8hu+cLxsOquCPHdFauCfmgDvfO8KjhmXK2ktKgBaDEbJeU8SCcnHW5qppsTx2dpxbe5U+r7aho9aHwQ4hz7mL6+ZVdtQuxn9gbf7vwiNCa1Dp+O7Q0LrL5sKsM6gfItuWU1maPhcv1prhKzRsLvB/UfesZzwaSh5oZzBgW4MP0TVxDFkk72IV0GskUFm+b941Nk1QcKveS8+oFWSWWpi617WLHk6rzrpEhtNccTLOZVRuhZ+jjyKjIn1mifkLx+7o/9AVfMiYBs7BPYGN5B6qiBi6TQgs83wrBfkr2nJy27gOanyF9AfJjLWBKe4EYyV5Tu436ozx6lplFH3dap1wJfSe1MHush9Q6biS2Ee64FpPPgFIfB+fqxiGcujNfXNdX5vrSSLOl2+lPeZTcDCmxVZL13AcOgYf8i4/ZJHADFRS8x98XcpFS+xEMzXWpR3G3dUtwUK4dPxm9LJVFNyePJH9ko9jfton1xgKjme5ZKMj0bwP/stawZgJidptIuorPHfMFE6FHH87p0aWmSR94fLiodZpyZdB8aP9BbwsTeRTDYPH22P0eulE+EvHbL1Juej+GFwL75ZA6K/1v2PzXKd5Cn098kBpICekbahFrMOnzQTaArcED9OHwRmOdlxpLKm/wZbySbVLEtLTZ2Y0CaZY6e6szE4fpt6F29h56Tr5inXRt5SL3Cv/JdhKq6VBxyhUBk455Pr26A3gVwpx74SlP8lAZWp64BA6Fq417fDvSXm42EgwvEo7Xycja7Sn2PMg8o38dz6nUWYLwAZzZRDDy4Hf0kXRC2Cy8Q16KjM/uomvAhT/iewTUpRu7JG2wkaWJMwGU+w7wZn+Tn+z+Tm57y0NPCBJrmbfJfFlYTqR0B3pO8VDe+ARMRG2RW+6ngzZzvpQvKPfPZWdoA10XaPlX6udxHl8YUoN2RueZswID4YWw2bTyebZe6Q+0JvhZv9Sz2ecwQMqsAdiW/w+MhSvQsfYxlATItF4sclZ7wwnT8JamoKyoQ8damzEBsgzh9GbYGlmrb5TWZhx2+53V+D7QgP8OLBg3w3nfHwYJmvvaj77sfkzY6r7e89qj9PewF488LSzxluwfyct8CyjbXUiu6y97X9Nev6D6fyfaI3rdmafhDPehL+auDzaLTi1YrMlvDBtl14olLp24N3h2shYFlf3htqknFWeYFvhZOYC5eAlBKHDNuktVhIRpWTnLHRC+SC9XFKk+XYrLbSLuAN8H50irHCcFT9EcUYQPSNcsqery2uHW3poe3AzGSmt5CetYdrYwAV00XUwmiM+Wx8n5NnT5GbRK6SAWTCHLENcP8Dn00H8j3CvbeK/pfezeeQzdUjETXxKvDGEpzi/kjT1grJOcFuW+CRR+S1lnvop2+a71zAy7SqThFKj98dLvtTnOo7AHejt1DmVn/CzvFLqjyzji2m5VEbereqQZ5vfRnUr9WCP0SPHwwErl65F11g+eiSUm2OMoDyE5Og+0KW/KV/mXa6jLDEU4RvgE9F296mkTtkmocgLyiPWoJU2vWrFW160JPYi7nFAHOepYsddxw/clVaHkpCS9Wf0a7Yu65D6G/kcbklV7T5yi6XECtkzoMBdFdif0aSdBMfZoHA84rQnoTVyZ2N3uEAZgP8GY1EWGxFdD94xVggl5nPgPO2pxuIiv9qwM+2o40rDzEg87BMzraSqe/opTZTuwdHi16jd+NTIR9naVbZDLyLEGB7djhrgY7w4/FP6GTiSskHxhhxGsiPfeoEXgZGuONQhZRoBdtESwBb+mljN+12bDj7Nm4256C1jb01CsEc/F+0U+/CcH90JT6qdmDkwOq7WcmPk1HaQbeL5cBr8Ocm2VvFc/xs1/wehI64B"}, {"__id__": "chunk-6b77d5395f90aa07a71ca507709e01e3", "__created_at__": 1760489785, "content": "## Witness Structure\n\nIn Bitcoin, a witness is data that solves the mathematical problem posed by an output script. The most common form of witness is a digital signature that proves the spender controls the private key corresponding to a public key specified in the output.\n\nThe legacy transaction format placed witnesses in the input script field, but this created several problems for contract protocols:\n\n1. **Circular Dependencies**: Many Bitcoin contract protocols require signing transactions out of order, but when signatures are included in the input script, they affect the transaction's identifier (txid). This creates circular dependencies in transaction chains.\n\n2. **Third-Party Transaction Malleability**: It's often possible to solve the same script in different ways. Anyone could modify Alice's transaction by changing the encoding of values in the input script, creating a conflict with her original transaction and potentially invalidating dependent transactions.\n\n3. **Second-Party Transaction Malleability**: Even if third-party malleability were eliminated, signers could generate alternative signatures and change transaction IDs, breaking transaction chains in contract protocols.\n\nThe segregated witness (segwit) soft fork solved these problems by removing witnesses from the txid calculation. This was implemented through a backward-compatible change that defined special output script templates as segwit programs. When spent, these require an empty input script but include data in a new witness structure field.", "full_doc_id": "doc-6b77d5395f90aa07a71ca507709e01e3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch06-transactions/mastering-bitcoin-3rd-edition_chapter-6-transactions_9.md", "vector": "eJwN0ftTVPUCAHC8ZgikICyyy7K7Z3fP+Z7v9zzIFzbNlF2JcdS0NKNMw0eKNJROTWmC3jAaEgW1AuS9ex7fPef7PXuWRCZ5ZKRgJWaZVy5BORkaVqM2+Rivl6s9/oHPL582rkQqaX8utkryxCohkBcobeqnUQFcRE8aOf52HHNJ+yrAGBKoh+6g3wTXSR3kXGuIVbT6lgWo0rVTmELKrT3kOvdIVgFpZjj9hlRj1tpvBtuqH5I7YYLgsH38i65l0ClulGXRQUwxzdFPqkU/169cQt2cSsaIWx5uAdZ0bgW/lP2eeMAtX3lLstWnfo7+H2wzUsSf/OvQWmM3TfP2kDWyzzOJ1rNDgeQYhPGtDfwBAzCHiNveCz5hJ7X0qDPsZcEkLpGppmqjlDmatcL5S2RIPJzebwVgXFJhtCgyDCu8i8V4+6RhoGPW/c6+wGUli90ipohhkmjex3Z7TvhWgYt6zNcPsD3IaWYvA92fNKTBQjwRxil3tavgT5LgLZGvoZTabvNvhdxvY/CguIm7g05E45X1ps4tRV3cR+rCaA1/DDfie/QykNjv+HfSBrlHMeCL7IJABZsXW6pVkV57MyxRXkEZ0bvWaPUQBfAl6szeYnSCk1acO1NKVXtNNy7Cc1tPBW6QdCzh+fwYsdDm4FGXwzXFHj54wnyeJMaOGTz5I/wqV+7fnsnDWdJyXBoayVpCfiSD4TdAWbiIVgUrpf9aRxqdnEP9lzsHl4Xi+AvA8jUHnNZTYnLktdT3aRl+tPEz9yZlemYHHFQ7+GJ+YqSjLqiM2+molh7UE0iFGk/C6LaC1A1GDNiCcvAjEo8yIoN6HvRBubmJljX9RzjqaxdqXGvN1Zmycv6BqVoHLfaMW5ciGVaJUAx16QWymmiRyobGqlF6XODELrM8UES/1N+G21gk7DCuW19p3PsD3nH/PomR8/QP4QHrdN0uZYV1td4hbDT34WSc6LiijrHhOmfojBJW7eRXBb12t3wPr8Mn+W9FL14Kf9Y20LWMBPcHe5nzeMR+mL0dKBYEYYic8s/bNRlNw1PUIS5ZOQtT1E+nH9YfMhiwmfYF8rOmMAnwCXoottj3HlkRWCUutsZDW9Al63tYgcqIYfQ0TeZuCX5lDOWQDPgMqkcf+9xoAvqC6UJfq2PRlXCGdA3utua0HnfvhBHvRKVCmintt9zUY7PSTWkmX00zome5Q0aS5xS3JsPMHrCc9TnmiNAOzunD4hH7BrgK/+cvaLquHwY18iP2heBP3Ha8NTzfNav6ZnCj9yg6ww6yP5MuIz38jUhAKX08az1WxCMwD/7IVlv3SBtboywDp2E6/yW/PLxefwK+ZxVmhqKT0puN41ZKw7vhQ+GtfEVdp+Kmc6xyZ9B3LjhKLug5dC5TRYGVDxtDqcF9TkD+DZTgnwoy5gpRZo14BU6Go+mPCa1cyG5hOZYSMybxqZpF+tTzwkr7TvSWJ1ebY0VgDC1BSWiA22/s1G7VPqjtkPKlQutp9QcjQZH5CU0OEov0kIlJIneD2ySerIupr0eBkatfCWWT+fv3oNNkj/kserp1Ak0lq+gsehl3wwL6JEgBicZWocMD8DSuRttGcs189LuWDYobrqgKKWlQaQ7T432h1Ynma7aRzGaiDLtHbLDdUY7kwi9IGbiDn4Gq/KKmsJ3cy2BYLwb/+PurUF+YvVxahMPQ0+ymef4mI4lOIh/oBnszspLchzbqte40o4Wm6TMDAy2zw6nGRd/mcBV6Sy4y7pjVeJ74buCI2uUbMvLZbtxNx/WFzCIy1VXG9MFpQoFnRvM8/LY0m2GQoiQIv7LXsaTehcl0F97e0m6UUofQyTVrW8lVvDeygZXh2ayXo87WStWl3PZ9eDCUOTsQF3m2XiBlwhJaGnzHXEClWCnxRofCfcYErTDyT3qGzuZHuAO+1fArc8CcqizS+iHvZWGu1Ot7CeWyvzXophbljBFDZv8CSDaf1Q=="}, {"__id__": "chunk-2484cd2454d470b6cc986407151c663b", "__created_at__": 1760489847, "content": "# Authorization and Authentication in Bitcoin\n\nWhen you receive bitcoins, you must decide who has permission to spend them (authorization) and how full nodes will distinguish authorized spenders from others (authentication). Your authorization instructions and authentication proof will be verified by thousands of independent full nodes to validate transactions.\n\nBitcoin uses a programming language called Script for these functions. Script is a Forth-like stack-based language that enables flexible spending conditions beyond simple payments to Bitcoin addresses. This chapter explores Script's features and common usage patterns.", "full_doc_id": "doc-2484cd2454d470b6cc986407151c663b", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_1.md", "vector": "eJwNzvtXFNcBAGDj22gCCASW3XVn53Hn3plZJWJjajyeRK0/mEBaTgwiTfWY2DZAGoUYERXyOEg0KbUmuy6wzj5m7sy9M8MSsDEVA8TSmqYxVh6KthpDBNSURpJ6rEcIab+/4GsHMwP2+/usa9IHSTdHxL38hHnLeilQpUzqC+CY9vjhD4wawEnvMyrxOOPGP5WN9psik3Ab9/RIwsoZACqfqxU7FfATMERLM+7XNZjjCeBh6FIn0USClXrtTL7DaiaF8hUlX+6M5aNl2na7eMlO5YX4PGWJXBErMINyN/sqeQ/xZA6qFR6gozkL6EHi4d6VgqGF+A76Pl4OifoUjtJtOSmB55gasj99udxOT4mDkZ/AqziP3odhIk1IBzx8AfToaqrDpaF1NIXbwcyIlCVuMUHFbL6uN6Dp5t99QWyyX8VTJd4K6Ss9P+h5i/LcLdqriX7pPCghV+l+3EzvcV/FFtIv41cYvzMaXcofjtb7p/vmKpZv1D8VWettZ35jFQoNiy/Aj4xe/a48Qkqdv6EVgTy2DHQZrWqjvZk2y6FwoXgtI0WpoZuMdcmkPCQd9NRFVbiWHIzucaaib3sDVtIE9nw7BZ1lm+AwOYg/dJXqZd5anJRmkZeEOcZtdu7i81q79Qw7pp6PHweT+BK/mCsXbjoZoBf3hpf7C1u+5bYan3sfteudbyIXm2q9S70IX5BSFYEQ/Tgc8PYBE49wBQSQgFkNpyWGcI//0JE25ovG2thavuPBJf5L8EXzMPqtVscM2U8n/u2r4t9wH8vcJ2qA9X/dUIcvopqIbvWJuVo/ySbXxWrvQmXIdZvX1N+bG+Vyd45zFZbZDeBj4Tn4me9+dRe3ASbripSzkeXmR4t8ie1oV8YoaeV/bc6GT9jFgRWiBqvEMJ0yHRwS/EffgTe4C7ib+3FyH41p+7mnhAor3eIyBvlBvc17U3TJm6xqaYODSYhtJbHwINwMysz1qU3N/2paFjsRB2gaKo90kptQ5MNyLx6KB7LT5FWmN3Eufl+OV4fNJd5x0Kf/0q6J72KBNCfYaGyBE2o/u844YKhwlfgyzm/6kuwz+v0PoAF8Ehn4d+Jswe3MSI6zeUZPc79UYJaSrMAxa6d0h4daYSbrH/SMS12ew/7X6AzvKddp8UPyUwSEfP4TuTN7t7OayZIOwDQs4J2Rai6T2Z1TJG9V3iNb6et0Y6ov0KX8MXHa7ebLXSf56+CcPoWORdv4FGNuoFOH2atA1FopFPhCrs3gNDeCXlm8Jvamb/r/X1nis/qQmxE2qwPiZ/oN/rXY8ywKFUeapA5yNfGQNiTkciWoEpZa3VaKs0EYFdP4WnmmVGJo6uew2trLrGl5i46xg2Q41h27BoqUb6KmIOIqZyVYG29i54eD+uvGj6Ll2mXDlvvZ74QtYok1BQv8d/VZyXnipcy/oDGUDiXO4J5h79G/ChyqJPOcHrgjUW+1aQul9vCL9MTRM0y+cUeQxF7pENjGC+SiJpHdwpi0DP5Co3Qvo3jGwTT9ZOIG3kMe4fvEIH9EOG120lfsSTNDOEsVvJoUNT6U9Q/jv+DP+KITiXzvAH0p02UWBVtxELoyu+Eb/KdkjpwHK41t4m22mHws2t67TG+s0tiB7/ofx6vhlXit2eibmX4dvkPPoGPJLPtbsiI8TGOeC3qHNCmvsTj0vLAXHNByUavyNLLMBUtWyZXMF/BX4Aydpa0zpyehtTsS57eYVViFLvBzvcJXTEM2r1oAgUK933s5owiYsM3MtyZ0hH8GuswK/3H9EAzNHzBu0mzqo3uOnNN52ILnk2j0MfPZQMScLSxDJ8Aj3nqjHO5AX9NhY55x1vgT7lFOLdq2aD2eoLn4D+rL8ozE29p26qKzSEz/j/YpsxGGtaVEsUf4ctIB3zq63apr6aH9hoMetiXxYd9jpM9wxFtSrmuP2EGe1LUHN+n1wne+Rviosjw2AnfBH9Bls4auJw30VPx/pKOwKQ=="}, {"__id__": "chunk-6ed9014607c76a9dc6a69e573f10889c", "__created_at__": 1760489852, "content": "## Segregated Witness (SegWit)\n\nSegregated Witness (SegWit) is an upgrade to Bitcoin that separates signature data (\"witness\") from transaction data. SegWit transactions use new script types:\n\n### Pay to Witness Public Key Hash (P2WPKH)\n\nA P2WPKH output script is much simpler than P2PKH:\n```\n0 ab68025513c3dbd2f7b92a94e0581f5d50f654e7\n```\n\nThe first number (0) is the witness version, and the second part is the 20-byte public key hash. When spending, the signature is provided in a separate witness structure rather than in the input script.\n\n### Pay to Witness Script Hash (P2WSH)\n\nP2WSH is the SegWit equivalent of P2SH, using a 32-byte SHA256 hash (rather than the 20-byte RIPEMD160(SHA256()) hash in P2SH):\n```\n0 a9b7b38d972cabc7961dbfbcb841ad4508d133c47ba87457b4a0e8aae86dbb89\n```\n\nSegWit can also be embedded within P2SH scripts (nested SegWit), allowing wallets that don't support SegWit to still pay to SegWit-enabled wallets. This creates addresses starting with \"3\" that can be used by any Bitcoin wallet.\n\nBenefits of SegWit include reduced transaction fees, increased block capacity, and elimination of transaction malleability issues.", "full_doc_id": "doc-6ed9014607c76a9dc6a69e573f10889c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_10.md", "vector": "eJwFwQtQFGUAAGBBNDVJT7kM7m5vn//++zgMKsvGB5OPlLIitchIM7XUsJcKaWFq5JMIHV9wt3f7+nf/3dvDJCcpKx3GMsksKhJxyhwTSCVLxWgasO+bS30pfXFgRP1cmXcXMdkRY3e2rrpjxVJuMXtSG2iOzCYMQW+mT9sTnQu4I/ziWNIqBB3gUk47nS/UoFaYZ87Cx5RCuNj/cBJqJeA9qNHjUun80bqWyBZxqSSkeuu6a1P873C/3Ee26q+zlro0NB5OAT67QFxBjsbrULXgJwWngJS5IXCD/UOg0z5uCKgnQcBG7jXnPu7rzH+Y7/FKN5N91V0VIaJHQ2f2XoUDUv1yC7cnvhOH7YSakRov0mwe2LbrAc8nrALUzoizx+gIFWd1sMPrGuSemj4cDVcJa3GZvlf6PU5KmncA/8Rvcs7SbeQLaAyohr1ChX7Tbicna43UrOgIc2D8Jqyrb1AHmAOsDPidnghcN00Qo07hvdwMZw0clNscO25Wa4Z40yr3OmCr+LGwWZjiDKVztVPcw3wzn2O+4zWTcvBZJNuT+SpfjHte/SgIkjUw4vbHBtPd9RXxEe4+KyCloiRAqd/cHeazaASo3X1LTsRnZo62r8Groqrl7z6IiuiU9jFY4Q3Ve2OzhYUoLXsq8Id85Gd2sVrllNrLveGp9OjgBENO5i59UA/TRE77ivkcduO39EztQc5i/Jig7hMPeQNxBsimLwDLiRFp/B3i6q2jVDe1X260pzI77DqUoCopH7649Qp3iQ5Dk/5RE+Acc0qyUNjvHbZ6UEZwHvZJleBf/Asi4TRxDV4dvwG7qV/9K/h3QRtv2y1Wl1DMp0RP/dmZQN9rjOcH6QdcBnTgRxLIu8BOgjvlJ7Rz5nW9LKcvVOJ8xOXLx/zd6nnrS5TJXQctXDmudsuVAWAD+yZ3Sy6RC6wu+gieFzuGDjpbEj6xJ1FjMXo70Yk2Ce/rs9Xt5hDf8lEBcTSZkk/o/WicVim/hDLEPmMppjAHFjJ53C5zgjclvICsEIeJ01JXyXl0OXfWzl2vcTnMZ9wCdj530uywS4m/teHC/TkbHUlc4hSmnjG70A1lhfC4e2sMIf6BD8NPhTXmDHspoFgebld2cXNi/XSGoMCkeTdTz78U7xILtcHeo9JyeZ2wEXu7S+smgVb9irU+ksY32iEPJSU5LzJLeMUpRoOFI+ykPUfgnXze2J5kSTCEDKkM3q4ulLZ5r7FDYAAC9xDN8CPlKq+3xiAVfSJekjUJdNVM1xdLXdzT8XznEfND9pqQx5/Bi9S5aD7TBCfAoiDAQec82KmMoY6I26RcvoWwcKnU6D4EnvJ2INkPvD67iV+JNgt8tI2tcuZ4hR/M1zfTj5mP424tk13lnI7tE+usJqjvO4jjxOv8aTQIheUnzIkA09nkk3e9yF0k1uKZ+pPUHcnDqZ+ZfGM4KsJbeDX5qurFvlFU917hOW6xcEP4RJzllakLYoq/UdwA/3OKcZEzXVG0y6F2i7e/wlGzjPqTSReWBSuI79xy5574b0Z6Ylz8B/FrHEAnwbnQITQ6STgv4zRcGDnkLOdnCwpexhfQYX0sq5jTjRbUD87X/Aoa1cvkatwaVc1T+FpdsTiD6VSQ+y0FpX+dKF/vLsIB7Ie52m1Ugd0B/5PUYCOZI8xhm+66na0UCekoapcvSjlOBfOh0YPuhG/ZJ8x5hI+8wNW6Z2wFBk2sG/Yb7khnNknyJ9Awq9JYFGriYOQX64bTh36Cl/3n8FC2Sa1ls5UKVBZbyxbi3mFt5Ea4HqpmkZWFG6SzyiixM/6GdDH+LY4r37N7jbW4l0qZOc5WcQm7iW2zD5pvZ0+lwpHL3HavZBdT2xBIh8OI42J31qM2SSyxjrMPJts4NKrTWlcfqG5Iloxcp31qv4JeMFa6M4Pvw2VGSPzLedtdzTWH84VnRJddIPdntYCbe4h979AL3TWeX70S/h/2faYj"}, {"__id__": "chunk-2a1da44aa5bb37670ea37b0150f7571e", "__created_at__": 1760489867, "content": "## Merklized Alternative Script Trees (MAST)\n\nTraditional Bitcoin scripts with multiple spending conditions have several limitations: they increase transaction size, reveal all possible spending conditions, and are limited in how many conditions they can include. Merklized Alternative Script Trees (MAST) solve these issues.\n\nMAST uses a merkle tree data structure to commit to multiple spending conditions while only revealing the one being used. Each condition (script) is hashed to create a leaf of the tree. These leaves are then paired and hashed together, repeating until a single merkle root is created.\n\nWhen spending, the user only needs to provide the specific condition they're using plus the merkle proof showing it's part of the committed tree. This approach offers significant advantages:\n- Reduces transaction size, especially for complex scripts\n- Increases privacy by only revealing the used condition\n- Enables a practically unlimited number of spending conditions\n- Can be optimized to place frequently used conditions in more efficient positions\n\nFor a complex script with just 16 commitments (512 bytes), MAST could support over 32,000 different spending conditions, far more than could be used with traditional script constructs.", "full_doc_id": "doc-2a1da44aa5bb37670ea37b0150f7571e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_11.md", "vector": "eJwN0mlUVGUDAOBALCkUjeUMcGfm7ve9ywyulYlpbA5gVGplQUaW5pdl+GWJ2oJpQaloB4dt1ru+73vvRdyO0iplaHZaNPXLMDMt83we7ZSGaFnW3+f3M5+tkUdsd7ubuLStyzx1IMV4Aw7q3wQeCH4JitUv+Qv8EiOdS8hnrb+SRfZ2Y7RyTf2Eu8z0GM9yLZyAR8FmstQdYZvSqoKxOIYEIqVjN5yqtsWjuD14BzUVTHLq5b0o7NWMGwVOfNSYT+arK9HkYD3oRxcDU/yOttT+HMTZTLsF5KMBYa9uGQeyQm6fMy9nkXSanRKtkmcRJWDBqBai0/7OyAxcIb+CZ9hNyg57IrjOrY3cj/ZoD8JWK0Kly7VgrL8x9pFGJ35jL8eXUKb+A5ycP1L7Q6xDL3dd4M/5fkY3RNaM7ozs5MtwXudx5g73fyYbbU7uzvsUhAAB7zcL9CxvOjfXaIYjha7kMlTJ9Ojn1GVdOdQAfV4vEk8wsprDbkakWRlcQNWTfrVaQmiY2wLiwUfIRnWhPTyWAS96XxAuU8OkJiNV+KV9KV+Mg9IMcBNaMsLmHsfzfJvwre1kssidYvxqkmiNFE0OsMAc0u5Vf8AfhOfg60pZ59jA7EhNvCGQapXEY/HViYkIUxmo0KhU3xXHwoXCPjIFpGn32ZP4LZoLB9BzDsU70TCfTq6K90mTwWmmnDklrrceND0wi11v7oTDCx4Jtsf/S0vSe1ErivWpWM75a7NK3014zAh/3t1GJJ2n0Vn0BZvr/V5t4CrFkbFtxlZhnXyVGm9f5RvRYcey+5lZsEgMMi/SecJR3X/rB+or8aNspTMzkiJ8yM0Xn8Bz2VflNDBHXmxU6NP1xbhKqCho3VhDPYXKmEX2dOVZtsnfJM/WFnkK8es50425PpKugUF+rZseaaPvkVzQZ5/Eq/VDwpvGHK0KzBBT4M90v71FX0dUd+/iT0jbSICbEWK/J39lUrk0fj/RJ2UVFElX/F1S2NpHZIrfiiHU66dQCfkoLNUO8emsnlxhV6oJsEDpE/7TXSZ80knndWy+wD1MTeAaWK9Wb+wyN4bTwIfmChFrBpcrn8XElq/RkNVrmuoVOx/XBk6hpXxRZBNXYzeAi7BXqeYGmZfRdZIGGfgSKgQt/AkuE4yDgzalZAeK2c+sIW+CtD1h6nj7QXmW+LZD2tPty0KDrEhj3D3WGSnd0GMVoEcaH5gMV7HPo0uBwrYJ4Vb2d1wpHeGy2XLyQDJDNINfqSvEj8lLVq2vRy+yVpsL82aCc+xGYpJVihBzWIqJG9BBWrSaBIk97dtJzrA+s++1BrvqQKk/W9krPqndSD/NtUKOO+asRVuFWvsKXE+F+CzlN2QARrvg0K27N0vGcsMPb/Z/AzQ4D41T39KXEoPhZq1KWszVjAnBNjEoDQMV4kFmn5hBF/vX2Hz8ADfNXN6dD/agq7EU7OH8aAhXma/BDewGz0PcSemIXM4DTPv2JNf6Tgk5ApdQktNACf+2Ot7/HC/hp5BNgZgrfC5WG/NgoXMd/2jcgmuwN1nCpng1eoipNkNWsZbt3q6/D/ulM/AFrVEmI3+SNwsbrDAYFYslBP1V+iPz/95j/kn6fvMl6lNH8q+2e6WkuYMgXM0QxUPoKr+jG0DG+o4d4Y6RGv8df8+/GlMnSFnidnOG0iZPY1biJuUJebn4GHdemItE77jocbcYjVSLJFWdxrBKacdd2WM8Q7jf/IKvk2qi5aY/kUmnKovlMniDXUfdNRqCMpgkFzqxHJV7KfaOk7supNPk8EQF9RZBW0fMNvOAMhuncTOFXeI57icGCyelXXhm5DG9lu11P1byiRMdPdZofJvxNxsq2Kt60WwcQvV2t/5nQbn2DDlwU67rwT2gNb4ju8q5Ztzp3oZTXR8VsX9HzWRI3+IeBcfkaIKQLzm7YVPnykSheJh/U/kxkNoxDEyMX7MuRh839tukkev7B6ZulHw="}, {"__id__": "chunk-aa4abe7b9f2858e08d90c731ce8ed922", "__created_at__": 1760489897, "content": "## Taproot and Tapscript\n\nTaproot combines MAST with pay-to-contract techniques to create an even more efficient and private smart contract system. It allows spending either through a mutual satisfaction path (requiring signatures from all participants) or through a script tree.\n\nTaproot works by tweaking a public key (which could belong to an individual or require multiple signatures) with the commitment to a merkle tree of scripts. This means the contract can be satisfied either by a signature from all participants or by revealing a specific script path.\n\nThe two spending methods are:\n1. **Keypath spending**: Using just a signature (from an individual or multiple participants through scriptless multisignatures)\n2. **Scriptpath spending**: Revealing and satisfying one of the scripts in the tree\n\nKeypath spending is extremely efficient and private - a transaction created this way looks identical to a regular single-signature transaction, making it impossible to determine whether it was created by a single user or multiple participants in a complex contract.\n\nTaproot was activated in November 2021 and uses a modified version of Script called Tapscript, which includes:\n- Replacement of `OP_CHECKMULTISIG` with `OP_CHECKSIGADD`\n- Exclusive use of Schnorr signatures\n- New `OP_SUCCESSx` opcodes to enable future soft fork upgrades", "full_doc_id": "doc-aa4abe7b9f2858e08d90c731ce8ed922", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_12.md", "vector": "eJwNzolTFWUAAPC80GAEgScF79rr2/2+ffvQTNTUUShzqMFMQzFIQVBHQvOggwoypzRHM5MBXiSPt8e3u98eSGmjhkc6xliiU5kHiSJp3tlBWRQW9Q/85tdhbAwN3lVtLReaW4nvOl8h+zXGHmAaMzvxbe4Lz2FRwRPRQpGmGVuw0sC2UNi4LE+mKX2xFi++jQkuC/AtF8wKhLVs0oBfpIdwOfRY6xffv87qsNj0Mv2Te4iNa1lmdae3sh5gc6P512u/Uf6Be8IevD9cAw7j563Z/CpUbR0ADb5cXjdTlYFoubWb3M+fge1wjb0a8ew6YaW5If3daLwVCTfW71o/NFAgJbS2h9YJ03zJ+CSmzHq5yTyO1gh1/ChNi0qYgu2BS+pQI0GZyn1hGMIV+0VwDk0gF+1uZSe6y+agrTKjv0JlOz1ak5xkr+ROon5hrZlktTKyYYDvqHI1m80cPd99IXGWMRr70N7AQczjTlHx2+Qe3KUBT1HmX7Tfu0GZJC0gjlsJV0nTmBP4eeOY0ajrsbNgjLuAv2h4vc9YiajceAUYcKTDCF00cCo41bLMldQbLR3M1Iwu8xGpWv4TZuEeq19/zWW49+yx4XzuE5Ru/KzsC2fro/SNyiR1Ln4c33Moout94kB9kffXCAjY5Kz9MhxKsqwN5gV7fayzLp25G2uI7edHJCfC23DTe8/qSczbeC88QI0n/cFJISF6h0qRvk9ZSWLmHHsQqibXqDh2PhsP480D9DTSTi7K1eiCOl09jXq4HiArWF0F2n2MVcxdxZ3OU7Fc+YjhsgvoQt8w7n2jTOpXaHt3sMvMQHvBVbYPletb4D1UFDoszeDqzZymE84hNiC26YJgWjt8c+w4sYPLR7uBqb0US7T3eoY7lFwM8+z5qWuJl0ymC6SF/6/KSS/TLBaA/BRVGiVBZ4H/s5Zu/QfqIftPb6V0zdeuCXqSp0reCsdzT/MHYcjXm+6gpdQ58ThpADniLekUvkLXfPiaOatpu7cEZjMzScyVyETxDPTDSis+YSOXAsdw/vokUM2cEl5VIsZsMkLtFUpJifAlORXcwp0xwM5Farv5lr8Wt1mS/kdoMUnlX0pWuLl6K7+j+Sr8HNRy1/F0+TSXgT5QDoPTTJknVVyu/mUtAWvC+aJiFHC/cqWemWbuIBktRDlWgltsnQNjxUfFGqsu9hWko3E8i2YKTGYXbn1wOtmOtpu5dI5QYC1jPuLTcEmslPpY2CLlqcNhlXxbj5EKPFaZoSQHMkARHOA2WXP1N/kC8Q7sdhCMowrBVHG/r15oMF8nKlmqHWTfoq4LI6RiZ4dQDAvdVFmwB1t9fCkuNPcHXHQ+dFTfBmYaRe6+2ha6glCkzfldT5GGNGqKK0zRn017muowE9AG3qMB9z7QJxzlvmRPM7eAyvfKLe6bsa5gMr7pzGPy3Epbt09SsyyDaPjrplVNXeJ3nE/yiIfgHX8uhsquyGCUJfYYNcaNOk31AjXtMXTT2UOOCJMVl8V8mxIxx1msG65TA9/qH8fyYO/2fSmDQP2OW/hBb7oTsbNxQ+Ypax4eJvroeVLJh5+aZdSmd5vJVn09nBi9DCjumK/PfrgxxfxJyLVnCZOMub49eoeaL8U7l2Fpy2a52MkTVxuYX8E+wtPSLTJbfk6cJiXg4WKU7gw8QJZIifACKkbfgnTSxg1pjpCdje/AZXCKhf3bwpiYwnh5OZmhzQ+NC/XrVVx7cI93nfSwuMSsNX5j1qggVEW61UqrS7sUCNpH8DUjRdaSP4gWwoncwP/aCaNEutF0Hg2HUfgYOJ+RKP8TzLK+N13jOX+L04OOZlQJZfJGuXj032Bk0NW77CnuIZ1jKviL8jn/j9wlMNtdYTwRqiE6G3Ej6hg3yy107pIOMsQTCCp0rr2Zp0WWT5J+VtLsDmaxlsA/gW6IJaEnmRWBVrbWWITnaBOsS83V/v8ArFyeKA=="}, {"__id__": "chunk-a31daa709357df55f43e72990836a70f", "__created_at__": 1760489897, "content": "## Scriptless Multisignatures and Pay to Contract\n\nTraditional scripted multisignatures require multiple signatures and public keys to be placed on-chain, increasing transaction size and reducing privacy. Scriptless multisignatures offer an alternative approach.\n\nIn scriptless multisignatures, participants each create partial private keys and derive partial public keys. These public keys are combined to create a multisignature public key that looks identical to any regular Bitcoin public key. Similarly, participants generate partial signatures that are combined into a single signature.\n\nThe benefits include:\n- Constant transaction size regardless of the number of participants\n- Complete privacy - third parties can't tell if a signature came from one person or many\n- Identical appearance to single-signature transactions\n\nPay to Contract (P2C) is another powerful technique where a public key is tweaked with a commitment to a contract or description. The sender adds the hash of the contract to the recipient's public key and pays to the resulting key. The recipient can spend by tweaking their private key with the same value.\n\nThis allows the sender to later prove what they paid for by revealing the original key and the contract description, while maintaining complete privacy unless the parties choose to reveal the details.", "full_doc_id": "doc-a31daa709357df55f43e72990836a70f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_13.md", "vector": "eJwFwQ1QFNcBAOAgomJNqoLlOO6O3b39ee/tEhVjaFNq8I+pg000JBIjE9talAxB2gii1qjRkh+VCggicLe3e/ve7tsfLsEkEmtrUFsxMIbUmFhIZfy3SjNhNJqJVtLvq4ieVSJdbzq8rCeG2WWwJa2GPdJZA215Cl3JH1e7+V3xnbAyZ4KV4eXRNVRTRPeWAJlt+ibzNFNnrmcbrFznEh2Cm4K1blH4ff4O75FRMxX8G/9NKRcHw/s6C8XnvAVaH5ygXII/qK/wm5hWXYK60hwrVIZD53C+OR3cl87Z04xfcrfhCF4fmr271Ml35ktX0WYmRk/K87hCpcg4P3XEnuteyFlDc8h0dhKSvVzYDQrAA2sDLXE9fINp5YN75vBHcbOwgFkVr8UtQpTuZK4bV81F6CQ9xv9e+MCc7Haki1IVrparrD8lZbMTvD1Y51LVs+K98DVU7JnORfVr/Tx/XaijSzveZLI6N2gV+FU8TpjMpvG/kd5GA+p99RCYYf/aPJVTHzpMPsAD/N+d2/YWPllZH8iUnrbqySFaLb0AL5LIgYD9PtptcVok9l/QwD1qHhMHgiX4n83rKFDDsfbOy499bK1zfocma68IyfZRmh1NOH4GWVeUT/FsgLWHbEjpNTbQaVYpWGUWx5LsQ8ZA8BIsUOvFV4Ul7f4fc/Yn4WLypHbHvOPdDSyOTzJ+ylTjUrlb2yB0gyLmjp2noxgB1W1PmGMzZijF5vRACeqI/sg3ZBXx1/gq/2tiTEyKvwcPGk3cs83X8ezoCLcs9IJWLnfol1FQaw9lKoVstTNJKqD77ON0Akkly9B36gN9DvG4SnktCet54Mlo3Ocwc/gU+Tz+uXAYnkXgcVmMtp0MDlgPs77JlCxD77W7tDPeTWmi8oRwyudQJuKzJ4rlXglsUT6ye1rFxEv2pvQ/KkSWaY3XRaqjj4hfZs9XPle+cHrJfucCdaMZdMhfCg7HRKOfJDmrWx6VvpI+xlPEUSERYJR57So8gXeAXvaMUkJ3wHQ+xenv2N56OjtXU/W9XrLeL9yXdXFvPOFPGMPp+4IrTBkuwZPQipZ76lHrWWEKqiR+WEobwJi4mC5/d5Z62fxSLQWN5Bv8rvKtPf5AD7v6sVUaESCS4NGOJvb+QcJMVFiYv/8Kx4U/438BJwb67C3iLPg9/I/pZK4mg3xj6HV7kdwDy2iq2e3NEmvQZLjSg05x+POD10CjdBDNyDl24Ldti435yvmWLH1MrOqcCl6G5YGOhozsGxLIOW36+bnczphNcq2/ZpzQ6jJSwC5wDq+kW2kfexu+Lfm8RPbc1p0gTWhiNoefT6TQZuOyb7Pk8kmoVenDC4QCWOHVcH1unfkWajR30R/03OhxboppCYN0zFnI+skn1jhzRL3XtoLvtKqsOfLX1lj7IjgcbNHTw89pN+2paEh4kR8EtzKb0FZQOV70YsFxmd/Fe70qyRctdudhiAyab1nZg8GL6tNwVBwBfeB7abr1ln8RvqhvUV4KrLX+kLkrbpgbxXFZa/BuN0q+MmpDN36C0CzRinSRWucf3Hi92P1QWwI+0/Yx/wtfylrlVNB2O91uEK/I++2PGm7JQ2q/9E6DhR9q03CX67MvSO/E/fKwvkb60E3RY+bMtjTyHnJYFNrrvBFAoJ72oLVeV/ANtx4eoQ+krWwy2ijXOGWCAf8Cr+Nb4CnlC/YuXaJcAS//uRGeYvJoBObR/e7j7nZmD9hDt+GI7Bo74EaL2Hfx9oCBboZPBKri7ThJrpB/Rp7SvbblzDR0xL7WkqouhSeEiJfvJIT17ungWNNClA6T7dtMoblAuet/HljBflgWORUo4L4VP8U3nQb9DCn31qFtNIn9lZ0gaZF6MipeNR17m/2aszJ+IW0pHs/XgdngEEkye9BCUi2OmrJxwF1ulXmQ2+7MjL/uq8VS5zNikzBmFfkGSSp90XcGzESa9AxScmrYR5h/tfti2VoZ3eoubqs0/w8iQqtv"}, {"__id__": "chunk-3c572284ad0d5e886e8209c9a5417068", "__created_at__": 1760489924, "content": "## Transaction Scripts Fundamentals\n\nBitcoin transactions use a programming language called Script, which is stack-based and Forth-like. Both the output script (which specifies spending conditions) and the input script (which satisfies those conditions) are written in this language.\n\nScript is intentionally limited - it lacks loops and complex flow control capabilities, making it non-Turing Complete. This prevents potential denial-of-service attacks through infinite loops. Script is also stateless, meaning there's no state before or after execution, and all necessary information is contained within the script itself. This ensures predictable execution across all nodes in the network.\n\nWhen validating a transaction, each input in a transaction is validated separately. The validation process copies the input script, retrieves the UTXO referenced by the input, and copies the output script from that UTXO. Both scripts are then executed together, with the input script needing to satisfy the output script's conditions for the transaction to be valid.", "full_doc_id": "doc-3c572284ad0d5e886e8209c9a5417068", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_2.md", "vector": "eJwNzotXFWUCAHAlfIeQJHDhvmbmm5nvm5mL4QFR28w0a9XUwrRQFrHVzlELXCTZs+v28PjqgeiKwoV777xnvm9mwBeQuvg8aD4CLPKczlrm6npioycqqVtav7/gNwtdlzr32WRFZH/LZXYjLKlvJQ7pjVRIh82fYwNmCbjVcBlMitwDl3AWzsP9kWNkfVCkP3EoOw+UKbi+Vt1MdHKEsxOs26j9EX/ORTCLIfo661xukjzFFJr76s/izepysVVaJyRZ6Wi48SVpk7IEnZGlYXAbLsfn0Kg6WetE080/0AxADQepUUY2roqd5a/iq7hc+EYbz4801uO4vdialvs5NVfuYUqEt8hIfqIyARSaA85d5+emVPijtknY49+qxZmkxqj/tv0Cn6IMBl8N/T34Bupgr2IXDthlhqgNZa3wDrbKmantpnPdhFoHjLoi/yF0C40wZnhY/sQpY+nENfdRIDzc4E1N6w3uZKsSK9UTqLspxCWoaCBDoN0VIU46Ak/V9sY7wK9kRMv31D6pHH7J9jkjtSSjwLcUyqGTYMEj54VXyX4z3/uHNA8u2vFKxgbqT4kzRrPHxMcqjv3ASCa/uGMgjk0R5+CE1R8vJ5ONHKtaWoeL0SmsKGbkf6aHjwX0PYVOOuoiOxNblUw4iqyHVbF7zAm2i7SAE3a3UUlexyvtO9aB8GKzPPvfUrIYZZaCs8IF22Uq5debJhn38F05C23C5wwbtqXdAvsa8scp7EI4NnA1frR+snTT+DSY4+w2SH3hxmS6kn0l+6cMhZ3E/2BNE5tqrzjvoDX2FuOGehzdwR8L48yb4H7TNNUTnwSj9aP6EG87e486BDqoOdrFhgVSAcdHjqtv4kqlW36K49UNeIf/gDOcnuwVSCnSEbQabHKy8UvkCGxNjAVRNs86TGU3p9fMj6+B30LG0UiaZrDTjChQYBzNxt+hFNITmwVGEC/wLHy8sUvtU56htik9gS+sz+AVakzwod2l6Dn/AdhNvgLz2SfQaQf5H1FMu1J5X5sbKKJXm5leb7wXDEq/iC16C/TD1OBM68+4lOsAp7ajxjq5N9rZ1IWWq3VSvdLWWMpvc1v2FkXXkRk7z7NbnQNqQCq2SoUS9lJoO/MgJxj+EfnAbboVpzAcX5azzHxLuPOo4hsUf6C+I8mBeYIBL1JJii/8KTsfFlNXxEwxGXuk0lnVCCcMSv/Fmcbd8ItaAxwCFtZdRz75PKjGEpes36cLf9/noXhgOvMOayBXWBKZhMXwSqFO10A+9Xi8jVlj1qCaYG5ihfx24qJK4DihGpvgCW0AvcefZoNUXvM+J0qqlSWBa3Qrm4pes7ZQpWgq6Uls9v5F9HCv3RM/88F8LsB/r34E8/GgJ1BDTS28TF0RlXQmSzIDrsQVye1gFa8YS7if1A9wNv6MHZ/eBw8jCjXLF9D+qELey9wJf7UqmkezdWauW46/gZv1xV4qeOCbgdfCdqoffQF1uNDtM6eG231pEmATxn/cAasm542GeGyM8bajaDNCC0IT2Ah0jQKHxu34GMsb+eSm8iE/W58CnqKeMy2SbeQ1Vzhfh6r4F2JD1K3SZX2BNExJs2u54fwFp4ObyZwxaDhMJ8xMMtFKmOv49KbX2CVhRa8wtPh5eMNeKuTsVXCMdPP3nXr6YJbFz5HarS5YyN8A75MA/61ogwC+NmGs9BCaBU/4gt4DOm6mtVh4T+xu0w3yl8BjkdHiQas6cd045N4K7+U2Ms9zEjtPMUVGeNre4CwydxnDxGJTBidNkVsefp6stGn/9N23/V/JxSiqUxZjjTEvSXPNErjYb6J/PrxWfZmbI/wNp3onfWe18e5UIQWkxVfnrCK7jAC3HlVonWaJ9Vc3TB5rKMDvyseV/Xs8DJ3ZAnDbYQZZhDtb0olkj6fL3LIcKtRvjsQZcJdYZD2LavFasy3t4rv5YTbYDy8Jy8NZfI2/FZ4xWY92Jjr/z/wNrV2l6g=="}, {"__id__": "chunk-5c5e30c0c97c34e49b9d33a1d923bbb2", "__created_at__": 1760489941, "content": "## The Script Execution Stack\n\nBitcoin's scripting language uses a data structure called a stack. The script is processed from left to right, with numbers (data constants) pushed onto the stack and operators acting on these stack values.\n\nFor example, in the script `2 3 OP_ADD 5 OP_EQUAL`:\n1. Push 2 onto the stack\n2. Push 3 onto the stack\n3. `OP_ADD` pops the top two values (3 and 2), adds them, and pushes the result (5)\n4. Push 5 onto the stack\n5. `OP_EQUAL` pops two items (5 and 5), compares them, and pushes TRUE (1) if equal\n\nBitcoin transactions are valid when script execution ends with TRUE on top of the stack. This simple arithmetic example demonstrates how scripts can specify and verify conditions for spending outputs.", "full_doc_id": "doc-5c5e30c0c97c34e49b9d33a1d923bbb2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_3.md", "vector": "eJwNzYtTFGUAAHA0FBupJB88vIN9fbvft7uH5mMoewhGKY6iBYoYpDiaD3C0FGtMnXyk+SiBBI7j5Hbvvm/32729LsJQMZMyER1zUilNJNHE0UZTy+yFTP3+gR+DIuqjje3OSnVrpF1WuSxzP7XCBzzD1cnkKTSnZlP1n8REHWoKM55m2qXaOTUd3wx+555leUJ5QqurnGwcUBRWwqLq+BR8KXiRvCI94/PrbniDLvLsko7C7z6xdAVvIHHqMk+vnGt6ocG5cZmHoDYxRzmBnGHzfVhpx6VkD5yi9ULr8ULqhSdSSulWYxvy+6rwRtQfZ4M6/VnSTlstLn0t22cScb9y3Iqvq6xLRp0js+jf1tXh84Tr1gGpB15jn5A6QjkuasxhJj4u0bdAF9yjXk11Oyq8sDPLSKK/sAPZHa5Ci+ru0Lfmdv623ht4V2hRXpNf1kY5lYnZdMjwajrdvsbEunOdGCZbGhiYHirSpsNoVQxzhHtaa+MHEEUcr9ajctJIj8vvOUsdDRxUdPEfcZ59kezzHqIimiS9J3nF3co/xiE9K5KtHBRv6jkkLm11qIAsdbh6j7CPlNQ+Ygn2ZICNWnlmWA3e96/2P10323ozfTFG6kF6JThY3cEk4N18THBTaIL4IjlA8vRL0kB7C4qyLeBb/9pwMG2V3d+33FaJ15eOba7YlcDMVVcop8RXQzIaRn18ScMHYlWlK/ShacqDjA6sofXCA3EDZo2tLoxsyPmxlKbG0O7aLroc+8hqbKdNBbeTf9d7wQvaS/pJuV+g21wA7xoL9FE0T44xT8C++h5SKzYYO1Ejs7XhHP/Y/09IfAru4IqJGOpTwoFF6IVt940mkBHKFY9pipnPT3fmM5HwGlVDQ2EcOhB+lj5n/8UHtHXsedYiOex450zKV9wq4MeHaakZrujhhhpxepNaw01K3iL57SQaC2ba84UEaR94i44NRoXL2vnUz80eaTa4XsMGgugj5lMe0zbezZ4Sc41VH7dqCWT7yGIuhikR+0zZbq+bB1k1WX7FFStfDpbv8uK8IAkuECrMTr2TnK7rYu/JbeY4+Ywu+f8VBjtV0dsB08hsSPOeIs/oRG4ykPyuMhEsdLthBhyiLEbdfIh2SbPVJbun2HPgUJCAM9RL9REng72qFMv3+QXBZvYIIOgabvY8lBda7zvLaBZc71mkSOF1JB7MIIuBxUbN7WoTniQ9aY4RDgtNldqQO8ZRoREWpgZQXPxecU16kRUfPxdtp/cF3lwVvA5kcAudr0vyliWPMlzUgn8L86yOEUvMuzBdbEN5+Jgzy2TIWa4/THTnwQ9l1jjH3JLeCWVW5zld5KG/2jozIqTFoQr4GdaRX5ciQeGhtjslW1d9j3r7JZ6mXzjjpIBL4DvFh8YJMCzNMC7jQjgZJsod4kn4Et6kVAovh3+n+ejten/ke95iO2kpWYKI9pcj1/JJLbQluZA/LW+EmWim9YBslra4itFPsM38mnL6Y/wacI0IybnmNqMFvMkMEGPl57WzJGLtwf+K0F5pi0areBdzQAHL8XrnBt4W6XKVhfLhentc4HU1k+Zz1Q1ryRbghhWOXxqQWK9Xy3PNqPANeZvUkHzhplUpvZq0zv2BifAEpTrcqiyKvmEX2YIg2RvAFPNHuVw1jRXMz1IPc4vmsw4q4zrpr54ZCgcOivNHrg4P4o6Yv0VG2M2BKzWV1mRwVylBu6zRQpRkOLP3NghjhsfBnXIJ1yAWCPutafa9VBVvhrOoC7Thwakn8R26z3qROZzSoq1ryINvsL0kM8TjxPRfBQnwYDNI1y0dSheUL21vOE2fSKfSzwADAwk5RoET+3FnSg/o3tuP3tBarEbaiDPq93gxD8g7VpJdLv8RPit1GpWaHimgE2g0UGdPSf5hbxE9S5dIrfJYswC0k+PWc6l90lCxm2+GtxWndpp3NKniZ1oj7ebwXOsK/g+fNKqq"}, {"__id__": "chunk-3da5666345fc9b3f627aa09ec966bcd5", "__created_at__": 1760490151, "content": "## Pay to Public Key Hash (P2PKH)\n\nThe most common traditional transaction type in Bitcoin is Pay to Public Key Hash (P2PKH), which creates an output script that contains a hash of a public key. P2PKH is the basis for legacy Bitcoin addresses starting with \"1\".\n\nA P2PKH output script looks like:\n```\nOP_DUP OP_HASH160 <Key Hash> OP_EQUALVERIFY OP_CHECKSIG\n```\n\nThe `<Key Hash>` is the data encoded in a legacy Bitcoin address. This output can be spent with an input script of:\n```\n<Signature> <Public Key>\n```\n\nWhen executed together, these scripts verify that:\n1. The provided public key hashes to the expected key hash\n2. The signature is valid for that public key and commits to the transaction being created\n\nThe script execution first duplicates the public key, hashes it, and verifies it matches the hash in the output script. Then it checks that the provided signature is valid for that public key, thus authenticating the spender.", "full_doc_id": "doc-3da5666345fc9b3f627aa09ec966bcd5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_4.md", "vector": "eJwFwQlUFGUAAGBPFB8KBstbYNldZv+Z+f9/ZvGWpDRQQzsEScEDQe1pXkVq3hZeT4UwEWSRlb1m5/pndhbNK32UV5qaed+lZLSakqbWU3lY2vf1AHF84dfmkNn5wsiUDuAib7GlwBjnXAf5UBvzVKarT/iiLLdhu7rNmCBGxP5Ok2FlViXdJfOpvK3V5BfwkZZhrNPu8aWmLIc5lMxMq58sVMnU5hKBg/P5StRJX+u9q3bzNDM9nDuxaOu0fZI1LnAKv+SXbS/gS2AZmezej5e5Kn2tqRdAI9sWfOKPFR6qe4wmLh7Oot/1GPApdQ1/oazXLvrWqJn8VCFGPia+lv5KH4gP2N9D75NidZY8R2uz8NIK+jBtbfCiUanv+L2BF0kXggPFoVvWUD6uVrogVKC+4iqDmG3ode0nvMLYqxZQk2yK4AtEydnsdNgGd0jHtWw6Tj3KHpUuCu8oLWiksQv8q1zwLkDt1U/hp+wMeNraLm8AJv0qszidY2sCT1QbeqYfDzfj37m34B40IGG543fxpJSBY5NGg8WsDw/R9lLbQ5l8Df1Qgg5r2jQyIG2qftP9CewcbpOOStkKB2fJJyA05ol1yuD4wUw6OItxShJoE0pAJj8QJZKeshvI9cNsV7R4sigNgbSqFpwHZtO3bePUEZ7Hut/dSylqbKtfTb0IlvceXx3hslxBkCeV8e1qE10d+BAvpfK1PKUB5wQWyC40umaj1akn2Q32gOUvqh8V7W+GTr2eiPI3JFN4mfhZMJGys2XWvdxY09vKSm58bZ/QILA+1F+vlFfUI38ZMge2Cs+9BxOKme+FXEXBR6QlzAfOBfgxloLncRguAWY+nl0sL94Wpxa5X6Vq5Cs6V9+RNDusQIq9QZdagD5K7KRH0W+o+aCDo0IfYIuEz5FG8Aj1Ex9Jj4z5wmqHwDjJY74Xv0CbYl5o3PH9Kk4MzXRsh/17az4VPBFL5N2gjt5py02+ZhqZWsrtlp0cI/YGZa4a2EHtjMbQXeVWEkkpAB0Dhao/NMTPbvqMR+A6kYCrfCjY7Plcesg8pf14h5Rj/ZZe7TDBbVI8c0ruUd/fRZMljeeCa8XrbHe2VG5V13KMdssC4OXAFX83Oo9+iAidDtxaFiiG/+B9Yiway4rgfTwU9mn00+NRNp6qdAiskpvtf3jCOs9n8bnkgZqj5gCG3wyjjBnMnykXPd6qk7wOzvMVNQOZLOU4vpMaa09PiAsvbLjMUN6IlOT9Elq4eWQCWcrmy+tBuy8EdyhmqpyNTV7qdapbZbdbAJXUm8pUcHvTWYZHblzr6GGUk03STZAPRqPX0BisyTc6fsHNCXd0lIaeK7uS5+q65O9yjDqEL1kGoUKSHVaRIZ6Qe6ZFK+0ujqmQm6Rezmo3oH21Y7Tl/m3VpX5X6DCMSPvNKUyMfafHKjxgMvSuX34HuosJ4Wb4t3SQOIgPbQrlCRtMrWI+6YduMc+ZprRKvruuK2nqIvEeWuYdRHZpffVn1i0oVzhNspV5ShwotmmMAhfZ3WQiOaLfhxUwRruUdNjvEAo9j+DGYL7WVW81VqqDfHOYK8qMhmh8XDgDqxu2pI0Q3FICSSbDYC0ZzdHKMnaPbleWB6Faoo/C3Wz/BMplU91cbhxpQSMah4uvtLX0EE1h94RGogPOO8o9qAML215XBLs4TQDoYe4+u55ND7QAmUxg/1T/06RQMTzPOLXYYGf+ljRTbFUnk4gepfrx/vpXgcqUicIplMC9p/5GWtzPQTR7VDtk+UWqb/i57m0lTxrshaFoe1ffj/BTmOANSeuUSv6Yo7jqEojBG5QtWgEncvGEEBNcqE3SXsIMn4nJJl3CNqmn5w63xu4l91VstItFwXPu4YnJ4LZrjbyPDEWlwdkp8/W+zFW9QR6hxTA52kqqEES0v41RcCz82D+d6q6fkescFfAB/QNzE7/gpqh3mbFyE/gkMaKwRiyB4v/nQ6XS"}, {"__id__": "chunk-c1b77c280d289e092e82c2e0c27d9323", "__created_at__": 1760490368, "content": "## Scripted Multisignatures\n\nMultisignature scripts set conditions where k out of t public keys must provide signatures to spend funds. For example, a 2-of-3 multisignature requires at least two signatures from three possible public keys.\n\nThe general form of a multisignature output script is:\n```\nt <Public Key 1> <Public Key 2> ... <Public Key k> k OP_CHECKMULTISIG\n```\n\nWhere `t` is the threshold of required signatures and `k` is the total number of listed public keys.\n\nFor a 2-of-3 multisignature, the output script would be:\n```\n2 <Public Key A> <Public Key B> <Public Key C> 3 OP_CHECKMULTISIG\n```\n\nThis can be satisfied with an input script containing any two valid signatures:\n```\nOP_0 <Signature B> <Signature C>\n```\n\nThe `OP_0` at the beginning addresses an oddity in `OP_CHECKMULTISIG` implementation: it consumes one more item from the stack than expected. This \"dummy stack element\" must be present but is disregarded during signature verification. This quirk is now part of the consensus rules.", "full_doc_id": "doc-c1b77c280d289e092e82c2e0c27d9323", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_5.md", "vector": "eJwN041TFNcBAHBpUAltch4q6MFxe3v73r63u3cFJFMloGMxiVPTMYpIjLapHdo0AY35qqKOGtqgEwIJFJGD49iPt7tv3y06USIxEULK+BFFg1YlRmOjtlWDVcSZUDpK2t//8KvRupT0/X8zu4WWzu/8efhLThT3uQ3gOfRsLBrbYJ8RM6gqtyl9Rg1ZnzhsL4w0Bevh9Xg9XUAfB71q+YzNiYj7mGvgoubjTo/xfFMyKicXjbWal/wZj8NBf+2+reiWcx+8IoziHuUyuadvD7aZZ9E/4HlnmnRTq+I45zzwowtWo+AEHsE31ddVwLXS7aY/eERp4KnvqfA7IABN9RhZ6xxgT4UFtZj8jn8AF3YORIuBByWZu5wnnaeth3Y59UVPowr9NXyFlBg5+nW8itZbKx2P0wdPmK7arBfS5M6SWCVaa5eE+tmjoE2c4h7l0+IFdJK6AuwV+mg3XeY7YF03Z3ScUfezEfCtmwtM+MB5hvsPWQyt2HTwcXQs+w7YqJ3U3o60Y5+5Vq+R32bZ5mWwTc4zf4Y+cnLt/Pi/6F48RciQBxP58qv6F3vq0uOhOiHddGGOkEr7jTStS0xCfveyGSGS9rH4fMdO1E9vk2xrlD1sLmPbw4Utbyn+5vfSL0gPrV322Zafg3cNTZxrj6kD5EOcwd/nKoTvrVKYoNlBnz1q8Yk42yZcI53x5VmrZlxAQ+CukB8akrfapejz904LVXqyWRyvUt5xcqZ9iYD/cOwE26VPZJfOGpd2QEvNx5OoxzedneKq6LD2I26n9QPqgPMVYpSBb4J9pkwPSFMTy9Va8wxfoM8AU7hb0V71PMoVrvk3OrWokKhtlrVbyxE8eg+YwJekBUopKrCigS/I+6iTC5NzYmViIjDfrcb3UBxprS/Rrzru0FOwyJ4uFSiNFAfzEsxYiL6R1hmj+l12V8hEF2efbhElIzzkPYKS2bgzFGqlYYHAi6DG4rxe8opRCFT1E3E3rBB3xrzybP1bfZ99WAqJi5WlRr3ydOYbdLqxmorgEHqd/ptN1jbB38oq6jLXiB/SEYGAQcKJPvgpWkb6vU2sjj8hL2XX5Hx1Jr9aJjbee9uTbt41t6JuM+DvU47TSUIS913WT+LF4gZpDIxBJbQ5UNzGwodnX0zZAM/MetiQiry7h91fyDXSX1F59Jw4KV4m1GW+lLiK/4mKWYp7UN8D35LuyTvdJLcRR+06uBUswOsjT7QW6wVaduh06LXgFdDFpqEfsNm4Q9j0/zsdylDKYMaL6tL4SNtPjQhdpJfHR3w+sIWspBWhZWoyysHN7j3pWMsKRUEvoD2c44q0SCjk10xr096UGvFc9TP7En+drhREd9xuElcZx/Svm3aYi1DAyYNTnePOwfjMwHL2XyaaN6w5aMLezJrhrzpYSygr3zqGRmXVukpU8e8oS6oWRkEOWi4W+wsT5/klIp85vDcJfuDZwN6k5SjPTjWejC1Sb6hzyXjrOTylfSPS3U5HM1Zzi+Vs/ICdajgUmGMGUB6NwGb6CO1qOR6DaDYOmlz7u9ZvaDfaQutZCbmFNgUHfc+mzflgROdafsxeJkkYh59wc6wuuZ1+FerJ+qXmFf5olbIiTx+kji1UkxFtqlMbf+DME48m1qEuex6/xBXRPOhLLOI+cx9Vk+gbQgnbhidbKyRFGbBMGEVBeYnTBFKUv4Ay6gnn43V8L37V+kitxN7EKaeS8lyaMGzeN7uVgcxr4tfuZHO9NV+tFD3wJlj4eC/plTul+/FGkssV6EjanHi//SY5hw+0LqAv2zzqsCbjZ0I9gS483/e5ebX9xciq3dukqqb9skf3qelCI5ipHklQeoceTDQo7eiGcZaWu5cyDtkVMM94jKWSNQylx+GY8Sf+E8T4VCZTURkmW7J+zaB+m1EaZnVtJ0lZLItLM0s7r6CB4Pckl/+9lVp7dNZz3AQGqEiaGun31Rmz1JOa4FSzajuF/kH7H4s3qtw="}, {"__id__": "chunk-a947eda165b5dbe20a6274eb24b97b7e", "__created_at__": 1760490163, "content": "## Pay to Script Hash (P2SH)\n\nPay to Script Hash (P2SH) was introduced in 2012 to simplify the use of complex scripts. Instead of requiring the entire script in the output, P2SH uses a hash of the script, making complex transactions easier to use.\n\nWith P2SH, a complex script (called the redeem script) is hashed, and only the hash is included in the output. When spending, the spender provides both the original redeem script and the data needed to satisfy it.\n\nFor example, a complicated multisignature output like:\n```\n2 <Mohammed's PubKey> <Partner1 PubKey> <Partner2 PubKey> <Partner3 PubKey> <Attorney PubKey> 5 OP_CHECKMULTISIG\n```\n\nCan be replaced with a P2SH output script:\n```\nOP_HASH160 <hash of redeem script> OP_EQUAL\n```\n\nP2SH addresses start with \"3\" and can be used by any Bitcoin wallet, allowing anyone to pay to a complex script without needing to understand it.\n\nP2SH offers several benefits:\n- It simplifies payment to complex scripts\n- It shifts the burden of data storage from the output to the input\n- It defers the cost of storing the complex script from payment time to spending time\n- It shifts transaction fee costs from sender to recipient", "full_doc_id": "doc-a947eda165b5dbe20a6274eb24b97b7e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_6.md", "vector": "eJwN0AtXFFUAAGAVyBQ0UlcWd2eZ2Zk7c+dlVlSWinak0CzppWKA5hvTQC2NiqP5yvKB7sEHC+zuPO7M3JmdJQKLwkpNzbDQhJTwZGZphWalZpaa1j/4zve1b4LAvLvL7hSvJxYQ7Wwh0cNqtFvlXfJRU4EDfTvBNSoVTWMXmO8ljtmJ2HV5lHVvoIQsUD/2Eow//p7/RZzkPms1Cp9SAL+OqWA29QOS0LUqybkoHpZ02Ba3rN5uhfkVzJLeCqTiQWZXsmhUwrGyTFyQM6hb6kHwL3whmq1+jVRfHrMyK0OVrUJnoBuAW8EB7s/oCXoPKoA/Wt2161AmPi91mxpdgCfJo904X179MVmMDqA/8COYg8XhOdJrQpEH83t2zKburUvK/DxWrT/BAmKLPNs4ZuTyBhnCLahTGm4JInZXGCeIN9FOc7pXjuxmUqDJsqh/wlE/NEv5FfaP6szALea3hAyomvuojWBj7HKwzd9fWOIbZ+Tdsd6ZoVTIvDJZv4kkmGR/4ybzo4S/2Me53obXU+ZLsxZyneg6eIacBF6zvu/9YKJSepTuZHaRf0NROxPbZ/vQPFDmdsUonBy5xB+hMTfHXI6uGFOs3VmbvH1kKpgJWFzLV8hz2N1qWJsCRcMJdNvX6m4DmXCR8ZGYH9YYgkg3e5GpzhI9oa2rz6eHsXnK++aM7R9J0+hz4N9otTgYC+wes5trV3LwY7iHWGpMxbkwnU4DO+3GmuL/l/swe5nbwWZhrZNnKeZ+/XniDibFsaIzYSh4mj/qe4n4WyxSD5oZfEM8zSnEp5k1NuKLlQGRxeR47V12lvKKLYgZ+lJIS8/f6REG4+XQJ46iPFJScGZ8FYGMr4j1/lynYdUN3BDsmdjHf8C/DDygCH2C0h2CPB9/I7Mc7nV+UsvckN2Hkvi5Ndnx8bhFnUYvhr/oK6UZ3FLNX7febVIuEIVOSaANWMxQ5SJo0P+gmlkNQLM85mVPherYaOavXLs1Cc5Q/hFeda9xWC1BpfbUranBfVSjscfuQiO8ZdJIPsdpprcMmRhJ0vN8X9ABsAxeqn14yFNCO9GTqzXzuIGGWlfE7MPT6w17eugBoFApuMDeJbyC53FzI4XoO/8aYRlxkj1BP7S11Ehnkjkvvx/fZCupJ/VzfC6TSHQIhOAKbUqb1kufsO1qZGy8vzRa+N4aFT9lNzEdcLj4mb3R/7MnrJSBdqkSbpCE8C0yA3P8tOoviVmD8tz93HPsrMD91krlOX6dHLK221fYoH0qeNX8hhyA+7ImXLNlzMC0SL5aSvPsbP5D7RA50XsczGMeyRpELozvNW9oLajNErkX4HHhRbqYOSgMeycHuIn5Vgg0GJV2PWiuultcHTgseXGX20/qNgTjZSobj9v2M/zWWKxvlm7b3sX+Hq5wVKZk0Ey0zW5mJvhW1fXUUqjjzEWjhcVGnjWaORrrFy+iH40dN1uRDIfj1tjl6rH0Aby2phU28UPFyXCDXReo2r40WCBabIpzxHrbWuL9oSpfy0X5WLRWK/3UtcIisSV9YTTXDWEodWsb4h36CPooKtMGAzotHU+Or3afRlmoSRit3ySni33CI/0ZwU2Bq7ELqC/KNCpBfrSTH6weEfzuT7ivNVTbge7hs9VyxEXCscv8VsMHptaP7H/T2UiewgBcsbD0sOzRw0w53ynOwWeFK0JH1iH7pHhMehNWaauAzx2hyjiBJ1p9+UPcfNSjrkRIkLZWZZyMNjsV0V+kb9XDvvfVsVa9WMLk2GfMnTRNLhdexVGyH64x5zOLY+dijWCu8ZJ1T6QHnxFsRQ8A0pginQZTMj9jz0jHmBvYI9zFj3B6ObdDZN7vpAuz0V8itC6hZcqmyl4Cqh33vyDhuMZTzBg8LPkseV/gvLUCPSnd0MYoz7ibgw8lrluHnBx+gXk4Nj4E1dT4GHatMARtY4JxDoeD2eInTBQWME18mdPhMRA3oErZoXsTz5Lf6f8BKh6gJQ=="}, {"__id__": "chunk-b6baa0f7041e600d489344c87430c4a3", "__created_at__": 1760490337, "content": "## OP_RETURN for Data Recording\n\nBitcoin's blockchain can be used for applications beyond payments, such as digital notary services. The `OP_RETURN` operator allows storing small amounts of data in a transaction output without bloating the UTXO set.\n\n`OP_RETURN` scripts look like:\n```\nOP_RETURN <data>\n```\n\nThe data portion often represents a hash, sometimes with an application-specific prefix. For example, the Proof of Existence digital notarization service uses the prefix `DOCPROOF`.\n\nAn important property of `OP_RETURN` outputs is that they are explicitly provably unspendable - there's no way to satisfy them, so they don't need to be stored in the UTXO set. These outputs are typically assigned zero bitcoins since any funds sent to them would be permanently lost.\n\nThis approach represents a compromise in the debate over storing non-payment data on the blockchain. It allows data to be recorded without permanently bloating the UTXO set that full nodes must maintain.", "full_doc_id": "doc-b6baa0f7041e600d489344c87430c4a3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_7.md", "vector": "eJwN1AtXFFUAAGDKB/igQDwsi7vL7M7cO/fOzEIqaCcNEzPPqh1BrZASSivz0UsUUUwpAU3REBF57s7s3Jm5MzvoMYWy4wvKsnycUlNLoxSzsqNW1mpoUd+P+G6jG1LB7spIQBhp56eugGuSPtcSrV6hT9AjM5kcs0v5ks5hXwUmm0uzaCLMl95U62GptsrkUIO4Up7lusEvsTOMs6CR+wYUtfK1D9fdT1qYAyAaHOuP44vRXXstZxPNXZhe61/U+gGp8B7i9lm/SselhOELpHXSZ7pfrxGjI5YEt4hhab+8IWXS4OVwf6jYmEGiXJTfKM8XbVcrXsD2NBQaNeur0pen9bOu47lwQcQvJIVzmzdbKebcSIL+ZDCZDMKjxfLQY2BmMJOkWtmCT7tDoj4gZ0sdRjWdIoaMt5W9IIzzGtPFaqNY7saXtFxT8VaZ10CncBxnmZT+gWdzbwkO/R+zJeZPGGqbxq93xcsdfP+0+eiw821mtjzBQPK/2lK0EjUJbWyjXSDsjoBdyxmN7UELt88hdfpmJzauC0uCRfC0b5gfmqO4qZHdYADOrl2lVUpXVXeox/rW/S6KtT+gyJyqzwfuEPGdswrVeWZUXkZ9dCAoIBq+FVrgzhN2bNykvOLNMNaTcm6QtSrNYP7hVvoaudEjRopH5AbSBX6PGK0jSGIbTrigBrwP078Fwc+6n4NzmTXgjHWUzFHE8oXmIKOJG8wJLX1wsHCGduM5zLPye3qnkgwe4i5zr4vX6cv6aZsYNx395ZHiYmZCXHPKD3CS51h4Na+osZGOUIKx1eTsTpdJ91cvNuqZURApr6AYJjuUDz4Od6cuFK+L1XDD8HbOC8r5PnBCdVpbWo83/4TbGz5TqodL5k3vgMhB/CI+lbJNWEbHN1fLw5LriEOVfLY9WbisDnSHhGJ+slhLg5EIKIXjZbI9VlyPwqkZ/Dm7h+xsLbWPqvtUvE2mGWqC1s7/wprsEfAzmOIdG+wBVxq+xwPtPQCR1WCG0aFvrHtEv2fehC/wf6nTInDXo2Sj96J4GxUEH5IylaVynZrC7tGXMXvUbLVyazNzVS5DrbS/Zy9BLV3ezUZl24m6mySvdiHS6LqaQjROIy05fCJl6NPgPqT5H0zrJz6vdokFYHR9CX3OCKA/SQl00sf1bD4PdeOJyDZiuSiXhTv0FD9EZfZQ9yz7tcaJ/gyx1rRNH17kaYIf4Xb9oHSKfIj6hbfAmUIVk8CMtbN4N5zUetHdoR3AN6QnbJLyqDjDhGmZ/C3HLV8iXYSPEZSwzFVCk2gD9xtS9PHuT1UgnMHd6JqWTRtoQGvEY+hezoeni2usU+4rHtY6D8ab2NhkXqJGmNVqocoX0cWgxuVpK0PTtQqHH71Foq5D5GlArRHS+ZQ7wn0oSXnAKCWZasD+AhEYzxXyBjudGxUq8e0yBbUANhmb2mpAUswUc5jeLgylheZp/g8yWf8SVuBL0jAYEHi7i1bpA+RO5ponSyNwHhOjJLuK2Bx3UvgSPaG9Rl8Uy9FR5zs0UN+lNfMBGkcmhA5hMdQns3Cqnm276LSdxfrqtGrUbeS1vCTuIPv4E9vu0ZfoEXzAfixtCndQPot+VE96zjr7jF4tCuNBL/wk7ZjGWa4wkuK1eP/5tm20v31L7KX78L90FneXjyOdybtgiGge3bM9PQbm0dj0tcJtTBlHaq45xLlC9duJ5sfaGIvQY5QXK+WTmuBW9Vp7hcCSozIPypybNId0Wphn5RuBxuXs1/AAXcddURV5ayjHkaFVKffCF/A469XGnfCuMY4cCg2FV7mL20vUpSiuqTtyhRsiXwyfS32cG+fJpE/ATldReA+t+P8F25sLyuhJtbdldHgDCavfub/m/fWHHaUV8ZaA7xhvQL/+l5LV9pvyvqbhr8yJLtYZ0J8y3cwN3GOtBWsiF4LEOYSbxcUJA/jKdFV4Bt0eng9mksN0rP0I/TH4H0aZolc="}, {"__id__": "chunk-3f62806d3ab7e2b6f5af91ab3c6d94f3", "__created_at__": 1760490368, "content": "## Timelocks and Conditional Execution\n\nBitcoin supports various timelock mechanisms that restrict when funds can be spent. These come in two varieties: absolute timelocks (specify a specific block height or time) and relative timelocks (specify an elapsed time since the output was confirmed).\n\n### Absolute Timelocks with CLTV\n\nThe `OP_CHECKLOCKTIMEVERIFY` (OP_CLTV) opcode allows creating an output that can only be spent after a specific time has elapsed. For example:\n\n```\n<Bob's pubkey> OP_CHECKSIGVERIFY <now + 3 months> OP_CHECKLOCKTIMEVERIFY\n```\n\nThis script can only be spent after the specified time has passed, and requires Bob's signature.\n\n### Relative Timelocks with CSV\n\n`OP_CHECKSEQUENCEVERIFY` (OP_CSV) enables relative timelocks, which restrict spending until a certain time has elapsed since the output was confirmed. This is especially useful for payment channels and Lightning Network applications.\n\nWhen using timelock opcodes, it's important that any uses of `OP_CLTV` within a transaction all use the same time format (either all block heights or all Unix times). Similarly, all uses of `OP_CSV` within a script must use the same format, or the script will be impossible to satisfy.", "full_doc_id": "doc-3f62806d3ab7e2b6f5af91ab3c6d94f3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_8.md", "vector": "eJwN0wlzFFUCAGBY5LBArhybzNEz0/369XvdPYMUbAK1CgIigXAHSSosRkF2IW5hCUJtmBBhQOIW2WCUJA6ZGbp7uvu91zODHKlkUTxAE8QoIchVuIpaSYlxgVRWxQ1bsP6Fr+obiX9Vth+D7FW5nR2Xsz2F1kjWz55Sx6PrUg7cR7dJ5b6z4qC4kZ9Hzzjd2jGFwBN4fGwpK0XHxaJ4cewEq2fuTKu62u4Ai8g1pTP4nLzOKcbFpEutCswR+cwV18bDj+jVQjio4xphvrwdjk6cVL/Cz+DhaggvIwV2UukQx1p/43o4lfban7/lVj8333VE6JXrwRKxJzfiP4W/yV9jW6St+WJwWeJi6oak43NOsZoBbmVu8j433ZzDTvLTya1oSBjDB/QM3UQpq4TlWh74qeW0xyWvsdqsZszRMckLnjr0qAupT6XWwzzUR28zW9SMZcgHpuGL2hTzBikMQIjJ3OSHvBqlTk26uaHk4CKpnszDu60axDV+mhzggFOYNyF4FFcnzjsFynPOJ5kecVBeLD0s9qWTxgnG22HpWzRL3GUvVPZZbs2V+ULySx+aM3L34hyrmjrkJ36x7sscsCel/+R0ICFRLP7ZuktjdsQ/DhpWc3C9psu36Kfu10JhqdYE4ibzto31h8hd0y+eFa9Gh8AOvxXIpyMzS1xnKTRm0Mts9+EvAccfQVnAraqSEJOi21AZ5bxraTxggblsDPgVlpAXNA2NtnbiPqssOQIRxjVtFWcL/Vilv2jj0kNmdVzJmelD0TbvsIAht5u9yf35M+wn2XFU5qxx7tNGfoZjYAjTQnvLbdaIEkr7m5vhZIrgZfAifhxk+W4hF5oKixQBjCB1+qB4EHXY2ya1iaH0Ku0E68HnQQ5G4ga2zfUO6DIPkFHSrfwCeo+TU3bstjBcylZXsbeNRv8pWHHoUkxVKpTJ5it4bVQIvGwNkvnZlfBfykpqcmPtLr5JDuGB3GvwJd9QzhfoJmjRKC3Slsk7lO0NyNVDKtBEzxkc9l5A1eYl56PEkHQal3pqU1fAVjjbu9ve4y/U/udbQD/z1uqd1gfi9yjsWa82mBYoTc4022iW/b75QN+CqujPhEgbKEGz+M1WESnzfS3+PfhA+KM0jO2FPyp7zH87W/gSNaL15Af1qsyzoAYBfMNuzWuObTjUj6ZZO4OP4u9T5RrHGFcS/EHd6PwzvlPqMCYqV6TzyVeUJtYID0kMl+Gbdbn6GXuhn8IRua9KIbY2sCMUTO1tavKtp7XcysSBwGXv17Igh/mEZtCfjVrjO7BarqMr0R6aJ6vyffyloNsLaNgcKS/0nzYqAkVylz/L8wdxJu1OQjbMmWil0jaM2tkAqu/Sv/gns6/SdzRirRLmuCpj/WSufcm6lo6gC8Z3h+Zrc5KrwVGjkJ/Jbvp3+F8242SdMU07JXabrzkDvmG4O/nBkX+I1/Y/ZkyxlwYLtCx70Dyc2uXl4VScrfTib+Qg3Ulbo7tAIziHPnEq2HVLYhFQaQw3/+oMGBPIO8kGLKlTPP8xy+znaZ9UYf/OXkGO+qeTCXyfsp/a6au/TVxndgsq+pEtMcMqJvfEj9H79qrERz7KLzddwntsK241NllPsFkmtkt/E1+Alrtfp+PTV39/DKRiz4A3Mi+mGhnly52LCDtN8ha1gNZJnWitWGx/5gkr70ldbF4oR5lkTZafD9Q4C901qeZUG9vsPG3WstmgFY6Gl8h1SyXNqV3842P3oAdjHwnUw3NuEd0BIgvYJT4hVkEbgG50WgJd5Ckn7cYYIS7oh+crdxLF0n/JKOeeMqANxxx3V4roAn0hkYLR1EnAxSOJUqcKroMP9OXWVOf1eK1QJZWl+s1RzgqzJt7pU6kBAlyrNTUVob3KKXsE7tWLkvVHKlta2JPoemb2m08EwmSfZaBxb2lsn7SUetNDD+X6DsKJcDEdF4rwnDxafEnMJ2V0Bdukr3b+D4+1m6o="}, {"__id__": "chunk-5ad07cb6750f60bfe246497dc4b20f2b", "__created_at__": 1760491128, "content": "## Script Flow Control\n\nBitcoin Script supports conditional execution using flow control opcodes like `OP_IF`, `OP_ELSE`, and `OP_ENDIF`. Unlike most programming languages where the condition comes before the if statement, in Script the condition is evaluated before the `IF` opcode.\n\nFor example, a script offering two execution paths might look like:\n```\nOP_IF\n  <Alice's Pubkey>\nOP_ELSE\n  <Bob's Pubkey>\nOP_ENDIF\nOP_CHECKSIG\n```\n\nAlice could satisfy this with:\n```\n<Alice's Sig> OP_TRUE\n```\n\nWhile Bob would use:\n```\n<Bob's Sig> OP_FALSE\n```\n\nAnother form of conditional execution uses opcodes with the `VERIFY` suffix, which acts as a guard clause, terminating execution immediately if the condition is not met. For example:\n```\nOP_HASH160 <expected hash> OP_EQUALVERIFY <Bob's Pubkey> OP_CHECKSIG\n```\n\nThese flow control constructs can be nested to create multiple execution paths, enabling complex authorization schemes with different conditions for spending.", "full_doc_id": "doc-5ad07cb6750f60bfe246497dc4b20f2b", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch07-authorization-authentication/mastering-bitcoin-3rd-edition_chapter-7-authorization-authentication_9.md", "vector": "eJwNzAt3FNUBAOACBSIgZAmw2WR357Ezc+88NqQawU0hkpPTYiC2YCNKeFWSgK0WpDFYY8AQUBDyIAkJa/aRmd07M/fOzMZYOEIxhoryaD0SpIBJjQ1geRzSKkiONVD7+H7AVytq4MOef1jlwatOiegCp7X5dhu6LD8hneLLQD442uBGR2ANH8z+2HgLz+IycvNwl/82Omgd4Ye0gsBC9hn7M+dgaqmcwa+LrUjs4LaKw+x3RODX2FXBJoODW97+C3NS/dTkxbC0QTpGL+Py8fLEZDjM/YrlpTF+UO+1DojDkQH/IPyj/wc88Ew0dsDdZINzmQ/AxQca+U1SR+QM1e25ak6yxlvxYCd7Mvnn2CPghp4GXJrA10JoQKMKt3cdSnZ71/oKuRDs0f4en0PqAJ0gQgsXOlimzDQ32/f4ZOJr4+m2ccnj/G+VGvsoZ8JbeJDtS3zvO8W5VFGYbQ5G3ukK2Zx4C7eQamoKP9lZkAx6Aq7yds3spt3Cm8Ih/y51KbNJn89egLQyyqWpIXm982iqFP5eWQJ2By7ie7hCZ8nzQYNrZX4WfkKJ6llonP2iMp071YncF7hpRqY1YI8y12fn2Y2633FbYe8IuS92YI1a6LNoLX4C/1z5Cj0WlLFNL8gpY6ZGG/h+PQ3VSyvM4+RRPJe/Q46Jy9T96Avwge1SR8gHsXJzl1XzYAH6hLu/f4gJKQFxjLrboIjztJe5o6hZaNV/iYaT74oDsTnORHlnLMAOJQ7hXu6KcMU7pM2nb4jjbJ96hnwSz9BvslW8V9o754xxhM6hL7J5oAJauF6pJm6r1agH3SQu/EgsQaXsv5LpsBWMZe0VrxGG14Rt0qAwnr2T1QK/jt2Sv2HOGlmoVHWDu8ai/a+hStMTmEPypX56MyR8tu2KtCUws5xOg0upJWQksgo/zv2QC0npsB5t0nH4G7adq9ayxXLphrFSLsbvo85IYXK9uBr0i4vNNtJJhdQs+FJyVH463pBZxv0VnFb79N1GVDjBbwSV6Br2mvu4L/VRVhBqvc+TfHNjMyXJyhhcgFbDAP1CcgU6pBWEK9jj6nvxVaRUz4xdkpPxVWJ++BFUSO+xjFSfeYXt1RjtAu4Lt8C12hoFgB6tUvXQLwnH5MekldQ6UiRXg2W+rfo22C6co6bBHVqFc8l3Wdouvsp+21bAXTJW+mcbS5WSQJ9d7ExyvvS2Bc/lrLY4z3a+FO8U33bN7EpTbhrlgV9HPuK/ZR/i12VhTMHD9CjXCDrQs0Jm8DY5wPSA79FmOlsV9VlcLtspjeiNml+rRGuN/yBHWGJ/5x/Wd0kn5Douxexz5jlRPcpVsRVvrev6MXgWTxQioI5J6c3OFGu0q4q0sOvdvDBPyVHfFWOWlHKxW+BhNDPZ6NGSD0cXkzynUmrSK6lf8HetuWJJLBuNtyaB/cIE2JPZD+9HgfQA04x+l5gqNhmF3S/CDKTjPYl9Ur4xg/wNhaJPoppAdaRYeQXWKpW4P14jb478UznMZjnnzLmzntJ+yg/geublxE69s3OM+gK+BhNqPJGjt6NWociIYw9Z9P/zT5QXDhpfOQ+anzt78Cvc68Jp4jXqlOfwT6SriYfIGu4kf1EdO7hcqN0zBf7GeNL/qfcmXh6eKk62+8TLbKqhlVxvK1DOG9sATA04Ltzl8VmG0GzeVP4dPG/kuncpE+Az+iIqQ/lDYCN5I+e0nPQXwVofj68HJhuLUyVkdmwGekH9WJgidtOZRroxaA1a11GTNk2lua3gnXg6GJUfoHvjmzzHVFMccj7ynSVz1YW4KNGBZ2Cd2Q7GRebH7mj+ZB6abj0cnA7DoizMkDKpGv19cAt8aO2zr+mV2Gt9pox0Nannjan2Bt9eaAjp+HN8kgpY93BxvDUQ6tiCtqN71llcJZY5T8H76DlzrTOiFnlzqRPkcXTbl0PURC8ohG/OiovAaiWO2xQsIWq8B3KDE4RXYY7vdabcLrbr7DPmf8n/AIVKn5c="}, {"__id__": "chunk-180dee3956c385806da5e0997cc0b213", "__created_at__": 1760491626, "content": "# Digital Signatures in Bitcoin\n\n## Introduction to Digital Signatures\n\nDigital signatures in Bitcoin serve three critical purposes: they prove that the controller of a private key has authorized the spending of funds, provide undeniable proof of this authorization (nonrepudiation), and ensure that the authorized transaction cannot be modified by unauthorized parties. Bitcoin currently supports two signature algorithms: the Schnorr signature algorithm and the Elliptic Curve Digital Signature Algorithm (ECDSA).\n\nThese signature algorithms are used in various contexts within Bitcoin, including spending segwit v0 P2WPKH outputs, segwit v1 P2TR keypath spending, and in script functions like OP_CHECKSIG, OP_CHECKSIGVERIFY, OP_CHECKMULTISIG, OP_CHECKMULTISIGVERIFY, and OP_CHECKSIGADD. Each transaction input and its signatures are completely independent of other inputs, allowing multiple parties to collaborate on constructing transactions while each signing only their own input.", "full_doc_id": "doc-180dee3956c385806da5e0997cc0b213", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_1.md", "vector": "eJwNzo9XVfUBAHCpmC4CUcD34D3g/r7f7/0hZCg0FMXZdJgQizTbokyOKeoxOCY7oo3ZMU20bBKCAu/++t77/X7ffQQd8USZqcksOyLish1NmCGb03mmYmc63Nw+f8GHSFXavu6ZpETpj45Jj6r1dkp4j/+uNqJ1GXXSQoczXzBeYiSQKUjeffKtvUQ77CcpnXgr7WlZz5SYtwBiyulJd6Xa2JFsCUBIPa8ktbpmLugSv5b2gntyPymBfVaB3CengN/BIuequMM+4RzXsrRvvHypCz6Jf+LMEp5Qv3O+gglpMZjfsZfPczd7dVFP2gcGhVZSrAfCDdrS7HQ6j/+BnahXtq4iTlq5KEVr5UlsFDSj7z3qfOIUCGnCZGE3v9utYYsjsw9WeG+wuj2Fq2YLoQwu0Ty7UYmZB8hNNk+aFtHUW7TB/QLEuS8KD+FU1G1P0WYpw+5npBisRbvbLjA/RyvstoTr/rCTYD2keVaiMZ59VKxKfCOD/f/4VbfPeXr6bLnJvhh+Tr9B1/iZ6svwMigDh0hQTCUftlogGPyWW4J71CH/sL0Kz4UpiszazBJlPqmKxEgg+x2pN1aI5rkvogqQYpVouj9KNnpNKFOswU/pie1FEoPPWSG10r1CLO+E/FNcL92gtWa1FKcsjSzkHmQfOTiaetqXYTod/2ALmeVr4l1EwuXCpYwrwgz5NP+p3MIPWGvSF7q1zIdOW7DU3iDXuvloWLSMbm6O0xewUFxoPlsu8k6OutiMz+z3YygQmSQsNa5Yl8VnrQEwSSqmM2F/iESb4FZrmGSTiczFdkbpzprLP2W8FZqhvWv+ijzKFpAz4A7YLn2ZHo8vywkiA36mFMg13uLWBdagfMyZ2xYCvZ7LJfjXQJw8Cj8IhO176C5aEqkjnyg1MucI4eXRXvICmACP7n3eGvFzmF62iN3UUqmL+lRSIS6K/dcW0NcHd2QEOni2FBU426z6hmplKOM/di7Yn7kHW+AJcA+ux5vMI1mM9jr+jfHHttKOgZ1DUr+YxHRFtvs1RqH4lnIRjznn4XD6Is5xVzoqeETe3h4yD1nULRNk8Wwwxnc6fxZ6pHPox86V0mPegpYteoPXjX+pvUIFoTH1qL2s/TpzG/apnxu75GS0Xvq9tFY8bY27D8H7IKzLbjcdUkaVQvi3tt86Z8RbcrIoeZ4yOn0tfdnJbyoDv9aPqzquRXeUh+zHcid8RqD6q168eQYdUuYIlfsH1XS/VJ4tv0ISuabIEVisfWk9zjLCeWSYO6ytxkWvwl4nbM5qau/BWvPfrVbhZrgB3w681/6aclOZoRVzDXQmOemVwJv284YOT4E013Zj6jv+S0Kbv9M5EZrw0SH2XJZvmODf3lnhGr0QlTI+y4xzXnMdc0+wgo83e+gYXJBE5cbU98kj8vcZo958nAJU/j5ogatC60AV2G5h2qAMwTJ/xUeThbwD68ibeBnYhovcS+3h8Cg7AjjpD2qd9LZCSRb6jp4RYupcbjkqIyfYajSNOc5yXiHdSEu4DdDKKleoed1eQQbtacYKdNtrRgPZg5FaPC/MOxXofvgO6cZhtkg4T38R3RJ5nXWUHGYWXsvf5r9xj3mbmYD/AzOOe96rxDyqclbDRPdpqT4zhex3t1jb4F9IHVT9+3h9tF4sIhP1MjcZVCtLo3+CrS1dUq6oiR/rp4Q5eGT6AulBdiyYwwy0vClu9HZGr0aTvTXBqdGjuAs22j8a1c5qfBCv5o+EGSEcOmZOCR4GjyvxuIiW7j3VITMzyL+Q1rxHvcHexRV4CE3wC8UeHAPNMNf83EuyM7SFDi8nHpioPImu4mvSLvAYmY82sWN0I9kFJrd+Ia4jnfSBWyGFNQP10mW0x1lu5WQUG2tAGkwWNri5eIeY79+S0rxF5m5/Jx2hFvNPMt2+wO3zT5I7B57hUrlO5R/GX7mzIRuNwTJpXFqkz5S+kgNoHwxlf0o73MU4hfkfs2yapg=="}, {"__id__": "chunk-796c588995d29745d695efea35dde213", "__created_at__": 1760490668, "content": "## The Importance of Randomness in Signatures\n\nBoth Schnorr and ECDSA signature algorithms use a random number k as a private nonce. The security of these algorithms critically depends on never reusing the same value of k for different messages (transactions) with the same private key. If the same k is used to sign different transactions, the private key can be calculated by anyone, potentially leading to theft of funds.\n\nThis vulnerability has resulted in actual thefts in Bitcoin's history due to improperly initialized random-number generators. To mitigate this risk, the industry best practice is to deterministically derive k using both the transaction data and the private key, ensuring each transaction produces a different k value.\n\nFor ECDSA, RFC6979 defines the standard algorithm for deterministic initialization of k. For Schnorr signatures, BIP340 recommends a default signing algorithm. These approaches can generate k either entirely deterministically or with additional entropy for extra protection against side-channel attacks.", "full_doc_id": "doc-796c588995d29745d695efea35dde213", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_10.md", "vector": "eJwNzItbFVUCAHA3ChMNFAHv9T5n5pyZM4+LWhKakWu5mqUSGauVJNbF/fzEarGVzbAQNB+hIcqVx33NvfM458xc6MX6SWmmrb0slFxls1Ur22STD9egMh/V7w/4nYJNcuiNYpIu77Q43iWviyx3sKmgnC7vdb2mpsITmDIst1aLF/T/jlmHv9JHBO4zjorE6qO2mcbfiJwE3+rL7XVYFcv1xZ4tZoaZrlxgxkR6tUnyCsmUGlAhXiR97ymSd4KAOEn5J46F53M+/fGAAx2yZqAg/7LOJXi5FcjGZaG45QfOHZnnuhn1uwXj7+gm5VFtowHy+0NvK6thrlHN/SO3W5G52XSAX8EspEmxMlwE7iVu+hfzstmnOjQ3zc27urvfd09sT6zN6oL5OmY28x9KTlRjHnfsZM6TBmrHJVFUkZyBN+tE7rQyjEG/ZezLk9EAekjL8ZejNO5aYqIQjFSYA+Qx25E1hc6xOhNnIn/IbA9v8M41Z4V3owizSpcC6VKGs8R/VRHxCTosNEsJhwB6tS+bK7Ub5HkA4Qj3w9bH4qfmdeAgm+RNqMklMT38aG1qZoHVj2jr5VRfwqHfmbyCCrxvCT/i9Ua98SCZy7xr1Co/RVNinapp90udLfXWK5E3ZS85l7GUro13Axn9xyeKL/PH453CI3ZpZD8mzWON5+1e9pmcU/py9L4w2b9DtPw70UEoG7fD6TSTl/Uz9Gn8IhpDolm1vnXJ8rZGY7WjNxYc28h/7C3SroscthOlepE2xTnH0dTo1EcgH+IVDE+bWc1byTb7F7EGr6KT6AO+DvNRwYWWuJ9geTBXEaLt2ixpQt5IYTJ8yn/eMwHvE/3AllaiqnHpzlD831ob6tH69RA3jhaiL/Abwi5QjiZxB/UedUM85tlED0hXhQn4hjhI7jaWoSOoBz5Mfu34XJvuvKLWhlm5KBAj2bGzNGA4c26EsokilLm5xId4enwhWINuYaljtPAUYrSgfERbLGRg+vu/RfrWEFxFeV/hv44ZgOuZVu9MWErHqy/A7dL8+Ci9ALxuilEfbFFruCm8zH7kqY0WYgf8H9rCXAVPgi50Dp3TGzoWgJVGhj9NWq8tS5yVo1pN4tL4u1ofJ0H4JVOBtrq3wUH9GzTEPBO9h52n53I5ylmpOvG5ZQU+kG8TfbrDW3zTA8iL2gmr1CjDlM17jrHEtECV/DfyRVIVu+K2v1fJ3KPmh8yTxn3R01K3p2/XWuWovZ8p8y/m6v2vJu5Q9gbqnGrWPn2ZXqYucq3gvjZHJW9G7MTr2dfwSxMdCSJFub3EC7KSlTIKPKcc8J/RPiXvJO5m79LrcqIIyIPxB/ER1G8NwTxrNjnOVdJtKF/w1brBHq3bc9RcatbiFjij5SA5RW6zg9Ee47vUZqY47gOVra+RHa42/pi2WvtZ/KM+Ei2VOuECdAkscr1AGTCfm0UvduTtLm00cCF+UVJIefhkY7WWK77OJet78v1oOyo1M5MnrD+xBYH94QXRPrwRTGVHgamhaWYO3oHfVFEsBQG/tbXCmY0VrRxUaCfMmCeDXZWsp12OWWwVeVofS+4wgmKrOExut18F19W1PA+zIylYZw6SKvM0PEa3c41udWIJHoKV2mF4DDe554I6YyYta58ntdGtopRa7KLWFUDskYEGnIOGhKNmA5+Kl3A4fq/YlX+BdyaflK6BW0MXddX/Y9sa8fvxeeZo+6w2zbHeKLarFc6s4A+0n6ff6ZOFrOj7PoQ36v/n18jPSu9pl2I/wzKmlFO1WhyE1aBCh3Sytd9YafXCJfpqkBb4xXjLyG55QpqRHBaD7j8zc2KHjCrEj3sntsT8wCtbg1Y1DKn/Ahe1EmtabBf4TA7gQzRL7fNHW8o9PzSP5j8DuU1T7FfwJyg/aYmHyVRmFfWl+uz3wFD8sFGgldjv0oB7rZHSwuxMOh/f4p3t7obDcAYszR9gFoodODviAlX4J1yor2B/A+lhlLo="}, {"__id__": "chunk-492d3aa94096fc9c49a6c2904b273e23", "__created_at__": 1760490672, "content": "## Segregated Witness's New Signing Algorithm\n\nSignatures in Bitcoin are applied on a commitment hash calculated from the transaction data. The legacy commitment hash calculation method had a vulnerability: the number of hash operations increased quadratically with the number of inputs, potentially allowing attackers to create transactions requiring excessive hash operations to verify.\n\nSegregated Witness (SegWit) addressed this issue by changing how the commitment hash is calculated. For SegWit version 0 witness programs, signature verification uses the improved algorithm specified in BIP143, which scales linearly (O(n)) with the number of signature operations rather than quadratically. This improvement reduces the potential for denial-of-service attacks using overly complex transactions.\n\nThe new algorithm maintains security while significantly improving efficiency, especially for transactions with multiple inputs, making the Bitcoin network more resistant to certain types of attacks.", "full_doc_id": "doc-492d3aa94096fc9c49a6c2904b273e23", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_11.md", "vector": "eJwNz41TFNcBAPCAMdKIBMNHDriP3b19u/ve7gFmNE4srWkx0tagyUiVMlYcowRIIICJNmpoEsOISiJ+kN5xH3u3X++93T2UYhCrbUdjx4jRaZ0G07TqRJ1ojErodEhsGGl//8FvjdSh3Bjsc6tCF+1m6XLomGqA6vRaWCNtLnw1sEAvjl40J619/FIzz9hpnzaXh47FHwrM4bYSBkTkmViHm8g+q8fq5Cd8k9E3klfZRuim3rGzvcVAKP0z6kLbnR3MN4bMJsFfZUf5J43AmXieWaDsQE+ZjvgF9zjW8Gq4b+9h60fFv/GHhctmRdFtlWFzSL61Q+xLDNECdJI10T2rxuHBEjK31M8tJ9O5tcLIQAa6zu72HHZOm1XWN44Y6/bkqxfMNIkIa4U7nGxsVK3CoeAoKxSOIw634Xej82Feug5/h/5hXEMT1NSfg+XOuYP7Bd56P3if75GqyAarjJupGpFx8L26OjkuHnWP5ovkrNXFUqYRPBnZBeTUOsvlsjU2uqosKmzGv8hhYCG5S1cJ36Jhif3/EYFuXBjEsBPO3jtmd8C6ngLvPDwhfQ728WmVSCfJPS7TfS/5AO5K5yVb6E7cJD8wdknQjdhMf6vVzpZad0NPxzq4BvLj3vtiLVepTel14qZUK0jZH8cKmGbgxy+yI+B5fmE41xmP3CKPW2vpLPsZHprN6jr+UuyY1IBaSvLBHgDofw0mPgzWe1P0Gd8FOEoZmvI9WSJ6n4qNe1Yyx6UuVvXXuUdCx82FM1fQf5vxxG3hivHLgyPgUXYxmhAyjHH2ee0xV1CWpSutt+mM8E/xdXmC/515wbwhhpVaUmNehO3+41y2nOUfAG3uFfZvQk9wARwDXeSTOfPMj4Tl+HtSx86iOUmO3mdGpGml1fiUsFZF35XYeXpCOgO3a1PCGdKWsMWXxExIjTFaj//gmfS2iVNKr+KjU0yH/YLmNepxhpkvtx/4MrkpekJ/Mf8JuVB/Wv8XP61dKliCdoJB6FVT1mxulbJRf0NstirtPXSdSPnqYDh3VfqqOgBKpS94zZnk+7BHPZXqzc+SqvsbpQ/jVdwh/L7+tnBOfyQwJ3E5niPV0XPu3ECFsU2vgu/Zq/kDyrPmafE7PkBGY6+yGpDl6YNa4DHyKehCK6T1/U5qpdjJdyuz1QrnAzmivCD7nJpYOZgLB7TjWqVSBGVaS9rpK6EPQ9ulE85r5rugIXDNi5AoLi07Qq9z3KOL0JtoidEZykmvZPcIK/hmdcD/GcwOtZKv/RVcpt5nZJm7+JZIBxiVroEZ1iH6Wv9+dZui8F+T/amu+D10A21FHNdJNpOUcDCyhfuBFJVzZQzKyZjUQzxch8NyHyQNx5trgx6yDTxCw8x/6HmnXl/CXslroBuNHfpiI4ozyLg4hoNSY3wZXVPyhFhhlqvT0q+Nb6UmdJOfIVTKhpd1s3vLApvdO4fq8jz+XxkJgmAHXU+bjFrTmzolVQk/VGiwDP7RraIv4beKbPSxJNm6Sa1uMh8MJbfQt3C7fVd/iL3tWSBeKmpL1LgGLudxsRD/MjYojOqLrGL2cmorMS2TxMw1JT6l2X2gHYN7NR4NRlmzTzofzkzMwOVoA86HTXosMGjrxsv6sD5U9JygM4fj28mt1CV5Ax1GrW6EvGNlC4sTd0DUKRPmoyy9QvyM8fsykg18YegqPBDZE/o54sh9oSV1pv8W+Ah3W89ad3Qj8Ql26SlpIf5J9GGznWyxz/ae9N1TBXOZto6RxNVyvjWcXW+tRyfYsH7Bw/peBtUlOu0ijRq0Nf7mXAF+Lhmx31uZJaeVFn0YDuleWJ2oIIm8AP8VW06W9g/ir+gi9HAQe3PJ63anFQBNckfwt+5Zq08rDeeBo7272dpgb3QEZ+CfibNol/RKTDWm0ufJDffv3OvWUrwxEKNZ9E3QL/2JmYQtzgiOqGFrCHQyCsgoPcUidGS36KtnNzg3aQb5S9//AOe0nv8="}, {"__id__": "chunk-c1fff1e03941f951ea1b490e19381d9e", "__created_at__": 1760490882, "content": "## How Digital Signatures Work\n\nDigital signature systems consist of two primary components: an algorithm for creating signatures using a private key and a message (the transaction), and an algorithm for verifying signatures using the public key. For Bitcoin, the \"message\" being signed is typically not the entire transaction but rather a specific subset of transaction data called the commitment hash.\n\nThe signature is created using a function that can be represented as:\n\n```\nSig = F_sig(F_hash(m), x)\n```\n\nWhere:\n- x is the signing private key\n- m is the message/commitment hash\n- F_hash is the hashing function\n- F_sig is the signing algorithm\n- Sig is the resulting signature\n\nBoth Schnorr and ECDSA signatures produce two values that are serialized differently. ECDSA uses the Distinguished Encoding Rules (DER) format, while Schnorr signatures use a simpler serialization format. Verification of a signature requires the message, the signer's public key, and the signature itself to confirm that only the controller of the private key could have produced that specific signature for that specific transaction.", "full_doc_id": "doc-c1fff1e03941f951ea1b490e19381d9e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_2.md", "vector": "eJwN1I1TFNcBAHDjmEiqJuAnOe5r997uvre7p2mEhhiGARUhaAFjRSU6E4eqkBYlamSmErU1jsSPi2IqHHfc3u6+ffve3lJ1UtFSjFEyic1oGGOwmogSxJqoJROjZYyjaf6H3/wOgXlq15ElbHu4wB3/zHFFII/Yso6Lyh3Vc2AUqtXn4fVsLP+KEon+uu0Dp5R+qtayL+EnpDB1RhuGi00N6kbc2ZP6XBgj7Oa8wT+DCbCaekm3+FLoIvxJAtIuVgK8ZI6wGaYrw3KxXS10tJ0l5eo+Vafn0NPyS/Shr1i6IjhYRzvi6WKrVSx48EgCpIqfk+UV0hNsjLqQD6m3hAzXm9xgpodnh9bQWOAxzHNFX0SU5G/1cw7vyCwFbumVT37Ne6wGUOnrJw22V5tKVSEsZME81Mv8Rj6fSibcpeYK+CccQCcJZPXSiF7nLQVfkHJ/oSyhHPouvQ8W4G3697xCxtlvxotTy1pWWyJdaCbSl8JrYCpY33zB0NGAdad9wvRjcqE90PZ6+GNW6NSiK2gt6hYL6F+ETOcUt1jmpVzxIn1V/ZHdHyfbXqlLmsllSa1qWke+73f0qfQpUpa7MbnMdu2roCb5stqTGmRr8AiuBF8e2Kj6bQl2Oi+01kM13uCuwnvROToA5tMGTMEJaT7eJM303tGPcI2uBce5EX67vcstkQJGBq4Tj4kTwCl5nfgDd0h8oC/w8PgJGA522lvxTPm6UYgfS/2kJOsGFfU663jsirCIS0sw+Kx12E65n1DNR8DWxFeJIQkaRcgPiP0xmmpdc3bIt1kBHaRfkzJtPTwWvwReI7vEmNKiLWdj+M20QF2NdguF5jesEUW8V1GPfJf/AU/ndupV0k+WHz+jzaK81u5UyiN8lTK37UV7rzVMi55scB6hUlRPs2EOm2TfRh/JtW1ddE/HrbZaFhcO8ovC2dMPGd9w/SnC5ZjHjacS+4VNfK95QVuF18aCUrn53eTs0Ab+ujVTaRLOi3ksV18uNKmrsAJcLp98Fd0tfAtfAXzLtVQzac18KJdbkl4t/t2+H2jAN/BENAwapQLyT5JHe8EZ1BUY5B5NuykJwbs0PyVyJ6N7OEk+SH9l22qzzgdOCHNjnv3n+dnoN+rxYGnrcnxZuAkVaRtXluxE78Onw5P1GldRR8nfyVsSP5PV8DOwOv4OG1Krpsvue0ZTdB3SwhNRgRNmL8PH0fXolDzD1zYjSNT2P7Zfg4tC2/XTSqNzmM8N/Q+/KfZpo+FOpfXgtH2LYi0Z98Dl5uXeG9Tg0oJHA0e1eqbEmslp1BLINCP8HL+ldCkR5V/xPzgm2097ApV4VlIUc6Wz8VaSRBluEbjgCuS8tsOdEDrhnRU7I0aYz9eDTzpFYIE3bJYlkbmMFfqH8JSOOcqP0vuSKPaRNZKKauglitFn3EJxEAnBLSCgzubXuRaqgdto7t868W/bhuj31I+SuJq+i3sjN/xvyz3wstKYeQBVOTUkbj8Q/yv/w1NvDxDFWEn3ilzoslXsvu38XugDJ/hX5Tprh1VBq+0SrtY7nv7HuO7ND46ip8CRrFJ2tnWyuxQfgk1oRUpl3f5biYeor91jZHqLeIv223nKPdYNrpKr3hK7Ba+0N8uv26tic41h+7TZZDyUo3QAVXZMIQ+cQa5G60cldASuVPsoUiKeHKkzVsEReQhkkKLw9ZCa9RbfIFZMGy3Mt267SRdawd1lNIe+IZdZh5ODWLUcOum55z0cuqd9OvFO4N9Ct1xupOhJzz5xRjDHfCH+RnQxGB2fwz6k8+y33Eu+8Tjjl+3+Gv3ZsvBGJdusDtSGjso9ByrsfpAj1NjvsLp9aW4pKwf34zxYQWvdJSxNK1BeTBaxTU4V2YRLfEuNejgj9GGmx95JwsJYV0F1dI+1q+Mu2+re5D5g2Sb117uT3LFwJChoFfBZe4NZaG3Rl/zi73N5OLw2motCVq//INiYsilHB4P/B0spoUU="}, {"__id__": "chunk-0a2c3267a80e202026596bed2e1e4607", "__created_at__": 1760490882, "content": "## Signature Hash Types (SIGHASH)\n\nBitcoin signatures include SIGHASH flags that indicate which parts of a transaction are included in the hash signed by the private key. These flags allow signers to commit to specific portions of transaction data. There are three basic SIGHASH flags:\n\n1. **SIGHASH_ALL (0x01)**: Signature applies to all inputs and outputs\n2. **SIGHASH_NONE (0x02)**: Signature applies to all inputs, but none of the outputs\n3. **SIGHASH_SINGLE (0x03)**: Signature applies to all inputs but only the output with the same index as the signed input\n\nAdditionally, there's a modifier flag called SIGHASH_ANYONECANPAY (0x80) that can be combined with the above flags using bitwise OR. When ANYONECANPAY is set, only one input is signed, leaving others open for modification:\n\n| SIGHASH flag | Value | Description |\n|--------------|-------|-------------|\n| ALL\\|ANYONECANPAY | 0x81 | Signature applies to one input and all outputs |\n| NONE\\|ANYONECANPAY | 0x82 | Signature applies to one input, none of the outputs |\n| SINGLE\\|ANYONECANPAY | 0x83 | Signature applies to one input and the output with the same index number |\n\nThese SIGHASH types enable various transaction constructions, such as crowdfunding-style transactions (ALL|ANYONECANPAY), bearer checks (NONE), and dust collectors (NONE|ANYONECANPAY). BIP118 proposes additional flags like SIGHASH_ANYPREVOUT for advanced use cases including payment channels in the Lightning Network.", "full_doc_id": "doc-0a2c3267a80e202026596bed2e1e4607", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_3.md", "vector": "eJwN0v9zFNUBAHAiyBehAawJly+3t7e3X957u3dgZaAMjiGACjUSZBwQydAgzKRoSAVBR0OJGqoQEoMkgct93dvbt++9vU0C2NagDZZEInRiSSETIIBhRlSCSAs04SDQ1j/g89sHT5wSGDpUk8IaaSnOPYNmxDaxh1ptban/Tn5J7EXj7eRMT490TJZ/sYQF2ELWocUTTcp8oRiXkO2AkpHYA+w3/bRUGjGflwqlMeBrGCYgc5v7Q256IITe0KJ2HlzglOploWG1AW0Q/e5/uI6Z88QpaEfkT9pMcD2+mlhKiC+nvOpWpoNG61dWR8M9ep5lyPf5p4HEzqqZ+my4K9bHFtJSlo9+4A+Zsveq+q7zE5yoDmb6rM2Wjol9+0A1rswaa5ywpykefhWNWnpoS8zIaTPzyEItTDqklcoYMe0csS4pndF9ShnbVL9WDtvXxFJz2KoCLoXjBFJi/wYGGiTv4wlqeBKvwn5no9JLsq0VeYuyx/F5+v+AFh013uM+1fOsgUATcLEqq0RVGXJk9EctDag6kZH6F2ilmQ+CfJMcDd6WM9gF/W4qoiyVskLPCUHkpd/5/klrlbR03RmIv5p4gUxWj4sRsIOtdB5qrmJd8kv0LCxo7gffM5dQjRa7b+JcMgRGaDPHpRbj6a7d8p/xlfzi+AIYTIzSqdO/tw7rz5jb7FnS5fin1o3YHLARIuVo/t4EgPOjBTEBP6uqNG3dCfaq76V2RQ11tsQia9nex07QVoGzbvmexkNgIztI/2ovN6bmLpY/iGzZ/zovS71wMkjnehQgN9kVal7qkrWGXTBk6xpq9/V7Bmk7+EoUHxvF2cp6OgnsA0v4DdJq7IbLgVc+CR1whmQlvFQF3wp7jI+kURwGw6nL2ko0Ah8YJ9lYnMGmgLO0UPSIZ4xLYCv7Gl+RmNjv60lddHhzPwbcgH7M36b2YT/3e4ck18TbUuvqO+FVqZq0808E3/HlSsW4HkZzV8W/4d9CKXBOLiGv5b/jK1Lfpy3gUbHfOxysyw8qnY/8KGxli8yUMACI3OuIai31N61S9uKn0EF5KZyq78kuIwaXyFpm10mXab/3ZbWHtKfmVv/FeFsph1FjEl6qraZFsld5kp+Ey5UvQB+Ix3tnfEmvoRY4MdIdHqPsBR1yQssO3nQq1Xvqw2oG0fU3yLbmnEQ6VKHu0nooMsLGfZippaV/2UU4hhqMmR5dfl5uC/SZbb4KaYI2Ij4LHsC5bE/eaXE9b2dP+CWAX8AaqyjU7r5LzzEaKoa3aTdXKb+cU2W9SXezp5IvqoPi6UiBsOFn+290POdmcyFzpb4S/lb7Xc6tyBy+Bq3PmpoD0A6nwpzmxLigMcXpiR5ObMGnYIBq4DM6ZH8MW40VtNF8nKwN7gR3zfOpezBGL/B/0A16EWhoHnabJ9EztBKe4rEw1lfDjxdvpRZ5N4PJ7NGW8eHr7ByxySrhCqu3N+pBa6cnCkaVoNplbEJV9jrLR9zoEMhWerGdd8D6gG4SBTmOu+kynJPY7Q3DgvoSDOl/aZmtiXWiTZbT675y91b6vtwRnUf/k1zUkoXP73fBzSwjeUOTki2yj0jgNjfH96P5hP07CB2XZJjjuV87TckT1CWE6JtiF0mzqL6CbQez7APqUSdApjkfwS/Jw2BZqBzVopqcdYjzurRxyQJxBJ4CXYmQfycacTUIH/K7f/6D7FecBXi7WKvMN/eRQTDe94lOLDn5ulmWKASq+2NcZxS5vgGH1FLjDvPW/lY8VttqXgqmm44Db+wqfS465O5ODXAN+ACisEIvwjudo2qYdEsXo4dRsvFb9iT3OWoKZdKffLPJBDoOfebbAeZ6K2x/IgZE1Jh/MtXJZtD7fJH+d49gVnDV5mvWEroLbbYHxSOkQlJbuhy3Uyi244t4hqeTnbaPKMORd80VoLWlj6vznSWNEpM+R7MCChbBYTImGBFv0IN2m7lG/z/WoLCj"}, {"__id__": "chunk-80e5bb4ac2b9f8bffa704f13aac1bcb6", "__created_at__": 1760490921, "content": "## Schnorr Signatures\n\nSchnorr signatures, published by Claus Schnorr in 1989, were introduced to Bitcoin through the Taproot soft fork. They have several important properties:\n\n1. **Provable security**: Security depends only on the Discrete Logarithm Problem difficulty and the random oracle model.\n2. **Linearity**: Schnorr signatures have the properties of additivity and homogeneity, making it easy for multiple parties to coordinate without sharing secrets.\n3. **Batch verification**: Multiple Schnorr signatures can be verified simultaneously in less time than it would take to verify each signature independently.\n\nThe basic Schnorr protocol works as follows:\n\n1. The signer selects a private key x and derives public key xG\n2. To sign, the signer generates a private nonce k and derives public nonce kG\n3. The challenge scalar e is calculated as hash(kG || xG || m), where m is the message\n4. The signature is calculated as s = k + ex\n5. The signature consists of kG and s\n6. Verification checks if sG == kG + hash(kG || xG || m) × xG\n\nBitcoin's implementation of Schnorr signatures follows BIP340, which includes the public key in the challenge hash to protect BIP32 unhardened derivation and to support additional protocols built on Schnorr signatures.", "full_doc_id": "doc-80e5bb4ac2b9f8bffa704f13aac1bcb6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_4.md", "vector": "eJwN1H1UVGUCx3F0E0XFBG1kcV7v6/M89w75Uivulmb4/sruHvJkSGlxyGOanTRJF8xTGXigUIaYGWaYO3Ofe5/nuXccEHvBzPAlzUyrs6e11FYS31ojWiEHaz1b/Pn77/vH5/yyvPXqlx239DugOtlhFKEQ47K37duPjsmrtHpvOx0WWUCJtB2spUW+46zHqCn4OX6Q20ZHsxJSB9ORi38sj3dQTFNoJv9U3m5tESoWLyaWWVeE5XAOmgswKLUnyWGjH5yTzrrOgHlGk9guzdFnqwF416hGzSBK9kePgjwYNbxwPn4L5IsLnaPEGjxIKsQf0GvxzUa9GhHDyjjcTTZAyZxYkAtNIx3uloNWBVgweV3+3/YauDDZk1goXhPHxvID32ljNMWIOAvZYZdOR+Z97a0AAuoiW0GOXOlps6cZI5VX4pVqC/0/PQe3WASfEHPMOZEPQI3Qb5bFOegmS1rlWDlOiZLp2XcAA/KLPZ8PY7dXja0EmeQInsY/bR7ck/aPH1qHjEdVbE5mF0Ac7BZGo3/RO/hX/DHbAzoochaz35TBxKOTRfMTcC+UvdXSPHSdjdGn2YvkpeirZL8epiOsRuXHFhW9Za2grxgv4SLxHppWu+OXUHtoID4gLSXrrRfzb3F19Lb2Nil90y8MUyzfaSktNPiOuqdaUYER4Gi2vmCTxP/qjXhL01pZ5laAQmEVHA9SOOqZSa5zv5IF9Cr+B3cYg4Y/gZLgtrxUS0box9bPXX6vJt401iCB7dJNC1ivJQr5ndoOX5WQ9fZfwHS9Fx/zrjMy7e3INHutxXSt8Q0bVP8MTOEHvgRUwZ34N3wRjLe6YLa8KRqMtbN20F27UqHSdaGdpBsdoSqQGcDkW2HaUOh06wh4XTyliiBopehGvMT7RLINlcvNTJABu2zVAT+aAkqYI9Xp1N39rs3RTWqVfz4bZeQlXTickIxCUizJokRKncF4zLNYyG28K9SCbPEm/VkZCwMwYcwJsta56gz2kPOBgJe9HMmXZ6GrEtPN5Ew8RjqJTsRfIlFxiXYDv6vlaDd8i6Um+V79ovkMWxM6LO7ynuY/oA8HHegdilJPy532pxSJ68x9kTpFCxzU5gvauGoyxZelHVYsYjs3Yr/EyX3RieYKz17+Wd+/EUe72En/KVAKVnty4AapgkslvjLK1OfUR2gf3+3ch4ap5XCQGeZ5cAivgZdQQMqa0mfXeqmei8rA7fwcZUbyUM4NriiXRd/jVqtn1M7I8bxa0U2K6SVtlp7SlkWrUJdU5FtBLxjO6LtohKfTcuSpxh14DYaVEeAaS9uPm8P50zBD5EEPXMkfxH+FLVZCKkleNvvGfM5WCmc9E7gzqIGWRzOoP5kdSYqP4fXhjXaZfhwYtMe+DK/Ev5jQYj6hd4EKEKD/iZer57VS6UG5XyiQpqLRcJ71sXCd20tfT043YrTEmkhfhN8Toi0zOvEEH5CcXs5fKT0JvjOfYj9ZReJy1MsP6KPoFa1y/Ie++7Qd7lZ7eLLUVZQI+i5Ife6pAT95nyyTixPA3G48KGp0Eps1rk3yG8zk7a12r1NQa+1Cqxomw8flRcatxDfxEXwTncHmAt06Dzbi2XyN9UbzPXm58KSmudz0PnLA9ET+oOygBEXtY4aDNYkOlqnU0QbxhNKWPIAyHM8LSL8JX1BfRhHn4wW9QxBfjQSl9WY9RC2/WKusPcb3en7dnmQuPOQqdOVQh/0IseXbEZjYqS9gxeEMabVyTvp77Bn+M5lKW8x0/J/al+JJPQsPmrfxSFsYstnGPQ8zrdzQ5niZmklD0gv4rriruUCrcX4tnMLZZLernjjtJtAqV8LR9Cf7aLSHH6768Vm2gR5pLY89kBCGnA1I/+O32UN/AM5Zs1GDNSA67a3JDDvD99HYmAH1TfYpMgXMSjzHX4Vp2h3qcIcmvu+zg0uUpffv8DaC08Y17jPhU3rZnEGW498BEeGrmQ=="}, {"__id__": "chunk-9e5f3788e895a708ecf1b1ceff65740d", "__created_at__": 1760491138, "content": "## Serialization of Schnorr Signatures\n\nA Schnorr signature in Bitcoin consists of two 32-byte values: the x-coordinate of kG (the public nonce) and s (the scalar). Even though both values could theoretically be represented with fewer than 32 bytes in some cases, they are always serialized as fixed 32-byte values to produce exactly 64 bytes.\n\nWhen used with taproot keypath or scriptpath spending, a 64-byte Schnorr signature is considered to use the default signature hash SIGHASH_ALL. If an alternative sighash is used, a single additional byte is appended to specify the signature hash, making the signature 65 bytes.\n\nThis serialization is considerably more efficient than the DER encoding used for ECDSA signatures. The compact, fixed-size nature of Schnorr signatures makes them easier to work with and reduces transaction sizes.", "full_doc_id": "doc-9e5f3788e895a708ecf1b1ceff65740d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_5.md", "vector": "eJwFwQ9QFOUCAPDwCYKYgAR43nG3e3ff7vd9u1yhyDTqe4gUJoxMQjamFnmioFKNmtKkZT6f9EYBjUvw4u7Y2/t29/vu9po0/yQ4idNgVkPZS2bwT9orMC0QMzWFbPr9noVD+LHDA9FluUPxlUYqbohVRc7EbyIvnk8rQZd2+L1W2guScJ9a4roT3WdEPSOOJHxFTzNblYVSC39IHQzX0QC9BIc6lmvDwUYsKDppIabzPpwmD4pQkmNmNtN+tBbCd4W5+J62hasE8wLD0i3cTRfipdKaQG34GbQKrdY34W02r/vijJ1GTSSbOqniKpVnsG59TN7dsRA9z9uih8Bybb3Uy6cmf2z/AZ+NAvQ/8BaG6g3jl2it/i/w7/1HuYfOIs2nfOdPJ3tpJfmGZIs/g4fgnrwouss+G/nJbnOeVig1KRORrIXVrcjCtmtvcD51wLUSapxKJxtLhNvkHeWAmpFRmD5mfB+3JUt0t+GLfHkwod1C5tozWQLdBdOMVTkHPYO2V6jL9395RTTEukETPgcIN6hf5jaQIC1FFepO4UNyBJ6lM7XkA4tRk/ik+6gjFSWZOv8pGxW8cIX5FP8qvUZ/wWUzFsE/onP11fqoTsBXkT7Bo7aKP0UaHSEkdnrMp4MvQJP6pr/P4vrT0C4lhl9F2wAHr4A8uh/GtUn++7SQzXSu1Z8yDls2iuN2u3AS/I7m4JiyUqnTbwhfhF5n2/VD0GQnlBHpN+deV6nRSLaxFx3VxM8j5ZhUxDLJhqhPr+Dno579fzlugLrQXYF3+MlrQjUdZUB6jv2HjRn92tskX1rnt7vOKDIeQHaST19DmurDo3AqXO7G7CQ6J5RItXxLWpOmdW6h9a7WwMx2HnmNUpRq7oNO2AuHLXvUXKUgqwCWRvvdswWR8XAFS6GL3QvwgOs0G4lfApOMKrUnS5Bq8/L1BOtmc59/qu8um2ws4C6LQ/pIxyz1WctCvpmzAsQlu8/TR3Gt0AL7ta5gQZYFW2kRnOxO0Bu4NWIdbBS/j2yKPa41uB/Kc1wZrAa+rpntZconpFn40fk1KGOPRJfqxemFjjr7TnjdbgEX8ZQoNS8INv30gU9xnDiMOnmBNu2DY84xa7LeYHvlkRJczT1w5CpB2I33ZI9H1lmLc8vVk+gUmUO/y/sVFct7xVnkPXuvQMi4fkFehKfFusGJUDV6QX5RlMyr7d/Acttt8aHECwlPjLCjvqTOHPmWY2PzJ3mDZoqr0r45/Y/cTvWE1CWLFlXtCkwwcpUt4Groc7LOKIKZth12D/uTZHdU4IKcn7VMcX6QojZcL/WIKDbRbFJsdJFzONCAm9Edx3Q1B02Olwf6I2/GNjuusvViY/BJUgm62X9BWygp5s84FVqiOrWr7J5eDIMHDsYhpvpt903ykpYPJ+I0o4CswruUPlsat9rVwFWgUq7RPALe4e7SRnOHXkhraB9NxCmdI8AbzuYaeAkc4WFeOiyG6dFyMhb7APWjKY7xyHZt6/vNnQ22b+F4MGp+bpRHVtiKHtssutSbLTX6FXbLJYJj2u5MCUhZ5+lFZ48daCG6z/Tq1fCfnsfN42aakKtdhKe0MnuZe48bxDT1a5gTS8WzwmttZ9llZ7LVBawkrFRQrzYxPKR0gV9ZjpwRN40JsU3oOiuW2g0Vp8gotgGe1ocCL5ONIDGPw5e42Z4fwHHO66BON6tB9WRjbAlbrz4XsWbVm+24gz/KV5Hf2H36Mt879YF/K4WRZm4SShQ/IhXaUu4z+2X3gL44/Kg6y+HT3zV2UJflOl1jq6ICKpKfZwX0mu6Qa31TuAdt9cKcthK6JTeb26EXRz2aRO/rCjwvXsHXlKx4iXU0awJer/TTHCORPxzpdHwWbANh4RnLGU1hRYgz56E3TC8cMsvj02O97o+VZYTQKsPJQCAl/K0lX74Tu6AedxXSJ7hl7iapx3OuVcX/0IZBq7DWuG1kGn3G3wNqmXQ="}, {"__id__": "chunk-1a65a8936f041361e7456dbbedd02279", "__created_at__": 1760491155, "content": "## Schnorr-based Scriptless Multisignatures\n\nA key advantage of Schnorr signatures is the ability to create scriptless multisignatures. In this scheme, multiple parties can cooperate to create a single signature that proves they collectively know the sum of their private keys, without revealing individual private keys.\n\nThe basic protocol works as follows:\n\n1. Participants Alice and Bob each have private keys y and z, respectively\n2. They derive public keys yG and zG, then combine them to create an aggregated public key xG = yG + zG\n3. Each chooses a private nonce (a for Alice, b for Bob) and derives public nonces aG and bG\n4. They produce an aggregated public nonce kG = aG + bG\n5. They generate a challenge scalar e = hash(kG || xG || m)\n6. Alice computes q = a + ey and Bob computes r = b + ez\n7. They combine these to form s = q + r\n8. The final signature is (kG, s)\n\nHowever, this basic protocol is vulnerable to key cancellation attacks, where one party might learn another's public key before committing to their own, potentially allowing them to create a valid signature without the other's participation. Various security measures, like commitment schemes, have been developed to address this issue.\n\nThe MuSig family of protocols offers secure implementations:\n- MuSig (MuSig1): Simple but requires three rounds of communication\n- MuSig2 (BIP327): Requires only two rounds of communication, more efficient\n- MuSig-DN: Uses deterministic nonces to eliminate repeated session attacks", "full_doc_id": "doc-1a65a8936f041361e7456dbbedd02279", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_6.md", "vector": "eJwNz49fFFUCAHC5k0ukgg8osO0uOzsz7817M7Nhel2Y2lWmqeFJmPcxQRNNU0lP7ML86NX5yV8LghscAu6yzMzOjzdvBg39pCkpRVFaaYFnmCl5dIRYniZacVfX3fc/+J6Mb8XLDx6wPuLZ/ZLVCV0tBSXvXwar+GXsRL8WP8dUafFgAA8ZUmTQOmZl5c2N7cKbSTbxEoDb6usDO2mx1US/B57oAvtabAaoQ93MCfOR3NnCIemvuWcDve5UuMEpwt7oAn8hGrQ3eh5EaUa/tEai5JrU5nu4ZYo7HZaJqbQ+d6tSI7CMUacKX+s7rHwQkUqVmYQNHUs/LNRYFcaFxmanRr4MpqrDWS78js7Ct/gtwqVEoT3NHYzuATxYrX/INjWEYxn6tcAKMh90kXTPaO9FfYXwHuGkGy3/iFc6h/Q6XKsPi+1WgbJRrGt9h5T7vmr2gPncFO9me5tVjIaNSeR1/mXjljFWe751VSzX3O78Dg4qZb61Sh+CDYu17fwe40m9PXRLIMaLagEupBfU/y+w3yOhBnMyuW5ZOS+iAn06f8AF4h+1iYEubxyvhZ8wvfhHYYb969p2kipkcMluWdOblCNVwjC3QrxtDdh5aiadD7B9UL47cVVMCphsqviD+VtyQhuNfc6nzELyveJGXPk9nwA6+IWN02ERmYdCNNn62D5OK5gD2h9Ibu4B/jLK5OdhWfYHZ9EALFZ74ThSrlUZKWia0enpg4fjaZVp1jlOIH3ZP/tKwTTzVexY29gC61wL0Ejm7swqsw4P1fqljPgAmAnOxpeQFmm/PUOt10NkITmDvuKHhbC2EjaJEQ3yE8Vx1g0mOW4rxcxau5ufI9wlW+hyoDmc0nw7/DTYk0g1kgItxhjwjZ3AR+BK4al7Pjc99ia1g+fcbJHIu+19oMi53xmBN6XtUhJRWn2jnot94n9IvyAtl/ucS4kq+qjdgX7RR9tdyAufNdrBZPOgEUFzmFJllHgKleuWdIyd1FJmyvDPzOuhHHoUdyuy/YZ3JJYvnvVPNnR3gn5U2CgeGXdIuRBc0tyrvSWcz+jCn8V+g6f5qV5tr2Jv4HT93cBY0jcuWT5OFrV2BCa0dqrpqJT8O1oiz1U2++sDSd5a0g2q/csk0XvT/zIbFs6La/idsS2xm8oDvglY1s6TmpAXZ6KL5gjCvjvRIbWJPiU7Ypp9iRsf65fG3vuA5Hfr6PuiGruIwqKOl+btajKNq7EBVIpOB+Zgn7sJ1vIJJjPR6V8je6T/MEuCkzw3jUVmjxnSKxppIoL3CDmNNnX1vIY2eR1YSv/JFhmzhCtwgrQDVTl77Q1ao3IVRnOPSlky9E/x5IAsh8ej6KeJYd8biRPag9xDehkzm6xKnKRn7Hv1BvU7M50Scsp6STytVTqtUI3NjJ000jzruRGp13o0+ychFhzLlOBBZp+4HoTVFGcdEwNFxt+dWdZS/YhVQNqFZ83VfLXpKFkgyp9Rtss3hCfY+cYy6333S3+1vIlbH1Wju9Qhba3wN7VQn+sW0p7xq41FbDkIwFO+X+ndZCfKSvQ4kb0UBRtSSJN2VTCNwznlZDnpRAtCxNToFelNfW/wg+aHyduRz9gk2m9sw4qdL6aSDb6PXRDA1kIhVZ8I7zNt9ZzbGgRi1BoAv9jI7HF60HE6NfQc9xoslh+nLyAi3s9Pp7tAvxRGf2kZCN3NFwSz4PXmMcQvR/Q/0TgpS1ietH1PupWwK2iiNrva6tDuBHcE3+Je0a+TXuNfUj8uYSsSHeDxzABONbZm344/jz+ASe41WhSpsQHKtnO4DPE0HdC+rb8S2mHEYQkzA93S6mAknhz0cFfsZ5Sf9Ar3MF5cPwS9ZDf9CIzkmuI66wl60cRqnqeIW2T+zK5EZ4V8WmVNkkv0b4OPtZaMqaQhZ7Gdz9QYQ2Se+oXxX3s8DKcXG68Iqrk8cbthv/AhqzFbUDRPYFZyY2hbYrYwbLxg9xm/p/8DXbqqbg=="}, {"__id__": "chunk-f45256ad8aed89b57ff05fd1c2bd14ea", "__created_at__": 1760491113, "content": "## Schnorr-based Scriptless Threshold Signatures\n\nWhile scriptless multisignatures require all participants (k-of-k) to sign, threshold signatures allow a subset of participants (t-of-k) to sign. Threshold signatures combine the space efficiency and privacy benefits of scriptless multisignatures with the flexibility of allowing a subset of participants to sign.\n\nA simple threshold signature scheme can be implemented by combining scriptless multisignatures with verifiable secret sharing. In this approach:\n\n1. Participants collaborate to create a regular multisignature public key\n2. Each participant derives secret shares from their private key\n3. Each participant distributes their secret shares to the other participants\n4. When a threshold number of participants want to sign, they exchange the shares they possess for the missing participants\n5. They can then reconstruct the missing private keys and create a complete multisignature\n\nThis approach has some limitations:\n- **No accountability**: It's impossible to prove which specific members of the group participated in signing\n- **Vulnerability to manipulation attacks**: A dishonest participant could potentially reconstruct multiple private keys by deceiving other participants\n\nResearch on scriptless threshold signatures continues, with peer-reviewed solutions expected to become available in the future.", "full_doc_id": "doc-f45256ad8aed89b57ff05fd1c2bd14ea", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_7.md", "vector": "eJwN1I1TFNcBAHCSAKONoB5GjuO+du/t7nu7e4TRMFg/IAUV0VBNJKjUiYbYGHGIaGc0SR0TQ2LIh0piEDy4vbu9t2/f292DtKaxRjLWj+ikDmXURjEzDVZs1AajMuhoDND+/ojf8Q5dWfjnbXRImpEaw/fkWu9KMJA6CS/AotCXoTKjSnjSxHCh0kDPTV/t/Iom1a59CcSTK/GdNEP9h56tl1CDFjIJWWLUGtC2wJT0BT5EgbtUdCtFoUy+uqsHjtsL+F7gBHMgYb1tXuE5Pa7GZY7WKXe5i+IkE4Fh5U4Ke9o8J7nu+N7d86QGo4AMCLnKgWkz7WPhhyEbjiT366XaWkoK+oArUi/qoMR6DX6LXuSOkpj1gpVB68WtuZ/rx7givDFeHH++U6NL4Q5yNR+ADmuq/B8zBh/hFW0XG4tHUaaZpVylu40R6cnUp0axUECnCEvEOmkW/ZIdCBTSH8lnqNK4Zd5JTEhdJLxRa2/xPIoT7RsCPfCqUcl+BqPGe7iloBQ0Jqn+ED6w51gHxJlocd426Rf2+/hW/JfIklBRbDl0WSoqwVWB+Ym7ytGJ7+fVg6/gV9ZQENNBqdh92qnC1USmA7A5uAjdslzWmKk5C7h/mktVKf8IutF6s70JPWGspqc7fiP1meXJ1WZFRNk7V+3JD2IkpOVHQtlWumCa4eRCttNqnLpuP0/HvU/FOOQRV8ABuZu7bHVKE6xX0WF7iWUQgK7R33E62haLts3Oy3UdbA1oaUCWarQ78l5jPqhhuQQE2oA32attV57JK1PsPYukNMiT2/hdNExH8W3ipXWWiZZLZcLNhAHfVQOkDw/DYhoTXHpv4oh3onmE8+RF1ZPoQqSbXmzflFfFnY2dJRNhjORDyfYpv4bbkRNpJYN6TsZ2+BbbDZuUNnbHe8mpYDPhiFqO1rBGWwfBfaf99bgDPRVezoL6W6zLWCxa8et4EpwqmmST9AarYIUwFXwJ3hOWoblkotoiXBIPMk7aEJoXrrFq4Ck+i43jm8lBmO7xkULruu8CLFM/Bfco7BiPP8jdEdqDW0B1QJL/2nkwspT5xd3wpbzLAUgdYURpMp9OVcKfzW/cb0jD5m/x22qtfwdX1aL6v6Ez4RgQ4MpohZAOV4CNSiB4P/F053veRcGl8r8TTzgPw2nKevhf9rX8E9csRMmHrF/2yuV0PTa9k+EltUZ91FlJ30c3pgOYBb9H/QU/GLuM5d598kN37/5Dyrj9mXRNyO883npXmKt2Kl181JetnTdfYDV0yAjh+8lVkIp0721yBs/H1WE76GN9kWtJCOYgQzgMZ9CPmM9YmxwSNgOXqqkv58aileKErhLB7VBaKHyQEOP3A1pyg/Cj0eA5QXfZV7mTeBp7nZyn3awJ5tIs+0LwX+R+otd/JXZCzFQnWY62C3nTH4f75a9BBO7hB/mzTo1wWVhA6p1b5BypY/3GbOFvRqOvMLr24+9CrwkL/P3qGtjKN7MK0+W8Hfg7agP5el/ihLaKFIntsd5gkzODRryt8VTun7jXg1vFV8z11iA8ow85R+kqUJlII55EPz+LKeRNcwnJFnv+v9Fa3KG04HL/stA88klwFqeyP9KX0U9WN0wzG5Kb2RaQwUpggcnAiDnZGLX/EHwAN9pR6XuzyJ9tfyB+Zz6nvCL8ws9W050XxW/hYVjLZotMAaJXO6Y+FrriywG34zmYwnL8vGVTmbNBXny+NR3xnadQA8mkh7ALruNuiEHDQ0eTy9SInBO1tce8mdxUVG0VP1ITOgTLhDPsCHPHpli1MEKapVJ0kK7D/mBa2EOfhSuiU8Tz06LApbvF0egXtBGLrXX2UbQpWiy30nPmO2CnnqEWmZ/bOaw9elH6QZpjbJa0kEseoe8YsjzInhFCzimBOMet1fYYWINLjetuHymwm/lhLNI30YdU08P8dfBsKCz1wI8Lur2vCh+RxZ4DYDKtoo/jLPN/ZHactw=="}, {"__id__": "chunk-066a535cdf35f406643da45734abf7d0", "__created_at__": 1760491626, "content": "## ECDSA Signatures\n\nBefore Schnorr signatures were added to Bitcoin, ECDSA was the only digital signature protocol supported. ECDSA was developed in the early 1990s as an alternative when Schnorr's patent prevented its use in open standards and open source software. ECDSA remains supported for all non-taproot transactions.\n\nCompared to Schnorr signatures, ECDSA has several disadvantages:\n- It's more complex, requiring more operations to create or verify signatures\n- It has less provable security, lacking a complete proof that depends only on the ECDLP and ROM\n- It's nonlinear, making it difficult to create scriptless multisignatures\n\nIn ECDSA, signatures consist of two values, R and s. The algorithm works as follows:\n\n1. Generate a private nonce k and derive a public nonce K\n2. R is the x-coordinate of K\n3. Calculate s = k^(-1) × (Hash(m) + x × R)\n4. Verification computes K = s^(-1) × Hash(m) × G + s^(-1) × R × X\n5. If the x-coordinate of K equals R, the signature is valid", "full_doc_id": "doc-066a535cdf35f406643da45734abf7d0", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_8.md", "vector": "eJwN0o1XFVUCAHCMNBVB4OkDefDemzcf986deVhGH2ioUOtXinkkxAqss9liXwq2klC7J0oelrhwivgc3sy8e2funTdPz7HdqKwUOx3KY6utSPlRaa62J7MW10iPCNuf8Dvn9yxqVFv2VToDaDU9KjKUQfaxuvgqlamLSFhq6By0/kfPx2qkw31L7FHWbWXMrbcH4HJ2zuGt26RzsUZl3PcveoTuUj8TX4y+bu6Fo1k7WUvsLF+mnZeb0F5wjUXQXSKU82CdWAZP0lKggCXW3Sggn3CYrCgJZ0dOMw/Brew1Ode+LM+Aqdr82DXc6JTqd8pp/AbrVzWob1HvlSrpp9weIahu4paR6tBUNMP+E3+Bz+JOaJ1OA2HMBL8ZF4XbYEHXQaGKPEX5eIHoY4/wB2A+egFWufVCuvCzWc7Wht5CabhJmcZKzWyln6XgMtiBpdwNqBvOca7RIu4X4dFADTzZXUSWanqcwIPmSrqPKycK3Coeli6Q2bFR+YPsFL1bXQaeCMqh7LAXz483g93oO2UtmOw4/grzlNUIiqU27ienVlbZ44E6ehlORVXikPCN8oSTad6kPu55MSlRY+43HtJt5WNcqt5Dr+KzgcXUD6bSgDJM5qJnNUJq4ELCuVPsHHmr0yDedKbTTLQAXtJTxCd713VWCW1uhXiFjZARnJwwRB/2mu9Jd8BRjkPVEo8inumkMVpGr4tMKyQ30wvEEWzwD8o3PKuEpsw2opGe0N3CtsABvB+VO37rW+dtmqvNgCvYcqqCX7t+AFOBxM6Cv9i73YvolPWCY9EBeqB3CE1BY7m1XL+vSQmRh1mRMIvVojKwgC6nT7IYbOMH1SH5pLiYHfPXmanoAVtlJTlvkK+k/XEeEZStbgfD2X8wmsk33lec3+TVcJCrgh3xFqMEfgkOw0Kyd8+Dwd63bsGl4j/Cm9XpJN241z1j5tB2fXLPEq5IUoiXpPaUBR6Dt5rj4IZQKz9qpavjkQbxPucLf7FnNLyU3ghKgbP2pi4GvxPXgRF+ktuJ52RNKNXeSSRLOGTvsF7V7jdXwi+sdn5O8J3oKK0XF+WE8ppgf+d4hke6bn6ZqJEXRKf5C5DFOgkKb7G/mtnNtWvPxZbxaagJfea7aGwx8iUQajH34QmjQ25GXXIHft3RlQ65RmLk6dgsOBMg8c/x0+hC+CNnZ3M6bgZ/VOepjUyk1fJGvlw6qo7CNep5547WNWaxsg45xFT/5vKhT2Ct8W32RpIkv614uRXYYz6DG0il+XnWJdKiHw/9mPehftp5j8vQvRIV15DNQli4gk6H54tH0s9YcW2mOx9X4TO5UnYpqMMVsUGl3o2ADe4BetynuuVCMTzVftk/glfOlqnLBvAQ92YsvW8y8zglXIXRuGc7nPCVSGnRVBrJa4U/s0J6DZBAW2iEj+QckqthEz7mzBACsDU+153oTWaK85G9RQgY7xrdZkQYClbx69sPKhnSce4nO4lsNIXfpYeiJtlmdXCH/UdnP++nWk28lGrBQS0nkID7rV9wAxvs/G+wWk+i/2z3dLTpPbbgH0vd3lPhm6D9v/9ZhXLJwngpXNG7UNhprrGXi1djY9bX1g+g2O2TDBw1ovgxJ9m+IvXgsP1+6CVaR4GxSZ3rLIUPJXzuMXeXMGIH1etsF1RlwmqEMvNOsZZ7RmpWKoWFfQfzi+FmIR/vBhftc3Il15gocNfb1XqCRGK3S/Ps9fqRYAFdgLulcF8JyMVW7HahXO4Hrd5wrCn497yrvIL/Ta+QeuFd8mpsXNuF8x0pWGgbcqacS5Ktv1IsjREP3MjtVNry8rtWy6q2h07CW/V3mB/7QQpcISfZY86LtHD2y/B+h0ssY5v8rXpr7w68CEX4r4MpVLSTgexSUBQf0B5373N8iS59sb1Z3+bNZP+hU8Qz5hz/MJyk2XgY3+JxpVPCU+Ir+dP5S6HL0TR5ljbMCt2M+Pft/wciH5fT"}, {"__id__": "chunk-d43eca3bdd404237f641bc772bbc8345", "__created_at__": 1760491347, "content": "## Serialization of ECDSA Signatures\n\nECDSA signatures in Bitcoin use the Distinguished Encoding Rules (DER) format for serialization. A DER-encoded signature consists of the following elements:\n\n1. 0x30: Indicates the start of a DER sequence\n2. Length of the sequence\n3. 0x02: Indicates an integer value follows\n4. Length of the R integer\n5. R value\n6. 0x02: Indicates another integer follows\n7. Length of the s integer\n8. s value\n9. A suffix (e.g., 0x01 for SIGHASH_ALL) indicating the hash type\n\nThis serialization is more complex and typically longer than the fixed-size format used for Schnorr signatures, contributing to larger transaction sizes when ECDSA is used.", "full_doc_id": "doc-d43eca3bdd404237f641bc772bbc8345", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch08-signatures/mastering-bitcoin-3rd-edition_chapter-8-signatures_9.md", "vector": "eJwNlHlwDWcAwNNKq5LQILf3XnbfXt+3+160vNAqjXl1tyNI4hZxlCkNho6kIUUcNVPqSMKTvGN337e737e7oSp1hOkY1xPtBFXShro6ripCjVtbf/7++/3xm98GqMK9O1MapkoV9tHUcnE26dnwwJrhHeGNw3Ol2Ur3QBypDy4G/1KPwmOtqdjX82rdNXGhEbBv1/m5HZFhtBr2mV9Zxdxaaoo+nF/v+dn9i5EQmZQ5zW17drtfE7MIEs4yXjATPpOu8C+xHzRQY/EST7Mw3q7mKqSpxgS6Fd4BN0mbFK39h7rhzJL7Rov1UrKNe0cchkz0HK5V7sGldNRcmf5iWycplpKMX2OXwHJyxlUJ8+BbuJ91Gy/AFv+jMS8yQVqrx9y3gsdwRyvB9T6JcflwszjRe8ps1OeATvoZK8u9BvZFi9iQ/jh8FY4xbq7rI5jK52wiaOYZowUP4a5Ro1Ea70cl2OB1u0x4ol3RcxHDzmTzgx/QREtEu2BxNDX82PtNmi/CGMNznJgzuwl7pXpQ4rYNmpuuN9Vq8C6YIQw0N8OY+R1apY+UxsP72e1KoneFVZl6DE+maoW4hma9K76EQuBL7TPwoTVaX4deJxyXoG4U9uoVMInEsyvgvswiq7eSBD4l1fxuoqACsAb8ibbzJXpTHcewJOy8QdqMcpWzDXYWOYPpFLdQxXjhKEETSoTCjHokGo/ol6ES/DCyEHpxmtIO9lMF3FZMk+54KSDZ+wR/ZIo4zHyOBzQU6w6uFb4Itcj/gZIteewE0Ig7g+PEY6vSfNwHV+ED2E+NAVkMYSdrFNNPrIg+Mmw+JVwgVcHrQlzmYXxOmMPHxMWOiS4Tz5TnRqrBDuOWMS/ajH/O9tmtICj0AvXsbNfbjr3GJRglMp8Hf1D380uN5rQMPkE4CTlN2v6AzzQ2qjPZSjHgdWyudJ62gq889qPyTUPZFaCAjFZzM44qDsZHreXHqDRIN3SYT8Vzg3BH5Y8uNz2SNgvc41enHOHKhGb6AHe7fjUZEDkfuO7N2FKjRRw5hItuxzXBs/wxpd5djM/JZVqMHehcLvthnKcre1jQ9XvWZNAubHb4RIks0RNykoxp7gBvhI+H7zPPeEkqZW+EdiKFe8j+Es0PStEOQr7YBKenZdgnxRSgCZ8xl8h5RuaLmDsYiBvEXPvb1NJAMuzhbRcvmo0oIPWDezggtbNveBvNuNAYpeurwuNRQs5F+we+hu5P1OyOWh5819NPPa79ozxGT1gG9KYAviT3YvPDp9Fz0ianazHuU3BSXSl8zHwIB3ivSgFwChcb+XoVmo8eavNBAfRrHcJHxWRbyFxoYDsfldnrwU5hOTrEAlVkZlA15sH1Y+VGvUrbqD3Fs5Njaasa4mF8xjiQRKeTUT1SYDI+QV6Rq5UZ6RSZh3IZfy58xn4P1DJx5JDdElqAl6GLZAv/rXqZXiDfda+iatzb+C89PcVFXK59ylGtL2X9ksIkkhhuoRYpcjQP7FCGmEgbru+iGSoMl5C69EJ8F09X5NBH+lkqzLXQXYxC6Muepb6pLba8zGO4S/rcmIivuhP16roXG5tCK8UR2kDyq9GfSyK/8ffCG4IV7pHRSa9uBPEcuY1ap18wFhppMJlUiP7tva2gvcl5BFswYkz0HBMrkcd1Wu7P7GazsvuIN0CrzuSUw1r5L5AFmnBf7pz60t5jnlZPuIvUwfgseB2FXY3KOryMXOeGy8vhMm2wcotmuAAIoQfRT+hu7mSHoqU6cwPY2SYfVWdFa7QSazXaoz4VOdjFiEaDhBG/ppLAZGEkPOGaR37it/YYT4biQvUCuUw94dPpJPBUbbOnkFHUGlAqZ9vjsMz3QvJWJpgpatTNcGHnb/BQ8L2lSD5dV6SG7lapWUS36IY6V/GZqjUIV6uN+kH4N7mIErP3o0RhOcvBP7wdXL+z6bVVvN6liFDWF+RK3f+rJKPa"}, {"__id__": "chunk-b613e03e970a106fb8db91b171ce9f49", "__created_at__": 1760491522, "content": "# Transaction Fees in Bitcoin\n\n## Understanding Transaction Fees and Conflicting Transactions\n\nThe Bitcoin network has a limited number of blocks produced in a given time, with each block having limited space for transactions. When Alice creates a digital signature to pay Bob, she's committing to a specific transaction. However, she can create another signature for a transaction paying someone else using the same output (bitcoins) she used to pay Bob. These are called \"conflicting transactions\" because only one can be included in the valid blockchain.\n\nTo protect against conflicting transactions, Bob should wait until Alice's transaction is confirmed in the blockchain to a sufficient depth. For a transaction to be confirmed, it must be included in a block. Miners select which transactions to include in blocks, and typically select transactions that maximize their revenue. This mechanism is called \"transaction fees\", which operates more like a bid in an auction than a fixed fee. Transactions bid for limited block space, and miners prioritize transactions with higher fees.", "full_doc_id": "doc-b613e03e970a106fb8db91b171ce9f49", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_1.md", "vector": "eJwN1ItTFOcBAPDyiCAGm8RwIHfH7e59u/t9u3vKlQZJrREfwSeZjCRxTHykgtMolUDVUUqMBl+QRhMEQjgO7nb322+/b3dxwmgnrbWm1QI+GE1jtOOroKk1NdLUJhmxxtr8D7/5/UJ5rbD8w6VWXYRzP4ZtbTfD5eFFvcHIGViB53CrKDJbuQrxKhxio3q682tmKhm9L+sJ+nM2XtkhrUt+JqvOGS+T7VP3GdPo0c778Ij/rzTV26lc4ndHZksN4nmnTI7n/d28pf1WiysxI005qZ+mZyOt8ESiRjus3qYXnM/ko+CIPk0TYmH5KndfGphM+EHrobQMEvNZS9YeFFSpQ+LpZLRrFh6bYpjL2CR1q/xI73zpGp4My0h/6LCbTgS1XSoGwY4KWopC/OrgJafdKsJH+ChXxKsRH5drvwQ79ItWM2b5E0MaLKVrqao9JCReKv4m77LxJYii3d3bHKXndatRrk109TQDI+9zb4S/SBG9oa8UpqK6zu/gi+BUfBES7A7xJyigTiXzrD8ojtvvXIbVylk4HWYwKb6fDcTqtUF0l9vu2wSWsEG73S1Ra5TIpOrkU2KIFLe86x4P705e9yZZ/6Q/8PYoAZ6BYRY2fpgspBO51XiHxjkDEJBaekEdMfvpC0Il2cxeR//ufrRFCyY657IObqveIW9xmu3reomjg0G2kEUL3sUpkIAZ0ko4RUrgWlIDU533QpV0pni24GU6yophKTlnL0eZuid/KzyJU4KZfCCULVZxschh1m584xXqa/Ey/m7gPz0D8pzwV/xWFPROBQ7jL40adPKDKhPZWRhxPMqilVJ9XAB1gezAoJ3CHTLeElLRXMW1KPkvmMNtMA5NaQBl+X2gq/Nc21rzPfZL3MxuhURHUQOoSVsJO9hZlmGNcFvoOlTID7vRsNf7GHip4AF3W3SdRV6RuU35Nr5C3qE8o31F/MqYZ+rleMCbJsbhNaGWjJKjwTOhCcHFellojXiTfI7TtPrQ1/IWa6NJYSt6wyhLbCAzuBs+xWoCs7W9lHcm+gXAKQvCi62eJ9pCuwLXhHEkG5/gR8y99CPxAW20J6At9m45y7oFZ8BJtu9Ap/6FS8kYnBdvdzm4Op6Nx2AhHTEyE30frFCfEI6Abc7vEVCf4xfoVfAL6YrcgjYKvJfAF9VtoMr6s9ttXhWniG38XM3QMqw+X5pTjUrlCeojbNS5gkfMWdI0IdMulk+TDXCNH0vfGeNkSTOTC4HB78f5ig4f5v5MY9YrHBX/B4YC/bESMC75Cv8hqE4ss++Y6foJdxDdUJ7zjvPT5ZPwGKyXNstD9mbSzA7ApXAj16X40GPsONkH/8Ua2EG2mNwje5yGxH5cLv1FCrD70pNs1BVAzGgXHUmwyrFMM5Ir6WtKNsnjGsVNXBQUJyrwIf1PsC93p3pJZDlFwnl0jOv2Zo//BH4c7zoQg/cM6tzFTZEc1+eVJHPZCwU/kqvlEXUVOKCed29PFnPSwLDql/bxd+geOlMqQzc7W2mdvcCIJotgV3JM9XV3StVkEZ3OA3rJ+sRI4U/Re8H1xpus0XvbavRmxu/H/yG8gUva30EV349xnDSJn4pX+M0k7EvJ3/n4RDgf107mWLrxDj6RqLN2obfEM7SVfqTryrzOYuWgW2/XsTcVrbeyIN8the9Lt2xPK4Bl6uVQLVqjRpW/2ce0Qu1poHKPYpcO6NfZql7OXWing9Teg/Ab9IyRFouIWc4GuwWsCvYkI+iyFO7q4/6IftUSYc3h8Xy6PFP/lPgfj8o3/Tl4CV2sz3Z+KlZ2m1IpbILn2s7hO5B3nvcP2/3wWf0pK02rVl+l25k/kGWM0hb4vj6G1+WV2SFSKZSq7X7kZLmGt9RdEsqhOFwg1sSm4od4vXTB7QBfJ7Os9XS5wzvb4bDXk5vvXKHHaL+YCn9H5usr6NPxCn2CMCTPwsvVV5Gwd1NoubEO7Uqe/N7uj50G8/9wXJek"}, {"__id__": "chunk-e0156bf22a014e8d8b46a777440c3647", "__created_at__": 1760491540, "content": "## Timelock Defense Against Fee Sniping\n\nFee sniping is a theoretical attack where miners try to rewrite past blocks by \"sniping\" higher-fee transactions from future blocks to maximize profitability. For example, instead of mining block #100,001, miners might attempt to remine block #100,000 but include high-fee transactions from the current mempool.\n\nCurrently, this attack isn't very lucrative because block subsidies are much higher than total fees per block. However, as transaction fees eventually become the majority of miner rewards, this scenario becomes more likely.\n\nSeveral wallets discourage fee sniping by creating transactions with a lock time that limits them to being included only in the next block or later blocks. In our example, a wallet would set lock time to 100,001. This prevents miners from including these transactions in remined blocks, making fee sniping less profitable.\n\nThis approach doesn't entirely prevent fee sniping but helps preserve network stability as block subsidies decline. It's recommended that wallets implement anti-fee sniping measures when they don't interfere with other uses of the lock time field.", "full_doc_id": "doc-e0156bf22a014e8d8b46a777440c3647", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_10.md", "vector": "eJwN1PtTFdcBwHHFaB0dwAc+kIW7d/fs7tnHBZ8xig6iRiQ1o1KtopaotShpGI0yAmJ9JPGFCirI8+7d3bt7zp59XCaajKNGkoImMUSlaSI2SFQmxIn6QyZDHG3UUv+C73x++bYKVvqhs39I+Tq0zk7gl2sL+Tdkxq2Rc8WNZI2WqB7gL0QHpSWRjIjs9HmVToaUznaFykkrnqMUQ9avwd1WnFdKPlU+M1rwKBvKmIlor5v35QY2KURzu+FVr0QcjG9E07QfxGzrNyuxcbuU55hKQMpx7ohb6IdGKSkLilK32cz/NzrDGV9fyF+SDtq70Ef6NG4obaEfAUz6WO5RZ5nT3YvWgfSFqNWYrGwWR3s3xX6wn8l0xgh5hHdWgLhgPlVq9Bg+k0Rh/huruvqWBlJOoOn6n5TQ6ZFpm8XD+nrzpyZbvt94VylwGkA8+Nzva+ICrknDqHFY0iIz8ZfootXf2JASEGrNxGizfzj8d9N1rmq37BIl4ASFNKbMugbKgse4B8op/pdoBQpKl/zr5npugZDOfoHr3dWgAuWQXfLX6lFqOmHUWrxM8NxEpQAOFzIj2+QQ4ekZXpRZHiz1B1CH89Rer6yl48Ublhob7lR5GXiDOVRaRVYrWbaqZaa34260m7vIvIla6cV6spgfWXoqzWgzLhgnxGx/pzXUukn62f225h4z+qNmeC53QHw71EaXuMcFJG5y80Ca84Tus8/iTBwTi7UjXDG3ZcIh4RLa476oBaSLI0AW1sgjYhPpZq9u1EbwViRvbBSHBKgskfv5FvRcexc9Nvbqk/xwdJW/MDIMFXAdIMbpwlycxV8AB1GcMVP/s+7Lq1Ly4TmyjZ0nToGKIog3wff8Y9JqtqGlKMpeIfPRGu8zOIhaITH8O6QQXEN70GD3mFAdmOp/m3rSiedPiDL3qrwi9sCthK8pHUB4af+nEHS/0nPJTJei4tx7RoPQRjfYI+nLkZJxv8Mu9kf7kZgkvar3SfvonmAhXgEechK8asvJ79tTA/nJCbgaDtDFdKRlW/0O5iKMf1nrELZSJVSRfkZ47hTVliec1M/DJHud2J7ylrFd3uF5sILZC/+KJwOKvILq+GfJrLNMzLP3oKPRLWSqV6FJ9ddCu2BH6gj7HjVPmsFvduqDh+hepkxLCE9p+QG+IhZMWOuf0Y64g6JbUa7+q/KJ2uUO5Vabz4SQ0iiVpuY0HuFFOHnsotBs2ClTniccBI9gBrwfHKI8MUIMz0sGI96v+Q8nSn8hyTYgl+12dN7ernbriaFLQu3ERSTVl8kCe7HUA+eSZpBFVcFecIU/ysZpxWQDi8XFfLbZIj48zdb1jk9mV/oIL7GnkfGkkhQx8+SlsJPb4uwDfZNqyOBoJdbAbKuB+jlcgKbQEesW/NQbCQqpneoo6x9gFr06bT/3SL8xZEPqDmOI2DbpDjMqNp8UiX+LVPgXQDmJhT8kT+EevUu1cJXfEiRc70unKmZL+73P0RCHEeiJw/nb/Dm3v/HFaBF2Gu3oO0/FyPwdvSb+K/hmfU/gLL5D5vBj8QH0zM5/+aHiptvsKaPcm+CPIAH6KTtM+bf3ATMidN5uoePAe2oytQl3Wrq9lSb6XYWkXLdnk4Xh0fbKcTsbM5QFTU1WqZ9llsFl+m2u3clx8mIruWC0TIq4i+EkaR/eIP+PvQIzqJ3wirJO6o+WKh9I7wSv63HCRmc9v5xcJ2+QdvTF6Eo8gH1mUXgWVWU8wc1eRMwU6kAvc966bHYLuwU9PMc5ZxROvAer0Tb1Tl0KPwydxnXjeWYlqref4yTwR+57qcb6xtvL7/YjoJ95zkxPrjv5vlxCL1HTg9nAD3baDjjDVOgf6r3oeGp8yguJaLOsIv9jY74V4xvsTaJBAg1Zsan4sfz66Vyw1pksJMQG2HIvUb7rDYQH8APSFGjk3KoJdq3yHnrsd40bI3wHVeo4zs3IGbNWZK1pkIFrVN5fRW1G/we2G58S"}, {"__id__": "chunk-b553c2fc07f7cdca5ad4a66f44c6540e", "__created_at__": 1760491556, "content": "## Fee Payment Responsibility and Fee Rates\n\nIn Bitcoin, the spender typically pays the transaction fee. Unlike other payment systems where fees might be hidden, Bitcoin transaction fees require explicit permission from the spender. While it's possible for a receiver to pay a fee in a separate transaction, it's most efficient for the spender to pay the fee in the same transaction that makes the payment. This approach accommodates the technical structure of Bitcoin and matches practical expectations, as spenders often have the highest desire to see transactions confirm quickly.\n\nMiners evaluate transactions by dividing the fee by the transaction's size (weight) to find the highest fee per weight, called the \"fee rate.\" This is analogous to comparison shopping by price per unit. Fee rates can be expressed in different units:\n- BTC/Bytes or BTC/Kilobytes (legacy units)\n- BTC/Vbytes or BTC/Kilo-vbyte\n- Satoshi/Vbyte (most common today)\n- Satoshi/Weight (also common)\n\nIt's crucial to be careful when accepting fee rate inputs. If users mix denominations, they could overpay by factors of 1,000 or even 100,000,000 times. Wallets should make it difficult to accidentally pay excessive fees, while still allowing intentional high fees for legitimate reasons.", "full_doc_id": "doc-b553c2fc07f7cdca5ad4a66f44c6540e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_2.md", "vector": "eJwN0vtXFFUAwHEl8ZnyiF1ZWHZndudx78ygBIFGYvg4WVqZ+Eo0HxgmnbJUKh9HPJqarqBYhjyWnZ2duXfunX2kmWkplVpaVGLBMchKUULNR0fLtENW/AWfH75fTt6cdX1viZmVGYyUycfEs+x+eIF2QEs+uTsAc7GP+cu/E5SD9yN7jPTIqMhmWEYd/t/0TXiEtItPQkvAebIvch9ulmeJI9D36hZRMAdGetDT0kG9a8Rcxi1r5Cw4bkwz85WX5AFwK14t9lSV8b+NPC7loUooyTmkCXnAEFdf/T3wDP9r/Y2UKU6KFqMqs1V6Tqh35eFdUo5wRQpRFzOn0cNmZTnQhPAZeYqUHbmaZrpX8zO50oa1ZINxj98DMfeduEqbCj+2ncSzrRXeJ5kKztFgB7cyz2klNE6JwyXkuv2e4MbTlSdoZfBvoWsji5dpKLhNaxKL5NyUKvxsw+skJH6O43q1b5imcAW6bJZXtyKSkSP+npIGNtWdMjuZNtQF0+UXhZNMA9krF5DUiAg6xQOinau1TqnFZk6oVZnj7Quu+RU4j3ag9bRZGQfWOH3G4/IpxIL7qalddF+jeUY73UK6wCneJjwatsh0rBjf0Gfxh/J5+jYoNG+izyTBuGUuEqfqPr0zJYUUqvnBdCbPmsbdp3ZJS6wjZJ4BSRLy66dJG1iatqy+G3yh2cUeeTbuQdM5EOpvdlu1bIKxIlxPqoEP83iI/CX7qWezKJvHkrv3zBfXC58wqUpReB/piKwwj6idbAvzOPOT7PMOYHklTN7gitECXFM91lFG7pAJegOIgPNGq36Wu+sdCYSkM71yofolbBkR4g8bM3CHWEna+SrlI/ZfrpMfEHyaTycLcV9jaLhfmhTdACZzFYLfs4AitRxfZWebLXwl7AgXOVTSGizjxyXsZnWaFm3yKnBg4DmvKbXB9Zixr40Z5DYaGCkTRGaYawspV0W0AGUzQWYG1wnCoXXWVPlQRqG8H7lxf6MCOs0D5hPGAdqJZe0/gZeB0U3O8V9z48GqQCE+AvLNTFu8kagn0tvaZU/jA3T4Pv9h7qjgQ43CMvwCHC/4dkWjwz170XL2B+gjLRE3lPitdc2eWLBI2x7IYreBNUwSsGiPNJjzO4tputcuGBKRi5010S7uFxh2DlUv4IPMa8JMs8r1i/wg2Kqr6vrwLEHlLsFcMwubaK+4kpvBv4luwpg5WJxEZYlr9IldyhB6jW91+WinxHjHCB8oIpGwyWeQcls8ijMvcJX6fPEtNJ/EN/6AUqxJ8Gv4e7gVv4ILQK64jW8X1uGJpACXK2XKGP5PsFNKJHmOLmGutdSIj/1nPsNupzv543yyeJI/aPTAT/jBJEWqVt8y7rDvpLcb0d4Hb9FspQw7eZBRguc6HnI+bARwLezjvgR+FqBrlCcfUHAsvMmdI8aT5Bg/vJ/nplFOpMwleJUVDfksMTBaLOF+kmIQSXGxz2xn8EOei3BsxrLQU3gWWgshtIIryTm9iBz0OLnx3ng5g+zwjLT2kIXkNp0ZmoN7bP8aMeMSF0A/RrvpYuoI5gYe80yjJpgkJbFbgK32jJbKxLhB5KgWZIbhNpgZquNG6X2x1fssJK+C8aIWGklOBBxSgj5UOhFZToqtP8Vs62H7qnAFj+AbZIJ8WIgBf/oOgVXi5XdJk6xIX4EeR7FzZ6ggVOrnyK3wZtc0kE1fho38Xb0On6i1WRsjb4LnvQmhK9xMjWqL0AbQ27X+D/Yp1z4hFeUjFo32rtU+TR2E+xEXec1dFzS4qfxEsUYdkjEGTiYFXH/7F6ynZrd+QpohXLKuktFaaVoiugw+NEoqDxE3mUAX6ZOUb7UF9ADdgIahRxgHCXFuoWp3PHmfMtAZSQU3GDuXF61RS8Pt0Bm1QR9dbv5D27g1GaX0tJBp3sOvC7w3VTrc2KxEYYv3badKk6U+tgSw0kqmzer/abGcYQ=="}, {"__id__": "chunk-68ece8eafaca6b4e638a8234c9342e57", "__created_at__": 1760491562, "content": "## Fee Rate Estimation\n\nFee rates work as bids in an auction, with lower fee rates typically requiring longer waiting times for confirmation. Paying too low a fee rate could result in a transaction never confirming. While perfect prediction of required fee rates isn't possible, estimates can be generated based on recent transaction data.\n\nFull nodes can record when they received transactions, when those transactions were confirmed, and the fee rates paid. By analyzing this data, nodes can estimate how many blocks it will take to confirm a transaction at various fee rates. Bitcoin Core includes a fee rate estimator accessible via the `estimatesmartfee` RPC:\n\n```\n$ bitcoin-cli -named estimatesmartfee conf_target=144\n{\n  \"feerate\": 0.00006570,\n  \"blocks\": 144\n}\n```\n\nMany web-based services also provide fee estimation APIs. Fee estimation can never be perfect, especially when market demand changes. If fee rates decrease, previously normal transactions might now be considered high-priority and confirm sooner. If fee rates increase, transactions may be stuck with too low a fee rate, creating a need for methods to increase fee rates on pending transactions, known as \"fee bumping.\"", "full_doc_id": "doc-68ece8eafaca6b4e638a8234c9342e57", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_3.md", "vector": "eJwN1IlTFWUAAPBkEvEAEQGF93hv39vdb79vdxFFpBK1nFRyHLMxRcqazAhv9DkKHhlWKgoaooDAO3bf7re73x4PFTs0LbtGG29tSjvEG9QYS1MrU6zfH/GzEMhZtfsIqcweH/uA743iaC/41VwgHkAHYTKch29KonWGbQcxrUPjyQVrNzyII6EuKlstgV8xrYZI38X9nAtko3gspGY2kgDfz3H0JEZB78t0NuSCfG9rJl8GeOZvMYuvEwXyCO3wTVVfHnodrGxKRifE1Tisu7gJ7Cb9DuVm/jByMi948zcTdZjRQfdCn3tv+E8x28Hvgq19SnWrKeDnIctTB+PnheP05+b8UJ3RyWB6q6Ra25RS9ZBrJ5MH7uMwLPEv0b6zPew56jyzygxqreJaaSAZzeW6YqTaRwsRiRLarD1ZHTRHrSQ3jLn6BN8DiLMHBd+SKgZucJXSZxQJ7tUuSTfI0uZG10r3Iq/mXQQeMFPFwd6+2kfsJrMcThayhA+NWnebmGDV2oUwgQ2zE+kq80iGGF2PFwpz+guwl98PAsYcMN2sEOvBda2LBPldpMAfjOWSxdFDjkevIVrwZZEyrzI/KYnKVZJk1hhF+AS8HFzMpEZXu48LhQ2TtTxuK9jFLPOx0lrE4S9Zr1Oi3mQCAm1tNAujneYPPR/iH23iKfeOYfL5VjaZCfIFUsR4AFwkHu+zi+W1hDZKImfhLN968BTfzg2Qp6SUmpj+ovFAFmKLwD1xZuxdbaETkN9R11DvUi7fUXZkelWoQ/gkwjMBz/5oNVdlJJJbOlP9r+ZGHmp4tJV/zCrgWubbOBMuItfZk6LftyD4ohPHXZHuwFRx6rYRUS8K1K8RwpEqnKset3Ka/rVT0QqExan0BDUflFl9yA7SwjtNj61Kb7PxmPYLPmMnKHU2GQcGPIsy2BbPdL6MPSKPTuvp9LBPpi12DuMSdn6wnUzZPLduRuOTaWb0W7CM6a2N1HeKf8q/oLFEUnqRTLjdtwEH9cs4P1pgzBbj4Y/YsTaAMb6+YgILo0loOc7QBbNLO0LmhO+rX9P13Cil2DXSP8jOFQr1fvA0Okm5nXXgdvObwQ7Gcu6QWfAV929uAuOpj8kLxrZ6jW8lK9htGi2M5fXoaYNli9Ektg86zx2NIViI1m05oBmkwL0VYldfZTb6yC+Tu1SKVSt306eE9+QaNQPe95d7XoUXQuVixMqHjVnDhHQUZvplG2ZxcifTZMwThyobYI6wx75uukA1GUPeS90nr/WdoW/D2VqlXk7ayEX7CuopitZh65iezh0FIf80/0YTZ+6yEsVBwnCUtn2GWLajloyiTpBPsOKkaDlwPJ7GPeN/DZ6jv1cpcBqe01rEHq7L4TK+v6/LuKhyOFephYy9PTwiK4ksIUFqHLe/mY5f7gvBPM+T3EQ40t8O/3HitWHUmEjpzg4w0HxdqzDPCdNJq3mTNFpfyaPZZM+c7AB8gj5sJ0lztRxfN3R7DxLRiFNX8Q+ZFR5JV6Ki2T8yn0kBNj9Ofp9pcK6pieQ8Ga2Vh097rtqdEU/Wc6biVMpLyWeyR6vnimyVI3BycxesbjhkBJSu9Ig6TdvPtOm6kBQJhPqQR8ZtM6atsKo3/9WU64qPVXjy0NfqFLQ51pu02QvQEAIaIHkFrBaGEoPLqJ0JS81lsJ6PQDe5x9ahGWiNdI/d474Y/V7Ktxus30JPu0V8A8yCz9p/miHlEYnEtqDDkUyc4E8ffBaMU+5xgVBedEjLNdAOs3C3trvJrkoJbSH/mGu0hbqk/hHdnXmLTWCOmd8oZ7lquxMUya82/f+ntF78paGbjCIvyW8oleRFVNC8jB6V/NCK4U9xQHgHX7FuGdX1bWrc1g+1LzzLucqaCj3N+AnlW2PZvf5TXLkzG9OtC8BweyM6FTzYwhsr+QbvOnIX/E0+IG+l95GLuUnWIf5NMVGJo+KcIv457RI7za4jNeQ/2pmnEg=="}, {"__id__": "chunk-c0d0ff2d63b9108c8b20a3f5b7ed999c", "__created_at__": 1760491579, "content": "## Replace By Fee (RBF) Fee Bumping\n\nRBF fee bumping involves creating a conflicting version of a transaction that pays a higher fee. Transactions conflict when they each try to spend one of the same UTXOs. To prevent network abuse through excessive transaction creation, Bitcoin Core and other nodes that support transaction replacement require each replacement transaction to pay a higher fee rate than the transaction being replaced.\n\nBitcoin Core supports two variations of RBF:\n- **Opt-in RBF**: Transactions can signal that they allow replacement with higher fee rate versions. This is specified in BIP125 and enabled by default in Bitcoin Core.\n- **Full RBF**: Any unconfirmed transaction can be replaced with a higher fee rate version. This is optionally available in Bitcoin Core but disabled by default.\n\nThe existence of two variants stems from controversy around transaction replacement. Some merchants relied on the assumption that valid unconfirmed transactions would eventually confirm. Transaction replacement breaks this assumption since an alternative version might not pay the same outputs. As a compromise, Bitcoin Core implemented opt-in RBF, where only transactions signaling replacement permission could be replaced.\n\nWhen implementing RBF fee bumping, a wallet creates a new transaction that spends at least one of the same UTXOs as the original transaction, usually keeping the same outputs that pay the receiver(s). The increased fee can be paid by reducing the change output value or adding additional inputs to the transaction.\n\nThe advantage of RBF is its efficiency in using block space. The disadvantage is that normally only the transaction creator can perform RBF fee bumping, with limited exceptions for specially designed transactions.", "full_doc_id": "doc-c0d0ff2d63b9108c8b20a3f5b7ed999c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_4.md", "vector": "eJwN0o1TFNcBAPAIqSHiN4EDjjv29vbjvb29AkWJSYaMQW3jF2OjyUVJxxhqEkdjkfoRTDqGjo02EBQjnMAdd7v73u57b/cg0XzQoYqZmAZqDJZiFEQdvxJL1KFq1IDR9vc3/A4qx/PufriBnAt+nchQeSWf3+xZyBx1vJTaVC/d5Qejv4mURi3uW3Yrfsd8ik5UZltrNcg9xnwgFPgTt1Ny0RdorZmW18lvnHql6YF0IXNW+H5thexKWZff728PjDhIrBM7cK2oK2XCXKtDuUoV2haMB5L1E2pEXNUwaK1QhvU/oh1gk3wnuszX5Z5lJDGTVoACpSVSFD8A74DJwfNcuvxXb4e3SK3TJzjjlOMcdm77r2c0ewp13HSYTLIc4c2cE/xXXKr3OZim3zBraRYakCpd7U3Xms+oGEyib6ofaMvtc2aOgtCz4D5933UJ7iE7oj5tq3EM96jlgQ5ZQO6syYkP5bHorccO+4/xzFksnkZdmTvEev/tOMWZcID7yrgMDfKz7AoclXaZw7QPZpClZImYCT7iazwD9HjWy/rzrXMhkCti4+giIUyn0W4aDMiKI5zm/+MB5gPNIt9ZJVzMGcQGWeYeAWJDJXid266PmD8Zb9EbVpdyEG0HP5gc+FKdiAZa08N5nqbYsFSJOtOPxAu5hWwNHx7/jTLI5pvbjLcsj/dk/M+0QAyay9N8Ug9cFXg1DPe14c3BdLucW2EO5yxCPbatjQYegFuez8B04eL4LiHO7nP94BG/GA2DXuXvZDFJZutZqpmc3Sue8dVBJ9fPn4dn4q/wOLuG9ksvxavpBcvr2W+uFIdxGZroHgZf+Ob4TqBHjG+ySuQaZYN7kLxBqji98dPcsHovO99YynkxB+7lFnFH628k5jQecB6VBuBq2BhYhY9amawqnERPBv4Av2db5CHrKdQNLgqLxVtOljN/eyV8VEqAF+F7KolmBToSR/Au96ss1XNNTpZHzEjMDwvoYMt0NBd2yt74HNfvVWBNV14UykmZPxQIsTA9ZFaEr1E3blRC8HLzXiMmrAbLAqJyne6Bl/HNlslGe/M+O8evyaghwbdx2NBBLXkXbLFdIDmQas5vm4gR2eqagrbRh+1PlPNmKL0H2r5DVOAWtvxSTeHfkPLs30nXfVu1BdNt2JCdLz4t3Je2tA1mXAKstZV+Sa/gLrQEh7Rv1f7AEfa22eC4QZwfUz6zjpIzOY8Lu7xr1CTxANxAZLCWrZae35PP/To4zizmC31V/JCM9d3SqWC9HSWSsJxb3rLRv1uu9i0TimBZk8puc6Nohf09tGAmsWKH/v+wF6wTY5HKHOqrwj2gQJwtLRANcFOYQiLiVtJE3HSCPuZ7jRaTXhGJXk87HpJyuXHWUORSVET7hEpzAnqZ2xm3oyuV/egd30rPP+OLvKXmfukdo5T3e/+i9MEfuRB42/8pXmcH9ZA8SkraTyv/YmdbEd6Rd95+li2kaexpY7OegcvUf/BDyh06Ij7ZWCxgYbS1WKujP+tu8JxwF6PceaTObMRcbLdYqMwwO7VNbBa5qc0ka620WDkQrb950pUwm0IfxlfpelSi/yAtcMpyNsoh9IWYgkmGEFncFENWvJzfpClCvbdUWEOSrJREJneFjkrFzf+NzaaF4uf852iR8kTbVPYLO0Wdz8bjB6yPH4NjWg2UPadgCd4pzwYHwZPNtvJ+cKpkfZCLe82Tno3aQ4kZpFqvzn2PpsoX5I/ZfryAK3MXOTNht6CTgsx3uWnZ/bAtcIOXtePyEW6meAL3x4lZA/v8H2mT4ks9/9bOoj75mFEBzpoH2CdWtTdoP9EayYxpYxKrTwKvcTr7mrZ4NbwNXZV/Ctd5qsRB7Z4p5nQqM4x5zlLrGGN41J/Oui1RO4m6rVNoCUzEXmks3rt+b9CxCXNcnscdAMP2kO8c+hF4wTQ67L3Icq2XjHugVPlVvFj1BX6rHVZeJw8J3+lLuGesedpk4X8NCa+o"}, {"__id__": "chunk-316f380e6ab9e2778ba72a643199cc03", "__created_at__": 1760491586, "content": "## Child Pays For Parent (CPFP) Fee Bumping\n\nAnyone who receives the output of an unconfirmed transaction can incentivize miners to confirm that transaction by spending that output in a child transaction. Since miners must confirm the parent transaction to include the child transaction, they will evaluate the profitability of confirming both transactions together as a package.\n\nTo evaluate package profitability, miners calculate the \"package fee rate\" by dividing the aggregate fees of all transactions in the package by their aggregate size. Miners sort all individual transactions and packages by fee rate and include the highest-revenue ones in their blocks. This process, called \"ancestor fee rate mining,\" has been implemented in Bitcoin Core for years and is used by most miners.\n\nCPFP has several advantages over RBF. Any recipient of a transaction output can use CPFP, including both payment recipients and the spender (if they included a change output). It also doesn't replace the original transaction, making it less disruptive to merchants than RBF.\n\nThe primary disadvantage of CPFP is that it typically uses more block space. Unlike RBF where a replacement might be the same size as the original, CPFP adds an entirely separate transaction, requiring more fees to cover the additional space used.", "full_doc_id": "doc-316f380e6ab9e2778ba72a643199cc03", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_5.md", "vector": "eJwFwQtQFGUAAGATy1RAFNHzuMfe7b///v/uAjYhaFGaKSAqFpSlMkpSmgPiO20ywsgRywcIDsg99/3v3t6JaSNCKVpTiuM0afSgUqRMS0zJKGPC6fti/FD6nqOduib8Zy3ke2GBXh7+xkzgWO5VEi8ngIlkrTKaGY/r1EvNiaRt6jmhXs5WU/UjZD7eypHAAABGU+w2yZ026M2hLdIOs2G/VKCswZ8oVsZkx0huhynSpa5qehNfm/YL4rUruMMxRdufkcG/7eoWMhCbTEg8fFNbObGdfhiFXMfHHfKkiieN90mgxYlD7G1fBvyKO8sBLdvron5QHwgdaj05gU7RcdFX0BXorMtWGh1NygllBqikk2m75+GUXHzAf95YT0rs7VOt0E8tvDhCuCrG6zv5AaVMy2GKuVrp+bRY5Cl/Lao0B1If+DqVXWQ5V8bNCze5l9hXSUFlA1ONPkBPw/HmfdArq4HLKD6lCvxo+wHvZWvUMUxZ5BR2CzfwtLBgdsNOa3QkhdmOuxzNUhcpljPlF+VB1KMn0uP0ZHSYbNcmWO0CELIDheJqf6K6UkP6RvW4Mz3qE4tJitGKKgN7E6BFK3HiiuAW+Z5YyfeSKmZx+CEwRiDhN+TrTI6cJyqwwDgVutuc7unRNqN+1yR2uTJJyUgZYSr0NrnB+OvwJXSAmj6pP7gMHRLDzv3qclwTHqP+QUphOfCZ67RqpoT6h6nmFoMzyGfrISrzly2B7fU+y0bZj6PjjJHRfOI0PgnMnlykvoXm4STmLZArmmz3lMtGMjOgjzX2KL/KGUYdUyifl4+xWVwXl+eY7T8GGqlBbm76As/jOiK/MxVUNaUJa8R+LQfU60HoD2YqncmzrAbjdetuSxnawlXAp8gL4/JJlS+XjEAz2cesgkMnnN1iDjPIAKbRWG1tZxO4CtRKifwQ1+TXmbC136JBqvmlRLHnYWnkb9XuSpBOoxKmgX25ZaZ4LRjkz0jP4Vb6Mblswg40QObqV9Wlxqv6PflbBGEhWSNeoZO8m8C7sM2wC5VTT8vTvTF1nZ4CF7BjmdHYNKvo0XCMfBY/b5zlaHxUfya2O1SvtYU73Nsi76s2mE465EWoYp9LPQt4bTEOUhy3wLzA1XpZpU+8ibrwItYDP0s8FethBvhZcJMxbN6TapRUfRN1msfCz8plaUekz/uhoPA2YxQ5DkS0k1mLhrzPYKfpFd42z0MA73Pf4UyZVVtDmfIM22T1e1ZJGxtt0DsYVjV1u2ddwxx3Lt2Kt2lxSs3EY+qkSCN3A5QaNX7a3AE2w4vNyVRa6HsxkZSyzwnLYTFcAPN8z4aXcDXmNFdRZDjJFyiUEpyz6ATPWvcWMjxhFrBF4th5IKu+JHhbrpDym18jfdojaUlhvzMMvpZOStlMb3B6mObq0V6HILu9t4IIFPv8ZH04B9ZNORo7KfxLuhwblIq0RvUraSJZFTkXXtHE61n8oy1zhZfMf3xvSH8qKxva7EN6p1qmHol/2f2bYldtxNSneJZSfehjbqtnOr3EuEPONcn+J9QsPQ+AyFz3MOszSo1yMj9apcj2d3mn9RHUcNToRC/Jt5xHzE+V9NBNMod9XEvhZ7oykcsY1rdaLN4T2YffA7OVQfIFHeXWRT5P+9GMWUWE5/drIxNnRF/39kCHV+fz4XwU81+HUZSE65RkvluIxzMDWdUrrCYshSZb97RmKZf8RCL8TnTRXCxt86zVdxs38R0GizY4DaUHA/iOp+iwZuBDrzn6QKXjos9vrg9elyg9ToonyOgT/6Y2ek6wuVRBQ4UrmZeJ22/XysSRMI9qYj+g+0kteWD/MiypKuMAFjCUYWmXVige5BYqV83b3nL9qFbuvUU0+z7xHT1fGyJP4oPSYS+Q7zrt1iNkdixAtRlz2FFkvK/QKOG8zGrjkmuZ7iO7Pbe4JajIsQW38/e11ThbucBmqDPANekacfr/Bz/3mes="}, {"__id__": "chunk-90be48bfb9b093215d108c023408f954", "__created_at__": 1760491611, "content": "## Package Relay\n\nEarly Bitcoin Core versions didn't limit the number of unconfirmed transactions in their mempools. Later versions limited mempool size to store only the highest fee rate transactions or packages. This creates a dependency problem for CPFP: to calculate a package fee rate, nodes need both parent and child transactions, but if the parent doesn't pay a high enough fee rate, it won't be kept in the mempool.\n\nPackage relay solves this by allowing transactions to be relayed as a package, enabling receiving nodes to evaluate the fee rate of the entire package before acting on individual transactions. As of writing, significant progress has been made on implementing package relay in Bitcoin Core.\n\nThis feature is especially important for protocols based on time-sensitive presigned transactions, such as Lightning Network. In non-cooperative scenarios, some transactions can't be fee bumped using RBF and must rely on CPFP. If a presigned transaction pays too low a fee rate to enter the mempool, there's no way to fee bump it with a child transaction. Package relay solves this critical problem.", "full_doc_id": "doc-90be48bfb9b093215d108c023408f954", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_6.md", "vector": "eJwN0YtTFOcBAHAVA0nBVAUUuOPYx7e737d7p5IUiAXUKMHm0WJUQrQNGlPDKPFBo4gzSZgyISGiRsLjDrnH7t7uft93u3caK2lCnRKfMQSCE9M4UZNRSWfS+sCWEWMYsf39C7+j0mnf8Ier4nd9XYkm0KgkkRrrqdgw2paRCfI92e5XgieMYbBL2t5lY0S9zjrFx00KPA7QndwqZDub4Hza7wyQPl+AMGTEU8DWwhUkHl2LWsVv5g1zdWDU6ZQ3yJEIATvkfuFxdRP6vV5PSudvVeYLK6HL+4pHIBEhxXoXfx9uT0+3PGKHvI4boLPw8+yX0BcqlWaIKeJPSrF6sltUL+KnvT+6fyY23BBcH5tEM6U9omhV5FZZtR/8gR/Jag7mh/vc9d5hyBuvW7WBaq2I26+u0Vt8o6ZNkuWt0QLnK9DtZYQJ6I4v1XPDa+zv9bxgMpX0q8IkCphvapfh8QMvRM3Axtwx+IB7L1aGe3FDdFdeX9sWMJt5USkFGjnPPOWcZv6kEPQo1xpr4NJix+gReblvH3yHH6dv6pI2C90T+90fcUv0QphqnjVKYwm5Ei6lR/JueB6xloXPksJQYs6CuF9/LTYULUWB2LtSxMlm+6L1OafU22axdwkWUH2wpOs5325jBUnVPvmFbtV0nog15ZZHroYT9I4Y194T2qJDZgoet6twsunoG0k5/wh/2VhlHYMX+KtZlvE1s0E45Kb0GLhm1emvh8vR+tBLfIO4l7vPbVcnZu5NL2CDBpN1VEvAuc6EtZokE3/kifaP9+rmj1IjVwnKpTPhPISjf8dYqKKFsZf5f3oOU4fdGd3HpsF2yCvzjN1qFfOJp7yjVtH0YrI2zqERoURqRhkhQysIufC/0F0ppyeI1sen8yWJWvmM0qcsgHV4caQfd1uUJpSlcLH5BnrDys3khcXieXmh8zY9xhcJLnYuPPf/z3LSxCQ52UQEm2yZHUBJ6YOkGO09MMV44HmMb8zOVCc8vahYkehaqU6rZp4xf4Il5IlZh1uvGQmrUs3gO8VdMcFeB9r4r73rxZm00vsWb8KLwc1RyQR6FjzF3vVMPRAyRfGUdUNGB24qcxXWpPE65gt7ETgYyXE8eJvMhq/w/eB+pBu3dj7AD/vexv9BWXSE/1C8pxdYBwVV9kv3kY8znY3wLtwp2M5H5jKcGnaRiqDL+5APkySjguaAQi+ruMl3FpFqxDG1IuN2zj3FR3Sl3wopA+0P+xPeaxYbGle+FCJis/kbKeFbSSv0cT4HX+6cynDMt7ARTCh/+2BtTmusztxGN3u94DxW8Vd0hRiAvwUGONjhZ2+FKZiiLOSwktyVrT+Wd0FsJn8M1xtHyCIw37N8X6H1KhjM7MWS+rJRRHuEKSoAz4Ze0vbHspkfaK/1GbxHahjX+47+ubGEKUv/K7cSnuV+qdwRt4Iy15A0ZmQkrqvN8FNccmiX8kNgkj1hjHmv4x2RXuK3q+h0UaMjsgyO+j52ZqtJ+gvaHnkhbFe/jS1WB8ClyCXzCpinDkepVSy0w1F0yagWPcRt/0V8y/zO0nILYb42VRtnVpJBErU047pebdyWltPrIA0VsE1sC/dr8d9oWlt9+m16WPqvoSjPR64EW4I9VoNzhztDTrLfhD+fczOWIh5HT9LVXn/ifdvAX6AtVO+4oC8ybiktoSE5T7qlJ5GfQYp3mnSBne6jyp/hzfRk7hBVuCLzncRr0WS9yyy1p8EJeY9WpFUIWaFzzgKYBlvoJu1FuEOvlKd3/SO8Jry1O4U8JJ6OVoLVZFnPPL3M5ElAbVAb3DVCj5Amz+iIkky3CM+YDfvH2afZfHYQLp39jMbYDh2iv5rTRkKiwsnCIddF9Zz+KeeXC8zBeAXYbXZrZdENdv7sVLXRXW6NGg3sGn+u8GrgUbDZGSVNzu8M2b6BmvCk6I4B9Bnq0U50HcePO9fcc1zJ7mpwSalEqaGNeVsoRKPm2Iwi8yTeTv8HJ3Chrg=="}, {"__id__": "chunk-48cc0944d3f88b3329c63fecf5859694", "__created_at__": 1760491660, "content": "## Transaction Pinning\n\nWhile both RBF and CPFP fee bumping work in basic cases, rules designed to prevent denial-of-service attacks can sometimes prevent effective fee bumping. This is called \"transaction pinning.\"\n\nIn the context of RBF, Bitcoin Core accepts replacement transactions only if they pay more fees than all transactions that will be forgotten (the original plus descendants). This means if Alice creates a small transaction paying Bob, and Bob creates a large child transaction, Alice would need to pay a fee larger than what both she and Bob originally paid to replace her transaction.\n\nFor CPFP, Bitcoin Core limits a parent transaction to having a maximum of 25 ancestors or descendants in its mempool and limits the total size of all those transactions to 100,000 vbytes. This prevents users from creating CPFP fee bumps if a transaction already has too many descendants.\n\nTransaction pinning can happen accidentally, but it also represents a serious vulnerability for multiparty time-sensitive protocols like Lightning Network. If a counterparty can prevent transaction confirmation by a deadline, they might be able to steal funds. Protocol developers have worked on mitigating these problems, with solutions like CPFP carve out and anchor outputs.", "full_doc_id": "doc-48cc0944d3f88b3329c63fecf5859694", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_7.md", "vector": "eJwFwQtUFWUCAGBBSTBUUkTw3jv3ztz/n/n/mbmAjxKEtTYqDTHJDDzuMUPFVTQr7+4J80FFpxVT8XFRvNx7mbkz/8w/D8hVNrHNI7XVLqaSTzxpKmkPw9aTB3fbU9p+3+2QUTjtr9MdX/6gG5Gr0dV9dZOi7reoKbDTrIPLyWhlZuq4ti1BrzZKG7Q6jU2o0n9621VS55wQWWmnmZ3c4L5i2c5SOdZyZH95+0HwK9oTraUHg3vhssL62F7c7z6MdvGfe3fDemmIvUGOioNaHk0rCEs9TIk8Gf3OLHGG8Cpll4nRfW40uRGoQDastFbbI/39MGxu1prQNFQizWMj+qCQorwVGoiE3TniM8xsJ0tMw1+C8o6fd31DEll9IF3Ljm7RfoQGrsQTJl0jA/5/6ne4YlrcPiCmCz7ahn4wfU4XlyGHuR9F2X5JP4Iy3d3GD4oneVr/Cvfg6763SbfnAh1Q/hWAqeu8j3puOmnchkRxcjN/dEIJvEDHoiywTv8UNdrj0Oh8j7jYn2NHUJozgyroopweYNq+t6cz+bGYMkG6xCuJ/XQlj+wCa6ZTgT1yGwnk1QSu0+7Wp+mv+nnoc8tzZlg6nSNq+xsxppbxrvJscqIRN/4sz9T3CCe1Xt/U0JTkq9YS7rACiMAfTv5e+Tb5FvAaw+HrE8/CM3ojua4XURQvtXrM2+qZ+FDbdpCml4ppOvJ1xX7GiG6Me+yrTNS8RJdrJagANSlrcZbACJ8kRhqD7DGugPWDWvQg+szZSnusWusMUfXTIFd9CBV7DXxJ9KmvCM8R117PP+3cM6fpRVoVvcwX0QxuZXOZyONKHmbl6NfYFDgoFbIfGvfM4fIW1AgWySb7nPEbaPD+BHrjvXo2yHW3qZ3ufSFHbpRXo2+SZdG/J99pO0+GZA2WuptRt7Fk3wghsHcKPmuHO/zCCPQqOADn4rfFq2SFtLDjQfOg0GlVMIVyDUtpkTocitbn4IPoGva0wOpeL5EmsDfQOTYv2BNsFtfQeHKDytAb5vBoESrDV2JjnEWxO/Avkgx2u+uxJ1kQ+SC6tvVlS1UeF2+2vYj/SxYk5+D36TIoKx8LB9Ed5URnETlhO9mKkOYeUbeL84wlvj70hrlCv819kQvlsG+xdN55UtDgh6rpfxP1wlv8WGEtqO64ws1HX3Ov2xmth+n7/rnZpdG78s7QJjo28gSt4p+Qq+QBmkWn8A0+L7mG5/vz0Xu0GjXba/g2bp6YCDHGXX02nMF8hJtJHz9XRC5jSdzFfZqyHMZBDT/Ce47PBV8kGuLNVLDGyFWoVjue+I//RXQ/WB7ohqvbl+o/xY8jH/9U/N/oF5wDp8YiwXq7KfaYraqZ0V3uZaOgpUudyNXphjImmWHktVQbDwTL9P+pWZQGttJPjHo8h2wTNvkb4i3mbLZSWBEIgVMgA8/mLJARycT9iZXuKV+cO0bVThNfshs8U8mS/GFOA1WsWc7kxKeB6Uyf2EMi0i3nATCCXPSs4+azh8khaxXFwSqcbkjGDqrQafpH7NHASbCA+cy4YI1xUsV3yC2aydbAOtIdtIJpVtgZZZ6zytgAvIexlaLOlSomlQuPjHzeRwLrSbf5JrkJy+kb0muJyeA2nalvd0vRHvqP4JXgAvUR+xgXRr0kVXzN2WgfsM5JXRarKlYOrZON3DhKbe9CFeRl/zjxYx6oi0NbQxvZ91ic7HL+hIB5s2OY9QLZFGiwhxmj+ceTB5jO1i8128oQWBA2Qnn9fCFplQLgLrdUGxKeZR7jf0ts3peia3wNe5x+1b5QmU9lkp55MpjFe/wntQVkPFpkt7aOgrMUlouBv3H97Di6XW9JFBvV1h1QDc7E2pVlVCCDvkH8R62pY4WWTxeSHcFZ7mX1UOwX865RR1PAId0bF62NDOOcspd27DD2dIwXZ5l/gGf1h2ERrI1dEY4Zul0GFSkFLY6XCvViYzKIFpJV6AX/d8EZdrHZN/7/f1yVEw=="}, {"__id__": "chunk-0cce43bbc96d866ecf3d94023fdc78e3", "__created_at__": 1760491661, "content": "## CPFP Carve Out and Anchor Outputs\n\nLightning Network developers faced a problem with transactions requiring signatures from two parties. These transactions might need to be broadcast at unknown future times, making fee rate estimation impossible. Both RBF and CPFP are vulnerable to transaction pinning, which could allow malicious parties to steal funds.\n\nThe solution was \"CPFP carve out\": an exception to CPFP rules allowing a single additional transaction up to 1,000 vbytes to be added to a package even if it exceeds normal limits, as long as it's a direct child of an unconfirmed transaction with no unconfirmed ancestors.\n\nFor example, Bob and Mallory co-sign a transaction with outputs to each of them. If Mallory broadcasts the transaction and attaches many child transactions to her output, normally Bob would be unable to attach a child transaction for CPFP fee bumping. With carve-out, he can spend his output as long as his child transaction is less than 1,000 vbytes.\n\nCPFP carve-out works only once, making it suitable only for two-party protocols. Most popular Lightning Network implementations use \"anchor outputs,\" a transaction template designed to work with CPFP carve out.", "full_doc_id": "doc-0cce43bbc96d866ecf3d94023fdc78e3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_8.md", "vector": "eJwFwQtUVGUCAGAf+SisQGSYYWaY+/j/e//7GFbqgHB6gJHHSNnNrEQLWddaT5poHd+aRWRBKmAWiczjzn388/937vBQw00Ey8rshW5HRdEo293Titkxjhr4yL7Pq4b+Eum4yxlR97bmyyuVUqMqusQpQKP4yrjKvRee5202LX8l7IiwJIMEvDPlTbEK8RbT7wxmr1fnWr+ZXzq1DnG61YN6Q7Qd+JlStI7pJc/oY63JUxu1B8CFRDV6iM3lyt1PKBOVWnaMdCYySMI5PykrhKLgN+CNFobOkxanzqJnwVr+X4ECs0ecwtWQs3Yp+4U0lQTALvdar1v2Cj64kC809yheIZ9eQ7eMifbjKE1ZuusLZ3Q2G/9m23pmCxtOG2duFt2oAlZyveYK/ph5wIt0PvGi2hS5arwlnTafc1Q0I/gciiv91pnQRW5VWyc+4VoXyef2Sb8IdVZnZDW8oKVoFaJXuD90kx1r3wME46BxUSpn8n1luFMp9Xbrm7Iv2mfNdWq60plh2Zfh63S/nYNWBffEPsQldLwxh1QzN4Qm/y+gHX8G7qCD5lXyrZwm74z3Zf7V90qimFth/SdUCKsdPTqNnMJ1UpYRFTnaQp9hIJ4Ga/HL6klzJroYOq2pOW+S44QKHqaSxn0XjHQzlbaBFCzCI2BZ4I7wTvKh2ZF4NarGF+AmPQ/WGFWwL1YvLbeAp1ZbHigyX4iftKDvs1SG3KX5pB7wk3AEdYCFopJdbrXAiJlnDrsvWbmhNHrEHO38QcvxdCbfeN1qcQ0xy4QFYorwlG/AXGDfI6c63+HvMRe7mrDF2eSE4NHmi1Xy3dwAKSH/DB1lLqv7QW3smv2SWoQ8zekq5+nXTnJXuKSS9J/zHgJ99iMxhy6VHlWfV3ujlfFN0aNT/vAwZLp8GU6hs8QVsM7cALYLt6Qz9qfUkPdIB9HzqExJV6fhNeBQ4qalwU/ISu9h6bi4kKbgqvA2y82vAb/BWTs3u2tAutIaPYfS8K9Cu/yast4c2/Rt5lAkFY/oWZIUclk9eKzxEbwtS2iDUyg/CybvamFuxOqtLoFRh7WZ3Mt20FyC9iVu+Qv0Mul3aRBvdV7K/sS6jwsyJXZh5DocYz3hnyg1ZD5MasS8yDmZsvvVH+xtLpf6c6Q/9aAwCi3nS1Gtpz25E72NtoC3HW8kb1cm2MB8JTwWrAsm7RTQZm+XUHBr8HPaQE4pLLOvuQgcYNrVPBxA1fhB8UnmOlCl5YTVzoDF/H89X5MlqFhpI+PCk/hF1k28WC9jZwtjXDvQDvYhLTeRbTfgN9SN6GOThRfCBvwcXdIcJW5Oy75h1jFvcXl6BbLQsubvM4lo2//nU6yuABudoxuRudEtZBIyrbA1KSbQXNBu7sWn6b/xl6SILyaHyXS0iowI08HTpNwUwDau8IMhJlc4BUsad3BTtHKUQUJOi2j5NtGjrUm00bkPnCVDQXfCbR/QI2SZFYWT0YC6Ut8O44l5/sOR4tijiPD3Wz9SlzVk9AmpWr1elOgiM/SP2VegJk3IumQuJYOJRWh1LIMO+XkwpE/Qf2ZLTB8dNjvtRqsfUAUmHzaPIRemUrXXRZTm93C/N4/MlO8dMwy3vh98ZzJ5ZPezzl7pOgmQvVnHPWvieEu3dD4xX56YOO98RGvUAnNYr2lai2fL60VWPR9Lsj34fSSGxokpLeuUO+Vi7lBjK380/iP0G63Ju/F8zc+mk/r6KnkE9wo43kFeoE/CT0FP88n0E+B24H9qDpob3kxGo16+gnk3wqB3aIGU5OO0PzCXPhY/FhmVMpTxDymLn4D3az+oL+JGKEW7tUX8bZQVOLy7W19Jhs2nyHjajmqFMriALbAWkw/YAW6jldE6PnZN357GoSt2UUuO77uGLirQVyE2j2t/x/dq1+ghO7V1RM9w/sasth4Hl+2A3Afn6FWoK37OmSpUoRnoTW0AGsHhWBu8QvJhpT5LaLd3W7XhPwHQ66J8"}, {"__id__": "chunk-ff8580fe2d3850e68bb4afb0587fda2d", "__created_at__": 1760491691, "content": "## How Transaction Fees Work\n\nBitcoin transactions do not have an explicit field for fees. Instead, fees are implicit - calculated as the difference between the sum of inputs and the sum of outputs:\n\n```\nFees = Sum(Inputs) - Sum(Outputs)\n```\n\nThis design can be confusing for those constructing their own transactions. You must ensure you account for all inputs by creating appropriate change outputs, or you'll inadvertently pay a large transaction fee. For example, if you spend a 20-bitcoin UTXO to make a 1-bitcoin payment, you must include a 19-bitcoin change output back to your wallet. Otherwise, the 19-bitcoin \"leftover\" becomes a transaction fee claimed by miners.", "full_doc_id": "doc-ff8580fe2d3850e68bb4afb0587fda2d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch09-fees/mastering-bitcoin-3rd-edition_chapter-9-fees_9.md", "vector": "eJwFwQ9UFGUCAHA8RJQ4JeU/LDs788033zc7C0FqnhKWFwQqp/k8ocyMdIOyNM3SetdhkCmdLwURFtxlZ3b+fd/MLBpS0ovzLMsn/kN5hYXnKz3F3sPyJVx6Yna/3wAWHnrj4FV6yrfLht656FT671nzD1R4VWmZ/gTHG8flRFAkvI1GLL9aQF2kEdVau7VFSorTiLLx4bbjwmB7QmclmeFbAGNDipzCb8x43fqzpx7MambzQlPL+TN6iwAiLlqfO0naggq1XCigPaqcVyWkMhOkD9FnpFi9C43wBzkeMVN8GSQBL2pmtgCX+ThkMlm9xVjnjYH5kr9ttksx50V6cgN6JT2AV6CPHJYMuuu9kz01egE93rEcpnBj+BoS9FfRK55K/Qe7OmdX+7G0ZOVOa680wLHkDH7QEGhCcxdaqfWjavNzbSc6RH4wG4wNKgYF4lq8V/8DbVHH1D/yD2sbyLzgRZxs94HnyV141BxASehaSMI18ZYWiybQK2yE9aFx3UNm4MeI7GA0F4jCOv4wnQgmyv3ybimMQpwbXIQx9F39pi2KJcJ9NFkdA35SmFlG33N1Mmk0P7NTG9KbUJlyjr9HLmtp4dXGU2TQeM17y6gQZtN4+lcpS1toHnN9YawgC9BGEmHnEqyL1g3xf6AWP0X8JEZA9u4UwdxuljNXSY1wPfu6Z4rYIJwPbCNNoNk4t2eB9Y4wNRIlpZZLOhIpSzskvg3uCgMwwWiU/8us54flZ1x3MLVmkr9F39RG2GQ3CU0yfkbvKZWoXuymrbwfDmlizgrlNDltJ4NWfifYbNphW65ifuHPijnGI9rMtveFm9JkeJF0UzefyewHFb78tpV8LDtiLANB8mvgpNpp+wMTnbW4TKoTIXiXnFcW0SJhg9rNf+dhojPkY/aQegYans9gl3PWacxuQTf0bbyN070JJMesisZYw2rEyXC9AVdnWMYdGYeb+H51RzvHBtAB5XzgmDhb+ZrrCzL8kPBv9kGyQ69Wn6RyxmZTgV9inbDqdde/5DqpRixNX4B+CjWknQBvGgO6HlooHjEnwgTwSWQhRGYZirWWwvs5v2clRldGOo08z49sfmSNVQKJlpD+I0TKLblW63Yfwg1gGD9sRcXNwgFmVfZvfCma5s6XLmXviWZpd72rhCuhF6IVIJ7rQTEdlneL90jHtLRZ9nTE4D7hSapbl8K9kRq4DZw2Ynz12l6YavTyw8bHyd+JrXSaoDGryT+kqc2X+X5p3PgieCJrX9s1z7o2Lwjz05UCIU5bYya617ugU+wt5jX6UXhEv4YuoLLUEq0yulTzk6joFV6DVaRQ3Eq/SlOgn/oi98i5jtst281WcpCMglLmU8Mj3tPHnEmoO9jumSKc3L+G1OpHyQu2iF5h5madAYUZifxR7dcwux/DTrBJPIhOyafZbPwSjnPugadx1M10jsAkeENPIfOlcfMb+zrZR3vVNuYn/AmyQbUY58x3rQ3cws+gCj6amS4XO2VcGMV2cEbE/Dv5C3MR7gBbxbr2ZXUpTg/Z7v5WbTJuaY8iGlzOb0ifSW6bNfqocy7tdlY19619GBdLXCTT2xsZ3+dXLvCb6GXQyb/8fgk+yT7KxWsvknJju/CWAeAwzCOj2i51FOXSR3JTo0vNKlotLiHlro3WVljEFeum5ONG2RTmIeZr8Vmwl5R4V/n+I7wYnOP6p3lCzjVnRd+x12uHsndGG/mt2GB7AkuYvuAc5zZ/HxTJz0kcO0d7XXBwILLJ7GP62Sb2+5AW9phaRq0ywfhKmSXkGd/DSelFqAx9juZRPzK9S9QkMKS6s2+6F5NB3ypxp/0AvSKndpw1k3ACAO3LUxuM32io/Q4eZ0fIYqPYKtAe48qtjZ6K6X8iPVqcVQinRKeiZi6oms4F+5Id8nTZpW2r7avkOO3iN7GJViIT54RNPudVId6zp+MmegsPpte5u0iXMCcVu8ZoqnE+8H9MpJcv"}, {"__id__": "chunk-bb56eafff8c0ee7066a26281a9f9bcbc", "__created_at__": 1760491703, "content": "# The Bitcoin Network: A Peer-to-Peer Architecture\n\nBitcoin functions as a peer-to-peer network built on top of the internet. In this P2P architecture, all nodes perform the same functions with no special nodes, creating a flat topology with no centralized services or hierarchy. The network's decentralized nature makes it inherently resilient and open, similar to the early internet's design principles.\n\nBitcoin's P2P network architecture is fundamental to its core design as a decentralized digital cash system. This flat and decentralized architecture provides the foundation for achieving and maintaining decentralization of control. The term \"Bitcoin network\" refers to all nodes running the Bitcoin P2P protocol, with additional protocols like Stratum used for mining and lightweight wallets, connected through gateway routing servers.", "full_doc_id": "doc-bb56eafff8c0ee7066a26281a9f9bcbc", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_1.md", "vector": "eJwN0otXFWUCAHDN7KixqQQXLtd777zn+2bmghrarrkHe2BlSiEdNdCAxSVERYwKkpakMtCwkxoK9zV35s58830zc4GKDD15Usy2KDmtWNnx5Lo91DUjNR9ZtFu/v+HXyEXzxr3RZL+eW4JbeAE+bETd3eQ3pVP+ydoH/k0+dUuUKL9CnOl6Uvn6dHwvBGjXDseutevCL7Bt7mm2gUtzS8yz0kKun8vjyqj/mxvtb4kNWsViWCbMlcY5S4TmrC+NNKlArvFsBz9KDVSR8VxuVagx/XnlEeWMeRs6KB8DgwkaFJj3BziAhTvpt/SjdiG1UzoljUOEbxE7QlGu3l6BC4zyXIN5LTGeWSd9Rp4RLlq2N5/clLzDXoneEXyJBvYFedjqF855vxNclGsEo21gV3AheC6Xi2TCebA3mEOK1cypl6nTsmWv7qpWJwZGdcUf1tfHuqWLSrFLp+YkTvNR6GgcXt51NFjkvEv9jEojVxiUXQfX+1Uj2d2Lj9B7yAmxlBsVa/0f2/dy++zK1EYhT0qT2ND91g3mW6da/kBZeOsqRgXdUow8qS7F1eIXQioxyJcLfXibHk9RWX38WrN8F2Y+MHrgAzFfaDB1xu/HYzlr2VpzQG6yRGVB9iHue2l+xj04kvjC9GAlOYqvxv/jKxb+i6eJm81S0I53OO/qW82UuFAbc+72D+vN6nj+BlWoZDL701cjwv2VsFQUe4xhrYr042NMjTAb/z1Yo1WIDdZnfBm/KKyglXAl2qDstMP4CXLWwExf9Dz6JqDw1+ksqipYZO6Ga19vdkuoidOmm0vsJWaZv5DnmPX8BcHr2wT95JDWCh7nbgnMCj0G7tv9lVmcvgpelXzyXN9MrUvPSCxQY/g41r1ZTD5Pu5dgnrQVGPCxZFNyXder2gzbw8wG2dYCkOWM4GuJvrZx3NPGTneQXm4AnhLq5Q0wYjWRK261enVrv7PRGo3B8FLUj0YQVJfpHVnV5mZYa2YI70s3mDmK6JtEqsyLcIIdSS7QJmmzUMTfzAPPzVqr2xAoRcekJWqjJnAq0w4W6RFkkjrqJFicLKIeQLreCGdxvbAnvphlpcncsHu3Z7/zHrgGh8x9zpfcM1aPsFT5NRFDd1IjYEh5re3x6ATjJa4IXO5uIauNLhiFawBPevQDWwzmduF942m8CZ3n0meI8eshOXTJOoyrSRqk5Q/Bj1i0Z8fGQJdaBH4x5sFDybMMm8wPveLj8aKIp/dZ+p/iNvQ51ZaIJMqlTJyhnooPZFfFOrvaRZd/WPwGRrifrOukkvi9hG80llpH7Yp4OvV1gAVN4lyyimhoCL4pQ0CDnyXeLPJWw5T5qNDpthrRmIEHzO24XTwMJzsBUG/fZenSZftBuoXptl9G+yM+RzSvyOfizcKtwVvwK8H/2afFt62ZsizlS3cJk+m/cHWQBQ/hGjoOTpISd760F12L9/snw+UkzV7MniDrcAVfJjWFu1moILSMFPJbmDyxgMuwz5MxqhlvCW5mfHgLbnIaQSXaw85lJ+y87p1CeowzvKWvocvZKegHdCmhclXWLjTVGSOf4vpkrZHj1NIrQklpQOwg/j8+C3CSPkAqoY8sl55CpzI9pNbejqdy94UfAoX8OiOldVLPS3fgOvhnZyaeiM/F89EZbQo7Kq6UA06ctuE0Zv+MDo4L/Un63JoTcsE2f33ndi4Xl/A3kaesE6mpdp3wAy5IzuHmd7H8J/5X8XfOiHqz4NUEaw3enSMy5eIG9W/Gi2ADWCYCZy//CVsmZBkvW+PJAfMj5wJ1waoIMNIyo5cdITtgY+CjbGicgO8YDZqQc1g+SI5ZjdReM25EwXF0gD6VnE763BY4BMLabYl/4WlOJPohf8V5keqjBxNHaC9uZU+aA8AUv6YqSTueSDbBI/b87CF22LjYEWab4fE9B2/fE6vlRpkatoJvj5yXj8OPZ/DiP/RSdiuaR+TkOZNRfwc7PZt+"}, {"__id__": "chunk-ae19a49419f869461ce51012b052c645", "__created_at__": 1760491710, "content": "## Bloom Filters\n\nBloom filters are probabilistic search filters that allow lightweight clients to request transactions matching specific patterns without revealing exactly which addresses they're searching for. This helps preserve privacy while reducing bandwidth requirements.\n\nA bloom filter is implemented as a variable-size array of binary digits with a variable number of hash functions. The filter is initialized with all zeros. To add a pattern, it's hashed by each function in turn, and the corresponding bits in the array are set to 1. When multiple patterns are added, they may set overlapping bits to 1, gradually decreasing the filter's accuracy.\n\nTo test if a pattern is in the filter, it's hashed by each function and checked against the bit array. If all corresponding bits are 1, the pattern is probably in the filter (a \"Maybe, yes\" result). If any bit is 0, the pattern is definitely not in the filter (a \"Definitely not\" result).\n\nLightweight clients initialize an empty bloom filter, add addresses, keys, and transaction IDs from their wallet to it, then send it to peers using a `filterload` message. Peers check incoming transactions against this filter and only forward matching transactions. Unfortunately, bloom filters provide limited privacy protection, as a node can apply a client's filter to the entire blockchain to identify the client's transactions and find patterns between them.", "full_doc_id": "doc-ae19a49419f869461ce51012b052c645", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_10.md", "vector": "eJwFwQ1UFVUCAGCMdXHJHwTz8XiP9zv3zr0z86BcWTWtDcFMVEQ2V1vdVcuwSEUrd02I2ANISWo/CAbv8Wbe3Jm5d2YelT/RblKrdjCSWE9K63GzUtkDSnrKXYPkqft95aA7tPjgmPF0bq/5YKgEVgLRyDZlaaNkT8y0B6atMxDr8C9XU/0PEo3+EZRLG/nbqlv+WlmkJUMz4remmp1syO3HKY4VgUNcCboqdUVS6WFlW8CR8xSeIV2LLwDB1pPRETRXqIJfQRI8Dq65XhBD0kn6fqixPeftg/oPSjOX61sJGnz7AhJ4lbOip8xksjOtnEsWXwwfBbHgVXGT9hNLsc7LQ5j9ag8ZQDPBESsNlcIt2oD1oflvPZsLxT5ol8ndlkb9Fzjfs0hZwJbBDcTlKNK6cZ80y/CJJf4nuI/08+Gr2Xf8KFRoH5cfkvfTMnVR+koyxdsC70FnCKAb0ZTMz8A4cLHtzchF31x7qXKZNrLLgTy2TCiIfCIEwTo6mZtA9nBV4oB0APHaz0Kh3R2fzu8Dm8O56DJLUmcb95qlqKfte9SlTpE2Wi+5u6ygGHW8E9nlOI5CbDSjwM5BdcFvrZcpphWBQj6h1KLkWEC/Di4ZJ9ortMelliaKi8lz4Hdigs0OTorp7wy4PvZAlpb5qe9FHGL9zmvyGzgb3ke/UMr1I3B30yp7GH4DlqkPA8P7S9wZrYe6V5VKrSF/g4Y9z5jX61a1NuEZxktcSMj3Pd00YtwCK52iYGjZ0z+TD8Jke8RhWjb1OqvkSt2GAVQvLAGa9zVpO7xAjul38Ki1St1pX9JWK8/xlcGl6El8DdWDTh9P5uK/xMrwamk8c8BGsoCPoDxpCM/nVmg/xI76+iDJele/JS9WJwinJvxLGIOjqAgmmVOFabFc9zxrtdAdOUa9/F0WDm+GSqAIeKxSqzdaw/fDhXQ+moOqM0fVBfGEvrz9z6ZotKITYgM9qxU7S/WS4CSjDKV6D3ODESCi12v8s9lcfnykVBhhPc7T5A5poKO4Aw3TWmOc+WFwYoCiUzBOS6Xv9OVNVDsc62EX6I9+qGXwkH7pWesez15B9+tJ9BY+FN4UJ0R03N+Sr1bRLPVlNOY8Y1xwDhuh+EU+DxaIf3AXoB3MjSu4tWnPemYpKTgVDcF2JWFvQr/mz8EttSxronLCt9a9JrYVPwp7aQ/t0jJgKLQspNLHSafQm7Hb3SnMAzMkmzljK5RxOB0/gOrxEfMnXz/8jQ5cmcY+cbVwhimxHeCqJ4N8R6v536I5dV+iCQGvtsQ80naabBF2g/n0XLQZ7MW14j+50uAV0mpno69ATmD93l1oP7qhLuGK/X0sTk/bPb73yUyzgizW6tD2dGBcl2s0l9WJb6o3SIGCZae2k99kJJuHxGpzn7+X+4YVkK1Alo32p6T/BBPgXfUDxxg0PWH0tTnbNVH4yNgdL+eOMomscSXzbUaudY/+Gj3KbeX2YF7IMCpxt9XgOOb62VOcvULrt89mvUrqPR2RktYUNdVaRBMcJAmxEl8B3eSS+a3uCi3U/qS10YSQbm6TV5Gou5k9bMbss7I7moO77RLXs0KdkkTf1A80L2x/j5wMcmYHumDzfAdJmh4h2WYXdQX7jfPCpAAfUWzi75XKaCV6jBS4N9h9oEnOR6+DQvw//Hxkbewm2is9kTaKfNKgp5BskLblzMSP0qz9HaQmUK5NNh+yw+GUGK9vk1WxRt583yMt6+kw3QKG5aXukfDHaCUrBPOET6Y1mLn8G4E8lMairEivoP2tk9TttNr4vf73zEFN5jZgrBcb3Ww9Hk/HwHRvWXCOf5Z5RSXkv/JM8jdU6X+P3cKD7sNcNasiN/Qa9LyQqwIzbLyl31QaufTJCf8/Yuf0QfMZ+14xSJoDn+trMu9avP6C7YV9Uab9FYwz75h9MOK8bcbFWnOHmgfnZeWjInwc3pauqHlChWaqGaH5bB37XLF8/wcKBaP7"}, {"__id__": "chunk-0b7de5dc78262ae5ad091ca6ca9fb524", "__created_at__": 1760492242, "content": "## Compact Block Filters\n\nTo address the privacy and denial-of-service issues with bloom filters, compact block filters were introduced. Instead of clients sending filters to nodes, nodes create filters for each block that clients can download and check against their addresses.\n\nCompact block filters use Golomb-Rice Coded Sets (GCS) for efficient data encoding. The filters include two types of information: the script for every output in every transaction in a block, and the script of the output being spent by every input in every transaction in a block.\n\nThese filters ensure a 100% true positive match rate, meaning a wallet will find every transaction affecting it. There is a small false positive rate, causing wallets to occasionally download blocks without relevant transactions, but this is a minor bandwidth cost and can even improve privacy.\n\nTo protect against dishonest peers providing inaccurate filters, clients can download filter commitments from multiple peers. If peers advertise different filters for the same block, the client can download all of them and the associated block to determine which filter is accurate.", "full_doc_id": "doc-0b7de5dc78262ae5ad091ca6ca9fb524", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_11.md", "vector": "eJwN041TFNcBAHAMEHsJgnwoB9wdt7df7+3uqVPzARxJ/YofWIlWR22ixlBjNTYBW52YMYpEY6xWxAjCwXF3e/fe2/d2F7BK1ZrBqIm0o6mSKJJMQ7EFGhU/MUOdqZH29z/8HOCIX/3jVivXL9vfQww+NN5yPokman7lTk6c/NxbhE7SyZFd/Imc17Gf3MQ+tURZDKcaOfqL8dugiO23NlszzBq9Ci7O31QfisjaTO0TdIB95ymZ8L3WCyu0Q2073T8aLWIXNGCHd2zeQ98N5QfyNVihvmcIk/qaBqVUckXsBq2upenVeLU8230AFqI88+9ofG0ZWAmZz3YfcfQr03Ap9ZCf6VDNwHnEoS7XgmxEPSvmclPMztiXMeQc5wyIzdFO56eoGKwQh/ENNkE8SY6it1CjEPJfwgEo4lfii/CAbx2XJs7U1pinSZxbbv+kEeIbJCXyNOgHX8bqGSdMDp0QnoXpwb5I9eGZ9n/jJbY3uiz4TN2QWh57R1kqziAPpDbjoPBYuwmfEQTDpfbafdZ1sBu86IZcjt1SN0zex5dBPTegZBrH1GTjVv0Ie9dvgrydp3wLFLfZlFVtbo9ux2FrKRmlTnxafMQdBIfwELsu7ogfyyuqvaK1588Ss4QjOWeVKmsO69PXifv2D1Avvhv/LJYA68ygV/EWquvDO82CcJ2R2LwPHbdX5df6inKWwId1l9TNKBB0eRPVHvbEqGZrYo+RzE4iUXmDpIEpms1LfHb9b+RVRrmyKzJ9/xSUAFLNjXsc7C6azyVLixoy4HPan9VuIZZbItWADTTL3AGybRfYRQvpcMMguFhH5S1wQLwoJMlLQmWyQ4/C26CfTQpnGTn8DnBAeU7jaAfucRa798opzZ14hH+J7YP3giG4WXGARqkVf6CGudmRTVaS/Iustfg1sevZz/dfzZ8rngWVxjxrLFkidkYWGOOgA/S4aml2Sys95VtJ20mBd63WwLKip1215rboBVQWHScGwd/QXC2zzgXv02tgDP+x9th8wFykIrQMZwu1clV1jF2gnwkFQob8H/d0dkxLbX4oTKQ9Uivroo2+HHRVfpsa/GsNqSgDvI4W4m1ae/341jT9+VpH3Jk5zVKMg2B9sNIY1ZfTd///ZfJ4pOR7EWynbY69YAX5BN9qWgPbwR3fefR7U1UegcVCsZTq/Ry3x+ZMaKNH5UHfRKrTEiqJ8yatmPTA1YUqYYJ6R3RobWBY6Tbme283BpTdoQu8qM5i5/idvp96tFqP+x8wSRuhT7v28DG9mlRFL0b3gQIuoFzzdCLGrpE4P6y9BIbQueaiBkt8CsaiPPDH/21+kH/GWe7rDGnqcZDFV4vJoNT6AwnYln6HFLD36Fz0KZjhKyMv6GPZ76wRLsE5kLFBfyo3oJ/Xwvp6ul55RLPT18AXaKi6Rvo4lIirwDERxBuZUxrj+QIU1qRZpW4TXMHf2gHfL2kg/M/cc+p3dAOeH0+io8JUfpPytbIlXgpse5w06skMy82DKI1WCtvDa7nLdC9fSBKsXry9aZrhV3+lvJzpNNLtbwivqvgRzaS9wnn2pw+n0t2xAMu0p1uXormeb/kO+22BKO/HzuO7ZGt8pfsrvTyzyYqCCmuhpJObKNcqNzwsOXcP6YYR6baAWkrRNW0W2Zh/CBezdnuRMBvXgFvyGTCk9UR5/A3nVA9HI2C63yVPJLr/sfaO/zhtCY5nQ1w3KWJH6dXDq+lHqT+6+uEZTGrnZc1k29hF8a8HLklzUtKkE+So+CZY5/nKTATX0xdrv42Woq20rCENlXgldio2QFeFkswM7iO4N5aCdfu63GG+mn4fdcTD3rHRcGzEOQFdxj9IC32/tjbDw2iMu5fdDHc5N4B/gQE8aD8xnhfK6P08gZO4Pm8vfcN60ypX0vgiYRl5JfJySyUptivlCiZxo+4FiGs5BzbmJduN/i/oWZxddw+tliqVdFKlvZrRD8VIiucv8B7aYlZkp5L/AdjyogM="}, {"__id__": "chunk-d560472661adcbd81670fa0af08f9b20", "__created_at__": 1760491734, "content": "## Network Privacy and Security\n\nThe original Bitcoin implementation communicates entirely in the clear. To increase privacy and security, Bitcoin Core offers Tor transport integration. Tor (The Onion Routing network) provides encryption and data encapsulation through randomized network paths, offering anonymity and privacy.\n\nBitcoin Core can automatically set up a hidden Tor service if it can connect to a local Tor service. With Tor installed and proper permissions, Bitcoin Core will add a hidden service to the Tor network, allowing other Tor nodes to connect directly to your node over the encrypted Tor network.", "full_doc_id": "doc-d560472661adcbd81670fa0af08f9b20", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_12.md", "vector": "eJwN04tXVGUCAHCgI6UU7PhAiHnc9/3ud++M6RlUCCvUtJNYGaiQHsks28VMxQgf2B5CyWM4uDjyGmbm3rnfvff77tzRJCs90mb5OKuZ5baL7mqJaLrlskbUMY9Z7e9/+L2bOBnw7q92bk8qsl+gbWlfrArd7/QrEaafVHp9Xb/a1wSVGfIVO1edmVQVWaike26Fef1mbL6mwuv2UP5pYZ8d2VsGcrlNzqwYLVVmYbwD9bCf8JdhDsCgMrWZP8zVtbdyK+Sv0DLhJ2qlOsfKDuTD84l0uVvKJB12qX8jwHoLg/Q+Po2RgcUs43XcSNcEJvBhNMQ+6hmlVPkW2Z84g8zEQJX0BqaEGMyOjXCLIyxFTMMYsbD5CEODefT39Cv6X8UbnCwZVhZtuptw3cQrDA6UWhX8GzCA5xlrjS3cRW60NAaHzI2UnMTq3ez/oHrwHWxSBu0GrLBrwce5NruErPTN9hSlzpj9djtZpDXkFomH+F7vvT2jyOPiduOE9Dk8InvEPfGToI0cxunC09Jb0kVQr813FxFJaoYsX2aW4GLlI9eKhA/PgsuFveYC+iFhg3PBmE3+uDvGfpZcE//COk1aoAvdhVPiRda1cIXhRPrMIMzuqmez+VXWZKVWeyoqGMVujtrpykZvatvcf1LO4Ws0F1vPysZcJ4G3JVcLn3UPOs+KQ/wlYQtXIpyBC92lxmFxKt9lVZsFzkPC0uQC+2t9H7/Oaun5d8dx9qwwmZxmbuA19HLzeTS/k5II6UUXdRsVC5+C/9LrqK3CcnEpsKmotVBZ7FZS78ERMiPvD/aT2od6tuQBLj7MTER18ti26XyQ9YlPCM1Kls8vHre38vN7Dkmt0ryOU+bUBJ37G+gQV+INjNZdR72kzYSrwYBUzz/KQMbU2vFV+zexMF9PXFC81ge4i+5hrstlWE6NYpLCQWm6ehsUyvfvfcn6BX8dCaPu1AGsgO38FDvKP2zvonvxHr3JtQIW87TaqIzBi6FHv4/ayRfKhdbf9aPe9ugMVMB18yMdzWiNIyon+H2QS3yjjXgX5j3XtYspp45rI+5qYdgaRLU4iI4KA9pRMYe0uCcADTGpcbl5do1xRxLsY4kDfqNniydNMQpGO8XMHCpHvqg9r//LOMUeodpdR9SD5qvghFQOPow/bg0KOfyXohGLayG1Vr1jnkNp/j5hSawp70rqz+6xygGpF0etsUoSLDD3CJOMS1IDue5LtzfCa6iYrIF1Tijk5RjDZvPc/VLIv5LMBevZF2NLwCamntYk23gAVnAPjy+1knpRvFKu3u3DZ8h2bz0ol/4HnxKajEwnaE5Dv3Kzd5QoGvyoZ5yi8vmdlvcwfjvp1wvx1e4JjqUOx39G9/hejU7XHxTKrD7mPeDGd9EO7pR6C1X6x5AtbBTctmabr6EZOrLCiu0dB+PwdeM2UyNcpjqS+zVeOI8fSXVBT9KFn1Of8TeTs24YrTAbqVpYk7dO2CiegA240cikntDLhdboGXwp2RsvRzW+s/oH+DFS4KzyDto/SOd9re4B5mk7kGwEQTwh+nIoTK/zDIy/YV2xh8kuoxsF8LdGh/ex5G50SFoPAp2Vpq/rFbnZc9IMJUqgyxjPfUNi6Bd9KPGp/Wx8P5ulzPXWJqY77+irlAz8sbwTXyYD+IGC/R0Z6RkoFEFwMZnGzfCGtTZ2mbjU70h9PPZHgZ+y6L+JOc4xd5n+Pg4lK4wSerJjkFuwFNl80AimjtmT4jxo6eR9WxMjWgEI8z5qmXEzNxNsZieyF0Ca0RBPt26mciyxdbTtU6v+MovPBYV4eHexvZo5R95mxtIlEdqaklchfMWlkXnd7/7/cos1TdqMRSq7LahnqO8/2KRIpMR+AW0wg8Yi6suCTL6F6qXHmT+i/mh+T5NULcyJ/BNvNxtJUJpCNkQy1E3qOwIrfd95Cbm4NvydWZ/4R9swdVBdADKVTjkLbrOi1A3xDtnhVCcM7XeZ55jX"}, {"__id__": "chunk-6266f01236cd7f89913e1121063752a1", "__created_at__": 1760491923, "content": "## Mempools and Orphan Pools\n\nMost Bitcoin nodes maintain a temporary list of unconfirmed transactions called the memory pool (mempool). This helps nodes track transactions known to the network but not yet included in the blockchain. As transactions are verified, they're added to the mempool and relayed to neighboring nodes.\n\nSome implementations also maintain a separate orphan pool for transactions whose inputs reference transactions that aren't yet known. When a parent transaction arrives, its child transactions can be validated and moved from the orphan pool to the mempool, potentially triggering a cascade of validations for interdependent transactions.\n\nMany Bitcoin implementations also maintain a UTXO database containing all unspent outputs on the blockchain. Unlike the mempool and orphan pools (which represent a node's local perspective and may vary between nodes), the UTXO database represents the network's emergent consensus and should be consistent across nodes. This database is stored on persistent storage and contains millions of entries dating back to the genesis block.", "full_doc_id": "doc-6266f01236cd7f89913e1121063752a1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_13.md", "vector": "eJwN0AtTFVUAAOCMNDFJ6cpDuVz37u7ZPWd3QcnIqLBMBW6pYSmaRoapPaxUMh9FihX5SIXwKq8Ld19n95zdBUJN08ks0iRMpwGfkY7lVCqRkePUmEH9g28+NaVUit+V2+gqFllIYtFHViLtcfMVR8ZqizWVrCGn1aPhffDxikLyE60bvV15jH2p+qY9CF8CL8LJXqi601rv3mFXyuH6TnAe//buWOkTx08fBt8Ki9ILEmtRm/eswoILQq6yTBoerGfGsfejDL1wTLnUow6RW1A+2EV+FIfc/YrVikYKrWYvLN6WBxfTgXoR9iGd8QXHyKp1C/XwU7zP6Aa6OX02nKWtgMligtMuNWMKzznTyAb7uDEcIHul9KjQ4X4oLkB9wUnOJf4A7gQ3Ih6dKwdGAtOS1tlduEhKEbrREtTnXq7LEx6gA1WZK7RvH5Ej9KI/6GO4ivcxKnjXf9WakDASXHM3i8XGFPORyjFmvrCWTmZZsKmyCRe5N8FMGUIU+Rzvg8nOV42xUh8ql9pQBwH2x+oW/y24JjCAvQ8fkH7V9oJZ3nLUCyr8K/R25gpOxm5jlT+Wq3TbjAzc4fikxZjALU6myDhn8fXEjshM+bj5A/wimiGkyZ/zaup40kS+JN1ggdoFnidE+93MY2dp1dIf1a+TUt6ml7gb5A66NXWROVxrtfYzsfLOwGxtO0RoJl2qx3kfRRellpNfQIw4w7oZvRrZVpHLlIUNfiWfr7kVfahfG4iC3nhzWKNq9Gs5qox3WKsi2duTxSlihnRCnFjzldMHWtz3rfUkx7/aWgURWzYiDkSCT8ByMEprFr+2ktg7lQ8ANlrJP/xYYYY0QfqefY606T77mNzEVeF2sZvybENjVtp+sFNKU/bjCzhTPWjE0O9Hv1VXGP6ROUuzwFI+QeCkahz2XsYBZg77b103PC3t10pSF9G/iJL8pkeqD8P26HnLixyJmxYYX6qbh4Y+YF+NLmdzoc9Ygs7Z9awtZqMzdDEker99Utuh74KlNXGRamcrN0HNRm18NhksNfNN3Chrqb+ABsJt4iksQQ/XknKhWz0KN6oxUqkyTDvsxfv3OIONP9FaWkyXKPPtw+Ib8jb+snYQZ+ltiqLGBIcav8OL8AgeQlYyuWgr/zNgjHe8bI6RqBRSffguZiKsSB1qbkKb08o83lwQHc/tTt8NZZpEe6Q9Yn+wXE7XcuRWXAQm+T8VosG4hjeV43pG6r9ci+UIl/3XYHy6buZYZxBrlgg3Et9Cyo5MvBe9TQ75LQLINL1droQFeqwwnTkmb0MJ60c3JAbWeYPsLmmZ1B7MlY+K6bjAfFq6FV2YUkhO0xTzvDlI/4Y0Bl8TRa+AP6kOaMyGb1tdkNV77SR7A8Ppuc5oNofwotBw0VD5T6LzwcbIMnEtiIdRmCQcTI3ng9o82q1zcnEkq7kLJNMEu059LvCr4dGShMnebhDLnxZXK3HcULnWeUb9pqEysIcbyN/pdatJgRCTNTg0Mij9ba5u+AcnOylCgfQ6vWb/pN/lVIkPkk6jipsrGCNeMNrBKlrlys5udzJdbL3BLLSB9rAyBW9Ay1Legza8t6bCOmhNF5vI2br6Os85Y++hsU5psKTmhHiR2K7tWdF96DtSpJQ03bRO0H6o0VpmkrMc3pK+qO3BeVKZMAIPUvKUAia3Vkk35NvQd1oel0JYIWB/2vgUXUOJNtj47P/7BD2Jv2JmOmWkg83jOyPX9Qs1OfUH4CF0TDuDW6w6YyOcYw+IHFblQMia7ux1wmam+5AwjpyqCSERV+szNB75NMhuGpUvV5ETJhS+TVthzCN5agyc/7/CZ081rkdD3nX7a3gbuMKN8kL+e+gcHI7Ms3cyrfYz9lguQsf5fwn3gonmo9r73kp6kpzU51tLwdxwRfRVdQu/Dh0x6tkn3WnmKZimN4uzkCJvkptAMbwxLIReAueMdUbUfSX5P7uYqXI="}, {"__id__": "chunk-489e65d14d7172ed962ec3031671d45f", "__created_at__": 1760491927, "content": "## Node Types and Roles\n\nThough full nodes in the Bitcoin P2P network are equal, they may perform different functions. Full nodes validate blocks and may handle routing, mining, and wallet services. Archival full nodes maintain a complete copy of the blockchain to serve data to lightweight clients.\n\nLightweight clients (also called SPV clients) store only a subset of the blockchain and verify transactions using simplified payment verification. Miners work to create new blocks by solving the proof-of-work algorithm. Some miners operate full nodes that validate the entire blockchain, while others participate in pool mining relying on pool servers. User wallets might connect to full nodes or, particularly on resource-constrained devices like smartphones, operate as lightweight nodes.", "full_doc_id": "doc-489e65d14d7172ed962ec3031671d45f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_2.md", "vector": "eJwNzItTFGUAAHBGQzLRTnnIcQ92b3dvv293D7UcCSQqTTBzsFJyDKMmsdK0IJVUhNTwlaGgIo87jtvb7/v22wcSOJilvbHJtCZJLSKlB4SZU6P0InzU7w/4TU7JVFrbi4yUqa32QV8e80RzAf2b7pa7wAp9M1qJq4xO9V8QSp1k9hu4NpN0y7F8DyPQZ8yNkR38G3iZkKW10YX1Kenb+ID4IHgmOtuYTdxGGriqIqWEu1c6Zz8vjcNbg7oEAyEtRl0jxYNzJE1ZppRgK1AE4oxznqdljj9tvOafG8kSR/hjfGJTAT1GJtEEkCF9LfTCHCEgvSIErbHoDZQ8dZivxjOkx0GPdRP+tn2a3IhKQx6yCCWDfjQFbkmp0V8Fa7hFLV2RDLZMXw9KcRN7a8oepo8vV8YKG8h3nAcsYd6XEq14sqphDrqP4HC1kRwZrXyh1Nnp1ioQdreBqugGeqC21ZtqVe+XyARzGFRF4hQYEtkQEcw+/jB2S5+IX4gNIWRuSZoRerh1AMTBBGjLp4zkKLH7JV7pRBn+YnY9PKFu8e6yd4nj/PvIRzXYV2Ck4FDrx/gad8NMYln9vDUK5uMysfzQpbrR2G7wg7fU+UoBnQ6vJBzidivZWouG8dOhs/pSWsvuc++Y/LDws9XunkMIWIjSUNi9C7ULD7o9rRXcYq3T14GpeEF+gKnVFwpnYU+4K7yExDsbqMOWG9vASa+LrvAcEa/VptMhMRMdYZ7AHJiI0iVEhvlUmonH8i9GYriNYJs2wDS72rg/XaukInbQ6oOryVXDY37MHnYmirW8Q7u8NwP9CCrxrJqVSo+6Uwso18ExdSsZA7fDU3CrctFnROc2nEd9rtPMfBwIDpEs8Uc6Rx4DLnH3g4BZSfKc34aGaC5/XYpNdcJha4APpq2TDop9+BXrGJPd+BS4KTaxC6TS8Hp63DoaXYr67DNR0VPVssqMcQ15B8HnByhdkiaw49WFTGwgjlkuV6BJkYeEIinGOM4dxAh00elMvs8xuXjCYns+esy8G1xgu6NFip9sBzP1Dz2gcUf9N76XkCKWWiqq8e/xF8hJerG0Wb5p7bIvczvsdcJh4Qw5a3R4Rf0qVyafV3NoByiLZkCXwxuyaSw3wl/kSlCyH4g7QTt4Vms278JZ0n75HW0QrcM5zE/sSv1tZariRQn0MToN/K084FZNk3T6b+cTxU/BvPBpuUul4GVUr+Rp/d7sfbnGLfV9pj1tdFKzeyhlvDTeuqnOAKrq5Noa8sD3wl93+sRR6gEzz7xE/9Qr/D8wU6wqdII/JXTwIyxhVtAnyVLyqHgePgdfh41wZtNLtEM8qc5mR6yZ+lx7kYlQt/4vKJYeoT+wlyfmt5bBUeG1wjRllMmwV0I5wTuMb+XlVBILuQT0JnNLtyNH9b0wxL8lvCBMd+VHVkuVqAJn+0rBdZzT2gJj+cX0EFK931sTaIHq1PdSGswEx8G72hWQaWca7b7gJFG8EdljbY4eiHRFK9QkPrelnPyKMvhXUX7TH3AoZifjoJZ5gqtE8eEb7muhbd5ctBvcF1lhDVmytkzt0QXhDuP1xl8CEcde0EsGq6dFv/QcobYlwDQqiu3oM2aNNWg2GkcxHy6BLvUM3m7cra6Ez6tfKf3WTmO1fUKUjQy8SfsJbpJCmhztFbP4c57lygdKt1AXiQ/MUuKktfoNxmFkJ6/BlfbntkjL/dBa3pLlHwleRv2RkkOd+v36gDrUvAn9LmzQHhWcooOEjMLki9yw9JFxj38el17nIxPVAszQ63qf6yvUF84FDvRPcK6RKQ0Y8c2zmrbCCV4YVNU/5PfwBRIvPc5PJE8qew7elVponKT1kULYrfTWF1LZ+JWO0z/xxdvfCAvUBaheS7Rq6ubg9ZPHg3LC///Xm5+KRVaT/zekCcXE35IqOVFHYnVaKl/NnSJjwCLwHtwo22C6NJ/pBb+k3KZ7mbX0H+d/LcWnVg=="}, {"__id__": "chunk-64c9ec162514b4c9c0b007b343a8e307", "__created_at__": 1760491947, "content": "## Network Composition\n\nThe main Bitcoin network consists of about 10,000 listening nodes running various versions of Bitcoin Core and several hundred nodes running alternative implementations like BitcoinJ, btcd, and bcoin. A small percentage of these nodes are mining nodes, with many others functioning as archival full nodes.\n\nThese archival nodes maintain full copies of the blockchain without mining or wallet functions, serving as network edge routers. This allows various services like exchanges, wallets, block explorers, and merchant payment processors to be built on top of the Bitcoin network.", "full_doc_id": "doc-64c9ec162514b4c9c0b007b343a8e307", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_3.md", "vector": "eJwN1ItTFGUAAHDBZkIMeShyB3d7u3v7+PbbPZQkA7FQEkotElLMiVQwKzAq0rEHUxqa4qMohYDjXvv+vr2lF2qOifnERE3poV0+G6w0Qy2dZgjt8Tf8Zn5vBJ6VFnz6rH0u+1pXWVaNQIb7ca06D+4Be1wVDG84P54KGyBgnXZr9CHuup4ufMOdJaFRYh/hSrlruKFxKlhkB1GPMDmzOJgKOPoJY0L0dJQFI7yv+/o33CsVW3eYzUxrarOUIezmp23sgUOeEuuGNEEg9T4pBqrCql7vK2GL9RJgoaXcHlBAdXAzQ0XoPblFXC8cUMdIIVDue5fLtqqMVGfRBCw0oEMwxtzEVfRuvQr+YIVUiI6Zs5S30Ej+HHkwKnMTUwt4Cq1HO9tvceXaFfdFqcjTJ4zypYQ9+EhglJnIDMMHjSJtL7MEB7RM7lMZKXPheLHBtq1aNpOxuceNeZETgfX+PLSQuI36rDi4vP0UFwraqFP/HNGRAH6df8rX5E2ObIhmgxLZ3xXja6Q5sFmaH/1SjrcJ6Jee4WJwNpUuOYns0G8dmMz3tIxdrO+n3sJLQyn2snV/c01RM+NrZY1ug1o1KC2yJG8y/kT9N3IQH5UeRqI0y3+A1sQOetgsMfYpP2uX5cKIwTRTHzKLsL/zLns3X2EWmHnGsowcPp4K2v1sUItTV3j6qHPi8xyNRKZbeMCs1UYEV7WNQMN4QJsD4hxz8aNkPzkD3MC53gRXgnsMvsj/Em2WVltrUYXdaGrqNCWZGAhsxO958JYEeY3rALOF/adr+H+zamXImkiez1jFF2V+lPl74DFvNViNrjNfCAnKmlCPtIp/N5SmF3BPgEG4D/zFLo0IapW2M+6qvoLukdfplxmIXoQvwAz2oNiFNqhN/r3Kt/gEiBNaQk8JR82NgSbmGDHANrnD9lR6LDWNmsGUwleEgJEfvmNPppYZ3VZxWHPOMc9iHpHBcncK+iiSlT7IJ8ljmUtCeaBeLFafNDqYN2FO9BN2aftMbp7cSO8n35Y3mZe76kBHkAJPy1bmZrDDqGZvavXESuOR0D+8G99uq0FXjELHx7om3iEJvlLKNlqse8blW0OwCHbjHTgXnNY3kVeASz+KdlAjtXjf+1t/4E6iDjIXXsDj0fmkbi7GbCcywz/T1V6OvADOaWvRLPkreorzpnM/nC40W1uQw/6KD0r7mPlWnj3GcUbs2qTwi4khcZJ6mPdrOVIBnRpsJY7YFPV9xtOKwqxpW+cqg5dQTaQU3FZj9D6SYF8GyP0CzPfej3ujZWi0msUOypPQIjTeU0/0e6cDgruKCq1V5l3KoHCR3S4VZG9Hx/SrwuS0vJTVVqJyJ3RSviJfVbexhyCLBHK54cZe4Ddmd1ryYVTYWR5YEqGsRtgb8YJvic+0tuQvlJ/YJegAfIdvkTj+FFnDJgij5bvxS2k9HIkqutbBcQYKXCIquZPWXFzizlcXKvVhiufBCvoByNp5KN07yVUHyh0Fthpt5fZEBhx+7Y/Odg1F07buMqeyidxnmuWts3Lw8cyYtpI2vB1UTH/RtZG3VNEcsqZYF9F1rcE7GyV5suBNlvG3WhNdt0AC+DpSqk/g+8wTwuXgLvVzq9rcaSe5otoOfptyJuOGvYVhYMMHvb4a/CV+GFVS9+NG5Zn/t+HESjusdfOl9HIqxhu+lWCn62R2rviqME8j5XTDFuqMBXpL1BFdwiXh43IBW+iYzjU7xnY50SGZVh6K7DLOm3XhTlbmXrtnxrj6rJH8KfFPfILV3NtbGT2MVhpE6LSx2z1fTzXuFg/ptrvKrJQSg+3UsJMGC/W53MsZL7GT0a/G2pQy9mwkXvrRGBHM0XPwaOuwWAbOtN7SgB5vJXbMFDZHcyPL6TazIuVX+7j+NuFUbjGvMh9qWWgxcrK96D6qV69g2p0X6GVgvmcGnaa3egddz2kb2HLQIJ327fUGYJGcygwkn8e17HfqXvU/xNudmw=="}, {"__id__": "chunk-f5155b5fe7f375add21de82e3192861f", "__created_at__": 1760491965, "content": "## Compact Block Relay\n\nWhen a miner finds a new block, they announce it to the network. Other miners need to receive this block quickly to avoid working on outdated chains, which could lead to block-finding races. These races disadvantage smaller miners and work against Bitcoin's decentralization goals.\n\nIn 2015, Bitcoin Core introduced compact block relay (BIP152) to accelerate block propagation and reduce bandwidth usage. This feature allows nodes to transmit only the information that receiving nodes don't already have. Since full nodes that relay unconfirmed transactions store many of these in their mempools, compact blocks send 6-byte identifiers for transactions instead of full transaction data. The receiving node can check if it already has these transactions in its mempool and only request the missing ones.\n\nBitcoin Core implements two modes of compact block relay:\n\n* **Low-bandwidth mode**: The peer sends only the block header hash without details, saving bandwidth when the receiving node might get the block from another source.\n* **High-bandwidth mode**: The peer sends the compact block before full verification, only ensuring the proof of work is correct. This minimizes propagation delays at each hop.\n\nWhile the names might be confusing, both modes significantly reduce bandwidth compared to pre-compact block methods.", "full_doc_id": "doc-f5155b5fe7f375add21de82e3192861f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_4.md", "vector": "eJwFwQ1wFNUBAGA00Whtgk0I3F1y2f/d93Y3EDPUhN8WQoKo/MSoVJAE4pQSJYFpJYoQhokk6ISUQCBwud3bu723u+/t7gVoJD8UqSZtqUItKHYGSoMiTKwDVgacBCG131cPsPr4sVBqQ+Ev/UIpWz7hqmTUylNdbiSxQhzGf0BvOrHuVeCaeRZtRafQ19AXF8GI+7lVQ1WomUdKg5hk+HvQeaUWvZnk2DvybXELJq4hLxA2FZbQk+WVPdXavsSY+A4Xgs8yC9FRnlKayRb1FPxLxz35GdDCBtBmeDa/2yzWishc/rB4Bs6RFpE2vD6RCUVKQONCE9+vqFK191XHMkQK73O7zPvyVNiLx5XTYJHYQ2aDjV2G/SiaeUBjP+BHvFXCLVga+5bsiGQ5rPWKtk/MmWEznbCdmZ6c7scDs2EJvU1xvGa7gq3y1mCP3YWznUtwtaK7XyBD4sQQ/zgXtIe0eo3FeXabv00r0ctpQW47eF68wt+gUvAtb7t8U3mBL8Nn3F7xqvcb4qnZartqgG8IG6+32kELv459WvjRek7aFA/g99yl6jF5XjwR6FNT1mLhRb/OqrFe94sTpZjDRN6N5okv+EsPNGuZ8ER3C70QTPCGXMSPai+pS4xP/Cbzv1ZlwV5ntVku/EJ/P7ck1cM9aBK438xw5zn/8VjheZz0lklYX85/bPl0qfq03hi/F/6IC/z+SdLoD1gjBusbZiusNbfmJ2CVMUYRbau4sCslLLBbqR/IRbXLv6vPwj/DP2Wa6WL7JebfUhV0uJrJQ6gahuw+TIFa7/3kcHJV6DMnqtwwOoL1YEyopfoPLxfPy18LlWC9OsOMoGIPCJ3s98wR0IiOokrtLVugBzt30O8ILukT2tw5sB40yrWwJ+dc933qWzvhjoJrQp3eKCzGG3nKPh5i6IfdLakLaDZTwhzq7IR/FNv0h91L3t/pc1HD2YTqC8bBTRyV8vCoPZXeu3+TKQkDTPTgsFJFZYH+PFY7aM2Ue70W8yRKMb9ycowMOEt6wL3sR+JPxdZCyjGd3apvd0sV6A0hnmw0FgpLklHBthuTWQXX+L/CEH5e3AA/sd9zRWGFNYu+KPWQZ+y1ytHEfK2KPYqrvU5xPj6pJJxusSny0IPv8sdJxN7JE7iL9/QHrEJ/BP4OpvNNVle8CgfI+OEJeof6GUi40cQj1kmxcvp99fv8fnsvyFLizGqYbrSoipsEEZEqrA9fQHnyq/ae8GRJYP8RlA+vBH3qRjcrTwKbk3/STohL7M3SRv4ppQJsRoPul46Q/4QK6eeSRdYkvVBaDY4fQHS6scFdEPwq/xQYDsxXPoBrCqZwbWA9vof63TRzLp7s3oiscoJd30mDZI222x3Cd7mduesK7Pxl8UDy53yO1xtMk7/Dg6CSWRDv4IeoV2GdPs7hQ4/l/s+6zd2ibkrl4i23gWsR50cfTZUpE6iVPpaZoVzFD4WXWE04P3iajgrnVI79XH2lR4wvY67xa/kG0GcfNH6MCELErrZbYYY3hEbthpAOZ8lfFGxnx9wnyVq5N2EklxvbE+N4AFVZc91SfNf/FN/WHjGmmD/gj2PX1de5L1F77JugDiZ1tIY/8qG41OoDu8j1Q7/1WiL7yKfBfpfiw2i2mJ4aszmwx96hvJu6gi+SdUIzeQ1cRmlig5qGE3oTGzEyjE6JKroAPoytKNym/lqqIyrf58fAhHnEO2tmkrNWNhJ2lsl99jzyWvaH7rNuA5MTnK7dCZzi2Slb+VZhXffVZBGbFwtLL4fLpZGCkcQb3e0GwjV6DSnmJawJujwQvm2n+RPwz6Qs8LI2U1qZvMMOi4OUTvq1Mb6fy3W3STNIBf9iYqZxkRfUAfFytNN/bNo05LnRaQ3cGX4LwxhT4/90FovldCh2E/1LvJS6Hnvbi4OQnwtF94nEeqcVsKDMmQTbyNv2HCfdCvG0hPT96oSzXKljroh/C49j1jxt/QT/H4GAooA="}, {"__id__": "chunk-34a0b227da65c5832df6564275e9b93c", "__created_at__": 1760492145, "content": "## Private Block Relay Networks\n\nAlthough compact blocks significantly reduce block propagation time, specialized private relay networks can further minimize latency. These networks use techniques that aren't suitable for the public P2P network due to trade-offs in decentralization and trust.\n\nOne approach is to preselect routes between endpoints, using servers near major internet infrastructure. Another technique is Forward Error Correction (FEC), which splits compact block messages into parts with redundant data, allowing reconstruction of missing parts without waiting for retransmission.\n\nA third approach assumes all nodes have similar transactions in their mempools, allowing relay of the same compact block without recalculation at each hop. These methods work well with centralization but sacrifice the trustless nature of decentralized networks.\n\nThe original Bitcoin Relay Network created by Matt Corallo in 2015 was replaced in 2016 with FIBRE (Fast Internet Bitcoin Relay Engine). FIBRE uses UDP-based relay with FEC and compact block optimization to further reduce data transmitted and network latency.", "full_doc_id": "doc-34a0b227da65c5832df6564275e9b93c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_5.md", "vector": "eJwN0otXVGUCAPA8HBFY13zjDDBzX9+933fn8nAXt8iUo5xMOUclNFjSRdtFoFTQTTsdgo12WXMqWXyBywwz9/Hd7373MVDomtqeg4YWW7QqYbq7bZF6zAg1U9d8Vfv7G34lsDV7de8b7oy8YW+d+LLSQT6xt+jb0BpwVyuSpqX+j3+WtGEtflpbSlf6Pgg8ElL4C/Itq8z+gqSjLd0VkxZYz7l82yXQEWMD25hdaIiL4D84WBb4MCoI3pNR92X4CtfLXYuMF0bVIh4IorzdHkNzlTfNYWk9ygPNNE/OEGtpfzRGrrApKIyWgxrzG9tkuuFA2y9xkRAXU5S3xUftWUyL+UDBMxpBr8KiJvq5XBD7SLxhLY2m0kuRqk7ZV2lc9H86oT/j77Kf66Pn0r+0N3Ffp344TcpJMfJDMizFr3qvgrVwoliotHs1keG2PlpHk1JGyQ0tHeyVT9uV9pNwvuwHF9VkzFlxPN0Zsf7mHSUX+A+Z2aHRyHHpz+x6so7ZT09BCDejf+MNXoPYQxvdifIJ5ZZ0GFpef5ZszFEEYUpbm1BpvQwaGGH7RnIttFGqwk3CYjDPue7D7pyuMl88cdiYQ1ODRaFhOhUN00n4Jj4FWveMRAPwWBCFFknvxJcqK9h8ryb2GS433yOV5otaRyQe99zvxDt4Dfst+Qf90vp5olaYF7vlnORWdtVmBfb+nk8OFfvPYwLfC27C8zXHzsWNbI73hPEIrBbSuLfQUDQLrzCXi8NQEKsxipp0DCneIC5nrlurwVSVx4X8GalDPiv42aauIdmwXrOfR/lWmnldH1BLcA98KnNAj0i1YBNo1y+Jd+VG/mHpaghYA/SmUx+cC3ySD01SRe01Ml4/IRbEt8eTpEftCcIZuwKtUg6gJWJvdNWUjuBUPN9LR11oO1MFHbpVPYTrwQFpvNuQeE7PAXekJp2BMzjk5ToHnI+CdX+dTDvJPGYJXGQPCpfps7FlUkusLOiDdWADXKCY0y9KD1vva/WZDfKgvUi11R+nVxAU/yOsNsJGeTdJK9KzlB+mTYgVS8/r91GaVSiut+bqBH2P2d1/sXYQho8GNoTWzrov5Mj5Vob7LjhinNKvMr/yTtKo1AMWplWLYR0kNsIkY4eyjG6V+7SdcFTKw9AxgKZsFs+Z080kz4UxYfFkRCczMWfEWK09nmXnPKS8Yq00njLPSgezf6skkw3GGrReSVHHZZfwe5QD9CtQDU4qU2zFtISoMyNyFG0W6vkq7ZigKrttPXMPlxL9WNvJ7m2V5f3MuVAhyiPEbvUC+MlQcuYV+jQ9sm9dRjiU194VSBBsd5g+QYY1JpN9R57ZKZBPYaqTvLPXe5q2m99bm/VT8SF+C5dLpkGfO2K+Eb0afHHH4fjGrkynnD3m/AybnEOHuMusYu/h8g1VmKL7+LV6YF8zcw8kwyrwp45Fidt8Lf+O/Uxid+iu7eOW4FGA6FvaLSNDq8A3hdnbhtFRzkDPeCNGqXQOp3Ou0EPHucu56sAhiwRvg1J62RjEF3bdk23xYHCxEbH73GuwjCykC8Uc4ifXmPParz1R35p4//9LW9TKvZKzH3rZn6H7Pr96RUhTCmIGmeB1ikHSBMqst60Ebc486Lmg2o5wJcEod8w7v3uZAvFD8JD3MS12g/wq+yZ0s3ZJxUqq0Y7/Jc7WsvA/YUvOSs4n+JUS5QKsobfFGvdrqVSdScPhw/tamDrcLExUzljNXTeiFV6//WBWefy6eY+Mk0vZfrQiMLHzuLWM78IVcIn9CXwd1fl2MZ3hr+xis4g2shz9TkiS+9SzaqvTAF7y/046wRbKs81mboDM5474RrQCOJY01b4rzzJmao9ZZzHutOQFoVorN5FhPogrWj18nY4Bk53DvaAfxzlCK9fDjjf7MlZ3v6D+wnkXvOmK4BvtNPtfc1DuVp8wZ4qDRpm7yfwgfkQaY8uFK0o4/i1aS9rRbwK5lkV24v9YPwHLh6Ra"}, {"__id__": "chunk-29733437c1df17b43e1a945461961a95", "__created_at__": 1760492151, "content": "## Network Discovery\n\nNew Bitcoin nodes must discover existing nodes to join the network. Geographic location is irrelevant since Bitcoin's network topology isn't geographically defined. To connect, nodes establish a TCP connection (usually to port 8333) and begin a \"handshake\" by transmitting a `version` message containing identifying information like protocol version, supported services, current time, IP addresses, software type, blockchain height, and relay preferences.\n\nThe receiving node examines this information and, if compatible, acknowledges with a `verack` message to establish the connection. New nodes discover peers through several methods:\n\n1. Querying DNS seeds (DNS servers providing lists of Bitcoin node IP addresses)\n2. Using IP addresses of known Bitcoin nodes provided manually\n3. Receiving introductions from already-connected nodes\n\nAfter establishing connections, a node sends an `addr` message with its IP address to neighbors, who forward it to their neighbors. The node can also send `getaddr` to request IP addresses of other peers. This process ensures the node becomes well-known and better connected in the network.\n\nNodes maintain connections to several peers for diverse network paths. Since connections are unreliable as nodes come and go, nodes continue discovering new peers while assisting others with bootstrapping. After rebooting, nodes attempt to reconnect to previously successful peers before falling back to seed nodes.", "full_doc_id": "doc-29733437c1df17b43e1a945461961a95", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_6.md", "vector": "eJwFwQtUVGUCAODW0EAUSx7CDDNz597/3vv/d+7gsUzDV2XSsTVSa9dXIQWYRzMj6MjRODYum0oURiDPuTNzZ/7/3v8+YGSLDkeSfCFrEieX4+pq5lGxWtDQrN3yiPZ9Lsbw/dxZZh/JKTWKY93gEikz11JGvsnnZZ/IfMR41W4jPcJy13XDZX/lXo4lAJyLSRep0LdPfYEbMhY7Cvkl9MPgILeJ/Ko7+VmgRYvTFHs2+9+W4/Iw86z/FfsQe0VSI2PSTnhZeplvYBbCdmPCzBF5scpL4zA/5qc5/iRUmLpLyMS98BNYoQzxvzEXzavaQt8A7HTJ8JFIXLKEXFujNXhjztdwJKNY8PBHzR/hFA9By8wWU1EnUy64NDLPeR+tJsfZdvEaOGxtIgealoFQ81HhYfl97xnUI/2rfm9ySqgflIilcpg+Z5QwZbqoO9ULsTnOgMRIbxtH6Tl0y9stLNLT66829jT/U9fICiNRL5ROt/0oHsg6jS+Fz5FdkVVWvhxAi8AYybeLENe0xX4X1aE+5JVTjH7iMNezW8Ui7jdhZ1sfOkBK2OvtpiTyz3uvMd1CuZmb5eioohxbZk4KvRorxunyBv1ZJFsZ+Dv1iuc9dlQ7KU/D+SjMQKlX+Ix+GT2Ja/DBh/1AaXQ3ngjf5W+aqz1xug9xbX+1N5ExmiToobi1LTvcnOZd37aIuwsCmaXBysZc5bLTD/pNfzCkFxqXox+JC6Tz7J/gErjGU413sA4ppz7VqsFXrF60zlI01szQLuGpZLf+EpmHXxC7mJ60vGmKtBcW27f5e/QOPW16Wvd45/P34dOZTwMOO+AOc7NzpeTOrHLNlovADDJAJ8LP2eO+DaLF5yms9qb3dfEZLcM41nJGT/de1xh5lTRFPguPaVVknXYxNGKmoZuwjX1e+oUOut4ndrCae5G+E69V6oVpQGH75G+EuUa/NtY+EcgGsN/xHkwvr+uyivHfSCBtAb2pig0n+YFYhbpfIs4KXx2TrAuZq+VjJsf3at3eb/UEuBuUNu0Kf99+Xhlys/AB8yRORiz4SZwJWOf/I+XBreiU1s1nkBzPjqxqAOWVwj5lDUynDjvLU65P31vg7aKBqCQ3MSm+dL/LU9v+WGijct83To8EvwtP0PraqrUEcttbID2FIKyK9uHv3b+Ko5nbIn+h5ZERsLt5o3Om3I+2uloMzr4lrMopE/ZQkU5EKcJP0R556n5NyjMKxc5IPjoXnO8dQ25rjtcZ+lqdCQ+3voQa5VVWxNOEIDjRGEgaQpuFLrZJmC3U61/oY7hGZeEtdThm0DnR+UDhh4UzYpcxYKo0Ad6GQc82/6C8gtzTfoAW3sWS9ok4alTak2K99KzQIF02VirH1BlWLZjkfjAyN+tFWkHT2GV2gTJFOq0lsntd/8Mv83e4Er5gagDirPOIiGOe55I6vJ8yzxhTQKq0WPWZnFhihpntzW8KbdZy88FoK83AuU7CVqLDjCGwNN2q5gl6TxTYWpvQ1oxEMMnh4D4ROnGy9Zh6tS6PHwdPYh//tvWL+SW6oYNgYVYNyNYfx1tAR+hjo8Pcr/1drzDmSiVakbZWviB8GM1O+DhWCw3wj0i2loiOa0tktjk1mmK9gQ/S7qY6dRgGgpWOWfao898+KTRdisdv0An0LvjdkxL7jH0L7ZNP2NvxZi5PWorjQM4ZBmfCSXIPyoKyugeNxz4Q1zROsCq1+2aEbbQDoU4mgWzjbyiL2quM4elPzTgb/E8sQYu7XhPzYTi8ybgoSOwFEDIWCKNksvpohGgIj+nn6NaWce0t0orc4A7eSR73P0HSPB11hzg/Tgk2hd5gN5hrgz8InWwiWeebY33Dzwo/ZArNC31LpQIF4jLtW/OVaIPQoR6B28E0zcEMWQXqFvKp93chRh61iowCfA8BnAtOZY/EGvjJ8gqfhQ+J641T4p/dA+aocC2S6iuVc5NfR4PMIEiQWtR5jqhZ6foDcx+fyg=="}, {"__id__": "chunk-8f5d4aec8c1c970b96e59c80c9c7a7a5", "__created_at__": 1760492179, "content": "## Full Nodes\n\nFull nodes verify every transaction in every block on the valid blockchain with the most proof of work. They independently process all blocks starting from the genesis block, building up to the latest known block in the network, allowing them to authoritatively verify any transaction.\n\nA full node maintains the UTXO (unspent transaction output) set, representing all bitcoin available to be spent. It receives updates about new transaction blocks from the network, verifies them, and incorporates them into its UTXO view. Running a full node provides the purest Bitcoin experience: independent verification without trusting any other systems.\n\nWhile there are alternative implementations of full nodes built with different programming languages and architectures, Bitcoin Core is the most common, representing more than 95% of full nodes on the network.", "full_doc_id": "doc-8f5d4aec8c1c970b96e59c80c9c7a7a5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_7.md", "vector": "eJwN0IlzFeUBAPAqCkkAQ0yMyXtv8/b89tvjPcAJtUXSgJKRK0gtQWAcjgrBhEAPYtNKRyASL66BBF6O9172+L7d79vdQJgiEuUsToFyDEQNGJpGhxQLbTDBBhynSvv7E37/0E7FBg6W0DWxygO2Eai/LSqkpWSB9icpN/2e0WSftepxA1MjJ80MXO/kJ3do48Ve6TauR3UtedJneFg4Lz7i9VpblWtNMXFptKL1IPO9vw7XcHfA1lhY7Ae+95rB82ubZyhz9Qr1c3uOwgPPi8ey1SVtl/VBeQotwbmx6+N2GEmZIX8DOfCD6KiEgvdvuer4YLdyysnUz0duqMXp7iAvKCMX44f1Pvx0URl4xvmUy2a/0A5Qz1niWGbaaMC9qoQHnD3wkLBCyPRwiDVmym8Z8UTmxNbUxgmz1XHI8wTphnhe6IWCq9u1qTfIQqdEPEJHc0/FJul7fd2czt5Fb+Tmt8zwAzAKfuGfBu2Edbexi1leNRmjMOmuoq+LP/EnSHn6D9KGbZUoS/rI3dDxupgJI/pU8Y8dFVbUS/ErtaNmofJjtkp3U38Wf+Of0W5rB9sKUY7a6TWbS70DoCJyz1vInEMjdIM64rDKYb/f6HFX29VSiTFJ1VGLvMKOSTvVHL4apZ94hAnTKnmytRDeTMekteSBuB7Ng8dT82lcGEPzo4Oh9o6dQh65Li2zHhNK/n87ITIDbIeXqEg7aTuSnGK6D4VA2e659kXGYN9M7sq1k+GChFVO3XGKj5TPLN/6xsd8mTsXDRlz2UtsrbFZfnlCbvR7pSj/q8DRhr2HxXKUpT7UNgyTj99Am6RfIAsuN3cU9cGwz8K4/q5UaU4kJ+QQmAZf018I95vHrJXpHPl3uGtP9s4F9GY4QT9WVoNM9X14xxtvDjeNtnJJPApRJmD15cFJoYpbo9naf9EyWod/4O/Ki2A3eJr/Oe1vv+L9k81ozQo+cReor3LEeF4qIAXik9FFuBC8KB5KXTKfjOUJy/U4udAyG+7XZ9FNUpmzcM8T9N10E3e6hXUSHc86lqXDsXAShuq/C/7FAKvObkDr2FrQn7xKFaM8PZW70nZXG0U0cZH2djDc8Vh0yM9iBHmJb5DT2gW8W/x1LJOZ3PaUXIN71HXWfPlcMA9wwtdmTrhdOApKo0OQMQVrJHxB6lG3SNSrF5+Vp/KDaFBt1g7bBe40Zxq7PTZf6aKCeULKMdcKIbGeq9I3YlY4Fy3UBwwxwsAWMgaGQCaDooH4jFgYG3DvJSv07H3jQbW0V5wsfYQ2q0eYW3glftTLolnKSXGYZqAuRgcrlZ9CGa13viXHyQh+S5kvNQsvqrLdiF5in0sQ9/fBl96Q9z65nRwhK5R7+YvdpBSkvtxfBvuYBP93UEdmJtulXnMevaJeR2eVouhf8WIm4knsVedy/jygwlalEs4Up8MCnEvPpKuUy25vhwg/tfeQWUTQtuAz9EPUTFTMCWnxvn7MRsKQP5Hooc7om2off8rrouV5pcYnoVZg8w9Y4jQ23SJdwndgIn/O3e43kQZett82ulPFhhsdkarNm2gj7fXC3i3aam19Z8Sr3NegHBMbhXxncPujelcoh5R43aCLrIfFboaxzHuBNJKQ0Cu7imPUFR0Lvg3VyqXkbJwEbb5Pj8qznavOalOAL6l8+y5zmzJ2d51bowCdVQ4VnYjf0TYpsyw5PIzLwVFa21HckUE2JX+El7qrlEbUbe00Fwfjg218dsgw/xBOFFVzp/mxmp4scD08wI1WX05Ph8sjKV7lir1b7hSUMtbIkJK8HuWD1BzvVWccPENWCdcitdp99Arq4S4qd/DDNpYfcB+SSrmT+SV6z5lCxmAOsmoV/o4OkUYaRmzrr8hfmM1kNDhpJLw+cC31H3BE6vQ+D35GI8HX4jfeXvZ4wWy+W3gcyMpafF+YQ6czu3A5KZWONPXDGv022KB8JY7RP+bOulkk4jCp/wE4lpoc"}, {"__id__": "chunk-098c587e351aa2abde52cbc45dcad7d1", "__created_at__": 1760492179, "content": "## Blockchain Synchronization\n\nWhen a new full node connects to peers, it must construct a complete chain of block headers. Starting with only the genesis block, it downloads hundreds of thousands of blocks to synchronize with the network.\n\nThe node first exchanges `version` messages with peers to determine their blockchain heights. It then uses `getheaders` messages to request headers from peers with longer blockchains. Peers respond with up to 2,000 headers at a time via a `headers` message.\n\nIn parallel, the node requests the actual blocks using `getdata` messages, distributing requests across multiple peers. It maintains a queue of up to 1,024 blocks, dropping connections to slow peers. As blocks are received and validated, they're added to the blockchain. The process continues until the node catches up to the network and is performed whenever a node has been offline for an extended period.", "full_doc_id": "doc-098c587e351aa2abde52cbc45dcad7d1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_8.md", "vector": "eJwFwQ1QFNcBAGDJGEUHHCF68nPH7d6+3X37du+AmKAEGyIVfxoEtdboJP5ro5FGUiXTappKlICOSgzh7oA72Nvdt/ve7kJC8ac6kZgYxp+WoJLElKnNjBpBHbQxtsHBNP2+tz3/UM50RR091Nl5BFwBdWZvzp/sp5QD2SHhQymI88kHRpE5zz9iFZKe9E3mSTgIVwTqyGEnygWhSP5H5mgpZllsC3PdUYVNxkvKrvTb5lWnks9nz4Rq4UN0pbNULQzwxpegVmmALWJzznr5ExsEA6EOYZWEla891Fwke8T1B/sCSdZOb6XQz6P6amyRYf+z8GXpLbMZOt4C1CPpzpHoZkfJe03Ks0bYZ8DCjl5otb0nTiH/wl32Xczpm8k9AbBHSQTUwSZurVtLb2gKmESSmEBoLhvls4QL2jwKzINSTdMTsN8cMSvV2+Q77cK0N8wJgePCHkWmV/CP8LIW56NmObOHlqgtdqqXcxY5Z/n07AHwZ6aeLRa3HRqBQXuX3I1+ghcTafabQonxVzcE9vI5Uh86Rd5p67KTQAq3VlyOer0+fqdnTFzTkY5qkBodt7eR32cj7vmOQ2xa/Hs6mZzU8vBHcDfZKjMuG9uvHec3o359JypTz6Jy/05xv1zPrqBbDREPt3LwJzoj+5iYikvtEP47mY0ormgst14l+4WF6mTn/PRkCo1f8r1ogcyZp7l3+CLpc+u+uYoO2XcCe62tVgFfL0408/hsuI3vJ/mtpcKR2Dd4Kf897oGnbI62uzfURfFyJkzKyJH2S3Au/A6z4gO40RymNXKu/Y3lqCXh00CEszXeOAnrs8r8b04/BqaipcxRUCAP+NdhgNcJjTBXyZNuMhsjDU1HxbNA49ak3kurjK/hER4U26VLcgvy04rAMqY6EXSzYBCpqoD20S1gGihmHsAdtMjtjEXYY9p/pvXAm01Wa1H2k+7x5iG12l5oDIhVgUr6LTfTuBEJtZzFPBphluh9sfPob9ws+VkQseYE5kNizpTX4s/EdNxnHGRPiC5d0LmQ/J6fAn4WchIl8V+37ZBGA1XiQ32F8Aa72tcXORwpZ5PFqZmlklfUG4cR1CPuL3AmpUwVWEwX48bgE43bvD7FY95y3/PVte0OTW8/ZH6lb89YAq+ZopEl/ZbPYO/GBrX5ZDtIEp+CzeO3k/rpHmGPMCsRU07Kq0kgfo+Uo1mhHHiVrKCLs9rgzGZDvs5VKFXkhDBPLETdbB7zEjxHwsa++CgzJNbG7/P/DQr2C2SyVA3+nXUKFwozpJvwfTifQapOx7mZ+Hn+GJxoJfvD3JNMPfgjtx2yGNvryRiTJE2Y0SDXy0vNvc7RxAHfmMfv3KNj9AfnakZt/GP4jH+IsMx4e5cLuSnGxhYrzcKP3F3gFbwBzEaPjbn4QWQj9hq34EpwwkqRR8Vk8RqaHH498xa7hH1sjSODqFhIdc8EiHk+no6/zmR1K+sFK6x3gf5ESOkMZhg56GnnBPYKD/kJUi5MdReTy8yW7GXaV7jHN9+qbl5r9rZWoLeyT4Pfee6by623xRe1Ch2TTdEFeoHd3VasP6INTrJ1h0aMw/CSXWylKHriNXW19mpgq/RxWsP7t1pHpUL9c6lG79LO2TcpcvOFAvIlyLAm+Wd08Hoy2oB3S8mdU8BfzCT4ov9H9Y5+SYoFJ9nFRBLGxIvuQfRyMFWsI5+iR1IY/oZ7nLhML/AlFuw4QFbRi4FuzBpD4Ff0EyA0f+D8TDaFO4RR6wcjN9oUe4WNC4PqAPVP+yd727dDVcQx8Doez5XQNvuAkaOtTLxLvsDz5Ofaw+4XtkcYJhPB8oYy5WrKZ1q+FgtcMPpaNredB93kW2ERy/IP9HazQc8Xq0QCDGe/XmKVqlP5HHLb18rkgg3GXfs5NOA7rNV4r7cUumfoqN0rPnYnstHM9thsrQMuQ6nmHyA2xrF5tMhcp3GwUqpQRlheXskkg3PpicQ1PMfNT/wfXjSYsA=="}, {"__id__": "chunk-177896a989b4f6b664972c4a8ad37015", "__created_at__": 1760492206, "content": "## Lightweight Clients and SPV\n\nLightweight clients are designed for resource-constrained devices like smartphones. They use Simplified Payment Verification (SPV) to operate without validating the full blockchain. These clients download only block headers (about 10,000 times smaller than the full blockchain) and cannot construct a complete picture of all UTXOs.\n\nUnlike full nodes that verify every transaction by tracing the entire blockchain back to the genesis block, lightweight clients verify transactions by their depth in the blockchain. For example, when examining a transaction in block 800,000, a lightweight client establishes a link between the transaction and its block using a merkle path, then verifies that subsequent blocks (800,001 through 800,006) have been built on top. The network's acceptance of these blocks serves as proof by proxy that the transaction exists.\n\nWhile lightweight clients cannot normally be persuaded that a non-existent transaction exists in a block, they are vulnerable to having transactions \"hidden\" from them since they don't have records of all transactions. To mitigate this, lightweight clients connect randomly to several nodes to increase the probability of contacting at least one honest node.", "full_doc_id": "doc-177896a989b4f6b664972c4a8ad37015", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch10-network/mastering-bitcoin-3rd-edition_chapter-10-network_9.md", "vector": "eJwN0ItXFFUDAHAyfISPT3RZWVjY2d07c++dnSUKjcrkoWWIGlKZJHmOaOk5GsdXhOWr7zOEo30KBsjCPmZmZ+7cOzPbw0qSsCzt5WdfqZWRkYGmHbWHKOKpo9bvT/iV4fxg9d7fqCtYaHPiRxh4qXa7PRzt5f6v1tOhsd2caj0rLFRW60O0W/mUFkg93r88x2Of6pStxcfY0vQM83cyqDbn9Hg93EFhPj9S3a+7aIgHwlExzzse1ScqhRRyGZ7CQ+L3LV3WO+JhuV4NBstRyBuSVmU7zRtGb+pTvmVGBL4Sj3GiluJzKJ/T77UschffJI50H4V36KOlFu2WuXvi09q9ObN31ck14hPASBTCuvZ2sJ2sNX9k+Y6L2gbwAzqX/hHbJYwUBndWqDOFFPVaZn+Hj7ruXAE4z3ZQxRZrJ/lUMQ9fk7aYU+gOboI5JxrJXmbPpkx0BZca5dSHK5VcYT2U4pb2SfM5q3nUx/EMOg610R48Mj4aL8z8WG+XInIL4lAYJfmPumq1C/pUuw1G8Zf8IfQm7XRWkguBLbAwlAOumf/Bl2Mn/VfMf6FFEadR7M/OKmDj+ct2FxgB7kkYWT+Z26zpwV6SBU7Yc7UOsIn2wgq2K3CFvQPWUFsZkIaZN+PFdIcvVX8bnHe/lVUJ9ki/aV9x4dgyYW6DZaf7lpN+WSG328+0vcvXwWq11F+I1joSYHxgstjHlmv5tI4V6SftM5HJ6BApG/ML/kJ9z/PfyHpPUJvF3T2xBDVGT+Bv2UkwycqVG+Sy8F8yj+ahA/APYRnY6ivnG3ZWsyTJNFIt2XRzMbWH3+h9icZhUBsj5XlPG0NoHiWZP4tL3KfkWroENQkZ0jF01nCqQdin/C+l3Pl49BaobpyGY/YdgRX4ITQAWo0KA6RBMpyW4M9ANUkI58z7OAaz8WY0k101isa8zx3lB4VaTxge2YOUbuKOHewImPO1BO8KrdYafUmgQYbZvXRKeLHHBaGelrMCHAustDrdj6FRcCMZBzLiWZkl5pW4hS5wC/YUm7vat8XWiBX4MnswEG6XYHeGg3OAXO51GIAl+Ia5yZWQ8mGplKBjxWJ8m3nDnrTnujnf+ImfQcaFmfiQJvG8+F2kKpHKudy/ouxQc/p6oxPvx0+AWi2N2y9uBkVoZWyqvRVxuBEXqVeba4zZ4tvclkk4eB0RbZ62mh1A64Lr4BbWpzlwpX5J2AhvCt1ShpGMV5MFQqZ7HxeAh0m9PEOdFZkL7w4nIW9wioWUO/nnsrzqaNYaX4VKo2uFEXhh9nkrQWa03go+jTbZO/RL4Cr6t2cCSYbPM45+rT0KnPLNQA08E+jH3ylDwjA65eV7rFKyqKnZjik8+ZXLQROsI44D3GJ7B/9zR9/up7hvtEfI8WiqWkcPim16mf8QytM3kb3uOeTJjuP4/jQbLEDLQb8zWdyIoqwSPAwLYcFri73n9ChZp9yHgF1s8J46ZXd8pniWq8ATvO+7ttpvdAR9yfJkPk1mCi8foT3ZI9rm+wdibyZeVwf0YZ6l/xwe8T2ri2S6vY9vNNZwt1wf4vZIHpkdztWvW6fZxfAx+ZTQHzjMsNYkDqMNME17j+sANdo8+gxLgS20xTdNuZfkJTy0jRUKg+mdqFe3nI9b5ZEscSepFhuMLrrBrpL2sw2wRPX5Hg5cjFdF1qAmz5/qVdwsfSJ+4QtJb0hjJcouEM5eGX1VHm5ifaVhtDp0TT3OF+nDzTo9bs8yYuo1Pcpa3U/yY+TTgXphPZ1qdnF34Ra/S3mJ/5MswW69S1vKvHot/QCcyLgt5OVnRkr1AjZN3Gd3RTdre6VW+bqyyngZb6NOchF0cpfMftwKu9B2mmaciYai1cGBSJmZy3I9ybEIaqRc5h/tVf7pdNDE/heVqbFoPF8zrRpaYCZrZ63P0CLO63mA9LkLvUksXwwrGfFXwg82v4An8ilhh7RZGAHPM1uYzn9r8lafViT8DQlIm/8="}, {"__id__": "chunk-74340b437efb3943eb61c23842cb845c", "__created_at__": 1760492214, "content": "# The Blockchain\n\nThe blockchain is the complete record of all confirmed Bitcoin transactions, enabling full nodes to independently determine which keys and scripts control which bitcoins. It functions as an ordered, back-linked list of transaction blocks stored as either a flat file or in a simple database. Each block references its predecessor through the \"previous block hash\" field in its header, forming a chain back to the genesis block (the first block ever created).\n\nBlocks are identified by a cryptographic hash of their header, creating an unalterable sequence. Although each block has just one parent, it can temporarily have multiple children during blockchain \"forks\" that occur when different miners discover blocks almost simultaneously. Eventually, only one child block becomes part of the accepted blockchain. Any modification to a parent block would require changing all subsequent blocks' hashes, making the blockchain's deep history practically immutable due to the enormous computation required.\n\nThe blockchain can be visualized as layers in a geological formation. Recent layers (blocks) might change with reorganizations, but deeper layers become increasingly stable. After 100 blocks, the coinbase transaction (containing the block reward) becomes spendable, indicating high confidence in the blockchain's permanence at that depth.", "full_doc_id": "doc-74340b437efb3943eb61c23842cb845c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_1.md", "vector": "eJwN041XlfUBwPGzTA+GmyggXO/b8/78fr/7XJgpciIxp9Ry+RKarRwcDisoc74N34fDpVFjKpcrwQXu2/Pc5+X3e57n1jKERYfMPALlOWorxjRL0dJyMBW5Ts+SzX/h+zlfBn2XH3vvjrU6bzT5NXsUxdtW62GrV6oG5V4nTJEJc0fT88ADdqoBske94U7BAhryj1stWqnYDAu0b+TTfAo/bM6UXvEEQIUxBfShSdaQGQQTQos/xAmSbmrR41y3WA33SJ2wVjA83fxOc6tUCIq4F3w90hrlAMmX3hUHo3vRnMQg04re57ysHogrh9hbbKbA4Cw0r/0Smu9CZpmu6c/kX3J+pcYdXeC6KYgLuGfAMGmhj+C11rfc9EQAVrFlpLFtCXWUOmWVBjrkfHdE6eN7pQG5h3sCbjMW4FVMY+4EUwsmrLJEDtiKb+Gg71pzXA75/iZtNkYa54mTqJ/R1yOtsSPs6ui4lSa+RK7gcm4ffR40h3bzK5l/JfygHS8X10u7QQm13xLBRnso2cw7hGFYCsZ1h36DTHCLwRL1v3zAfc6XFnuTu0sK4bPoTerFrNniR/pruQHby7H0nuRsakAtw/VwoX4WLLEPR++w63CnWKn+0bc58TjYZUgzz0r/5rrxiWi6flM7IW7EQY54nuY6Irfi99UWcCu+Wx3Ttxor+XoybheJ4wpsBy3dTI/YEcH8hg4bfoWfNJrUBmNpFJuTPT2giLlu/IrfQh8A040cx1LmgPs/xhnBrVWjOtKJK5NT8FOJBS2HjUcjJzP7wCgl4S/5o1S+UWFfYmX9gufh8JmGh8zH4HttzdrHcKhjnrfIu4k6zYec88FUab34RcSP28Aq0A/3SX2Zy9TVkVnUIuq0J6nejH6v1zF5ySSogQiOoEbrenrM6dSTeCqsEClTE0bsc/p4c0jAcLosJGdwWXxNtNT1DtqBso23qFfMp3IuskF7lz4sLuQuaFvkg9pC7iNhjnNAzMrOo7oyXgU5ngZfED+tXQYBbj7p5SPRurDT6KKG+GJm0MhI/qAcoq6AR4R1RgcvZEdm9zmJt8JIua/yuYnDzHStMLGCc2iZYCyihGfCJv1+klLX4u3aTXTSCFkXfD9V7/E2+pq8T3rFFz0/9wtGUFhC4mAQlOj1ma3wGlUqvxH/Mz2k72RmoNNgkbsAb80d8O4yPlQ2+XP8KeuG0mGcF/3+fNiNt+N01/1sxKwBzwvf+h4jBa5ds7wP2iX5HfAzMwWqwt1ygi1p8TK0X8GUPACa1X+2l+4vYY+xm7kV7CY55WpSPrYOGvfAy0yDNaIu52q4fb57IBW+mngyOUqOx6tgj1iDXpdEhdUiwlJtmlFpVVjLrIv2GFepL0MVvgzyu0idWWd/6tmmP0efoQtJk1buvhGrNoul1+VisSrxJ70sDtwfhovNEvgCF0OTpcP0NTqfLhY/x5e1v4C8rGeT31NH8PK0v6p/4KZm39ZuRzLVT/TR2EnYj/bGJwHTFJSgZgo/8r/kI6SWsPHJHpXBiStUr/42TiX+LmOwX7DpsZCB/6Fme4Kuy2pFuNixwQjE3+ZqFafVRT6wz2lC9GX4qtVJBWCpvJYvUJPME6hTrtdZ8hlVLKfQAeWH1jtGCWnQsr0hnE4VyrXxIbJGS0OLTROdslaGA/iguO3Bs134OPg1eskcVpphJn2K/AbcldaAUvMb/yJ/OTwmb1aHse27jZcna0k3ttqCWFcp+nxsbu6YPGJ8Z/QwP6p35RX0LHOaqx/+D4bSVuEMDNAXQr0Wo9PDv53xWnSv1U7mKJV2VX0DOcU4QcIBME/S2V/gGbRj9kPSWtXUFwMJufA00UFlMFfJUbacvslsiLNkHX4D5jxAGyHTyHrSpRyjf289IpTTc2lbLjIbhVGlhu2X9zir7bOk3pqLtlvvtn0ZhXhQTQMb0Qn9jlirX+HyDLdqoYvMp+isf4qY5ut3HYJb6J9YfTimtFL/B8qsq7o="}, {"__id__": "chunk-4027fdece56954996ecbc7c7e2e530c7", "__created_at__": 1760492242, "content": "## Development Pipeline Using Test Blockchains\n\nBitcoin's various blockchains (regtest, signet, testnet3, mainnet) offer a progression of testing environments that form a development pipeline for Bitcoin applications. This pipeline works whether you're developing for Bitcoin Core, another full-node client, a wallet, an exchange, an e-commerce site, or even novel smart contracts.\n\nThe recommended approach is to start development and initial testing locally on regtest, where you have complete control over the environment and can rapidly generate blocks and transactions. Once your code functions as expected in this controlled setting, move to signet or testnet to expose it to a more dynamic public network with diverse code and applications.\n\nAfter thorough testing in these public test environments confirms your code's stability and security, you can finally deploy to mainnet for production use. As you make improvements, fix bugs, or add features, restart this pipeline - testing changes first on regtest, then signet or testnet, before deploying to production. This methodology ensures thorough testing at each stage while minimizing risks to users and the Bitcoin network.", "full_doc_id": "doc-4027fdece56954996ecbc7c7e2e530c7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_10.md", "vector": "eJwN0YlzTGcAAPCgaEhcOTY22d339l3fO1boVGhEmJJEStW1bmKCFFOEpohBglIlMiF3snm7b9973/veEYSpozTuKU11iERop0k6WpEKrTMxpdP+/oXfDeqywNfdN4bE/2zlsO+B/ECxNUjt68kiPkSFmqIh/LHSH1+DNaO02j3+EjTC04o1xDyy39Z+iVtA31HySx6VJcO3xr9gCjk4/LnawTBgJZqi5/A7KMxzBmi8rXYF0+AEgZPcVqEXgNUmVRd8be0RLghfIS9bQTVpPnUP84aJZhOFcZifnR2ZN7yt5vuSh2Y/fT3oz1/CR9EpHMdHxACLMVej9HicDwRXydkgwuqPJ7sOAk7JlTdLCbqtpgh6lXawGb2o/twXD/ZafaR91ugw+7BUzhDMYJTvEJcrjhXfYhdLk8EyvtuyIS9JKo/cV502ROjvM6M9V9REJZLsq9yiorBQbSjbycw0J7pigwOkSLIFe01eJmdTIVSTpGvb5N5chSdAzIfj9GwwRX1iRbHLhTZ+N1Gik2iC9pB+yrTjKXQjFsbVy4upBkukQ9mt4rPATPaYtcB52JpDjy8+UTsendJN6zbYh0xhvOEvvayQes+e/Wgu3Q3TC/rE9BW9goc8hza4IHVM0bBY01F4xj2B2We9g/xBSH+vTDM/iYtU70YXykf0MSBc9bDzhn5bWYadJ8Pp/Xgcf0R7h3pc+SO8RMqwG5vAF+CdFXdpnSrEyqMv0I6iLDBDG0tcU0cKLuMzJah+ZFyQ8uTnWHevcxgkokGz87q2itqg3NQnsIvgCeuF/Fi6gIeyNjFND+NmRJaCjIrJZeNAc3CjYse3VrZHV6tVzAC+gasTwkE2alImVoVys4mXJuM8aWxxm/oWsItNECh+hzlL+gqlwjb3KeIB8RBTmZMWLZ4G7SCVidU2G3Ndc4iL5CDyGhnNNhkLxXqDKJ9h5iPa0UolAVHtVpqkbDmpLExZQ0YBJq5d7AZacDG3pCYBmtRU9q7WQIQMaanJxI/GpZIdlC146UiXJMVMBhmgTdbxU0Q/vAfuJAZjp8ET0qENILPU61Wv3KAmi19OLvHfE/qY161bjt/ck/ySjIxXavKwuc7TPASZKFyvdVDaMm5b1Vh0CGbjYVizvNU2BAxyp4O/XauoNiNS/BLvwTcNzEQRrvmYJA5U+oExXI7hNyVrOFkfn82lo7X6dsfy/F3uVrb5UBfopWMgPriQznd/IeWBJGt99XzaQ4SwW+yZdIKny9oLs9hh8FOphEngirl1xO+gtWKXds+oQKudSdRlkGC1SMOUOuYt2AnK3dP11+gq3Ey+IrdhGfx19k/fQNRI7oD/kKtr/9DfIt4cDHj7DvYo9y5qptZAm2VzzUIhVR1YN2qWf44rUAcrP/ErnSeUWfQ97aw9z19WmWAy7COfxq2kNzGif2lENhhpPpDPcB1q45ElXL6+zHD4D7LT0DfIoX6tHYZp4DhRABJpPzDMInSfymbS+XRwF1HGUlHXM2On42epD1w3YCp+tQij95GNcmjAq86DjTWPlWfqUTtJnlc2wnOupSqnF+szjVTLEVdA/WDl+vvSV4k89wjxnLOYDZGb1OT/D+dTrXypFINNNRaok0SK3qtOwmxUoq8ONlaECQmoXpBrV6AUC2PK0F9lPdheulR4Cs9qncBDJ9ktevqI4+xFtG5EhhCB6XAUuG23swcCnWaINdxswrcHFymjWBYfHih3f6ecMjnK7r6h9Y7C5Ho5kfnYU+/3qlfkG5TIRBtXyP2qzf2iZJRyRV0M3xR2BgPSAcLJviDT4E3Vy+foXdw3sIXL8E2q8lG52B2zBXmVO7EvtVohXt7PLFJS1IWoEuSCuWqVmo6HmzFwI3UcdhAoWAafoDnmbq5EucP2ULHqIrROI/RrYKAR7ltb9FrJJHdxjPNXmEN/q3udT2O+1kLdGdG/cueFLqyaWOOeip+EZ6BmjC9Ph/8BZBidMw=="}, {"__id__": "chunk-0ef371f97035f35e6415652e588ab85b", "__created_at__": 1760492719, "content": "## Block Structure\n\nA block is a container data structure that aggregates transactions for inclusion in the blockchain. It consists of a header containing metadata (80 bytes) and a list of transactions that make up the bulk of its size (up to about 4,000,000 bytes). This makes a complete block almost 50,000 times larger than just its header.\n\nThe block header contains six fields: Version (4 bytes), Previous Block Hash (32 bytes), Merkle Root (32 bytes), Timestamp (4 bytes), Target (4 bytes), and Nonce (4 bytes). The nonce, target, and timestamp are used in the mining process. The Previous Block Hash links to the parent block, while the Merkle Root provides a cryptographic commitment to all transactions in the block.\n\nBlocks are identified in two ways: by their cryptographic hash (block header hash) or by their position in the blockchain (block height). The block hash uniquely identifies a block and is computed by each node as the block is received. Block height refers to its position relative to the genesis block (at height 0), but unlike the hash, it's not a unique identifier since two blocks might temporarily compete for the same position during a fork.", "full_doc_id": "doc-0ef371f97035f35e6415652e588ab85b", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_2.md", "vector": "eJwNy3tUFWUCAHDzAaF2vRjC5XIfM/fOfPPN4+qpiDVkLfFt5oM4GUGBulvqifXRHsxNFEnCKMxQhBv3NXO/mfm+bwbIojApQ0t7nXU1OUtsaYuaeYCy5ei2uqm7v/9/2SAyI3xoJ/1VcXRsAmHQZI6i54yPFSotNeP8GfwZLjHGCDXSu1pT5FykKf6QeEzIkubgw3oJv55fQXYbMW0uzTYfVnbwudx7eKc0DtTbtbQmOQA/CR0NbJFNPFZV1BYx7i1XSsUXWyfB9dIgvSoOyfMTpqJCPj6Vfq84o02xp5XOZB63h5EjqVym9k5S5n3yOumfzRfkDa5ZYjOAHWXN0411oS799y31cEhuty+K+UkX3IYn+s4ir35JLOWD/pOgAdth3tsZnmOfzshMzjOHtVcPxkKTtbLIAkF3zzT+ITjFr/fXCGnkclq2kKAX+Be4FuMdNSxUyyl4rH4UDgsTW48FUvxdiI3dsucpI9b9ZFKOJ3pKGtH7wDNg8uTxyt/wLuFdpUaYyZaSRnDRvtUxAF4SipQfmq8bC8yF+CQggc16mzLGrBa8wlNcl3lY5uH7+jM+RiohzwYfJEvQn5k+fF9klq6RC+IYrYkrJGvQmWnf0yHxvDYo1pLdsj8JeSytuGs1YcnnMWeyietTL/uS/rjmMLdrBahfNs1trY1ZecZXaqd1iLq4vUb9613MS4FC5e62Exm/8ESR6N/NR9BcVOlvpCf9j4X+aLjxXLid+0JKwVv11WgkeQsV8d21y4U7tNLqtp7XKnN+8ZVn/S6z11mgtAipRlcWbDbIqfZ2sMtIy4B6sf5DYpySHuuK9PJzeKLfSHwZPg//2votHCNn8Cm+Q/gcswxWwyoh5+DAW4PgpvYErmaSOKnNQAbfZ1/iHXC8WCoeQZ7/75WRVrxKvi2dJwXyKaMlkc/khNdIU1CJ/SaTKaz3vRBLHkBAwyx02iea1np3WVdwOwekdLPYP03dwN5mBz1PgtxET3ySOkHgHV8q4/FhVMHlCaWkAZYl9nALdRofglfErfrP9qf6+6ieKwdP0hN8vlbGNegfwNRkUHvPP0AeZzbhRuYejx9dE/eyx6KLpFQmbKerPebpoENyqS12P9yCPNwecQd523LDcnNt6At+lv+i+h0zVdkaFhJhkQnO5u5N5maVGh2xXPG4f7U5hKl6NeZgN2aMU1olp30g+nN0oVSjaKAf++iQtBcWcrPhRKFInoD7mePaSqkQ1Pt3ws30FdCIZuvlAKsg41LIoEPRsWA3KeEXQ6eWE7nOL3RVcDdqJ1rbaRW7T3Fzn5m1wtLAVNUpTedYocCIWN2JfzHzufNTFstTwBa0v22YSzEHY2foHa3W+gnvTvwY/Yi7HtSsdWyaWUfrvGV0tdcwNqJ9iSDo5RYYN+Cn8WL+NW+P3qvOCKzadw7bYi70wyJxDbMInQtnQNU6igBcymdZ/czD1vOBMnxT+FC/rI3Gh/XJBlTvllIVj6DCGe2mNit9WKpjl8EppCYutPbwrkxP8EFwTTdbet56KljI58AJ/ItNG0m3+VCWGK/yf8hUBKG5ybvMt0hbQjpJZmeRlq/egcfN17jyUKp6PfYNfQJck4rN/bjOXC5spAVCWvKrxEE634B0sduyfouPaiv1IepAv4Kn6TW+2nJganHsc7RCKTGicqEs2qq+GTbD14kKnNN3SWsNR+j+6XXwrFGtbrB5MUHzrP8ai3C3/zf9L60NAVb/AzrCrSDz6Kh7Xfa/0QZUGnPBAqmCDRhVdt00tzQCruhl6TJ5GaHkLe1P5GxgJm7zIFqFnFIz8zndbx8XKs3R7IDaJwweqNRWwFXKDrI0vNx3GtzW+5gf3ZvBT8Y89I1eI/CBaEY+HiDF5FVtMWhA/2E6mFeSeaQMHxFdnjfYJehRJsfehp/FN+Rp9hv+g/oDyEXugYfBHPNxfgtG6Y1GpblKuWqMlW6GbrvflAnKEkfY2fp9bb34Yvx/niWf1A=="}, {"__id__": "chunk-a74713bc57ad1e263e0101c07b0c42c4", "__created_at__": 1760492260, "content": "## The Genesis Block\n\nThe first block in the blockchain, known as the genesis block, was created in 2009 and serves as the common ancestor of all blocks. Every Bitcoin node has this block statically encoded so it cannot be altered, providing a secure foundation for the blockchain. The genesis block has a specific hash (000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f) that can be looked up in block explorers.\n\nThe genesis block contains a special message within its coinbase transaction: \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.\" This serves both as proof of the earliest possible creation date (referencing a newspaper headline) and as a commentary on the financial crisis occurring at Bitcoin's launch.\n\nWhen examining the genesis block using Bitcoin Core's command line, you can see its properties including height (0), version, merkle root, timestamp, and other technical details. This foundational block represents the starting point for Bitcoin's existence and the foundation for all future blocks.", "full_doc_id": "doc-a74713bc57ad1e263e0101c07b0c42c4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_3.md", "vector": "eJwNz4tz1GQCAHCofXlSymu33WU3m+x+Sb4vyaosb6FwvWN41mGKgAdI1RlEywxWkIctyAgHUyriiVJsu48m2eTbL19SCioc9MSptVOKvSsPKXRBvBPFjgfFAWE4RRbv9x/8tiH4+JrD150NSowc1T+HT+CO1BjSqmyCtUIPnG9NaD4v5sFP5JVGacsrpCi4L3ze5wZRzOEpYpncpD5uAfLA/MIqhND/YWg4XSwv8T2gl+kBsAcuDK8SY8oU+pV3tDRTectbj9xyP3+Sex4MGv+E+xBmx8gReI6sZ++Ep/FrtQhab6xtLJPXCy/5tvPVqa/VAajJU9WL0NFXKXv92Y4bd+09H/4ZrmVnau3BNXa9uLlpIxiZvBfPJMP0kngX7BAqgZ+4jAuua40Z+1/+1oRttRnZzI5w7shBfkoo1+ox/8dNEJd5r8OXrGdILzCtNHlO3hjqMnKVbGUjKYryKIyeGhtUF3ON+jr9HdsQNFJLGd/B5GnPl3od7IW3jQI4LcR454SPCvP4NjpHWGrXt8SA39cjZ8n5eClJWQtgH7eT8yJgvi6Vm9+BWfQcWiHfUXNj42G/mYszdg9uTs5yfjTfJXHrJnzRHI26zCHcQ1agS9GXZKb0sLgKVZp3XT0QxxbSE8ZKo9rcDV9ouBucG8wnNaBV7TV/kjd8uMY/n5xIBVyb6YADQ/u9ieRnwiC4gE5zN/m2Id9LeVY1iZqi5UvsJrsDETgreJH+yr8Ozoh9VjBwWM1PHDIt/6MkLH5Nas3VTmvqpqkXP20fN24JLL+TW5RaZlRxveSeMxn67AsFbxjbPKd1NvzDO+O4ErZK3RUdLboEDvyY2Aoj8hdCyViH3EUKp6KjcFEsSG5IhUEgdASytRLmmHGLr6PN0rfSu/CBVGJcqvdof9Pm4sVQVCbTHDFjf6VVhA4wPJysv2h/AvYDUdWMZjhMOaa/wR+jDjuKhJ2/uq55VsLDyeLYf8ypwRx/YcjPpYe3qZsalonPBW4ol1VWPwHrgl2pJwWIOU9hY6OQkfr4V8lmJ0J6mY/FEcFn7XZwnJ8n9gauwqeIHJTiNfhyYF9CAX7ePfQF6aLnnOFSKo2hLdOSmfif+DQYq39kV0n9nmppfbhfvUOfh2nhiLIyOVeIGwwTQ7us5dEtcDZsjwZwM1iUlHwV4t99WwzhvWOhNNvpflLcKX+muGkpbjOekbYpjtRvluo83MCV6Cr/M38LzbamqzPY+0IDHC7mIbc9VMzwncZgThabZvYpDbTCOlNwRu0lN0SivXmgU8iHDOjWjtNS6wpAqAP82zzIVhU0wTrYLlXp45hcWm59b/4CV4sYDQlT7R5fLn2OT+EdVjXd8f/ZA3NScTl7Va6jFeCs1d0y3sykliSDXF8qy5jO/wCGORmpQa1XK5kjqcrGrSBdcNvKR9lg6/smKhS876+I7QKjm8osF+pjljvfgr84HxRtxfeFyYEZZKmeRb9L/gOfRUA5AtbB9+xPxRqyQRgjqqjDHrB/MqLw5USZOS7UTcuaLLJE70a1sDR665Eu+grZFFoUn8NsNrP5EamTOC91Kf6aXWRNPHjAWIuJdN8Zx6dRMdsPsvX8ZKdyu3hQi1JFyDFqZA+5YjxqrMLbuRGBTY6mlcVJ8hH6x1gY5tICLofOxLWkixtJPkIL6Hb0Kdrl5JkeAQrsqEPCJfQavGdcDOvScfQqTgeHEl6CzgxbtSdQM45jEn7C1+mvgb8kVtB2srhexNMN6lrhRPhJ4lhYiU6TU66YwuBZZDyzkwwGlSLGuWJ59b2kBndYGf6aP6JGjAHanTxLWtWEel35M9ZJBZotzbFPCnaxu/kb8hba8kEuzI89RpYTFi6TI+Zvdpvz0H474AITrT3C/lSW9w/agDFBOWXeh+toLf6vNVIfQmXpHKHqVf/81FQyEc7nNDMih1rK979sDsNu+HGAA1RB5gkJNE9CdTg7tdo+pPmLfweM55o2"}, {"__id__": "chunk-54457b17685ff94228b08a427e9799b4", "__created_at__": 1760492446, "content": "## Linking Blocks in the Blockchain\n\nBitcoin full nodes validate every block after the genesis block and continuously update their local view of the blockchain as new blocks arrive. To establish links between blocks, nodes examine each incoming block's header looking for the \"previous block hash\" field, which must match the hash of the last known block to form a valid chain.\n\nFor example, if a node has 277,314 blocks in its local blockchain copy with the last block having a specific hash, any new valid block must contain that hash in its \"previousblockhash\" field. When this match is found, the node adds the new block to the end of its chain, extending it to a new height.\n\nThis linking mechanism creates an unbroken chain of cryptographic commitments, with each block referencing its predecessor. The interconnected nature of the blockchain ensures its integrity - any attempt to alter a block would invalidate all subsequent blocks by breaking this chain of references.", "full_doc_id": "doc-54457b17685ff94228b08a427e9799b4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_4.md", "vector": "eJwFwQlUFGUAAOCMUkk0Fjnck52d+ef/51g0kw5JS1EiS8uQLMHSLEHDtEfPAzIxHvbIIoOFWGB3Z2fn+P+Z2ehC80jUEsKXR5fpU9PUxAo00QKfWn2fyDn96JPr8YSsy1Z/6GXh12gNEc0T4gjlNkVGOW1Px9rlDmYiCGr9+gX3VHU/6vOF0U69zrDDv1EjaZUCeEiP4PlcpXMWVaYO8k4xYl4gKxsSuSL/fXy96DQZ8heoBg2MKX4iTkE53CVuo4G5AX4vzBbOoSbciOeI693HN2N2bKQLHWEU94HWdUyRkiX1ome4jsA93KP2PWgTCsQ5UoofH78aDXddZ/z8WvNdVOFK4MuNSboXz8Sn3BPCPWHed5eWAkoYj2N6vFg7KXcBqIP0F7Ls8kH2Le9wJQef9XUzZ2BidCmZgOeiSrJSv8QcpNNTO/kuoVeerBtglVwSySAr02fhFz0XyBZkt5rxIDOMvsGe1ey+z9ExdR/qJCZkxFJYoq0gALxuFMZHohFUGBXzQ7iXmooLwcP8l3Qt94VyFi6L/QoLrSFB4s9IOS4b243zJNEahb+mEqz9agrZSKLwoLpUWG4dDfDu5cp27nt5k5AgN0FZ/8G3HG3N/I4QKiE2T6vlV4TnjMKetNDvgbXUAhwX1ihxZea4cuN2apXusNp9zTgX7GQvooWcJo+P/FRfwP+Jv1SfijpwPrxJnssMCINglRqkN6KLTER9o207dIIe9RAzaJ5D7UQk2fFt6jCcTHXLA8of7JP8aDZDujO8KbNTqbBOC1W4rO2a/pK0bcsBbnHEobaiTHWEPYUqAvkAtP0BC8Uu9iXXGGMyahA4mAw+YKZqr4Xyg2XjwqA7KrWVKy/GNht16Ap6SEzwJVsPZOS0eWKvKavQLWoFPsbvtnqpyrS59NPgvLos/kjz4uiOZuq9XXw/EtW30//GTfBjSjF2Se/4CmJIG/KdVkfRa+gObyUo3pzr/tkxgx8EX4untAr9EtfD/WYfC/PJVviuUROtYKnw2FhTvEjd5NrArf6wWzHgv3QjWxNmuUXvzYAUzMXH6cnKsehmxLuvQj94gjrErTNHxvfKYZV8uA6l42+1I/6+2DLhWaEiBs0RCKoPidCR1JJtmc41KKQMBe3oCm2PIukXNkHfEZ0gNNMj1Un6jOCn7tMwoPj5kcIu/V5JjPGg2j9gf5g8iI+BI9RXgTFiiccjuqyQcyaayzS4Spjz3JskGfTUlOv3gUJpgfuxrBKcqEz0PqZ97LwZWQiXoGTkDf7ineiaSP4x6iLT0Hl3nmrzSNwSDnEEjXFv0zdaLM6L1KMDLRn8z+IiV6U+nR6INctfGOdxgXVv/CdqSE1iv0GXjXHMBPOZeHJodOTZ285Er6hlSi79Vv0TWjGw1Q9E6xzztTw2wfegZ7+OYSC1HJh8HlPDFIFzYLZ+cHQut4bps6aDIW13Wqv2PbdTP4uHy36tFtT71qNysT31HMo3C0nF+/1wNhDZMfFu84RjbnAhrWj/eS+3TApvwHcrpajbVyV5QxnmAMlDu9xX8B2+PmeabAtOpurUTmOvnm3dkKfYGoVESwrtFru8c6Q9yjy2GL0aGiZ3Sw18En6T3633kAIr1xCNwuhfuIA+KlVLV40W7SQyyWxQ+9ESrcNYzUNlMfgRPy/u45sMpO1gw2yftYiziUc9R0LfZkX8t7w3vJdCn+FGtozELA+B5KJ0S/lTmdb2lNLhHmK6jI9wVWipNit1nuOw1MesRdf4XEY1TyleLse1T0qhTnq2ZvYrR0mfmvaBDWfT9xuDwQXcdfamMQ/L0KE5GFZOFaOpHJnCvoracRL1uTvHtt14RbjJFLRWUZ1kvbIBZsAgk4ll/J25SCv0ndDeSUJMSnQabjBs3CH9edox6k5tvtEiV+uH4TWzyraHtbRqZYtwnPssvZaZhO8AeVqtXsz2ajvgeH8uU+pPpA6DIFWLr2rfkFL5f//uoyw="}, {"__id__": "chunk-0dbfd8f1bfe5152c6b5a8a5409b6d338", "__created_at__": 1760492451, "content": "## Merkle Trees\n\nEach Bitcoin block contains a summary of all its transactions using a merkle tree (binary hash tree), a data structure that efficiently summarizes and verifies large data sets. Merkle trees in Bitcoin use the double-SHA256 hash function and allow verification of whether a transaction is included in a block with only about log₂(N) calculations.\n\nMerkle trees are constructed bottom-up by first hashing each transaction, then recursively hashing pairs of elements until only one hash remains - the merkle root. This 32-byte root is stored in the block header. For example, with four transactions A, B, C, and D, the leaves of the tree would be their hashes (HA, HB, HC, HD). The parent nodes are created by concatenating and hashing pairs (HAB = SHA256(SHA256(HA || HB))). This continues until the single merkle root is calculated.\n\nIf there are an odd number of elements at any level, the last element is duplicated to create an even number. This duplication creates a design flaw in Bitcoin's implementation that can allow certain sequences of transactions to produce the same merkle root. Bitcoin Core defends against this vulnerability by detecting duplicate hashes at the end of a list and treating them as invalid.\n\n```\nHA = SHA256(SHA256(Transaction A))\nHAB = SHA256(SHA256(HA || HB))\n```\n\nFor a tree with 16 transactions, to prove a specific transaction is included, a node only needs to produce approximately log₂(N) hashes (4 hashes in this case) as an authentication path. This efficiency becomes more pronounced as the number of transactions increases - even for blocks with thousands of transactions, the proof remains small (10-12 hashes or 320-384 bytes).", "full_doc_id": "doc-0dbfd8f1bfe5152c6b5a8a5409b6d338", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_5.md", "vector": "eJwFwQtUFOUCAGA1BDOBzFXZZRdmdub/5/9nBhBL8xzfWvhCjdKTWiJG0b0ElXAyJMlHlytJPDy4iy7L7uzs/DP/PBZFzczMzJTQTpY9NYtMC2/CuR0tTU9ZfV+1dD3nRne37ZLYrjK+Ec8gk3wJR8qZKtUwhWHqf4M+rzZyt9EO8zioJmvpYelv7jjTqNlqNywRx9FU5enouMQyvRcH4hPgfKsaFPkqnTparN32q3kmJvBLmoRnw2Ixyf8hekOMB7/1XgWn6H/kIrxP88kb/MmRXbRRnLirO16ZE7B7UQx8Fq3R3jNz9XYQkiczQ7mT8E82D46AG83LVo3rgrRT+FTpQIaU7AxkLmS3RA7ZS7IepZcIz+vojFCWNaa5TB8ZPwG/MKZmBsh6WqeuBm65RV/GTEG3uFu2QFPZgWAn7td3Kzs90yigw0L/T9nM7MAJtIXs5RehArAVXGXHaycAFnY4B+DLNGbODvV416Dz0Xnoad9jZAHMMDdBLnccvB25EbuF5xlp1irpLVwnLhVGmC36MbJPmcQNd+9FJSRdWiRUwaX6DcxiW6/ymnizU8Ifo4s7zoNfrBK93H2FPiiVa8UoxZTZem8L3eL+wfhdkqIZUhtZplyT8pU6MklPj92lcf5njMmdD2QczbbjzdxePxLf350Wmxqea5zL/p9Van+JXzDUiBtMhi65GCTDofw06T7n55R1dKbGqS22CF+Vm9SK1lT8ukB9Z0hNeKk+CO54KvhfyT70o1NhnbYXxRuNtd6QclObC8aIURTS8xsu4bPMGWeF2GPXUmK7QJ7aK02Au7IWwk6gkUcJVjdKIzSP9yAOZn0BF1t9wnz8FbgLubg3g5vD/XStO2X8Bm9SJiJbuceMALwQXILypW/NamLp1cy06P1IaJuvF8gXEkRvYqazucJefWZCMh/nnjCWuL/H5TBAKtUO+54hqeq8rs7WbbgIMP6I8d3rp0ZdQf/evafjnN8Bh9QykXEVSGPVJDUni6ABdTEW6OVAggb9rajVd0KLmqvJS+z0nGvcEJsXD8XOqheZ/eIVlfJ9aKm+JtARKQxRqChrlMOqqC+XdKJ0OepZ80c9hDXjGh2US/113kwxxfdSYgT/qT4gn9591pdsHwUt/K+0ytgpXBIhmAg+1/qsn6RKNF1M6K+lJ3y/RYr5ubRFDohTzVnMwnhBTh06AFudXm2W1C48FOvCfr5HbqJ9XLNyCWfAVCZXKjVl/oOOTZ4r/jXaAnxSrlcvwqe868cW8dmxOdQV25DlRc+J26hufa6PYrbKb7XWkjdD1/h29DHYIjK+P7R1jqFs8E6HOfwx7rBwObMnPAd5jH5wxxpDHyBDunqMBYKDkDjT+pmfQgadlSFOaxjbrESNV3YVCvspZxXiU7ECocSopZ3sI6DS36D1CgPwoJgkv9tOuUG43bfeLmI3gmRlgn2fsoLM6sy28sXN1kgTGf3GcjZVuSg2iCtRBWqzGuJ3Z4wJD0VHuEVRRTni18VBXyEzCnrVI2aNOx7OyeyVRNarrTTT9eebsDEsHuefDXZ3ljP1lkeLaotp3BmbphgPym9TxwC4VOu/N1Mr8tULo+lfOwM0j89wzsFqfUospveHPzRvtpXa89FE47rmcaxYMn/aGi02WHu0MmMJ2JR4UXzc8YBPwEG6Wq0VRsLseLmcLT3L+8yPpHR5D75O9sMsmgDdjOMMd+aYZ7CujTa2o7fj+UpT2jvmK/Q1JobvhO8JV4VbhITAyhXhdvO/6h54PHYv+do7zPnL1cW3KIKTq0x2bvD9ZFXyDPGbyL/oOvoJ+ojq2R/7PLgiOEHph3NFQE/66sEM/kmnFmW7HyYrqcc6Ql3wa3ghcoimms32JruDrg4vU2xuFVNubSf78QvkKLxDXVk37TbzvMnCeovoXHCktY1WoXGwVlsOf7CqyFb23egK+QDfJ/+eO5yZh49qV9PG+2cbefYzRi/7D9ONmgg="}, {"__id__": "chunk-9a686d2ec11b7b44776965f36cf0ca36", "__created_at__": 1760492719, "content": "## Merkle Trees and Lightweight Clients\n\nMerkle trees are crucial for lightweight clients (nodes that don't download full blocks). These clients verify transaction inclusion by using merkle paths rather than downloading all transactions in a block. When a lightweight client is interested in specific transactions (like payments to its wallet addresses), it establishes a bloom filter on its peer connections to limit received transactions to only those of interest.\n\nWhen a peer finds a matching transaction, it sends a \"merkleblock\" message containing the block header and a merkle path connecting the transaction to the merkle root. The lightweight client uses this path to verify that the transaction is genuinely included in the block, and then uses the block header to link the block to the blockchain. This process provides proof that the transaction is recorded in the blockchain while requiring less than a kilobyte of data - over a thousand times less than a full block (approximately 2 MB).\n\nThis efficiency makes Bitcoin usable on devices with limited resources, such as mobile phones or IoT devices, without sacrificing security for the specific transactions relevant to the user.", "full_doc_id": "doc-9a686d2ec11b7b44776965f36cf0ca36", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_6.md", "vector": "eJwFwQ1wE1UCAODeiPZg5CyFJmmTprvZfbvvbTaVWqCiUKHAiYjcnUWQXw+EUYRaEARBWxwjUyx/DRRImzTd3by3+95uUplr6wgyiC3V45yi5W88oYAgUhChwMjPiOL3uVUSKvrP4NS+YCQ9Fq1RlpOlvvOsREmir+r/l5wkn9vlceaBVvC1mcl90bjb/Bm6wRilP55H3VnjlCb7FgF0hfNjLBLKxphbVFMunyAn7VbSADb4k4X1oFc0nScg1K7wZ/gaJQpc3E9gkfCCdTB0Fh4jj6u+2JsmpAelPYDHL6k9bKRcmWiEj5BlTpY5X+yUh8sf8DuicWIo/5LqWRc764Khv/OZ7AX1GViaFlEvd92I0mVsnb088Yu+IngKbfGF9ZN4Ip/BucId/G7yDB2ufehpCxnet1CZNDqvk57gr0s7pHL1gXWPzY+uZcyajedSmf5Vqgu2UhzbjL4NLJQ/EbPJZVCMK5xpwDCzqSG+rbfDKeRLpR38Zr6j7GMfwgNIkVfJb+SlJRfzpBYrryhUOZD/q32O1lv35XLxefcR+DhZj+ryFgc+tWfBf/gq2GqARCHdLnU7Y/Et/qBTTDxsJJmg3sAfweP2Hcz5w+y6qDmrlBrtVdSlV5kk+DMtTvSYXTrBV7nluD6RFu7JfdZZcFeTg4PMddQVGG9WF1D6Df1A0PPD4BrfAjfAMuF7cSLcpOTYY5O/M4AHJienlMCp4GVvqTwYuXjcALRPtGu4DJbld8lHyXnp/XQEG6zXzG1eK8zRNzVGwVT4spybHBvpk6tEt1OkZtEzzpbU+MA/cQWqCuzlk1DkP+fXx0KkBD1k7ndHFTcv8QvYVTgArQgWodVY4Spio1iOMAKs5I5yDxsEHbIHI1wAga5sZQf4Hc1XGhqTMxBK3MeZCNl38QnfTNQJGD2cetie4vqhaarQHbCkHPx07Am7VYuZP6YR3wrnBuY1xUlfFJNLfMga4j8storlRjoois+ry9hpbZy8HFWSMbAS9xSUsr5kuWL7TmszrJnGVlEIzQz0s42KF2fCU573lX3ai8JzKCsxKjCZluTehJWgA/XjbPFt9SF6IV1PFtJaOl1YY7cRFrzjEbnb4u9aqOUi12P9X73nqfVcZSths3jfFJofaANCLXA2GGF2OBH5HuTgS/R2bgkuFj/bVWt0qjp8k94wiokcLFSvw+/Ys8SLngwc8bahJVJPaLu1XVasUmVNwzH/MaXH7A5/bkyKHZK+L1gKL6iH6C9wtdQtmr5MYuMabo5wQxylPJ3sSrWzieKVkAovkXZ9itSPesEe72Q4kfbY0/TboE8qyfcoB+VHve9Gpw9rs2aLf0nFySxtUEsz68irCb4lVznHN/7kk9PV8v54eU7KmEQO49fhTfwH3gm9ycLEkkBIu5mzV24k+92fKlfFCJyufNNc5x+uSHyt08ttk77O3Zb2go9ZJbeZ7JYmpM5bQ0mbaXHnZB4VoQ7ZQq70IF9LwInkBVzmr01fDb6WNx8NITu5jNyQPde6i1/WnwNT0QbpjjmQjnDC/gt0rz/uPyoO8C8wR5NddKX9sbUEjzEyzH51k/1vkquuJlXNo+OpmBe4ySVuvAPAK3aRfhG3WDOcmJV22gK76F041FpAWlMnzQI0i+6Bt+hlrcK+L1fbDWCokfK/g05b22mt/CyfNk6ruvoZ0GlQ3ax2qvPoVCGLPpUYnt2RCjPdPiZvNNbFy9E4upBcjPenphGP9pT4rllVWwarxTCsRRmm5PwQR+IZPIyUCuvT88BSfKRumDPOyGBPiiu0VaQcLhILzWzLhepT3fo2z7JgcSLsEvCX6DBblb+br5RO2RGIYKa0kn5ncM1rwRz0WN5WVsgeNUP2HKHazNFH7vQLF52hFAaO6hP4OJ2CX0v9jWxhA4229DQ0I//FaBOpEwaA/5IvUAs+YR0XL+j56gP5D+m90BtSBPJ0iKCgxeZjDiM74J+kI6TO"}, {"__id__": "chunk-da1c9c29c86db431450e21c78be52110", "__created_at__": 1760492654, "content": "## Bitcoin's Test Blockchains: Testnet\n\nBesides the main Bitcoin blockchain (mainnet), several test blockchains exist for development purposes. Testnet is a fully featured live P2P network with wallets, mining, and all mainnet features, but its coins are intentionally worthless. This allows developers to test their software without risking real money or endangering the main network.\n\nThe current implementation is testnet3, the third iteration, restarted in February 2011. It's a substantial blockchain (over 30 GB in 2023) that takes time to sync. Testnet addresses are distinguished from mainnet addresses by different prefixes (testnet addresses begin with m, n, or tb1 instead of 1, 3, or bc1) to prevent accidental sending of real bitcoins to test addresses.\n\nTo use testnet with Bitcoin Core, start the software with the `-testnet` flag:\n\n```\n$ bitcoind -testnet\n$ bitcoin-cli -testnet getblockchaininfo\n```\n\nTestnet supports all mainnet features, including segregated witness and taproot, making it useful for comprehensive testing. However, testnet has a fundamental problem: since its proof-of-work security depends on economic incentives that don't exist in a valueless test environment, disruptive miners can create blocks without including user transactions, sometimes making testnet temporarily unusable.", "full_doc_id": "doc-da1c9c29c86db431450e21c78be52110", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_7.md", "vector": "eJwN0Y9TVVUCwHHSKX8r6yNDeD/ur3PuOffepxS4upmgYhKwkA7jZpoxppmIGrRqlPmrnLXaEjCSB/t+3Pve/XHOufdBpdWU6JRZlGujyLK1bCm7WqCjtjO4MY5T5F/w/cx8T0ifzd77bj0tz/uvWwCmIdxezmynQmO5mXTI9rEAv1bs5lnrK/qYdA6pJs3a1pCQzOSH7XFiBXzAXaTHAkfYe85y5VXpmHlcvxetwpWsxd2o1KIsbYP2g9rinYOLjXfkN1QhrICJ/FDkhHTG1dUx2ljmYhetJg84z6itsAcW4Ivc/fJSMQNc4Iut0+ys2YwH1Kk+IC5CNzVoIG8lXU+c2dmIJWRpJcpy8/F+vhmvpzelo6FLzjhhCZkR3wn7yW3ha/H/crWXYTCnEKzV5yob1EF9GGWH5wrL9HzJvXc3eAm/7v6ivymui06PnISDyR8TRKmeNcu84ewwY6lz4rZENGjCGrg7XTih1h5JVYq7YAVU4AShi7sQzwTrrCNqV/gJMPHAXpqfu5weT69HPynn1QlgsddIf7QLlJZ4KEJzPpT60NfGDKmJrcBlcndiWdTEbWxrfNB9nW/1T/L225Hk295S5QNrUPuKmXY5ybZ3tlwkl8EjtFTeBaOBX7QTwT10mjie+9La3trjNnENiffRADuXnJF6Sd5grnGrzEpzurVLz/GmoOd4lbsZmM9dBWYzDHwVWIsHyORgl9Fs5Rrfu5yxXe4xu4L9XDPK4maJnrDJP186ZdbKaZYTvk232t/aJbQoJVlPEidZEChV+uBRf771KGoygDcoZ9KH9VGLpyX+XjDEv2/7lMmN/aiD90lNsNoobmtA37TVtlcmg+hv4fN48M7x1VZ9XDAOyDWHvqUPSZdJfTzP7cLDKE/7WOmk7xnFdqE5bHWJT0t/95XJv3q3UilYivpl0XnHKwg2S/V4GUekUyhEPvbH3Y0CIRW0xvKEyXApbWy5FM3JPS6M3lUcK5e/A5Hsa+gu/yRtk1VnPB4sRWknDf6den5yln8eHAt5+Xrq6Y69gYup22gtMMgq8UV/BRLJZjFkjtHX4EGzBGt0b/APXBEpVNcZD6bWa5x1050dB6Qz9oSQ4dZbWcqZt0/Lc6Q/3lH8Hrxq8MqFhGP22LrYKB2znzPvB92HNCTF9oE+lsc9LqX1adxU+18tGSkftyS0RclU280rNMMrPfho+NnwbtLpuL6V2YXSGmUV/5T8M+vGubFNWJB28NlwM10GkzAclMVEbKbUhVFaM2tRdarXOgJ24e1KT+wDvDU3w6Z0I/tCGIWavIRGHMW6BebLdUKT9Cxd4FVbHbAXD/BHMVIf0jfTAGwhP+hF6Uon4La5ZfIt4xO0WO3li4SX2efu2OyXbUdo4k+zsF2Vy6x/srFajv4n0DBzDzvf/BfyvfCK/QKa15qG94gLE0EpDi7ggJeMNaE68570l8oKttRaFS9WX7S7WW37NrufXZYQPiuNhwfQRMaxf3Cfo26wX55CPqJX9FqryH8KNATOmuPYn+N1Vh+OCz8dhonF5ncO9veROuvDw/viNWxifDmYamaS17yDxHTy9EvSJLYp1ajMUafon9or2kLgd/qAXUNKZMHpVDABXL57y7yROiR9FPVxNwId3Hg6InSjmDMuLHtbyJtupzTPLreORA6Cb9Qs63yqFRxDq0UJfxpeI5elimZ/pj4GX7O2hdqd4zhmMbfAu897F4TogeR1PMc8GRxJhK1W9gxqi54jTmQqdZy58l+1iP4GuWq8AJ9XFpDr+IzxP+GwGbQ3c6djVaZfr3JkcEVeJN4dPeM0wiJ6pxYM4kJrG1cdZGKZV2zvkYZgFb1PLU9idNXeSXudlcoG1GY8QgbNa+QkKUBz6Q04zZjuvGX52CRcmxwPLTAU2ELWkUtug9ZCg2YJHImMGjtwCI3SBXgKWyiuaBsmM8HCKJT3aR3if8BRoINFcUgz2Ah3jfwGgHKVmg=="}, {"__id__": "chunk-f16848ddb8dc5f8ad1b56b3ab5a6fdc7", "__created_at__": 1760492659, "content": "## Bitcoin's Test Blockchains: Signet\n\nSignet addresses testnet's usability problems by using a \"proof of authority\" model where each block must contain proof (like a signature) that its creation was authorized by a trusted party. Unlike Bitcoin's permissionless mining, signet mining is fully permissioned - only those with permission can create blocks.\n\nThis design choice would be unacceptable for Bitcoin's mainnet but is reasonable for testing where coins have no value. Signet is designed to make creating custom test networks easy - if you disagree with how someone is running their signet, you can create your own.\n\nBitcoin Core supports a default signet (approximately 1 GB in size as of writing) that implements all mainnet features and is used for testing proposed upgrades through the Bitcoin Inquisition project. Custom signets require knowing the \"challenge script\" that determines block authorization and possibly connecting to a seed node:\n\n```\nbitcoind -signet -signetchallenge=0123...cdef -signetseednode=example.com:1234\n```\n\nThe Bitcoin development community generally recommends public testing of mining software on testnet3 and all other public Bitcoin software testing on the default signet.", "full_doc_id": "doc-f16848ddb8dc5f8ad1b56b3ab5a6fdc7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_8.md", "vector": "eJwFwQtQFGUAAOAcy0qcQARZ4G5vb+/f3f/f24McH6ViYiUVakyRksqISj4Se/gCDSWLSQSM0EAOvOP2vf+/u+QjkXJsdPKRZiSaVormo5ocK8KhoMSy70sEUzM37M1ySjKXuxO5V4JJNO+eMK5Kx7hdZGPsHq4MzNQfDL7K7fE84VLuZG29dFfL4bNkj3HRNxLFbEBdAQ/hBc5DwrfCEePL8E20Q1ziHMF/C/HgbakHdUpV7nhkkFOwVCLBMukO/TS1fvugXSHmwq/wqWB+YKFJjZwgpsJCMEPMCvyHaAa2jm9Kaf0Jf22koVqxz9LgbYiDOx943t7kzjWzH20WPzaGeAaFRvcy3yZ0w0a8PJBbh2xgTm+e1nQCLnCyIvPAOrbULYk9Zo5i3OZBJiuUpGwBPcxK+WIMeFYonvAchGxDMfls8wttNVVpVBsLRBjqs/rNMdF8YzezmO+PjYHF4iF3bXqdPtdsCrzh/yzwsPdBRo4grqfVpxp8LKMINFiDDsN77GNOPlSlv9AlpsyuUYfgJXAkOMMcpQu588EafSK7yT0M82Gxt1h5WZzUdpMptHO49f6L7gZ9RWx+2xHkCYtiG1lrmep3+EnjRTKUa8W9/N2dO5SOYK3vZ7ed7fdON7tG2WSAxWlXA13OLfybOpwZas5yD6nt5ryWC+YQd5nwQ3g425l+mFoVcLky773aS/AYHiYv1c61tMjvOfmRDGkZzo73cRnK42mT6fu95wLzPsxTT/KjbVcsJ2d1r/Os5ZUfpesiwxIWwS9RK/zeO4DHgyeU004C/NH8V/7HlsxorYp6km7i1bCioVf0jPhCXyaE8J7kOk+9WtaSGhmNyoOJaHpoMyjAG9PLjQqYq48lF3gJ57HQbkDFaGgI86+5bc0lyqT0d5hUYUP6H/o14Q/XE4tDj4hTwTP4tJvIBOEEJEUouFq8j0yOxpxTDx+0ashM/UNUx8XwikC8ujXhEvtn1CNsgVlKtUlJv8FRYraRYnzPr+JHeo7zMxrO0WXePPZPsEaYGC1qG67v9fQLd/jZJFvQ9BLYK3/TXBnt5d7iP9fWgtukNHDSk2X+gMapM5kHpGlkpiunLlVfqM/xx9lvaax4NrVeWAg363OsSLJMV8Lf6YT669YVmYJT6YPaUKGDed237oO9gWftNO6aIIJdidNwt7wyfDhuq688+LewhhBnwL7E+DJGSckWTRS2iwr53oQ7uO1igfMJGNsMgjXwhH84aiS3kMaXchS3ln0MVEs9zmU9yOdoDn4vbT6YJcTYTjiG7o91kzB+wb8IVMEq3K4yuJbp4gNghNFmY5xNbgUKUBF4EwHpeJpgrE/vIvWR+LZSXEfOORNgys5POa80XRnHdpsDZCK/OVKV2rDL55zWb/sXmZBQKJyssNX8bnw47cyuDnorFuD+xhahnP+dOcPeoL4VDUdgZsB2A370ihBH4u1lRhjd1gV71QeMkWfliJ+gTTAJXeBSsY1rqEx0FaajbVqVsUljSR+bkzwAmsIphAZ9O+cKeUClluKnHQ7/Gt6hcNZ+/Y3GSfgY7gQlVou9DgvOLAKTQlylvbs5Kk7h48Bx5bq8l/Pw75vvGoVwqvqVON/ijUqy0LdGvkFZ+lPKr8wvzBT9Oc8+/pr9aijinrUXu3PgHq1TPsIc4pYgyWiMP+otROX+/dyW0FLuJbk982iwqFW2DnIIz0YHYjfssN1rfwY2Gn/Jy9F2fEcRwwK+zz7AF0W3hjN9idZL+j7eCmUqUXuYUgH60ErcBAsiNN+ta/q9lG0Nl/U4fopZKM7jq7kkahH5GNHOeTGoH4Bj5Rw9CXIIulFrGM7x19j7gmH6Ohxn3ZGjRi5cCVLNAtJh1JnPGxOExWoHv81/0hiNB0g/GuEmoLOBIu2uk0aqnCzxRUI37ffOJntwtXR0xBhSjOpIbvNJ9QqpQJP18zAzY5zfhoXCVT5f68SDpCS51/wfznCakw=="}, {"__id__": "chunk-3e65ba80157ea7cd45f30178b7328b66", "__created_at__": 1760492685, "content": "## Bitcoin's Test Blockchains: Regtest\n\nRegtest (Regression Testing) allows developers to create a local blockchain for testing purposes. Unlike the public testnet and signet networks, regtest blockchains are meant to be closed systems for local testing, either with multiple nodes or just a single node.\n\nTo start Bitcoin Core in regtest mode:\n\n```\n$ bitcoind -regtest\n$ bitcoin-cli -regtest getblockchaininfo\n```\n\nRegtest starts with zero blocks, allowing you to create a blockchain from scratch. You can create a wallet, generate addresses, and mine blocks instantly:\n\n```\n$ bitcoin-cli -regtest createwallet \"\"\n$ bitcoin-cli -regtest getnewaddress\nbcrt1qwvfhw8pf79kw6tvpmtxyxwcfnd2t4e8v6qfv4a\n$ bitcoin-cli -regtest generatetoaddress 500 bcrt1qwvfhw8pf79kw6tvpmtxyxwcfnd2t4e8v6qfv4a\n```\n\nMining blocks takes only seconds in regtest mode, making development and testing much faster. After mining blocks, you can immediately see your balance (though, as on mainnet, coinbase rewards require 100 blocks of confirmation before spending):\n\n```\n$ bitcoin-cli -regtest getbalance\n12462.50000000\n```", "full_doc_id": "doc-3e65ba80157ea7cd45f30178b7328b66", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch11-blockchain/mastering-bitcoin-3rd-edition_chapter-11-blockchain_9.md", "vector": "eJwN1PlTVHUAAPDQjAg0EBFYdpfvu77v+w7QnNDwKkaFKE0Mi0qtUTQNRWzUVkVKvA3NuFeW3X37zu97bxdLEtEO7XLQpiDLIrOsSJKiAXQ8RszqX/j88HmBPZj55btP289OHAr/KaTxK8DucI6VnHlFKjJbcKvWoeVo+egoswlHtXyrDiux3Agg4ay6ctXDlaI4q4weRRzBCn5AvIJGSveGTsDX+SPYg5PEi9SQuITfK/xuFzhqtfVsCf+t2Etlh75kY4n48H7xDbQE93HTuFbtOXAZjWSm0Y+I94KlJA9uM2t9ZTVTcaH6FdfNd6jRTBXvEm/Cseaj5qAybsIB7lW9kFzH/2H2w3xiCdiMHWlL1Y3yzLgAnqP9zrnNbX6Pf21dpf1pc7S5z/uEXCweybh7yOOaw4lgA/xGHgGKwHSxxnLWS7AOTGnYS0+1F1le4X0x2pwidSadVJY7txGfaonMVXpeZDHdWj+Mn0HJjhONU5iqpnuY6XFrA168RRiTWcxG4ZxwHtpqxIaX8gvFLfxWOsZsxeWYil/MFoPSxuXMbaFA72bPWU9xMagN/KIH+Ql4+nZXeAe3WV55eMD8GtdbcUKCUiSmmhxzWt0F1muxavZuwegYfQFUpF0VyxiXBSQY/Kwuwd9vTXkTUI/DBovQBG0C2ylvwNXUBX2eo1I9anei6/UC+p6O9Z6D52uDzsOuavGuVgEb8DSjrOFns2dcFvcXUUspTL/0Gjvgfxlm0hXsW6oPBtQK/hS+YZaEc61LaoYeVkg5C7Zx+XCf9wJexTQGJuMRcJN6HLdbW+UEbRBWBs9gB9ciO5yb5QfhX2y84yRIQdDvAO3kQSKbM8XN4uwQK3cRM5o8zOpArlUOFunL6A/s50kKFYlTBTLs9FXiVH3G/869zivqbORumauPEuLENqLMWBPpcUHqftjnLaUz6FI87PwCT2z+SLtp/RCoomNgUvgffYvzqir496cXwzPMXjpQE+IfR17hc+00nkF/A238KGhIXic9qQjMO+wt7rgvqeV00yjiGjfE5pgR9pYc5Yo3eskUtYvTqD7tV86wLBhFHvfpwgk1T6vnPzbv2GeUYfJvdY4jggOhy4hJmwUmsYTksD8kVqR0Cf1BDLrwUTj+0JA01zfAHnP6iAwkwqpwneud9AjREsyWH5ayg2uADFYIx9CH+LZ+1bjOzMz8l0/Tl+OHGouD6cx5Tmrw8hPD2/lJdJm4WoDKJDbXmu7spZOYlfzC0TrZKZ61z+lvCYzxQPNZyoM0ts0Z5D3+IZxtyeF2Yjw9H0y25vtsqYYuRIlMu7pA5c1+/Y0a2TXPcZuazbtAFn4kvVZZk+6JzDI4szxyGNa4jnHjBR1Xpe+QC+xVsEtNa9ZHd1sj1RuBO+Yu7BUXgx3O/SkL8DiwStmYflEfRtGJqexG5j0mxZ3i/pEba6pqPJxrXI4MoHVGgRFNLOTjjQPWnkMntUvqRecn9F4mkTyOxkTKjTy0koxF1VyJfcpXqU3D/n0jfVWUH27HU+lf9HL0KwPdFyU9aVBP90/GtLlJO9j8m7WzMaY+Sx6026314Qr8RBKCC+xqEIUGEuYGbjYV8k3Ja6QxZknQy8jJCWKhmkhQeInSLbsp0VqPXiLPK/9oBaCU7TWfEj8Op4UOWwP/3yNQ+Q2NKIUTzbeNu+Qm0EZGIMyM4yYbWzNzxTN0D+6A80NVfCJ1j33NajSvj2s2j+geNpB4A1uhRWqPvQEOp0R731NWETkJfxC7hJrQTXOP8RiYD3XjZbqv5tSY132Fyn1qs96j9o0FMAN+hwpSL0uV+EWUb3pR3gEHv1tapgO2D1SHO2R309cHBnGu8Jx7PzVLizNSzW6YB+eYOSHOr1jZppskdYorc1hGtLHc2ol8+gVGSi4AtVa96sPj+U6zzuGQFXxNjRELQ6XmdUa3WxWCQkn3o8/oImFPxk+ym+lP9ZKvSCXqJPwK1Rn6D9v2lyM="}, {"__id__": "chunk-28665a164be50c53d744df95fb75e4c2", "__created_at__": 1760492685, "content": "# Mining and Consensus in Bitcoin\n\n## The Purpose of Mining\n\nMining is the mechanism that underpins Bitcoin's decentralized clearinghouse, enabling transaction validation and consensus without central authority. While miners are incentivized by rewards of new bitcoins, mining's primary purpose is securing the Bitcoin system and enabling network-wide consensus in a decentralized manner.\n\nMiners record new transactions on the global blockchain, with a new block being mined approximately every 10 minutes. Transactions included in a block and added to the blockchain are considered confirmed. This confirmation process creates a topological order of transactions in the blockchain, ensuring that no two valid transactions can spend the same output, thus eliminating double-spending.\n\nMiners receive two types of rewards: new bitcoins created with each block (the subsidy) and transaction fees from all transactions included in the block. To earn these rewards, miners compete to solve a cryptographic hash algorithm challenge. The reward decreases approximately every four years, halving from 50 bitcoins initially to 6.25 bitcoins after May 2020. After approximately 2140, no new bitcoins will be created, and miners will be incentivized solely by transaction fees.", "full_doc_id": "doc-28665a164be50c53d744df95fb75e4c2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_1.md", "vector": "eJwNzgtXFNcBAOAqtfERUMENC+yy8773zsxCjhZb1BMiiolGl4oljaAxBitssSfpAWOCQEOJRlF8RVxQlp2ZnTtz57GxabUKlNAqeqqo0Bqjx2htTY4eTTVaNcQ8SPv9gm8IuTnSB/fUvtz1VpOAWDn+1/SP7cpgh/gKPsOLyvzEsfaw8iXykmfIaOw8WSuWe0J8vX3Yexc00KlWn7+ZP2cn297g6ugvA59aw/zroE1vt4/KC9grwamxdPklqxyIeAv7utQsjQX/wKXcs953E38PlqDXUp8Vj6PF+9/QIJwF1oON7PMTwj4WztTf5TZ3jIlO0AfBNRC2d0oeT7Vwzz9ip8RR/HruKvZ9cyLcCPMTIcGbmcpHyBFwyGghk5kspojiwatOA2zic8AlW1QPapPwan4l0x5ckP0Ffw2O4zKM3+j9XI/RLweM1fo20GbWYI+YbSxlfiEMy+PsHvwauMm6XCR1QGX5Ke3jEgLOd65iVtwRSAq2UU24rGOjVtP1tv09YuStKM9Y6nYKz7gD1lVxknALKghbWquN67ldYgOV5O/2XeIK8d20kPu5nCmGM0xdhPMMX3umg/gwXe92q3OsIvuqnEvf8lxz7xvavjyTndrFKKg11oKE/18LpcHoMjtE5hrL8dOCh3BSEZvmeWhOs4ZxsZhlX3SW64MmjpVpW9y3uOXKc9RUYRu/RUrL6I9nBJLERnJHmUnmMGn+kHPNTEjzpqED+eCLDlNEagXTyw9S/ie2wXzzoLw5cTCW5lYaL8dOg2VqKnWWXyQnizIeby4SVL9OFlPHtV24jWSTZeQG3Kn3mf3gnq8E/svp1QvBwswUsTTnJjrL5+FKDnNVzBrpJxk/5Ro7H+rFJNfcrkt0i/Kmr941hFaYDN+Tfmv/Otar2P7/Wrv43ZBzp1NnyIS9IaWaQ8yolf7+WW0pKoQZviGYjj4hQzhsb+68MaXF6TBLQQ0sN6cb19VY1lqqUZhEzkNkRcgsWMosATeZfD2c3gdv2JQ2LXYh44S5xlwPS+EpXO8WKV5sgZ9rzTG/9462YmJNa7k6YtZ6UzqGcDszy7jNJvubAwQw9ufovu8rozaRohyNp9BNwh7jkmVLF0lxYLxcYs/CdaDM6JGTOovpMWQ1eMjL/tMaxc2AP2Yn7jniCzl/gxSaDZ+3KqyyjvbOrXyZciq4STplr4q+Yn4tdssn4QM8x/gPfASLPZ/xY+j8oJeMF0b5+8ALc/nrQjkZFHZvWbhvNpeaEYYrpbWOf/sMsM64q9QyJ5gfGW2oD66PVKnL9R4y1ywU99EUwd4RZTLwIQ/qUV41oTVgr4MzoI+n5UcomXzkuyUeNOdpde7PqALcbT2hTke34RLpSytfkK1+twRsNdbFetUu++yBLGzpI11fBxvMHWjzAa/Qu/d31KjHMpvhn6gqoR8eihaAxZF3gNdeQR0AljYl8W9R1o2sARJC3erbhr+LxzmM3zcWCOJDIQ/1u0utK8YyxKE/wxfjjXGaC6sX2GnWB4FviW5z8AVjE9jADLDztbnOZ/YQ+6l5mduLfdHzhJAKT7IVcArsBYmQclnN43eQp6NrxCZcsz8plqC/p6Nsnl5L9vIz9LHiycgo3W790yg0mrKHjXTmPQp3jXfntVRKFW5L8CVntnLGPiaMRldSFc5J4S9cgasLPWAmvTv7h0DKWSFW6xtlKJ2AdduTQLU1HdaTBlJr7DfqIsNWZ/wKt1Ov1Dd4iDPWqUIcx/vroi+ahWo1UwQe42Ok1/gDdwXMtxZpO5NPsiWBLOdx1xoyOdFJPzAecwuRLznCfdQVET3Okvjvn7S5cyRoXhB28d/iVqWRLsdz7MvgE2OHPx9zu4diD+B3wjd7zkWBddudQEYiHxvHMw/xTz6Vok82L9KVej/U8CN43V1AepwB9CvrTbYSHyZvKE9Jp9EfzRvcD5xJU6pUJcsHfdRcVBDclPkhvKOtRE2xKrKhs8zmAv8DFl+RrA=="}, {"__id__": "chunk-e6f8918b66bb81fc160165632eb71879", "__created_at__": 1760492970, "content": "## Blockchain Assembly and Consensus\n\nThe final part of Bitcoin's consensus mechanism is the assembly of blocks into chains and the selection of the chain with the most proof of work. Each node independently tries to add new blocks to its existing blockchain by linking to the parent block referenced in the block's header.\n\nMost often, a new block extends the current best chain. Sometimes, however, a block might not extend the best chain, creating a temporary fork. Nodes handle this by attaching the new block to a secondary chain and comparing the work between chains. If the secondary chain now has more cumulative work, the node reorganizes its view to follow this new best chain.\n\nBy selecting the chain with the greatest cumulative work, all nodes eventually achieve consensus. This method resolves temporary discrepancies as more work is added to one of the chains. Most forks are resolved within one block, though occasionally they might extend to two blocks if found almost simultaneously.\n\nBitcoin's 10-minute block interval represents a design compromise between fast confirmation times and the probability of forks. A faster block time would make transactions appear to confirm more quickly but lead to more frequent blockchain forks, while a slower block time would decrease forks but make settlement seem slower.", "full_doc_id": "doc-e6f8918b66bb81fc160165632eb71879", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_10.md", "vector": "eJwN1IlXFGUAAHAskgpCXAwX9pyd+Wa+b2ZWEsnbDpTN1Mg8KnyGaYiJIWoHUYJJHqghqwmI7rKzM9/MfHOseYSpz06ll5YP6WlRWliknWqRZqZp/f6IXwb/3JDxu6bZGbmLEzbYC1/WzjjXK2OEIk8YFKEzOGR8o3/PrEfFpBf/pOWRWn4rmiNZ6gHNTfWBSt2WOSmT1BlQPCTdA0NWJztZvBhdmfgXLfa9k3vcO1i8Y4c7mgR0KQ4fFE8L77JPivPQnfZ5HtNEOsk3CA5HvXZCvM63eGb7+8uLuXzuS7wBlPgS+t04GbmcndpLiJVzmGc4xloRCcZ25U711ihFgTImnEhFK2gaXDYC2hJ1l3Y9PkHppg7TyLzmesIfos0da+R89bD0KYXUnCE0tql6pvbuJfZDapNnN1PBDjYL49e5yUa7PAUNdV8OHKALggPJDjXM9WfKgQPvk/9xlrZ57aY3h5FK8gG8NHgjm6KW+aPOgfghZp1ZxTt4l/iA1mn/wlwgOYmI0MKFhU8QZ9yidamQ9SC3ZydvYcRNiaRtEo2F8Bi8mZNBz0Jp5ix/h+2MPAoWmBvj84wc45q4VusBN02b2Mok4wx8T9kunsKXuAVaHfhdeA3uJaciGUqJkgWHxffTyaxB7TFP4GrlWaEfWaIX6H+qM6n9aouV631Xud3h8tbDw/AN9mr8ZzaX/xwPIxuMT/Emb5Yx3tfBP5G5aGVRpjj4JCxUVjMSmgn6KRY9l1zgk8lpvdEq0jZEDsplWmnmsXg/Lhs06HV0FVNi9FmXUYjchycaeeq0OBGT1CtyM3V/gGWP+M5nL0TPu3cjt1DLbYrfIG+BEVw6XMofY5ubGM2Zs8XvcUL579Zr2gx1W+Jn9kX0lNiIekhdJDvrrtj31hfwbfQZ5vkUsyNrIS5zpqFB6j77lB6Cr4GdTS5hs2+M1g3mGw2sKV0ypmg9lAekEEdgDrneWkxPAhMpriGCM9UCfq7UDcc7R+oH2Ff4kKZRT0vLqYOkSs9CJve3UmfdVLq4LnaCv0Lyb/lAGede54LqYyQltohe1TI6djA2q/mIZ+iWEn4ls8I3AkX1skRYryHD5GK41FxnHkWr8YPwgthPe4e8QaUrIVHGw6P5ZK87lbdxiXKezoXH/WVUaLvX7ICr4EqqHofMo2teTx7HiPjz4I9wPfHHvlMLUHNQgD77nHmJvQgL0Hi+1jNdnGo95j4J8+FMtrRhEawxpvPPgZHsx/QMpQUMCuaR9wY8wkDpeLyHPUb/AAeis9zjkVc9j+oDyQmtmv2TazRWe8tTC/kBPGFD7hr9a2MUeRi0wXxwj/AH+jo6lvQxIDKfqrSX4+5myi4HHRtvQTthsVGK2o3b7dk516Re3yLzS+sHdZL3CpHMzehDdTfT67jZthf2D3Sow8kh7sfGEcJ6WMMI3K9gGjxvfpJdAE/J++xl7Hw9fUuf+S2oknYpTvVh5grzNvgNVAoPeEv5j6wUY2ibHCgAFApYeY5qgOM7vd3a0oAsO/RG5ayS6suDZ2IzotXGIXMM6FG+jSxT+jyjlHZtG2onSYk26xXdraZTM9BV05FjiWv1casOqXvclDCKKmGn4yF8mX8QrJGO61+R2ZHh5vLwaaWrdUXYgbMTN7ZO55/XW4QvrMb4U8YcmGSlUpvNAKoOuuz0ja3IBwTLCTYHu7hJejB4W7AEvM+9wFTrR1jGOEFEeaT+qnw1Pjae7h2gDdEgG7ID9tMggP/AvbhAiviPbvehuf/PMzz+K10HjpKPY67sDHQukGy1mm3arTaPC4k3dg6lUGu0DH0sShCW2eqbiL5S10r3Bu4HY/Vy/0WQ1Bg1JiAT78fzyGizXf1dmOwrJGnmDW0/7jT+enO0vi77LbZCLjYzLRVU4buE8mh9fU0iTb/TVP1TzVJuKa4gjPS6kCQSvck1WuvUJhJj2x5+ZPiiEApWggX02fA5rldtjC+LVFi12n/Cbpgo"}, {"__id__": "chunk-fcc7ebe684eb45245ece87a070b5e6f4", "__created_at__": 1760492970, "content": "## Mining Competition and Pools\n\nBitcoin mining has become extremely competitive, with hashing power increasing exponentially every year. The industry has evolved from CPU mining to GPU mining, then to FPGA mining, and eventually to ASIC mining with specialized chips. This evolution has dramatically increased the network's computational power.\n\nAs mining difficulty increased, individual miners (solo miners) found it increasingly challenging to discover blocks frequently enough to earn consistent rewards. This led to the development of mining pools, where miners collaborate to find blocks and share rewards proportionally to their contributed work.\n\nMining pools coordinate thousands of miners through specialized protocols. The miners configure their equipment to connect to a pool server, and their hardware remains connected while mining. When the pool successfully mines a block, the reward is paid to a pool Bitcoin address and then distributed to miners based on their contribution.\n\nTo measure individual contributions fairly, pools use the proof-of-work algorithm with a lower difficulty setting (higher target). Miners earn \"shares\" when they find hash values below the pool target, even if these values aren't low enough to create a valid block. These shares prove the miner's work contribution, and when someone in the pool finds a block that meets the Bitcoin network target, the reward is distributed proportionally based on shares.\n\nThere are two main types of mining pools:\n1. Managed pools run by pool operators who charge a percentage fee\n2. Peer-to-peer mining pools (P2Pool) that operate without central operators using a \"share chain\"", "full_doc_id": "doc-fcc7ebe684eb45245ece87a070b5e6f4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_11.md", "vector": "eJwN04tXVGUCAPAEQk1GQIwZx3ne+e693/fNDEqpaSkuZoLYyUfaU8o8q5jHpFTOnszF2tRa03g4zhmGmcvMvfe733cfYFj4wkehadjJbV059FAJ7UVHglrXYy1b7e9/+D3pJlNOtrfvf3xqXvy4uMP5ELut+vWa8PqgTTuS0gJ2aw9ZlT6PoLndeDQt6GNCA76r2gWz2G8DRc639RuBQaXcnKqtC2/Mf80RjXwC3xVeVHeqG0I76NfhLa9K+Jj2C5wqL/DbkUNc6bhXO41ewh/rOFwXHKZrxX44kMr0L4KKElJ7uIF0Ci2EfyKFsThp0BazKbgP/R53Ch8k70PLYndarakGeeeUdfwmsTfYgWe2ZnMKOMIbpiFcig/SOTAjWeWuhOuNC3yNYzPk6Gnvm8ZY9UqkR/guqKTOgcv4gYCpdEg2lOO5p+iE+ljj9147W77vNjeHxD35/r7gKXNGOgOCWA2gHi89IxeAodZH9QfMOean8F88hzfww1JF3YB2U95K8/BasRJa7BR7hLext8gMtAqeQxvx/wyqfWEkwXNBT2Kpp0054dakLPx0azQ0AidMPqBFhJNavzSsz2g+yM+znDLHJpNA0Xz1b0KOddqTl+o2dgmjxW2h0WoIn0rWgRK01T2XHTceac6JD7V0kTwho6m84Z96p7F4/1y8RL9mVXGb2H2oErToJlxJ0r6roMNzMmS3r9kzjr8sfG4cswFzqbAgOUv7TM0Rhvhe+jBOir+IlZwfNENBaL2boptKYehg6y62Rq/Wa82I4yCZ37KBbxPuh1UpWZ3NHWvZRiXXUrrQqDDeZ9NZGXoY1pAPxSL+KbTdfA12wavNZfidsN07HR5mV/yj4ATcBYvwM+5/O95ozt/7I+lil2LLvfn8e9ZPoAAeF38GGVaBupi4vbOs0cKXaIQckpkZdn0W6xac8Fu6sfW3plJUC5o8buGokEP8RoeZyx6TrrM75TtwGb/esOgiNgsc2P06mMEUfrx6b3o2XtF8O+hkjenbifuDXXqjWpXK46slPjAWIfFDNdq6MmdlbJejjGBtkmOnejFlSxZy64wSNR9g9QnYqQPxVste31gR6pPEJJpE0lZpOk/5FfRy8/S79UV8vXLJNxWmWbty3TdENgVH/DNdDdp/Hb8Kp73lsiYe4r9Fhb4FrhHzuDjNv1moYIe0HxqPAeofVF4O9YQ8dECdpuSHh8M/gXOJr/SjKBdd8Zbgkngq+KP2CugJEPgXEK1/A37DlgW+i7ynIOX/E8BCmKmV2A9hneUySe2En9AtwV7UzlWwj9ly+r2WFR7L5ZIXpabUWndmUHC/IwyxItrJKoNPhEK+M8GLqE/ZTWrxeS0rMd5qmzCT9NNTidlCWPgrHmeVezAbZ7Q4x7ij9Kx9sraVXAusMsNkJDTbUHGly2Tb6+r8xVK5ymAWnChkAiGyn88IPAi36fN8Lu9BX3lbMdpEfSDP343KjGzm1r4xBgM/RxNQRn93ZyHLeMo4zEqFz3GxkDRX2/c1nPGNivSzuZ56msU2wyss6pb40th4fpCsYf+BNnPdvr3xBwOX9X9o9Yos95OTls1sol+n7SjC2gpuhs6Sm2SF2i1mk07OY3DGav91uiJ8hGXD3VaWniA36v1GMfeCa4Nez0ocBYgq0xC2ouQr6664u/lV73m1KrQdXjbCqYn4eeiUSvGScJdvlBwr6g/uclRTO2xn51F1qk+/YMbMXF5Xp0/k+R3pqNYkH7X6WRucL5hE0vZ4RDJGOSPalRrWKz8N5nsG0r+D4cm9iYCKWYvreXbNeFZzKo0chn8me8Rncp2h6fRw5BZvQz+wE9IlcT/cK2+hXYHHuYtqNno5FyduKBVkNekSV4iFUgXrIWeNCsL58lgFkAOH1XwqGS+JvLq6kEt0oFesZUTVl+K1tJtbQmr1e9J96COQmab82/RLtRa4fBDYQDp4BI/2Rx231Gr+AHxT/dR5lq3n/gB0F5w/"}, {"__id__": "chunk-10fcda88ded8ff43e6f3ec7a5e9b1e00", "__created_at__": 1760492924, "content": "## Hashrate Attacks and Consensus Vulnerabilities\n\nBitcoin's consensus mechanism is theoretically vulnerable to attacks by miners who control significant hashing power. The most well-known is the \"51% attack\" or \"majority attack,\" where a group controlling the majority of the network's hashing power could cause deliberate forks and double-spend transactions.\n\nIn a double-spend attack, the attacker creates a transaction, waits for it to be confirmed, receives the product or service, then mines an alternative chain that replaces the original transaction with one sending the same coins back to themselves. With sufficient hashing power, attackers could invalidate six or more confirmations, undermining transactions previously considered immutable.\n\nTo protect against such attacks, merchants selling high-value items should wait for at least six confirmations before delivering products or use multisignature escrow accounts. The more confirmations that pass, the harder it becomes to invalidate a transaction through blockchain reorganization.\n\nOther potential attacks include denying service to specific addresses by censoring their transactions. If included in blocks mined by others, the attacker could deliberately fork and remine those blocks while excluding the targeted transactions.\n\nAlthough called a \"51% attack,\" such attacks might be possible with less hashing power, possibly as little as 30% according to some research. The risk is amplified by mining pool centralization, where pool operators control block construction and transaction inclusion. Even without profit motives, well-funded attackers could launch disruptive attacks on the network.", "full_doc_id": "doc-10fcda88ded8ff43e6f3ec7a5e9b1e00", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_12.md", "vector": "eJwNy31UFVUCAHB1s1YBBVFAeB8z8+7cuffNPFx9y8qWxpoeWdvc/AAs1CLYWgzYUGFZ17BcqawjiYpvAd/XvLnz5t6ZgVbWkEA6VkKm2IewlZ512+qIUkv5lYGH9ez+/v+94Z274OTRGy78M781ylsozMlcuen2eQ9vNZF6m9QwjIq4VNhpLWfD7Dlrn3JeKCR3jA6SA7eLT7NDpEHdbZ8xPsKfkTVZHawX5isjzgb7TT6Ajma/Kl3EglXm0ugkCKVvUfIQMkbFB4U/tCN5ibcrWCzlw2AbMQe9H8LpxiioF65yya5/R3bihr/qZqb7NbiE26k/7vPqbrkx5rcSteKsxOyN4D6aCAT5hHWOm+G0ozPsS9ynuhU91gaDqtoPxsJJaJ9Ui7+NTXWksCR9DViY/r58OTar5cnMTPFxu4p+i7uTc7HGfsgYxLfYbFoHd8wrBevAMmWIZMT8oNM9XcqAe1wHnDkwp/1E1I6nWnfgonC/cjO5yfF0fEjrchST4+JANpRjLQ10h7vbWkWrvJe9a+RZynFjDPbqCakj8r/cm9AAuyq1zVuc8oNVh6tQHAS4AlxDieBmCc5TsMLOaV0ZW2CP+UYy10tb9BK6MtzNhltmklfka3qTvNmocnR7zx/5JraOpsS/Co8LUdrc1C/Wij+ZM/XIvWkviK3aY/pVHbFV+qrQs9ZSOUW/qj4H+/g5CIFHQ4/g0975Zi63lQVANqs3d6f/EhSROvIkplO/9KTrgvaNNgzWRiXPUi1D6aYvsfPmRf7UgQvRp7QbwR7kw52+6847kQpXuZVmH4Tz7GkOw7gbPiw8gKv1Wv1NsItTYKcm8/nK0IEz/I9KreeiuInOFM95V4fqlHLuQdgLFkTlSHWIsZ+D47Ep6i4rC3+As7AfSsYfg3tdW4QRYwL2oY3sirzNXqptdqdmNKAJWmTrmWfxPfi2qKIKt8OcGn/YPuN8BhXZgrYS18Gh6G1ix8NZ89EeUNJ6iv8gWhnLx8PRO/A9ssr9sDiGLpgF0el0VKiwkuBXoubBZLy9S18SLcBTtPp4XjQ7qJN4KAzytE5SAAvDa9WI+j6XAP3xzdp6+ol4DVVHBPtCSw0d4a+jNDag71DG6RvSdjRhThitcFmb13cTfA0um8uDDNwTelFf9qLON+PNLc+LBdZOPIi3iV3mIvS6Ps3zFD9TX6c04UORKWqLdq+Sk10p+1kXd1f8XtJj93tzDryk3I0X8R/zPwr9XIfnND5qr8bFoMx5SmgwPkeWHI4NOHdxi1U/fiZQ6T7reoV/1NvEn9YqSZ/xCEtQvhRP6L9u80cvif0oV9Qcg2YGe0etgWv4k9IcJYwfEmtjhWg07tu9on2alGoN234xH3wHenETq/Z8wcrMiuYm7bMjJ9gV44VDo8azkXeZFw1Shqo8l9ivGvNgkvP+UBBf0lxyI7rlcKMLjtDc31jLQ2ekRtZrz/ZGjlQHq2m9simlmP5dHSeFXCFYJB2Tt4kBudjqMD+ieZDi/TDZ8JtcaPxwRDhoziXNtNJ4Lfhn9oDnY95qieilbNiYVLrJF/tf5oeyKNlLNuy9Hc1lb5kr7E+Sb/K1YgFZrYbkGjWg1tEEd5+QqK6G85grYyUblVboQ60b6X+ESnO72kNviQO6xa+3fx8zUAedraSbXzPTHAKn6R4Ut+35qpJkzQQUTLaW0lno3ezH4FYxWV4un+VnBDAoNabhdFpP0iwrflIo4/+hn3SmG1KwPrSPpdrXwS/A55Fl8QgpJSWwB+XxJVRT+4RcZTKtNnYt9Bfwt8w5Vi8po/9sP+bJJD6tRH5be5VnmoJbyYfipxh7mjXR0483SvWu3+rPK4vJE+ZCsSlWEr+iYmuC9KFypdE8q5exHrrQDAjfh57gmNgTPUd/R9/mNpCf4g1kk1exJ9kSO1k6SNc6/qS/E7jx/zeXLI23gHJ7G62IHFL3i69HEpUSX49YDBeb/0Vj6sux74wUS2b/A8lAqZA="}, {"__id__": "chunk-06b56234cdcbbca0c3ebf7d904a5b4c4", "__created_at__": 1760492929, "content": "## Bitcoin Economics and Currency Creation\n\nBitcoin's monetary supply is created through mining, with a fixed and diminishing issuance rate. Every 210,000 blocks (approximately every four years), the issuance rate decreases by 50%. The first halving occurred at block 210,000, and subsequent halvings continue to reduce the rate of new bitcoins.\n\nThe rate decreases exponentially over 32 halvings until block 6,720,000 (around year 2137), when it reaches the minimum currency unit of 1 satoshi. After approximately 6.93 million blocks (around 2140), almost 21 million bitcoins will have been issued. Thereafter, blocks will contain no new bitcoins, and miners will be rewarded solely through transaction fees.\n\nThis finite and diminishing issuance creates a fixed monetary supply that resists inflation. Unlike fiat currencies that can be printed in unlimited quantities by central banks, Bitcoin has a mathematically limited supply. This controlled issuance leads to a deflationary aspect, where the currency tends to appreciate in value over time due to the constrained supply. While some economists argue that deflation should be avoided, Bitcoin experts contend that deflation caused by predictably constrained supply differs from deflation caused by demand collapse.", "full_doc_id": "doc-06b56234cdcbbca0c3ebf7d904a5b4c4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_2.md", "vector": "eJwFwQ1UVFUCAGAD6kimCILDwMzjvZn3c+97b9CFUEs2knA9Z1ktc1EyzZ886x/utnkUdVjaSSV011UiYISZYd7Mvffd+94bBYtjFsfUxZNipWk/bp3ds3VI4axtuhJlYu73VemzZ87q1ck1rb+rLjKDL5dGSMoqV9M01fIGfiu3W03uzMIlxbdJwEokGFsAFjT3+TeS9STTz0FsininmO90sZuBEeU7aYTmKC1oQ242KtPcyvP6J6BHm2aVgQapRF4DX4HHtLfpWhCVB8xV+ri2vbMC7NNPmwx3aPtBUXyBPDGOwtslDjWJvzM2s5LoBnGtcPnQk/pYJK43xHawNCIbrcV+w41s8AswaC6Wi4UM6S4aTH5Patk8OR93Sob4etyKPS24xCY7PV6H73S/6nPABHW1oPnf1evpGvKGz8PVJmrhJzS/bT2oMeoiED6W+F9iksoFMthDZiL/inRUPU0l43MhTHsIiR43f8Infe3CZC3iCYJhKc/IhC4rS/7I1wPqrW0sQ59gLbbPgiy1UTmiL6JXjX9am7lazSO5wDtSm9TLQp337VL9BGwW+9E18Cehh59qNSTflQeov/0G+gfLCaSiX4j9DIb1iH5wiv0ezle3kcnaCrP/9VuqNzlux8Bevq8wlT2WHJee9SHl76gzfld8Sp9Df3Ty4pno7eiz8VN0lLtp7MY14KJowno+RDv4GPiR5Bp95A5ZLgyxX3W9KQ14Z5nve2rFQVFGTmKuXBUtLbgpX8JZxf+1h60H6aemYITDgvcHd7X/K74RBv/WQS+AJVixXpaOJb6iZ+mIuQPHwf2OrEiWMKk7M/xSvFe8I1WhJ7Sr+mKp+fBVax68LhxW+vUa/3b/DImwEtHFcn1uWGGWepBzGyD4OCjQT+JUeJ95EeQ6SX8/3GIekjY5CycF+SFjha+VTE9NFi2+S2iAC/U2cOPghPhC52N5Uu6m1B5UKQ16ElGVXXaXiZlirpQQo6AluojUKLvpgF7siZOkf746TP9IHqMf45XJLcmg0sARFHJ2yKp5FGZ4ypN/kCBqjRXhHt7FzhTUmV/jEN0ROyLdADWIgBCaBjvazrP3juTxc3Gfb6tYEU+3L4CtNOKy1CvWW+YmLjv7BX3l9GlgOnpJdcBqNEI65R/UvNjX3XOKAPsSrgP1YjopCJ/Oy+4eK0yiPfpW9RoNZU1llWAehEqdpZmtHh9sNIrhqPekftDe6D2vGGAUXPFWqSccv/BIAttN2j7qE8vUT+3jvA6CRin+BiHzEndZeUV5VLboEBokH+yv1pr90Ko2H2bl2kbpPKxI3rezyGZWWVSuzuJKpDF5A/mpO6ydsP7FRZ1diTPya/Y9KU2eyffpS9hW4Rw5yn7tXR2fz16NHDZcXDrKpKN2YwBRN1jWnW3ku6v5iRA4Q+CsWghyVV2EIKiNK29aK/Ay+EvKHWkTTpk94me4C+59I0gbxHGTI8HIBvV7kKNNhg8724QDtFcWQQt4Gj9JX3R18FioxKX4AacMBTqXmjP5jeoieiZRYIXNEuPfaJX/tus7TrJvxea0/8bsdCqdYKrY2Ft4W96duoTL22dFQuBWYo+x5M+rxAWF60xdC+GnAk8UvUgvs+fY4+YmmThLxQxuiJ9hT5z6pZRPl2sPppajD61SdZG1U3qeTRB64V+db+XN/M6cZ/il4J6+T7puZuk3YL0nsytN+MbwKmEG2BbnHF3lCyefOTQFdHGNiS/Mn/E5tkaYLdYmq/Ac0iLek4flm4LHGhAekUazj7NY8miyQrllXMDHO9diZI1lz+Unqi/7SXJciJAD4Bgedp8SJKUH/6XVgh+A2VYEjfJ5dBlaDxLyW8IL5gX7IZrDNyvpiRZ60S63x7AtzmQHDaxUoCZUTXfBd9AD+u/RAeFR5y7abi8Um9lz3BT8HyuNpgcaYJ+x0lfHQuxnvNu3f0owOS6vC3wb/1DdRZbpHWS2eZ3MN6ea/wdElZnr"}, {"__id__": "chunk-825707a7167dd3ac2f0667cbcf57c394", "__created_at__": 1760492951, "content": "## Decentralized Consensus Mechanism\n\nBitcoin's decentralized consensus mechanism allows everyone in the network to agree on a single \"truth\" about ownership without trusting anyone. Unlike traditional payment systems that rely on central authorities, Bitcoin's blockchain is assembled independently by every node in the network.\n\nThis consensus emerges from four processes that occur independently across the network:\n1. Independent verification of each transaction by every full node\n2. Independent aggregation of transactions into new blocks by miners\n3. Independent verification of new blocks by every node\n4. Independent selection by every node of the chain with the most cumulative proof of work\n\nEach node verifies transactions against a comprehensive checklist before propagating them through the network. This verification ensures only valid transactions are propagated, while invalid ones are discarded at the first encountering node. The criteria include correct syntax, proper input and output values, valid signatures, and confirmation that inputs being spent match unspent outputs in previous blocks.\n\nThrough independent verification, each node builds a pool of valid but unconfirmed transactions known as the memory pool or mempool. This verification process is crucial for the integrity of the Bitcoin network.", "full_doc_id": "doc-825707a7167dd3ac2f0667cbcf57c394", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_3.md", "vector": "eJwNy3lUVWUCAHDpkYALGKLw4C33vbt933fv85G4VC6J40ZGLohbZuqomFqmEp0Yj0ebYw0NGiryZHnbfd+99/u+exGVJSk7QRnWzGRYKpV6jh3KFsmGmcGs0TPT+f392wdRYPapUislv8U6nZMFJ+lJuImeUPb7+3NTuT59yNoWf8x7Fi1kC42DdD4tC3w8use/ifykixkfCA+x18CuaD35mf5d6dVfBev0+zhT3UBn01bIo3ETluvzlHHWdKmduy62oj7Uo2wX7kHknGb1qI0K9s1S90Nn5HX6tfqyvEQf5ZpvzJcIkLlWeUdoMDEztMi/mXPQ8gDTCpQr3lvWCBLRB4NtYov5VN5iWbMuiAeiZ6CTtZOHSQEJkre1CTnZYCa7JG6UW/xldlt0vDFBXip+Td4JdLgypBm8Kexi+zy1sY5wp3A+8UqDh1vDzuJu4WTkdHZN3jfoBXbNuCFcc3Xwm3E33e6+eXx3c8L7Ir2qTRZW+zphSWNl3bb4cOOjWq/1MrTUJ+BWbcDaIm2gvF2AboDbSlzZYLXF89lo6QosCkmRM/hj2B4bLS2jbZADKNsWP5IL6ZdizHrNtUIeYaWb52JpZLcaxEPgaHNKw0TjVuyy5/zvK45D6Ep9EMxUHpF0tkLf2KTQkWK6WSmciS+r24Xf8v2WqJAm6r1Wb2wGrvU9YMy1ksQbxn+dx90XuMnKHfhLzCG0A8SmRmtZth96xrJD7gHpVm6yVuNbba7LdtQfAmeEkPy38QB0sKjytPkF1u3hcT0UTHboe/1FIOrbip509PMFYj8+ah9DqeT7huro3USn/0O4Xp+IK4Tz3GzlfuSufgh1GCtRmTrW82l2Pj0pLBJskKwekEbyjXpJUi9Yw3Ub+/lbZl8itflNmI8eBZ1oHns+uhNz9bNoMrwsfGZ8AjPtpvhazyf8JMVMlNtTyXu1Kd7JIgcLgZvKYsjqr3smx0cyaDK6C74zVvJtxtlcW1oV+yqHolqS5RyjzI2ckB3h6sQ07illmbXDNeoYMABLIcXyFviS+QCbFCuNzZAvRDd492jp8mhPu/txupS8G2/xTxW0yHatNVYPrvFBuAB3otOybUxvvpm6gE51PQfn2RNYi1qkh0BWYI1+3XtZuuj5SunCxTxPqXRODocuxiWRAx+gfnAdc1YJ4uUpghSVzEGXW3jQXWDsDWxRTdoVHjTeUI1ACShmhSwNbPcfBVfF6cJytTU+4CkU3gfrs0ZFx4JV9k74DXg21gemCPdAnvrhmMxcm7+pLUq0CCt91Vxp00E5cAxlm4m5qWWYopEgSAGeE6qSU+FaMEkbIFX0d3IlikgR6Y+oCr+uLxE2496cdHuf4dSHsaA5PTETcuIAvSM/aJ6yR0K/+bm8XC9nw2hFvJKVEgsdMlJkyN3OwcIq4U/aUj1JPOt/Rf0RjZAAQHKT6LRWCzeU87rvxGz5Xe1pXEqeBZ+ZxXSBa5vZKI8RDwo9ymLuN7nSHiJNmtt3lw9JMT1AuyK9+mFxNd7my8N9ZrHUpMlilbjTYOHnqMsqF3vCBVlFuV2RH8JHtBxhPRHZYTrFfpztc3bVXWRF7hpUUZc8/mHS6E1HSOxq6CLDYLfpFFobbmJGZpF7bJq4Fl/wLolfNqbZf5VSlX/QPeodC+sLySrfkPGYK10rTaxT0kgm4KCbHyTDQWYAgSPm54Hdiq8eC8Wiw7wkV5EkJpjjXHNjvPEoG/AD4sZvuLpJ0GZyiV/MqY8fIG+6p+R9Dx/68zJ8Eu+I3kEO+/3Gq97b6r+Or2MdrDtu2zXeS7QqoxqN5/6n3ccuWGYsTvzTkYBFRq35bbgS5huF+qvSHsOytgrPaJvMf9M0/WdzGNgEZC3GftKL6Qp60PkrjsfOZe/lKhKNNCN3N/aq1ZG/CJXN5Vaz9UuWwtq5XYkScsqsgUVwI/GJs6zj7irjRb4a5AvfwjR1DiwRX8CCXB6eQ/7T8Ad7yPd/U/GPXg=="}, {"__id__": "chunk-9e1eef5138d42f742d075cec81faa8c0", "__created_at__": 1760493017, "content": "## Mining Nodes and Block Creation\n\nMining nodes are specialized nodes that not only receive and propagate unconfirmed transactions but also aggregate these transactions into new blocks. These nodes maintain a local copy of the blockchain and continuously collect transactions in preparation for the next block.\n\nThe first transaction in any block is a special transaction called a \"coinbase transaction.\" This transaction is created by the miner and pays out the mining reward to their own wallet. The total reward consists of the block subsidy (newly created bitcoins) and the transaction fees from all transactions included in the block.\n\nUnlike regular transactions, the coinbase transaction does not consume UTXOs as inputs. Instead, it has only one input (the coinbase input) that implicitly contains the block reward. To calculate the reward, the miner adds all transaction fees and the correct block subsidy based on the current block height.\n\nThe coinbase transaction also contains \"coinbase data\" (replacing the input script field), which must be between 2 and 100 bytes. This space can be used by miners for extra nonce values and for identifying the mining pool. As per BIP34, version-2 blocks must contain the block height as a script \"push\" operation at the beginning of the coinbase field.", "full_doc_id": "doc-9e1eef5138d42f742d075cec81faa8c0", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_4.md", "vector": "eJwFwQtUFNcBANBj1MREiEJUlv3O7r75vLezkFQCxFQofkJMCQJqIWCKRlQqIRbrJz1aQwVTkyNSfiqw7O7MvJl5b2YWtX6TY6gRjb8jWj8tMaE12KTQHDVaPUeFkN47n9uSuuJAPj2YstJSWdG/Xi7WPqF8sBG5ic/3k0bpdelFuBm+nKTrf2ZopD+QkfycUEtfk3KAAbaGs7QAWGBOjJYFzybtVmtDTu4wrtXjjUlcGvvCiy/ZfhU4Sr8EdHo6/6y4Fm7kKpg6ZyY8ZzUHI/BlW2bwGejEGThLlEIVrAmneAY8eVyh/6bvYqhWKcE21MSdj2CxFxeLJ/y5sRLSri1JYRwTpEPsIF9sInjNuY+/qveFrsgb1Cz2267HvJ3bQnb4zvpzuKzYVtyGu6N94d3c/JSJjJ/fIOYkuJ1JbIbnfHOluEnbpp7iUqxCZ4xdovwCNweqA+tJll6GPrYX+EdCiXKJd4fksXJdpfiMvlFoCq9GIzOmRB/Z35haDK4bN4UVgd3CF+oh4wbMN36KpTFl3KNAMthA1ur76AweCTujI+Dj6G3hFj7qF60zohBYH28Zx8BhUiB/azwVKrDp5gZ8jKxWY2KbAoSl5oXOU2wcZdmSvYOogXgDjS8UMS2okJwgI+QupriU+6zjA3hITZkEjTTptvIjPElKlDuu1/DrXonese4zW+mwz53Qw1YHFky72fYn/07xnvx8dA8tD42Gy+kashRt5zrUPD6XS+Ve1aoUH18tMwQI9dPjILCYrn6jUnqg5nVc0uaSJnyFHeWhUhRZhqgj21ruXU2mqItIQ3u6eQQdkevJWdi3c4h7SBpciVx9KB7J4hi/P3mePp5dyXvhQvG4ozzyDOtvr8MX9MVGTtsDfJWtsiYim78E3UWdxj/D2Tizq0r7NZ8AT6rbuBptvjsDbOLWgFmkKPaw9V10HSx0LoWVgTh5VCuwyrX3XZ3WY2XE3sPe0m6qV5yfN70d8k096bB5TxK/+m941HkR9Xk/kka4QthqCvCJVsmNo49CzwKW79HHWzP9bzu+E/p3LNJ3Bu631fnGaZNbsF7qLZVjtIqNp5t9id6H0rB4XE0DAygL/88K6YxW6ir1HE/6jfkv9LQUA8kI6N9oB8EdXRTf5cf4OuPNvfXco9BMKQN62fOt70Unu46R254idIL/O95KP0oq64q150U6IQh+QffhKtrL/jaYK1ToqWqB8AfYC/YHPovUiKqRyc/qWCf8wz2LO5P8gMrsV0oGg2wMmAxH0V/NavwWWq7cwg3sMm5Y/aXwA9vM2MnzdAX5fWgMLgSvkAl8kWaf1gM/4T3h0+QcOWzksK8IM0Ajek78nO6Rnggt5Oe4w0jVrhp/o91NUdtyqPH9tNVdqqXFjrhWEZ1p4O7Q2W7FPibF4aOBg2oxX+lZJdd7fxfpceeHF0MViNx2eIoRdw3btvMF1MscEHZ5vrYu8qfokPeNcB0o32sQe3i8tlBLIINcfjCdncszsU2h7JbZkBPWgDw6pseSLgmXbBfkpcAkc7alMt1KI5CFxzg99KP1If0ZeGzkOArDFVy3OoDzE+fpQzTeWhGr0c/LS1CyGuclaJcy3/26VJV4nx+SltEnegWXgNeJ5ZKNfYtk09lUaa8x9rDLZFG5aJ1uXB5I1t6HV2OMfsP6nnXpyXxfhMDJ6E16TV0FpgrZZJawO9iLjuCc4ILAN+J/jelsrjWAvtTvWdV0Jr3nMs0Y+EG4rNRiR2uz+Y653n03Ohg+B1JwnTzCDgvteou5We7nDoBxxnv8Q7y460p0WL2siq7VJKo2ka7GLD7dtR879NPoBi0Kdbs0fy/ZpFWjTPQV/R4P+KvAHH2C8AHO5o87LyuL1LniWvASt05eRa+Zc0iTY5L+qrCxc1rHFjXbnCeU4NG4p3GR6z9GmTZEBuGnpMzzFAnqH+qTxHn8SvVT93fkRmSsNU79mr8l/4X7o1gTtcN3IgqSE4NSaO8a7YD8f2xUqIk="}, {"__id__": "chunk-76684c248b16be47c0f1cff106cfd228", "__created_at__": 1760493017, "content": "## Constructing the Block Header\n\nTo construct a block header, a mining node needs to fill in six fields: Version, Previous Block Hash, Merkle Root, Timestamp, Target, and Nonce. The version field was originally an integer but later defined as a bitfield (versionbits) allowing up to 29 upgrades to be in progress simultaneously.\n\nThe Previous Block Hash references the hash of the parent block, committing the miner's power to extending the specific chain ending with that block. The Merkle Root is calculated by summarizing all transactions in the block into one 32-byte value through a merkle tree process.\n\nThe timestamp is encoded as a Unix epoch timestamp, while the Target field represents the difficulty requirement for the proof-of-work. The final field, Nonce, is initially set to zero and will be incremented during the mining process.\n\nWith all these fields filled, the header of the candidate block is complete, and the mining process can begin. The goal is to find a header that produces a hash less than the target value, which requires testing billions or trillions of variations by adjusting the nonce or other parameters.", "full_doc_id": "doc-76684c248b16be47c0f1cff106cfd228", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_5.md", "vector": "eJwN0ItXFWUCAHDquGq+EJXgwn3Onfnm+2bmgpaiYaaYq5L43JYIFWXROOSeTbDWoxUY4rVVRATJK97HzNz5Zr5vZi4ePQc0M5Py0VlXwKxYzFUs7WntKSk1fOz+/oQf4CsDRYdW228HEvZm8DTfRa8qX5kVUpu4IHqPR3W2IZvTvMmwAVz3JvjjWjvM8Rf7Tmjr8E32Ioxon5PXKWM/MHLgRrineaY6T0qh4835tDhejl7NzuH/yc2wo65FWqVwSjnDd3KH3P/1ijDPbBRKpU14t+RIpfJFpU3s1Rv4pcJivMBfz55I7/W8aFwh5ahCKBS3eYv5SOMKcRQI2Kt0t1YceEt/OW01R0HILPH3Kp9y14jK+/fN1LNYzTck1gOmk79GLO8PWiQBcbHm0M/jMdxLWbuZL/2/oKZxAZN1Bf3l2knxtK2oz8HfyNQJPzKC8is7GxUE2gj2OoQl/L/BgvjKfV/gLzw19CP0qr2MbOcK9BNw+YhrnF8o3bdJnGR/h3qFOTAJV5GV8Cg+a03iZsK/C62RDnUo2Y9fZ/3RiXK7NE9L8plgM8wyHdLTYj7u1+/7smzV6dYnawnlEF2JdxLOnCCVk1lwkdUiC54t5g3hYfQ4cGmvSD/Fh4JT8JbjSX2sdTLizmxgLnl4F8e8o5XRserRyA9inVrN5rEjSLfvL8YO6zB7iSiNt5yzUY20PFYAhzM/Bs7i9fI9fQbJASfpZm1GVktrSywTfgPW+l2WjL/3VUT/nCJCFXNgWYLSbbbbqCUO39deTm/W10lNcIAsjBxjU/hq6xgM0av0Dq6Pbdv7G3TU38NT2I7xTtKGe7Rs4Y+hdrRTmMVmvzXL/JBdKryX9hO7NbRezvR9jLE+Wg7KRUYRc8G7gVj8s7FOaSN8lFjRkJ7rnK+EhXZA9THiEjqWeQE9YI567+O1Zp86BOW5PGqnY52gyd1N0HZEKlTTJmoat1t8XkN7U4zH/L2Ac3ZwH4KWSDD2NzTdXSD2h4dqQ9g+eBC/B7vwANtKk70DqJkbqSXbE/3QSBYKcK2pwvXaK7EpXD+3UHeGL4eW4e3MHHW5t3BCAzMXbNCvuavh3P0f2V9nlMg/N94Apcq3xmEUi29NHYf+pffbQf4IHZQKBOuATxdCjf5GoxPvRH4wd9xdfaNvFe32tcMeboeSrNdquXgJ9/GBIlgKX7KKHuuTa6EvMN97xLpDEuJDbraXoOX8Gmk2bUCLjSvim+ARLoUzyDnvlXia3MbnxJ/nHg8k2+MxB6uMmthT4FJoEJ8TT8MIylXC9kjaIX8XeCQ0LV7HL/YUM/lgMjwYHh7dRdMzvPASekbdAO74BukDZicfJFXcADUxZ66mQ408dIaZw98mD9NLtKuJJ5Sg8sLYjMxyssy4yU36xwrzplSBU+VP5K343dBC+ByYp1/nLoLT3BH4C9gLyt2F/nHWOdUt5oMuqwt8Zn7CPkkO86Va4YhKXEJWqLn6zd310hRpDy/aGulXfXAXs43tNh9n8pQl4K7/xq4c9hCdHhodPeZKR6vZQRY5LbOKnGej7GTmevIZvg43ud5orsdXyFP28MRZg98VFlOoF3QE/oQVOUi265WuMhyO9Pz/Y48xgNzONc4uclqfSN1syIql3mp9J/aN/TMeg7ZQD3o2MYnk233s7Xih1EluiyPZfXSPedk1F7jMADwv3RKma0moLGsYajJDcBjByGMvtkYbg8Z/ws/oE/D7/mR9jVzj5vT9dJQv1VWDM+NvcC97T8E6KRifYVWqKUKGO9c4xS2ys4kW/yBejocxL8ptjQesR0mb8IFrlR3UWlAPmdgKmI2oTF2rFcCvYI+9/kA3u8mfQpNaq+JH+TDujZRpfXwal8+0mBe03/XXyN2MpZE7zRei2fqv5kGzVhwV3YGPUwDvm6pRR2dBw/Kl/0GDerXBSIVgJN4PC6w2nGRUKNVomrxFuJx133MYlWhvoyp+qrZIm0rTlf8BYGqlnQ=="}, {"__id__": "chunk-ef82b652c1d18542819edd7c9925a7e4", "__created_at__": 1760493246, "content": "## The Proof-of-Work Algorithm\n\nBitcoin's mining process uses the SHA256 hash function as part of its proof-of-work algorithm. Mining involves hashing the block header repeatedly while changing parameters until finding a hash that matches a specific target.\n\nA hash algorithm takes arbitrary-length data input and produces a fixed-length deterministic result (digest). For SHA256, the output is always 256 bits long, regardless of input size. A key characteristic is that it's computationally infeasible to find two different inputs producing the same digest or to select an input that produces a desired digest.\n\nIn Bitcoin mining, miners must find a block header hash that is numerically less than the target. This target determines the difficulty—a lower target means greater difficulty in finding a valid hash. Finding such a hash constitutes proof that a specific amount of computational work was done, hence \"proof of work.\"\n\nThe target is represented in the block header in a notation called \"target bits\" or just \"bits.\" This notation expresses the target as a coefficient/exponent format. For example, in block 277,316, the value 0x1903a30c represents a target where the exponent is 0x19 and the coefficient is 0x03a30c. This target means a valid block must have a header hash with more than 60 leading bits set to zero—an extremely difficult challenge.", "full_doc_id": "doc-ef82b652c1d18542819edd7c9925a7e4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_6.md", "vector": "eJwFwQtUFWUCAGBsZalVwxCIx+U+Zuaf+f95qGmbRplkxHroiIqiZpoHW7BOlmJlhckrURNMrlyBC/cxd+afmX8eF/KkJC62pq6L6Ml8gJnuwV3znMrwrZFt7n7fp7whzdidZI+ZyDjbUAHcqa3Z9Ux8hfShFDDOjpvmHTLaLKf1Pn80FMRlj48mkyRNuxVoV6/6n+Ne9C60n6BCeJ2zwZkqDHte5i6SbewrOVXkpLYbbIerRFvIhmedszI2OvkSWIl60WRzAfNf7h5xCZTk1b7i20Ep3sXcgOPJOLoEDih74GLUZX+v3kvmtQxZFc7Dm7oKizsOw9fqS6zGSFr4irTeWx1RYsv5iDMMr7hv06OcMIgoJ81FbSfkptA34IEWTOui3qL+RZLSx1gAv+y6gYaktbFRGSvAq+F7TpYeZmrJaiGbPJ/Vx70QnoxneJ80JnN/ZeuEKeZboahnItWUuSnrTXWRPp1Jdg7ox4xH7Xe5b+VhYTPYouykB+UO8JNWzb4iYriOhMgKbiVpIPPZTnQLfovGWid8IXmOeo696/OgYt9U7mv3T7DZXCVOQQpdrh0SR5Nmz3zjpcAz7EVnIBYl79kz+U+NbvhjvBePRot0KeNd9VlhpK2V7SJj2wR+B7ufxNr80JtxU/kIA1wJ8unl5kn97950NJjRZx3Oed1+nHoj5nV60COBXs8fqHnoB3GOeyecjVcL4+MHYo1GWaRG7nSsSDWfaeSQEFcI/uTpJ8BnBv8B19AJjIpFNMa+Q8rtGeQL7VbzQWUU8zTdI+SCAiWRrOUfZTKtKtbtZJnvOz05Lv04svXjuJLJVI+5Y1pPsEIsS/8FPTSx3zvG+5B1mbmGCqlcpoE+iPeyK7TdJN/8nyJnaN7EcKKezVowF8rsbXyyOR/3NtHWe8w1YJE463N2dhxhT1O/uzJUOr6vY9D7JTjo+55dxhb7KDzNLppQS79tfWIE6FPofCpW1pmnvAzs8fhkDnQDWt8rBNlhOKI9wLdDR9j92g36cFSNHHM2MzXQHwwo2+P+Zh9WEQwdV0u5d0heqJe5BDZGmkEcrCYF2Uf1Ku4uNcEthfYos0PZjBFe4qxMu9T+Z6qF7TVmaTXS7Vhh+2x6l/WOPpFNdRfDmvQftEGzwpcHK5gBpYXN4VISPkev+Q45tXwRFxbeyOnSz7k2aR1MEpGkUdwCMxw7RKYK/xbPsUFnulbLT4bV7iz2N2qjtJ0MgCZwH0G0jf6RG+f8k9XVevUvaFifhJZKqdaW9pmwRmuQ+/x57QEjyAriELyM/Wa+/nNkRFgr78KNkS6lAV0KhtA+rcKaQugYTRVQRVweOMrNSitzf40OWA9ycq1rxmKTtRuoE2AgIyg8Z/3Mlcq/xn/1tNMt8lWlxyg2RKZfL7KnSw8rElqGDxC3fJ4pc0NlLizJcUL1/AX6AkpIX85I9rzGfJDir+tc4u2QJ2hLlFK+R8XmVm299pmrm2Hhaf6CZzp4xPlE+6O7gH2bT0hus8Z+nCBXtlbBPn1bKJ3kWkv5RNwKjqESeMa3waaVHQCn9pLfU5K862OKnhrNI3lWor0sLnhOJ5UIteYpfZlYr1e6Z2rvg/7wCIjihcYe9IHZJmwlX7CzLEvfq6Z4FlktvrrI5swAfhpcR/V2uVjh1JEvnYbsCpLLJ1p3xfssaxe5/GCTryp2EBSLAj0cfVbcL9Z5VPwSdQQ3wr+R+fYvzpB+/LHydMvYyFj4Cu5pj5tTnXz6KXAv1CjPYJ5KPCN/Bq/gcvJC9mFURm3FJyhJvmgU04UkEGxSknUVlJrX4WZ4OTonIqf1iUtVn7eC6xZW6qv0Dn4NKjTe1Lq4OiJb+7jXsyax1+0z5I4xwKaLy7lScwQvJv1kqPVmS3c023XVU6H/R1fFOWaaP9V8GLU64eiw9R0cJNXGE7jMPmTIfEqWSx+PBKdTOxfbKJ8HfRE3uiPNzbzK79A3MLfg5/Y0/J2W/Nj/ATIcrjg="}, {"__id__": "chunk-f096957763d73f0f948d643a2fd8e6fd", "__created_at__": 1760493049, "content": "## Adjusting Mining Difficulty\n\nBitcoin's target difficulty is adjusted to maintain a 10-minute average block interval, regardless of how computational power changes over time. This adjustment happens automatically and independently on every node every 2,016 blocks (approximately every two weeks).\n\nThe adjustment is based on the ratio between the actual timespan of the previous 2,015 blocks and the desired timespan of 20,160 minutes (two weeks). If the network finds blocks faster than every 10 minutes, the difficulty increases (target decreases). If block discovery is slower than expected, the difficulty decreases (target increases).\n\nTo prevent extreme volatility, the adjustment is limited to a factor of four per cycle. If greater adjustment is needed, it will be accomplished in subsequent retargeting periods. This retargeting mechanism ensures Bitcoin's \"heartbeat\" remains constant over long periods despite changes in mining technology and participation.\n\nImportantly, the mining difficulty is independent of transaction volume. Bitcoin can scale up without requiring increased hashing power for security. The mining market is primarily influenced by the cost of electricity in relation to bitcoin's exchange rate, as this determines mining profitability.", "full_doc_id": "doc-f096957763d73f0f948d643a2fd8e6fd", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_7.md", "vector": "eJwFwQtYVFUCAOC+xMUHIAgygwMz93HOuec+AB8Lu232rSvailqZmaUGlkzpuhqVG9uufqbbApYPSHnIwMzcO3Pvuefce8VEXDe1spLsM19lqbhulNbyheSmbhqfpvv/dXJ9UUoXTUktbiEZai3aYDwXW0ruK4zAzzIV9Lr4gTmFPJRfo9yXGHQbjF5nPrcXZwujWC/Xqs0Xi1i/fSf/pHecjdd0fhW4yQWV3+kVICfxoDq8YKBoCAyiGQ6UWPIhOBOt116Uf7Cq8XXwlVtWmAn3mQLO5NvIJfFebRz3s/9DcCjvsvOyUk83ZI+JzWUJ81O1H9wRw+psvVP9c+IQWRL8O/hfUYw7qK+Qv1CWuXP581v/Kn/ASqQJ1rtGGVeeOMzewsft8LgFacN2cF4DHecfRi42r0LphSDOSSvk9dvW0zwzidZap+V/sUpxKcilt7eORjdJJ5yMr6lTzGKD8t1SCO3ht3FnNibMKNvN6sh2SqAGHLwaPM6lFhwNgLaPxSAcrg1hQr/00tUm6yViyd1qNTwKD7Nfmiqtyc/Ax+H7qgFSpN/yexHxSuUovGlkukS5m1zcwblEmh6q2TlkTiQqO1B4xEpHB1ys5+hRa569P69Y3ZJXL4+374ED2nkhzoZy1I5m84xxKF6u5AXr/DLLZvvMn3GF02VHY3P1SfJE2OiFkcAFhCKkRY5Li4NTfPWASd+Zgr/KLbBTjRT3Y7JUyfUX60dE344+eSZ5oGUy/33iLF+BG83WwuHeWOd570frtJmfCFg1fCXQ1DrlNyTLyMAjkjtYQCqnDc41753Gcms7Xo6ryRuJUdzfDIlO8FUpFQW7ZFB4tiUDbiaccgLfgsekq/mHOx4IzjVYssq6Qf/hv2z6lUGnDph4AfyDuopkgpH0YN466yNukTSSFiCfd00Kyd3CLimFpXU+KPq0t8FVdAX64VH7Am21C8jY6IfeY7RBPFlgsV5bTnSAgFzJfR94QeknqSanDLbtF1fzPc6wuF9B9K79pLVXHEOHIi+KNigRV3olHGn/EfVbYbY5/yn2dfP09kaksW79J2G5A0Np7Kp0EU3VP1eeGf+akCJvMu9626KGuDDRLCZprjlDup6czAfxf9mbrBrMsZq1llAfXERfglek3SSDevAyXh604gG513lPWcnvkF6xMhLf6m+JTLzAn1P+IoVpgE1zeqQe7QK3kmaRc6CHuxT5tzaHm6E95TG5RM3WbitPc1h51zkpOMZWOhpl2ZuNdu1R91fWVPx7awmJkUOgyHxHTlfGiAtdkSyz1tG4vABMs4tD7VG/3KStQdRc0xZMPmFPQtPk8mCpPFW5pXMJzL1i3W/d8ubQF/TPnIvyQfVh+RPlOstFlUaJeze5BLfatnmCZHF9HdBZ7dZqN8jr+GL0rLmMeMYz4J/mPfKnfEjYj/6InpfC+g/y115ToBYC+lrnE3CNcwSB5G44IX9nfMCM0WftiH5G/FIFqAqXds537uSYMsLnoUTP6hn8utzZbZfYTfOcVUw2dlyhpyCWWpreE0a7peYkLcddHH3frAPL3IA9jx/hpLnE6/LCRhY4IfvMbOho+fGSyMyWRyJd/Fb4BUxYX/FpRFUTeXUt41iAAu5J5HNzwDb9We4nL71jSNxIb+BGr8goo6OwRm3lHHNwsdy3M409Bpc3xWgj2lR4Wf4m1l+4R50VbHVtNFL/Do2gmUTwXvV2Gcc6qtPqFTVSb1a11ngD7BehcHyTsNjex83cooBT/ECwx/wTzo760CnaD0bjee7t6GwKQmESSJ1FvhXvh/+R2prWxgb5FrjXmQWyUbdwyYrF72St5RfZ95pAqBC67QOhz8Ub+p7IGdZPd+JKXEsbraW02DeSNbxxxKlEvU1d7bPZeus0bibn8UJ7i9zQ+Wsz4U5UCD0JVyT6rOn+Ws2QPqK9fJlb5r1sHbMfx4NmDH2j1bYN4CV2GL4q7IluiHHJUuP/hS2eAg=="}, {"__id__": "chunk-8320d24b37f70e74b4d91e1ca94e34b7", "__created_at__": 1760493232, "content": "## Median Time Past (MTP)\n\nBitcoin distinguishes between wall clock time and consensus time. In a decentralized network, each participant has their own time perspective, and network latency must be considered. To prevent manipulation of block timestamps, Bitcoin implements two consensus rules: no node will accept blocks with timestamps more than two hours in the future, and no node will accept blocks with timestamps less than or equal to the median time of the last 11 blocks (called Median Time Past or MTP).\n\nMTP was introduced as part of BIP113 to strengthen the security of timelocks and remove incentives for miners to lie about block times. By using the median of approximately two hours in the past, the influence of any single block's timestamp is reduced, and no single miner can manipulate timestamps to gain fees from timelocked transactions prematurely.\n\nThis consensus time calculation affects all timelock implementations including lock time, CLTV, sequence, and CSV. MTP is usually about one hour behind wall clock time, which should be accounted for when creating timelock transactions.", "full_doc_id": "doc-8320d24b37f70e74b4d91e1ca94e34b7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_8.md", "vector": "eJwN04tXVVUCgHE1iuWlQFFW4L2Xe177nL3PPRcDYdIYMQmB1FHDUpTKyHyMA4yahlKYoWmNomgown2de+4+++zzoNZihp5mSYaPYkk0jYmQwqos12pwbKhwpsw/4fut9VXDrECgI2KdVi5rzag0UoFtpspoDQT5L+ILuAKz0JckFnNF8C/xausRk7EWcz2CDpYSD10pnVFqaEHkAC02B+ySwLd6v28dXavsgW4uzVolp4sJyh+E+oxxThczylUKjtTu/8mbIxyHjeJs79ksVdocHlKuiHNeS6Ez/FPFRj05lhh6BScw/wZtaLVebmdrlYEyjudOSpJQIY9OnU8XaM9z8n2PhH12OpqFgN0QEFIWim+Zq+SvcbK5WMwLRQ70CjfVFYTTJHWT3Qguq+9JaerRtE1KTmtp+nrfn0OlpMf4LyhgsgMVzo+TkbTVKKLzYK1RLg64X5V3h58xvtSfkPfBp0gGud/YSv8VW0l+pBf0L+A+jfGXtLHwf+BiWzl5yOwECYFD3M3wCudtoc+Y3G7AD9Fq6TTfT64czscSpfyw+DgzWd8B4+zz4CdzSNzG6DjJOgR72zSc6IwHQc85swvvtD+01gbyMsaLJU4WLaSZWEidjz3K6UiRvIjW8kVKtpxsvxx2mS5yX2Rv61xUA9/XpumVwiLcKHfSUeuWdpe1h+H0q+SEthflAq/k58LKA/4yz05vUOyw93HT7AnRX9SwWcbnyjDiVhfy1YYA8sxc0MSdtyf5zsDJ8X503nlWqLYlsgOMb95PeoSZ6XkA+KOhSZ6D3Pc6b21My7OabNluwZ3xe+UK2NLUBS63vSl+B7qkq8J67XrmoFLPp4DV1v+lY+iquFCeCyvxRqYID3DJOBJaLyaR5TjXGfU3eOvRErYZ/+rtZP3R7cYR6QQbo8PSZ062eIsPskPwQbPR/CR0zX9DcNFlsFN6XW8I9ZmzxH+QS+Yx1QNmoxnGMoYYvfxSqQx1sa/7PdJL6og0Ahz4MP5I+1UYhq6WS0KJvQk2qj+AW8I9Yrnqag9HCoV18ixPkrMFJ7qfQxWZ2+IuvI1cC5axJ9i4sZnvkw6mb5Fz1Vm3lQsw1pfqeVYpswqWWPn2GuUb/S4GwhfoXvy1+0SwOeBxT8Qd9CBoQAn4rFWn7QQ+VBWK0pNONqxAHRl1dE7qIfIzPyF5ujRVeQdpzsdaC6mQhKxE5T06IX0E6OkzvDnwUfWAP8HpR/Ol1+QAeDB4GGLnKD/ed3d4UJvOaqHZWZ+abrKFH4sbaoxbnjmaudx/Tu4R3shojW9sWptep5j8mPk0n4QvgVKE0CJcTTlaa1yUb8HZxIQ9/g2hwdAztys+pcB51Zwn/Md8wNNL3pVuoD7re9hgF9NrUZ/VBFaCschnOJlW4nHOZjjHLIyP4LpWeqhDLRaL4mloO1g/5Tn3u/p59jdGBoO26uuS8vSFTpXyV1qAf9YJyvF8ZRjao/Qc+ze2Fl2Du+BqMNWMkzfDnfye8BpUbU0z3Fwxnck1ty6h1y3HmqJ1W7ukV8BucR6ZR3sIx+Qc6dZ/w49lfm5GpoXgkJXoHKW/mFHK6yxYTAuE04Ha8J+YjzjQPJwyEjkeHGvdIFTHX4Q+cKc5QKLk21gDqNa2g7j3ZKym3Yo9hd727WbznRXGEC1SV9J6KDosmh9IteqjZWIe0xfbh7qyUlE37c56wf/HNJesig9bl9EaWqffNOfag2Sc1eDxwApQFXpCDVsN7cvEQb5bqIl/uX+H0M2HpOOx/siF+HZwXYpahbyQcq95A0+ya8j+8FY9NVaDi8QjYAMq144bV+AYBtxXbgIzaEi4xLSgGWQ6kwUucBuMi95eVoj06BPsT/AHUr5MTJf9gS0SxXrMswq7RF07GZto30EPo5m6LudSxQ+c4Vii9U94yl4HntZ3RwcwB0ti+U40WkafbG89eEGqEraiv3OnAtm3H7/fWM4fC3bpXPgUaTN/B2s1mb4="}, {"__id__": "chunk-4f6b0b8f3819ea4aa0f1a6b4b25c0cd4", "__created_at__": 1760493488, "content": "## Mining Process and Block Validation\n\nWhen a mining node constructs a candidate block, specialized hardware (ASICs) begins testing trillions of variations of the header per second. Because the 32-bit nonce only allows 4 billion possibilities, miners may also adjust other parameters like the coinbase extra nonce space, versionbits, or timestamp when they exhaust the nonce range.\n\nOnce a solution is found, the mining node immediately transmits the block to its peers. Each receiving node validates the block against strict criteria before adding it to their blockchain. The validation ensures that only blocks following consensus rules are incorporated, thus maintaining the integrity of the system.\n\nThe validation checklist includes verifying that:\n- The block structure is syntactically valid\n- The block header hash is less than the target\n- The block timestamp is within acceptable limits\n- The first transaction is a coinbase transaction\n- All transactions within the block are valid\n\nThis independent validation by every node ensures miners cannot cheat by creating invalid blocks or claiming incorrect rewards. If a miner tried to award themselves more bitcoins than allowed, their block would be rejected by the network, wasting their mining effort.", "full_doc_id": "doc-4f6b0b8f3819ea4aa0f1a6b4b25c0cd4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch12-mining/mastering-bitcoin-3rd-edition_chapter-12-mining_9.md", "vector": "eJwN0/t3FNUBwHHhHBBqAgQSyLKbfd47996Z3WVrSOihBiIJEjHRRAg9BXklgaagPAyKPBJbPAQkEDANJCS7O7M7d2bunZkNvlC0hDfCKY8KyENAUKBa4CimHKWiGPkPPt8fvkQ6GXr5nW/V1ZFaK4wrhfl0Lk3TpNAyclb9NBbWO7IXmVD4TAhv+pn9i2YY44P7o7VkPl9iNKNn/QeStQDy1fw+S4oLYx+4F7jW4hXOCprPqvDj4sbwGrgMHbHqR0S0ZSSGPxT3k887C4Jrc15ITZUWiIXu3eIU+EDL0Aukhe6Z8PdSxbZCMBdt8ja0d/ty9QEaDDYJpZ7F0iLjDvACb2oji/GO8DQ8WluNTdzHziBzoyZxspTD2lbT0jV0ML3ruwdXsoM4ExXHN6fy6bhEeWdKHoCLQuey/+1+HdeDhmi8YxZ6XysV77Cr0XI8w5oXPQmGZg7dWiYcCw5TKo2DcIXyne8YKthSoLa7jpsTW9cZy/kIeJgeklr882g/7JZ9AY/5jrQ+mC4tMcaYh/CbZn+zOvkDcQWz/GfNWcZFrTrxCkpXyoEv+QC9pElwp1kUgsEP4g72Eo6z1+QK49XolWSx3U1vsMH2buluspFo9qpoiwua/0VHoh/jauYUw3rDJlMc4T3PK9hAFkkUktmDLuF/wEpazY8wQieT2Xob6/U6qRr4VL+TuuNSWXr7BPAoolK6sC5ZBUvCTeYetdS8wZaukczbHRvwr8lOeZIQGbkenNHL1XNgqrwmsA/P0GWC7XzNtmvVNdoqWGJUagFqYhTUfZ3Z1HcU7rWmoCazmj1NO2J59JB4qr2MRxDy7POPZfmJPOl7No3cFOvBi+gurwa94hahJngKbnAUt2xVIC0xnuIrnRlZj4E/Wc/AdUN2SpXSYsuhdicG+ftqj6GlctD7R5Rv6SNWgdNwCR7L+9rDtRWoFVxx7/efIGE+3beQHU7u2pybukkj4BH0vLIrscvo2V6GJii74024kYmsDX8e6BUj8jp1oTidzEwwdI2uFX7kU5Xz+Ix0y5VlP+FYIABySc6mv8PH2ERXjrMnuVmPyE59o5EEbczA/f0XkuWhY2YVnEFq+HXrrE+Sde88oflheYY4098304StbKjVBt0sLfTQoQ8x/+B8EzztfS2WJ+6Bl7z1siLobBv6zu/BA2MNrMWX5v9RGBAvxc9JSzjaeoKexotHlYpjHoov4vfQEO9f8Q6YkqqsUWIVHojvARe5EYuxPMhbJ7vT3eUwROrEIvsnrY4cNcYDWTjpmu07hc5Dh3caPcEa2eJAg1SOy/V+aKx7kHCPXCHd7gptOXuSnxSW+bJ9X6Ob8EwimQ29c5RJdLuZZ662m83CQBecQ/rgdLPbO5x9Yw/KmkVvRz/z1bCUelmtC+w0XaECfl+AQpquet4DaWxTdA8oAUcc57x14Jo/zb1cPsXOgDdIQcszXbuECao4LKFVitAnJRPaq/I0+nfjeBsP7nEX4et2irX5LwQ24jxEuIe/5XiZ/hPcoxRwms1egTfk0bgXN8V+6VxkxtgBIMQPyM8zLTBd/yT6ljye59r7rLTUXwwD9sNzzF7aX+rRxmyYzsvkcWilMiqRz74QoFlAdvDWnFvmRT7cuIujfJL8Z/0rxwzrIOghX1lFwdxUsVWfOghyPRGixH9AjBRrW2Lz4QZQq/+KnwrvFT3K8PDIYCa5xQ34LjuMve1d9i/WVtrJlrLmWCWJKFfZ25pgLbKeyLlKzZzLnf8HaYbqqMFjEp38sNKa8zc0T33h4aFLt0+Jb2fdWRFlmH2cdvH1vuvgPkjwK3Sc9Anb2bYe7CCF9Ht6C/eg0TyDfYhK4GCzDvuUfdFmvSzqpOfwt0KR8oAXJz/mj5oB+q7qELjeotTTN/hE0qh9CfO0GLhtu9lRfk1822wEKephH+kXpP2BtfRF4T/sdPy5tmeNx8lIIxOgUOmWHWRyYq/YB/6PZbHL3M75DRyRnv0="}, {"__id__": "chunk-c714f25513b834a06df9be534b25b79a", "__created_at__": 1760493436, "content": "# Bitcoin Security: Technical Aspects\n\n## Bitcoin as Digital Cash\n\nBitcoin is fundamentally different from traditional financial instruments because it functions like digital cash or gold. Possession of the private keys to spend bitcoins is equivalent to physical possession of cash or precious metals. If you lose your keys, misplace them, or have them stolen, you have no recourse within the protocol - similar to dropping cash on a sidewalk.\n\nUnlike physical cash, however, Bitcoin wallets containing your keys can be backed up like any digital file. They can be stored in multiple copies or even printed on paper for hard-copy backup. This unique property requires us to think about securing bitcoins in ways that differ from traditional financial security approaches.", "full_doc_id": "doc-c714f25513b834a06df9be534b25b79a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_1.md", "vector": "eJwN1PtXFXUCAHBEfKTQSgfhAnPvnXvnOzPfeVzRailWZFVS9EAchbAkj5JmGaXr5oobRKmr60r5ABW43dfM3O985zuPexR2j/k4vn8oK03B8NlmimGluKGmaeH2P3zO557YIyd3bDQfyCm4yn2NeidnpHnA2iQYoMmYLkS1fqWWGSqtEDPxFnMWadDfBk1WKZdOhmlZTBassPpzK9ktiUfOMc7jpcYUZiexxXItOmD8T0KwQIDxmYG++GFhpfoWPMN2BCoijfA3zo7vIWvydsgBbQmcK/2MCnaUiYN0p22JJcxqYbL7Wc+N9iOaQpLADIiZIUiTcwET2MLlIYin8Bl50DeVUL5p4nirEq5nHwpHUI+x1pjmpDK9oBPMj9rmOHhTFcVZ+qvcXnRM3cgny9fYCaTbvUo8TRrDB7lWHnL7YClKMzbyR5Q50S1SrfVU3JAEGCKnjANxhV0k9ru/NIdoJF7jDMPhuG45+DMwwNlsODpAZ+oD3FqQw7gCu8QQtQCNlhr0kc5dfg68DxfKCyIbQb1Z7M8Qu0IUNzO6nz/pFOAKpxtOhtdhsXJAZr1vhPfas8Dn7FqrWk/D1XZj5A8gHZ40JupPu0+EbxuN8fHSDZwGbqECXZEj+nhzMpLBaGsE3U+GZx9uu+i24hnsa/5esDI7L3HB5Xx01RXQbzuvCJ3eaVqWkBY7J3Txl7Ryf4XvRbTc97PZCrpJKa6OjvH/1ecl9z0t+jD3ZwiAQ+SU/kDr5iLkcf6cvpjUkBv2Ifh3tqI9CH+Cuq9UrNemOlG4G6fax0IQfYGeIddDWZHtQiJynvk6mKtv8O1nFERHW2L9Qq+Uwk0SFFIi14sPWUZuUNfpv4IPMnkhaF1wZYB6Y6y7PDGWSxLeZfqgqr6pzYt9o+dbn0gU32k2A9p+zf7UG+Pj4DEzmpgudLk9ig4/hOnjnrfG6EWJxegqlW8Gfle3mz9lTCG31A3RdxDNb1eLxITnRbUGpoDN8ln7b+p8bpU4An+i/6IHNG9kHd+q3OFW4B5HISkqRf0zvAadzelKn8AQvN73nrKtrdQ3TS3Bf4zvYsqka+pcfZnZAjoz3ye2/XH2UMxti4hHvW32PLHZus4zvkJjlcZ4B0VKnt9uSw9ji/huOCv3EX/3o4vwde6MkKRtJr0wC7YJM3c8QZ9tX0KNjD8fqwmUyZdwMvna+DN/W/6FM5Vd8Tq2Rmngp/BrjA2wQM0wPOa3/HHP9/4vuWedruxKeEUX2Z2uZfwGOUougEHm3cgM8XHzL6Nx8x61Fz7nLvRXaUO3L1cug/rYbn02qVIK5EX8eXG4+5552pwdrBT66OFsSFwIi5QStkW+TAbaHySq7MExMxJPgxPoU1AnXDaXsinmRGMSqjLvh134N+U77FYko9eeKjZxabBWiBpi21FyElU7g9IH3lYxIvUM8WSfkKv5QmcfzIdvmFWJS3AntckO+Frl+t8POU0PkCTcDybK24QaeEVeapbHrxKVSebWr/sR51nN9Hs4NbrUXK+PIiOc1FBx/Iag8KLRgn9Ai/EZ6iW8rD0I/uTuMPLSQ9we9LJN6Q2J47n/pa+ifCvVeESd44/zs5keFOZ0/0L9B7SJ/UeOS64ldLArcslcrrwEpru+AR3cFTPATEDb2ZvkfWmsqaHzpEqtNcpEw9ocfEYcmbgI1nqpnCVtE7JfkMqlO9aJwDBhBHcnUsiF0QJhrDPXzNrZSESYYT0yJ4EKiD3DrV24T9nqv+ivFDtxnynTjwlN7E20Aq8MFvFD2Fcjme7vfM00RX9FbuHD8VtOPqxrM0FMk9B+9xxrHzfeIOBboQE04HXkc0EW/23PYI+yLnQs0g5/BJT607+CzmprHLVaasHH7bfsOr3YTrRRmOOT/TH1SPArg/eVZGwVV6nd9JPOgP4maaD/Y+7fVr5jlLXYKuLucaO0of7rZCvJz/zVV+O/jfpCTXIZuCvBzDq6UX/F6XAOkumh/wNwr6YL"}, {"__id__": "chunk-08860b8ee1426fd5325d3efa69ab09e4", "__created_at__": 1760493441, "content": "## Multisignature Security\n\nFor entities or individuals storing large bitcoin amounts, multisignature addresses provide enhanced security by requiring multiple signatures to authorize a transaction. This distributes trust across multiple keys and eliminates single points of failure in the security model.\n\nIn corporate environments, signing keys should be generated independently and held by different executives to ensure no single person can compromise the funds. This creates a governance structure around Bitcoin holdings that can prevent both external attacks and internal threats. Multisignature addresses can also offer redundancy, where a single person holds several keys stored in different locations, protecting against the loss or destruction of any single key.", "full_doc_id": "doc-08860b8ee1426fd5325d3efa69ab09e4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_10.md", "vector": "eJwFwQlQFWUAAGBL0EEG4T0NhXftvrfH/+/uA4Z0ytI0dTDwQMFEE20yS8lR1DRJDR0VLQVEhefjeMfu/rv77wEeNCkqStqUeTBmhWCIVmpZpJhlmVff10mu8jcdOG484D42TzhnCWZwlH1n4+mUOLIUL3XHN6wmetiDgBSieiv+yXhNbxEWgD5QHr0ezgq3gBKVj4RUaAyzJhI5lFsvrf4ZTIIHpVYjg6ukVwsj0Al/q1VDnFcfs0fBdqE/94Knmd6B6sQ2/0lYpsSAOeAS2oyjzFnfBeMMSKdl8JlnIflvcrZ+T7WLjH8GNS8Un1YhPeWOebO1kQavFgrlTJbqHfoP72iKYx/Bicx606+tsHr08dRBlkhppprwJva/2nLwsl4CRqMlrrVVTs8lLg/vJiQqRvWb81NfYVKGbWC/xHZXGNzCWYjzfKil1UZgn+ep2YtmR0tTb5NTqX1aP/U01d5kCw5XIuY3MgwvYxND69hY8kr4MFNQ/57zVlqej4sG0A2uQCP1fPgVtHtjuSfKHpSOe8jtPC/KVJH1onDSPKRcUywqzpVAbGF3s62oO7wIX6f6pQ6yxtRk6rS+gguE3gYvKdciD8Th0aTUnfqfXJL6Cb1E2he6xW/DLUYCaiCm6Z/WrUO045mUZjpX2csmemYTTcxN82e8Q8lEZ825eA3oUQfhO+CM7XvmaHQ/eYEOgHf10uD7mADbgwf0TjKLy8bz9WRmvnjOLRnF1HFEBCf7OOaKOURIMupqB+NG6Z9wMZVPCEQZV+iu9U9RpigXpRHIZgW5NDM31GV+r5BEHhcgU8Hu0LyUp/CWeNLVAGfRmQ0J3hjfZOgyKtlcrhCO4mVvwJtFhhvKfAVKZsRD3kR7RKf1IzWGt3xfAx2JwdsoO9VnzISn+Sf6BPBHY7m2RQnB5fCcOLnxHuNglOHnQX+YkLbS7AzFWK9jw/sqrhj2AM6m7Na1CC9ViitrbpBLq+NBwnOW+zRHDdkMKZ+tqpnr9XejA+y30QGIDM4kW5QxsEwub0xXvvMuZG31uZIo79Zs4Q6xglzky6QKYAZ6qLj1EJUs5Egdzml4HNDhJiXY1OkeiCc3lHI59GwtUeinbwP32FOuTuUAmUU/5upQOjQcZTBDWEu6GNF5mEwHXb4czwhlI30XPgV19T5nHR4K0pQVWg7/LKjWSqSbKs8bgh8sNM/gC/R575uexbSNesZfLO1Cy8VWzuYrINcIbdZDehGbp+QzZ8NVTLewD/9AbhzeoiyFyXqK2qW+tLeTuRcYpJ5SKfWu5AJFrjz979SfnG7uA2YVd90xx8w08sU36Tve/RIlFMPLMhNZQ9ui35HvWY/RRWWUdbD2ef2I4gBFVhzRpU3SFTxB3afFGr+i5jrSOcL5vD6Oj4nUsFXeGbikYj1LqRONGj6b/BqwUA57qDnCQOcNQx+S43vHmG5MAvHlG7SZSPX75TOhS2SbVu97OYDBG7CS1mGhtWvvajzWfYzLJVKVVepO12C0gN4h5ahVWqZ+B1VI0+ka2C2mhPo5jxi9zF3Vjo47xoIObarmpg+TAI/X8q2BgcvwFETWMqWIGyOJNQ/qaNQG2tVuLQ0thlPC2/gseVzlHi0i5uKx0XPS3+Cxo0TaauShDFeS0coXawuMZOuQb5raRbSb68E4WGZOZfbCRnY0Au42fyw/XUtM+whswALkwVzjBrxvSca/RgeuYmcFJJOif/dWwh79F2M++li+Ck8xR2SH+WVKPjuKi3dVN2ylSigHdBivVU9hHsKp9CMtwfSQXzQmgkXyX/WVMAbdJgcYK4Uk/B/9OV0Ov6g9LL1FvMIVib9F++RCVIRVvp3qC3+LzkUd0ZGh5dxFuUOntRq8LPorM0EbROVS80SPbNPs7H1lI2hFR9SPzF6xQd/q1k3n4LXiVjkOT6c2u9aofd5Y66oWsdc6EuHvnnZqiX8GY9C91FraHskwFptAFvD/+E6eGQ=="}, {"__id__": "chunk-9215cae5f9adffbb11444f8f37f4e24a", "__created_at__": 1760493459, "content": "## Survivability Planning\n\nAn often overlooked security consideration is availability in the event of the key holder's incapacity or death. Standard Bitcoin security advice - using complex passwords and keeping keys private - can make funds inaccessible to a user's family if the user becomes unavailable. In many cases, families may be completely unaware of the bitcoin holdings.\n\nUsers with significant bitcoin holdings should consider sharing access details with trusted relatives or lawyers. More sophisticated survivability schemes can be implemented using multisignature access and estate planning through lawyers specialized as \"digital asset executors.\" Without proper planning, bitcoins can effectively be lost forever when the key holder dies or becomes incapacitated, regardless of how secure they were against theft.", "full_doc_id": "doc-9215cae5f9adffbb11444f8f37f4e24a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_11.md", "vector": "eJwFwQ1UVFUCAGA0sxB1JUAYYJj35t333r3vvUlwY/OHczTTo5h/5Q8klulagqi4JkeP/4lkrIorCg4wM8ybuffd+34GRXKr49EWpZZcIXc9WVhKSZFrGrId1nRT9/s64Fa1suU23aXpXCcugzO9ycJ5Z0w0AzVjv5QhfAYGufLgNRAmLzszaBB9jxKy4uGXofv6d6AP9mB/+HH4iF0SOyBVwSFg0MzN7AT5oNl+XRmU1o9bo5/TkBNW3DoAP0j92gWxCNxKn2bdpih7l3ooMkWYqESie1gV6hAbnRHKwvrfiRnukugWNNH8xfgax5SFwlJd9pX5NfmAdwepYOvEZb6e+slj89KeVwascu1dcEZ2OzOtOcZZp5rRY8+SdumsoYlu4V/SVWMDPEKqanK4Qn4oHAwMRb2wwKoXS2E7uAlOaB/YudWF8pmmm6wXlpPFR7vU43C5XVizgn9H+hT14lFRHL2elOkY/tTAtdh/qUrTpddrp6JcdWcoI+gCx+AjNFIJi5udVO0ke8NStUTxI88S+Rd8uYlED3qLtDKWKHuixdwMZ22w3bqIpnjHcidSo0qrZ7435jztXQ2yzflHC3CLzfnMxhY0x9xJRgkHSXx9lAbhv/EpdMNdlbZf08x6WsneT3rM8tOmk3n4Su0qtIeluPfAyqxcqDbvJ4mUkP8YPzXHK10g32xQG/Frcg0cBoJiZtbhQF9aKntKWc+i1s40DZWQUuKG5+il9GI6d+ygMYHPkUuhSJ9XZ1m7re7wX0hfytfcW5EOsFm+AkZqzPO+Uef+e+gF5xi8QUvIZGu5FKjtgxNEn/wosy4SL8f4IqFYScEvwI1CdSBd6meXFKK0wTVogndHcE2wWffAYUwmfaEyu8k6wDxwNUqIXIeb8Z6a0mQYmGp8CXXpqu14cqx/RLfjG+Ir6hFzVvPGjF3ux5ln+bbUM5rfeaNmlDnOjI97zakgNpqeNNrJMp6jpjvP5VYu6k/Ieqi92qWOl8Jao3WLrEVFSov1BDtJLvGt+FX+LAikPwq857SabVkUNAbG0OPheCMvcVHde+gGPsS5QO3hfSyPLAI/K4ysJEv0/ShR/IpZVnaEurZJ2+EGfbMZQV5qaNPQ6WCG+RxYKrWjFHxOmuOdgMYJEr7ljjX2exPAmCCTxtMhYpxSr8zGxW7CWkU/vhXs8k2GlhnEfzA+h6u1bOUOqc3kvJuSSxtXotvBLPGPxib8p+AypR9uE+dJhdYn4j+9vvAiMB5z6LT6pvNrw0Ux39iLe5glfJfwG/e276lju/kZrIe8xP+ItsI2owQb3CjtkLoUrsjaF/7J+lYfruZ4GsSryrewkP8mOhzF2F5/v7U+oTN80GrlCmopSIJvEhoK4En2/foKvChSzCrIQOQ8edH82KpTRnvLlel4W2x4NDfhpegwJ0fgmu6KplwAv4n83ne3vpJtiDJ41BTsWnkIybDzOKQ14UlNGdJ59nJY4pPhXPQ2vCOcZp9zi+1ePV1Zxv+ZlEV4/7WGB56NrJE+pH+zVbZPn+abha6TONZN3nKWosWu600e5ZTcjL+qfwBfNZ+0nrEumJexiKeFPrL/RyqhK/WL+NFSN/vUv+mZQtGKrEMp7Kbcmzqy4Wf3AtZFDonHk6r5VZE4cIc2kc+UGnM4nEIrnOUjtoIRrEWcaV/2v4LarB/1OLkbfIjT1JXKJ/CgXZpdrJbTpyOn+TpykiuPXXHuWu3snrdTuGfNEhembZFT2IDTYWhZe7l58g57qB4KP4RF8Aup18iNTORncpPN2UKenix0g5XmajpgjnNOoE3R+1y57Pbny7tZSJ5rjJXPoTvgB3KKRoTtwhI6AKlaGO7Q/fIS0Bma71rnmGyqa7w2l46hPewa2UK3iDcPXwhPT6+gteCvrNnzWzhdetJZFV0Rm4Qvmo/g93oSv1YK0Ht4WKBAquJXganmh2a3sAB0CWlgAf312YfSAzTS9aJnNl6T0mP79Xfo/wHS5qVs"}, {"__id__": "chunk-ed0a9aa1e7d5d70a1e7e35bf280a2a88", "__created_at__": 1760493465, "content": "## Decentralization as a Security Principle\n\nThe core security principle in Bitcoin is decentralization, which shifts responsibility and control to users rather than central authorities. Traditional payment systems rely on access control and vetting to exclude malicious actors, whereas Bitcoin's security model is based on independent verification by network participants, allowing the network to remain open without requiring encryption of transaction data.\n\nThis contrasts sharply with traditional payment networks like credit card systems, where payments contain user identifiers that can be used repeatedly to \"pull\" funds. Bitcoin transactions authorize only specific values to specific recipients, cannot be forged, don't reveal private information, and cannot be used for additional payments. This means Bitcoin transactions can safely be broadcast over open channels like unsecured WiFi without compromising security.\n\nThe decentralized security model puts significant power and responsibility in users' hands to maintain key secrecy. For many users, especially those using general-purpose computing devices like internet-connected smartphones or laptops, this presents a security challenge that has led to individual compromises, even as the overall system remains secure against mass attacks.", "full_doc_id": "doc-ed0a9aa1e7d5d70a1e7e35bf280a2a88", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_2.md", "vector": "eJwN0wtXFFUAAGCpRIMMQQ0WFpjZmTtz5wFkHjuWiJb4iFNm5iM1ylAjDZMMNHxgpiVqSMZDFnbZmZ25d+6dHUwk1LSHQmGFHDMrwVLBLLEwEtE8WVbff/iOy11p8xo225PSJtHRQh+fL7rQOHudNL9uo/UOf5/rsIbYzJHnlA32D2Q9vuB8obQlbZf77TNWlwj5RXgkvA448pddJXm5ZjPfTvC3yMexjbOYrfGTUgrQ1+ppegpsR40iy1er+TCsei98HpeFJqfdVn+r6QY+odgaTJGcxl5GlvkEKQp87A6DAyPO18RaraU/iF3lWeSAuo5fnpLIuNGHdJ7+R+pB9ic6xtMgT7XbhW/gY54zJIMupftIn2eYeAQflF7Dr2s2O0rMI4RZil/gl8HH4NoUb/A76IUmuWVd9q4VZ3jSJJd/ObjfdwFPIb7gU/b9tWPFS1KHHU5cLgd0SYUVR51hia7KVKcARFh9el5t8fAsZQsXAVbWDNUpewt1SKuVdOFC9EmbF7KN6c5evlEcAn3KVrpaiLLXgMjUF5gEcwfqlJ+n1WiPVQVVaLCvJVyXw7QdzGDnG5AJ2NAN8rdVSg6rbm4E9DnT0GAtPaHMajU7hafxIGVY2WeGIt8ys0O5gZ2xBc5xZiaJiKtjMvzZ5FthDreD34c7nOfQVxTEPxrsohfhv/cecdlSwGyUdqvdRn/tHcmvYod5BLfzk8ggux31s2+YWnBu3GE8PnCDNHE3gtdGFLknwDp0WDpkLwnvIc14nJjGtmuKMkN18apqRv1Gd4M6vNAZLe22+lCbNTuQxx+SoriLbN6oWWaPfBuNBx/Bn/2jQH5KtJ8V4km5ZMPxUpt8U9+oTfV8ynwAc+IFcoLfTNd6X6T7hTlwF3xGmIc/MQs879c8bbUqMfKY+izlYmiptYfNEmJUYF90zhn/gEgtQ1wMM9Sbzj0Gri82N9SF07fpGeVZ2EsFPk7/FGSyTybF+u5THOwkbpQuecZIIeNk5XugVyqhS6wfA0gfh73J91Z8K0Xbg5zo5FxtLFzpKqqMqdjM7U/e5sszC5mwQJQwxbcUb8cLKiYrJ1gR7abZMuGo0eoMjbVoCfCKzSSP9qpnUb88kSUoO3hAGJkYoXbicCmFNouzhRJ3vtGAH1fuUqu4XTWt9hYxHl4Cnwe3xa8i+8GD/iEYpYarb5pHa6tpQcqA6pVz0BZvKd+SnMufh9PNKOWgXoAXaUOVXq0+aQW8uud84llQZvSAGwyEPymr0AduqD2OI5NOWAviX/JDLu//fXPv9DHpgbVcKWgDJeR3Gq7nsueFn+UmfhedaiHdLQZ4N/wYZkpNxibQCNcbHeLo+kaCUIzTF+3h1wmZICpEmFHWSauYK6cD7HHzH6OBfqThQLktyg+YV4RhcoI9Bw/hy2sLQ+vUCCZSmaUs9ATgGul0YittS2iGx+zO+nSpyrxOclhB2YvPmkc8E5zi5DGgVFgJD/HtQr3ztpZqTEvoEJ/0zgFT7E3RV0J/CBqpxC2okn7ufU5bAGsFU6+3+q1YmgGa8Fb3y/Gj734DLTGzPTJ7gJ4yZjifaILvAbTMvh0sVLZJy6xu5hWzS8gFMXgcOSUtNr4Hg/WVOjXHokKUDm9qf0phUDAS6Ml3M6RM6yGZoQPBVaENaAdexLj19SRT9uNrMhQ/DBwIjuceThtQv8TBlDWwILjY3Q+P0U7hGJ1F5jpXg0dBC57pzOJX6C/xvZ5/6eTQoKQSuEIoNc5ZM7kiOJurdF2rC3cVc6ek9+xf4i4nyfwE30a7ws4xoTOD78ZN/DXhWG0/u5PsTQwjQ/R015cjZXO+OZHrFS+TDLOf/wVvIk+IDdo8VENexXHWFW61OkDcVi6pQu0aloajiWBEcnTNcq1bW+/PITUK1K/6Lzll9q/2GVgWOp10G6XqRfjR5ESItLfgVmc2WWjG8Nn8n2xkXIuyGRQIMNjje72at6ndQ5ab/wFN5rRK"}, {"__id__": "chunk-98cc0bd0e44797bb95ec7a7e69b18549", "__created_at__": 1760493488, "content": "## Developing Secure Bitcoin Systems\n\nWhen developing Bitcoin applications, maintaining decentralization is crucial. Developers familiar with centralized security models might be tempted to apply these to Bitcoin applications, with potentially disastrous results. Bitcoin's security relies on decentralized control over keys and independent transaction validation by users.\n\nEarly Bitcoin exchanges demonstrated the dangers of centralization by concentrating user funds in single \"hot\" wallets with keys stored on a single server. This removed control from users and centralized it in a single system, making them targets for catastrophic hacks. Unless you're prepared to invest heavily in operational security, multiple layers of access control, and audits (as traditional banks do), you should avoid taking funds outside of Bitcoin's decentralized security context.\n\nEven with substantial security investments, centralized architectures ultimately replicate the vulnerable models of traditional financial networks. To leverage Bitcoin's unique security advantages, developers must resist familiar centralized approaches that ultimately undermine Bitcoin's security model.", "full_doc_id": "doc-98cc0bd0e44797bb95ec7a7e69b18549", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_3.md", "vector": "eJwFwQ1wFNUBAOAhGo4kRwKSHMflfnbv9ue93T2ghjjQSMjgMNGGVAQszFmjcSgQSsLQiLbEREIkA5qQQNpg4H727+2+t7sXtNgzGhhTKAzFjhoQHNAIqTEiJggtlmJB+n1tsHvu6FsjZva8V/E2tkVIU1XOWStPbGZXKwNsMd0mp/jFwZ/ABBl3GnPL7RzpIyafjZE3SCkMgHkIpZ4qOoR3O3e5+xGkr8GldKGUZah2E7MBVM291bsxWmFniWoqyuXAD2AjM9JXCXcE9jgd8zISindEVjALA260GOZQGf1drvng77iBYKP6GNh+8KZTgn4GR5isvUnY17dCCoFT5H3zW7167uOsz5xFXxYP27+N+JhCfsQsJLut9dYx/ZHEZfk2dxU1+zG9U7hrPkpn8LqAi2sUPdH7crYPcCUYa/eURd6VfJbYgJvUPXO8Rr7OJl/GUTlLapUm7V5zQG3onQqnHnjbbqDWzkj074ksCOXir/yP6ZIwWTxE36c2qoWzH/YrAItTQHu3jcpZQzvt1AtdsI6LR8vNb7lJs4TJjTpsNXNScwsDeFCpsttAWPiKSRdtEUJqT3i2M8rXsJisJhVWLXlFcmvboOBcUK2+RXqd7jZf4GPmeX6aulTPFqn4cnsV8xnbZS8Hj+qD+ovspVlZRmeuO+GG9/Rd6ZdU2Zjqua7EyBHOVUR8k4K78HuwXWh5cNnM88x59F3fWhMXH1IesMqNzd7nqeCu8cg060l9yLjurzSGFbeaZl34S3HYWJo4YpUZM7WF4dL9VcASXfwM6bqyA59gXgndcHzwa0vB+3CrnImUglv+8uAy1mv/AC50fOb7mM9X/sL+HPz50IXIWtIKYtG5cKa4Wek3kqnd4df5r1GJYVLvoa30ClIGjoMh8BOowEF0mC7q/ROuhRXQS1J8vdOAz/BPdH8El5BAPyO38D/IkN3INcF2u0Y9099s9PpjZKuRFS2A9/BfZaT9vbsy2ZscUOOiiwwFS8TC8ITwuIzRBNcpua2XydvkNa1Zc3ET+nIRkVrnjWBOZCKyipqn3tPzGI5aHQ/EY8krVAHrFCXQfv8n3HFIxVEKowLmDlNvetI/hj34G+YlyiK1ZJR+x5SjG+ig9mtzNJy/r1Ks8sxnF5hj/BhTg8zijtAYGOP4SEGizm6B6wGE3aoe9JJl8AT1jalHC2G7/jSutWqkvKhbYt3vGTbb5Mln8oRT2lviw29m1O7ku3znnP+GAuBy/9Pqp1wvagXnZtdxd8R9ZJfvgvI/NMk+iIaCZzwWUMWx8Dp1oi9fv1Rcxo2EPzRqSVeSY6+AenCNYa0YuYhorofnmT64U7ih/ccfh6NonM/pX6S/7nnNkZO/iOSyX4Lpzk26XzlidSKJZCen6LvkZtS87/fKQ/Yg8MaXMJVCK8kEbrIVh7aQs5LiPSbOkarYbpoS/5a6aO3nDanO3JvOCD6tGt3uPSndMR5SCfVL66k4ox2OuKRj3AawwHoHX9WXgnE4yA5rwTQf9in/jiRwvr4Su8mE6xG8EyqRBuO43mWuwZf4P2IhQaV+xV7q4UNCqEET5BkWnV6nwWC1cYVU4Haxnn9SOU3fRlP5A0wMcahNeFb7RBTkEeWq1mYk0HR2Pfbw1dxeDeKOEAs2qeekaXaVnu3oiY+No51T8FntjtBOxpmF8Pv2Gnncfys6RaoyrkjHuWJZI2Xii+gaaMdPENvpMl/lfuwrwDv4WGQxs4k5oacJVDLghYPT8T9RWehz8AUzB3SizeFGulwowd8F6pmt/HTPUQtYW/Fdco2KJdeorZE/aKeoEFnEbMErqUwkwPr0LfFzMBw5j7Yrw1SFGjMP0Gn5GaUBbcL/IDfebIG/wU3kAVyqf4ovii68eVZ2/Bk8Hw/iHi51UAQ1eo+x1HnOrnVaw6ftROpwOKZ8KCNKZVeFN8CTZAkqjreE/+V9lurBXwifs8P8UfoU1RTPs7al5xuXlf8DWKec8Q=="}, {"__id__": "chunk-19a60d69be899ba2c6109b7acc1b8fce", "__created_at__": 1760493504, "content": "## The Root of Trust in Bitcoin\n\nTraditional security architecture is based on the concept of a \"root of trust\" - a trusted core that serves as the foundation for an entire system's security. Security is typically developed as concentric circles extending outward from this trusted center, with each layer building upon inner layers using various security primitives. This model aims to place most trust in the least complex (and therefore least vulnerable) parts of the system.\n\nBitcoin's security architecture differs fundamentally. In Bitcoin, the consensus system creates a trusted blockchain that is completely decentralized. A correctly validated blockchain uses the genesis block as the root of trust, building a chain of trust up to the current block. Bitcoin applications should use the blockchain as their root of trust rather than placing trust in other components.\n\nTo evaluate a Bitcoin application's security architecture, consider each component and assess the impact if that component were compromised. A properly designed Bitcoin application should be vulnerable only to a compromise of the Bitcoin consensus mechanism itself, with its root of trust based on the strongest part of the Bitcoin security architecture. The numerous hacked exchanges illustrate this principle's importance - they failed because they placed trust in components outside the Bitcoin blockchain, such as hot wallets, centralized databases, and vulnerable encryption schemes.", "full_doc_id": "doc-19a60d69be899ba2c6109b7acc1b8fce", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_4.md", "vector": "eJwN0AlXFVUAAODI/aBlIArxeG/2uXNnHlRKamalvtQoDaVMSyvKQ+RSSlopKqloIRkp69vfzNyZuXdmHuVCi0lph6PmAaljIWnHNC33yo6paWB9P+ErVB7JW7LtKr49b4Ad5B5UPq57y1xIPlGi7EbD4ANZ6XqH1AhPCNOcjuRs3SafwR7PTaPIqsGBRAWsMAu07VS7FXCXs73wlHDFqmIuygfwPaQevMl3+Z8WKv1bnSc8c2J7fanAVo6CocJqIMS9brf/NLxmVIDvJPnu/eZo8AEf1neCZuO1+Dog18czZ6m7SQ0zBHLKz8YqMJt9A1SDYucYPpazy78eHMSbPRlAdx4QG9LqWce6QGFcjD/M3BdaRf9ODcA9OaLvCJxJCmlklRt3iI+CHUqvVsQOZk9az5Kjehp8G2wW1pNn9ZymymijNhlUGcsiSPLkduOruKW2i06nq8UqlKIN4pvdKw2/RAaSlbFxuB7Q2t9cZ9YHaHdisTpbejz3KzhOmIy7sg/r7e4KWCcegh/L6xu2MP+Y99Gfwdb6P8Sz+jblBdKi/UAyhHTwKjWGKVfWWkO0Hrcq9JGXtqcYM5x/7KOgky5RgliN1Q2ZovfSAHdDxg6ATjLR0uHX5jL7wKYbxt9OL3cOf6S+A877ZurxjGqziPNFXexFJ72nM9LsRe5l8ZZvTVDmg/QKtlmqEmn+x/+3BmcMsdbF2lBVMhzrJxxClBaGqaQGHUFRrRsr3Er0pxDBc8Hrpp8E3GfsysZjI1JC7VRcmQyekxX0g3Op6av4qWQBWIvnM4tJec7d1DmxLLKA8ogXrVaxHTloBJvJtDHZEhd5jupo6uG7QLs0Qeo34ifUhzuTvUnYon5uix9eDg/AZU6cCQBGnAoXWnOsQcFiUmA+LhTSi+18Za4zggz09qcqJS+d3rwNzfC9SSHfveJlMCA5L+F3txqnMn8kUS0Jbvi2mdOMWqdIrdE28l/oz8OR1vjh8+TtyKvEjEIrhxfgdnSbKeAZBucJUBtAB8hDJ9yWxkVUNv9uvFBtoM9REX5FfCa3B1Pcv+Auo0Xk8K/SEclCB7KeT9TW5oMbZpl7jV9nBalLYKyukzqlTOuF6XB85BdSShWxFQoX28HnEZ6/4BVRZvTV9yrBUM5kY9RAcpUrkW5ST6HV4dGI4f7i5pJx/lK4BfXBD5qz4H5ljMygk3iUcCzkpQbLE9GTMIGWe95GfcGU7A3s98Ln7s/iK8Iz6j7uffo0eMCfY95PefQ3tFngsK9P+nzxPPeNLMYlWif7rRbtBb6x8WGtzDjdeA2uh3VwX+I4WkU08zW6L3wSNLBhKdfKEwrAt8ZvAkkuwaY+yT3I3KSS4B0p11nC3kJhR/ecwg71Mm4iTCLNM1087uyBa/Q0iXCU3SqWhqeat+Ph8pzQy7BYuUeYxFyCL1KTzXlMCWzE++yN4rCspHNOr1N6oyPJo8HlOD+zNb5QKJJGC9OlFFfCLTmupMizQdKa5IhcinGJ/96ZqB6tX2uvoUrxY6LELPN8a18hGp7OlsW2RKrpvaHNZpo2X71TD9pTrZHuXL2SKogtshNaSMoSncykpvomyG3UDPNdO1UqHx6GO6PztDYtbkxF2cxhq4gSgYyuolRtgaTbXXKnfSfpb//E7FLPghV2mdAf0vau6P2wVs8yljJjc5NADZ3NXapMA9cNl/8V30s9jL406eYucy0TqJlGSoK3ce/xBneZtJEAf90ztiGMLuBSNlUaLDKgCA/rd1a4KGTh1WpfYTfoZvIdDb9vP5RMY0KoIrWanWmVJD4l173H8RjtIjdeuBUzsV/Mk0T8UnwDvdVcgAPSHv1LtVJ7St9k9xVa5en2XmKRPfi8WjJsqHsmPMpTq54gxerrwLUOyvfdcUFd6OSTvXgUmOVuiI2l2iIvDefAIeH3rCYpVRvaEPX2GKxUrnbyO+UUcQ7s0DygCzt2q30Ir8z5D2dgqhA="}, {"__id__": "chunk-a433844bd26de3337e5e4496c1f3c543", "__created_at__": 1760493508, "content": "## User Security Challenges\n\nHuman experience with digital security is relatively new compared to physical security, and modern operating systems are not particularly suited to storing digital money. Computers are constantly exposed to external threats via internet connections and run thousands of software components from hundreds of authors. A single malicious program can compromise keyboards and files, potentially stealing bitcoins stored in wallet applications.\n\nThe level of maintenance required to keep computers free of malware exceeds the skill level of most computer users. Despite decades of information security advancements, digital assets remain vulnerable to determined adversaries. Bitcoin creates digital assets with intrinsic value that can be stolen and transferred instantly and irrevocably, creating massive incentives for hackers.\n\nHowever, Bitcoin also creates incentives to improve computer security by making digital security risks concrete rather than abstract. Holding bitcoins on a computer focuses users' attention on computer security. This has led to significant innovation in information security, including hardware encryption, key storage devices, hardware signing systems, multisignature technology, and digital escrow.", "full_doc_id": "doc-a433844bd26de3337e5e4496c1f3c543", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_5.md", "vector": "eJwN1ItTFPcBwHFRO2PTcaygcHB33D5++9vfPi6IikaJhaDERBHiAzAKmIiP8ZEadSxFqjVGY4jRxEcQuMfe3u1v9/fb3TPB+Eg05lFtjA0CMQYb7Zg6as00jmKKg4Fi67/wnfl8C6TmHLGtV38tuC47VZguL9cuxyfZtxUvZ+n70btgq/HA4wOvK4sSbyTv0QA+LFzLltHz1hnzLVlU5ltTyXpBtr3ucpjC52mlMAMZyq8MH+4XZ0j9UqPZHWy0eZRurmXGCQ/UYvaCsYcdlZhGM8ftCAbxfb4J9lhnmKfUreEv7VppSNQFvYHOtKZ9183JTkFLhZIuPcRvo4uxPvUZdpj9ml4B5gVnwmPekBBE5ZQBKYIXPkVW0BesgFOF6kGlcA7MMW6CCWaROjyhsT2R7pbPYJ5cIyx1TmoLpZsU6DmJALqIMrWD5LLBiCouNbxQcAnpV3MVL11PG1qGirXKAvYUGfQfMWvcPm0lGO8sIdtwt9wf+GpfDujGs0cfyproKVJfgaPZ46ZHLcYzqSgNgCtQUj8iuf57ZGf8B7nG6AYXrJtyn9tgfZu8JW0Dh8ARvUeUmOfZLqty98fcQrKdVDpz6EvK8ExVfc8YJNdi08w7lmHp8g9Ge8Axj9Nc5SqpI+Hmv6X+1nmBO08KD9SLL8G86CbpgHcW3xR6lOzK+rX574w8/IvdrnyRfcWISPX6v8B/0CgvYGYKi52aaMhawaRbRWQEWcAtxO+YbajQG+Z2kDKjH19rLR3zD3EC+QYKWgeXR9JIGfOmeABgdBA951+t/CzMcwvRUf0RWY1Yd8DIp33Rl5lFaA7QwMKQQ3vRMPA//Z8ROzAClilpGVeFVKcEdcozpKfVgXAd+VL0+FvFaquMXPfLZF1TJRX8n8ufo3VMMbmVeGg8wJdoBcqUnrGg8J1diM+wJ+AtlGJtdWVfhpDMbkcpwKO02XGyxv0o/mJEIfnRF+UP+GUkS3sDD+GnZu/a0+MMKr2JKP8WKhAWBEdbd4wf5bZglz4bf2vysXmH7qMN1k3hdCwtWUVuCXcEn+7QCfEl8QD/jmnCDrPad4T/q/EyJrhSWg57SIHpkkFG4zfgBreiaWdkb/z38lp9CE1XliSy5ClcHQa0xPxKHKn+WShGr+o/gwdgJZ4Jx5C18GvxDOwH39Hd/F6UCbYzSXEOaJe4kJF4NfgoWNpy1crBjNQX7ITT6JDoXak4XDymRB1OMpRvrCKrhF6Ck4XU0AW4kTL8LA9j7AJf4JNwitJGHiL1schzMH9omz5CbxSOqu9lp+ir/MfxMlw4eoMe850mm7RGaaX8LJrI1cenkU2kE60G+em/KOOlu1mzwCS0hQzdPj95zLgRepj8DTd1fx4IBraRHnZRfBlRrIBxkm2wQiM58gG7gEV2GZrcwqiL0SlnDS5v6og1OUekK5kfKrpyVn9//ym5GV6mGtcg/Wg/kaxWTHMXWTU2rGqR/vCAb6J91JrBt8ql6gi2RtxMz/EaOR05IdfCKnOzoYQ9rXXxLU3L8KB9ycmwq6xqKQfuby3DW8xPIsPkAfvDCB/eyLxv5VrjPe7Y+W6zudn9E4dgy+PSrh3MbhTvg3p+JA0L8GBtaCtejLZoetBPO1pvpL9Lqw1B+CNWpTXcbiuqfx3vkpZaf1Fm2y3mDnsVN9fk4RTXDlyX0w9n+PrC1ZE/cDek2+oxpZisf/K4OFeYkBglmUYnc9FeQZYenuucf/yVPTQf5HLTDT3mpxuxJ8BKF4R+ei36MTyLDnh/l/F3k23+9FAVP1TryJzEjxd2C2EjSF43TPfJxL7Ec5HU1lpbhtW4/LGoaqEdPS0tsf6bLYpPiHcTBeKlPUctrw2Z78FP2u20Xc44e3asPLiX5LkVTgm5S8+iEzaLPtOmG/fM1YYu3iPpUhFdlFae7KPrrZ+EXmdHZjfQYpNIHdgrBsBy1ELKiaRR6ON3coxVqo6Vu8RtWoc4Nd6FzzsoNp/7P09Nn/g="}, {"__id__": "chunk-7152281f56f9795c3ef3e1bced0df310", "__created_at__": 1760493533, "content": "## Physical Bitcoin Storage\n\nPhysical storage offers an effective security method that leverages users' familiarity with physical security. Since Bitcoin keys are simply numbers, they can be converted to physical form by printing on paper or etching on metal plates. This approach is often called \"cold storage\" - keeping bitcoins offline on systems never connected to the internet.\n\nA seed phrase printed on paper is known as a \"paper backup,\" and many wallets support this feature. After creating such backups, securing the bitcoins becomes a matter of physically securing these documents or objects. This approach eliminates many of the digital attack vectors that threaten online keys, making it particularly effective for long-term storage of significant amounts.", "full_doc_id": "doc-7152281f56f9795c3ef3e1bced0df310", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_6.md", "vector": "eJwN0o9XFHUCAPB6pGeYqQErsMvuzO53Zr7fmV20OhU61hB6mOajQjLCLh+Sgni9xOT8eZ2JdmdYSgLyY9ndmfnOfL/fmVnJHxHqeQ8Pn+WPe1eSB8kVh16XpJec+vLehVb/wud9LsiPhGYd3Om0KJ3MJJWwm3TRLWYbN8R3Wzf5zVKVZmrb5VG4mm6wt1jHjCr+vOcS3ICp+ThMldvscTIoDLBNic0ibb/t+Ry/LryOhiNp7Dw8Jw3BOjo9+Ct62f+psVLsBKdCua2nYXlLepNA/p49Gkwmh+G/4Q7tBgZKP8c73ypXeCdwmX9SWsNFyTm2wHtZicFvjEFlBp4W4sUiTPST8ZTsPebU5nfhfDROVXma3CG946SQaSTXqfKXRtb79ogiSXX9070lCGkhKNSzuE/k03Ic1hmzpVXBNpyV+aR/j9eU8rnH6Q/4hrTCvBG7LqaRauMPyrbgQ6wNTxQuZo4hFNtqlaS7I13snnmxg5DJvn69Gm7yr41vl/5s1KGc9BHljez7lPvdzzpPB8dxuzMPPSGLsFxuNO7yn7I6+CJaGMuUC/UMZDurJs1mvfJHSlHyo+pCcZXARb+zJxg6uGpvdH3Dim2XXCzJPysf1LcbOeI5o0j/QIrHsxpmGbc8GaFX1QiZ72kR09lUNdP6j4HBY1yR5nD33F8Iw95ilhedQfv4DbTW+kH0cw+w2dJuuktxc/0ZS2AkYx7br1ZbmHNz/6dHOsvEZ8Ehfb6UULH0FjnTNM04rE1i78JjtBcJRk70pL7U2QWPw4TQiL4S3hdC0t3YsghGFfi3rB1ObszFtWw5vmEsQ7GHKrk2/gjZiHb6S+u/bwtrm6WvFXfk99IdegVNUHQ5gWbFczwNnoWxClhs7MGVUDV2CG86nwtrFRN8hn6+wRcKZ9t0qw7yUh8LCH+yG1iRmoS+hGPWhwd+LayJlmgCek7QgvmsqrXXXhpZ7NltiZEBPhc+b7aZ+WRC2rqdI9y1eI/wsXtr+gGYDPtCLqsC10mLlDx60yw3t1KExyQx3u3V9fREk2XyAwE1fZSubV/tqdRchJv+SuAWOCBcxV+TKXQYdoM3wHE1maZBLSXP9CWe4vLIoc6T6F/+XZZXyXaa4VeNZ0i2MTPrQX518B7YJl9XK1CBzIyqwPz2VlQlFkjPgLCVohyBh9A8cEf0RedySd7puDJUo/TZKxs76UCgPTsDfIavRns6x8X/ugdRuHVmMHVfCX41DpUT4Ay3ROm1mzqK1a4sXhkk94HJSi+7wm8C2+Ol0PJWqFtdc7VJ8vKsYX+B6qc7TVs46ivWH6WjqWvkKPpImSsMkY2JRWSfcEHt4b5TcuSD/mLwgfytlYst50v6lHHWCQvbqEv6EDXRBWgRuU23NK0hF90r1FNamRVuTdC5VrO8zcukTUIKFUiDMwUvTRxDATFJnipNiXTjMrQKzHTGuYnwBG1wytEcX5J2QY8EHavGdvn+gmvSf+ktDw3KK+B78v/I1UAp88VfC/yGb6Ev0Wf8ZUTZ/zI+Yeyj/ew07sM9sAT2xRezUlJKN4DFzve61FobM1jTw/thbbTWuUTPOrOM8/BORrLdw86JQ7gMIOCjWqA+lszcWie8FgsHX4rlcCqtoPV0otzFxlCHPqRej3V5BLiEDcMRloe76QtAVgvRx3SAJ3C98w9hFLydtjTzaGBELpR5JxwsQGH8ox7xVanlIrB+4eiJW9Qb3YerbeD5m/+usYwetTfSFYHjaB04ZdTix+DDcp4fe5pZjNwGn4C78Rm++6U7/FTxj4ZGZ/AHEzc99VwRf833BJut5rK9QjEtcV+GIVRjdpC3wXJ0W6sG65v/qu/NvCcUgLJ4A+53FljrA7vlwc7fOTVkAFcaHMwxV6IusCTSqObiOei1SDXsoV9ojj0d/8ha+Zg9GnF59xqv2DKcI7bo9fAw209z4m/5wrAOjMXyQ17Ui9ZlXYILkvLpiINwavQnJ7qkTQ=="}, {"__id__": "chunk-5147ceeb65171e7e35174b5e6669f1e6", "__created_at__": 1760493538, "content": "## Hardware Signing Devices\n\nHardware signing devices represent a promising long-term approach to Bitcoin security. Unlike general-purpose computers with numerous attack surfaces, these specialized devices are designed to perform a single function: securely hold keys and generate transaction signatures when authorized.\n\nWith limited interfaces and without general-purpose software to compromise, hardware signing devices can deliver strong security even to non-expert users. The restricted functionality and purpose-built nature of these devices significantly reduce the attack surface compared to standard computers or smartphones. As the Bitcoin ecosystem matures, hardware signing devices are likely to become the predominant method for storing and securing bitcoins.", "full_doc_id": "doc-5147ceeb65171e7e35174b5e6669f1e6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_7.md", "vector": "eJwN0YtXFWUCAPBjqQXZMTEeFy733rnM9803DzAW1mOauJmvMk9oRQn2QNBcfBXGIzWVpCwQtBR53MfMncc33zczoOh2NwP1oLYaLtp2SFdbD6YV4sHaI7Qo7ZHd37/wO9ayeFppeznplDKcbNYjdOoyuUg16X7wafItnweXKS/GPCBQwUUew8+1FpPX0N+ZKH+QXRG2QLEUtQab9ZQqa23rbWaD8oxxgl2VcoG/Ip/Xo8Ln6F2pgNSk19m8cMScH9qkTsqoFd+QG8QhcosOSPPSj+uvwHdRP9ZZVdjtvUs+EOqUBUJYGeBGEurMLjvqG0Yy3GY3S+sTRDHMDpN85fFQdkYULm16yFsA+pxuHov17PtaB4mJqE4JM9f/nffP3jH6nmei2o1uk37gdh8PlYB56LLXTaKwiCskBfQPuBUUwXOozziCGQS1zsaNqdOcGThPuiNtpKfJB/watdNbpVy1RoMz2HrrYf81PQZzeiX+lTvFFoOqpCvhWuAyl7hnpX8E9wZX4FvioNnojKA2bkwYJ9ZaN8LNdiczlb+VMNwSJEeBu63AiNqrUI0UNsL+Dm5uYL6P1YsjpWiktRsHrcvKeJ4LASmH3qfXjREaK/fR6Xyj+zBIxhvwQb6yZbPp0z8EHjtLfYQWe+K4d0C7loiOJYyyZfpxmwFb9Jf3X6SnaDPq2l2keJVKoymxF6xGNSAX/MlcSo7ZxMOSe+RN71R+kQL1b8HJHTjpprLW/77+qmcBmQ0XO+3imPwxfJIG8W12Al8Nuzy9/tlMknQIjNPfq7mgNdAsscMC5AbxkKN6D9oCzrDzA/Up/+V/c0/EJLEytBseSkMoi/3E+ofo+C6h6+IR1yF6LrJY7weT8TkdA1s7wH7kLATfCyuEJb7qfWWBa+ElAYY+huJQh1Hz/58L+kruprgY/RXfsIeU48pF+Ag6wH0pvWlVpO6h2aq/aSWBrmy+w7/KvBUaDDG+Abje9zb+kRlm3jJy0XnxeanfeBbHcQ6qqruv7ca+SFjdAkt9X6lxyQlOvl3JreQ6yTTqDjW5/zKJx1poEG73JsMeLQ5vIpn+h4LL1X+CHBqLxsBW8pUThvnGp2oE1DY8RYC0x2yDd1N+8y4yvSiTG0Vng3loq5UFZvJPMX8EL1mZcAM3jn8l9SjdBX+COcJbdDV629yR6tfntuRJiemf0xcJaywUZmVkwzs0qWE2F2q57zkj/JJwJP2kEQ6WxVekZ7CFeLNwu3U72AX/44f8pojMcekzyUHmMvw9Pqyvj2zVtod6In3iPf+Jx6kxpLsSffw3rjsH/kbH4ALpEpL4n/Z9jf9t5spxvvLwePY8vwGB8C7uGTST7md+cfaqp91TnBPuOaSUGfE9T1rYdQZr9bE57i/pD2ZUGbDamQbosiv4aq2MzxQW0bFk0/O1tsTqFWt8pUJU6GXPQIaP4QKGBnNRoTPSts0/BzfRWn2ZpJACfNgsYh4lJfwcYYe0LO1B8SSJJRmkzNUtJvDz8Enj50iO/KA80LiNkcnL5GnzVGAIzuKs5DV22BrWM1M1Y4tequxMLSKTaY3/SeMOXR4RnElab5omm1YsyeYm+DejRrbLEvkZkUuRiXRY2ItLpB5zGUmU16s96tZwN36DSUtlzEHtcMrvaK2VJa6jy41vDIU9PXW1vtPaHooTr9HpaJX3CdisxnKbpBjhopEvGe4LailTAruMUTDHumvVOT+aV3wZasD+0P1c1SW9MFBor9OXMjI6C86aFQbvel38F7fHUK023KEnMvnmJ4FGUC8WNQdoNY5P+6z1mlYej0EJ8wNZyuTah8UVzmVUBwqkyfq9yHfsGm6yftUr4xf06ZTlW1Gd7wFfrFWqX2dFiRj7ybOkglQr9fBKixbKa944RSLxxjCab95FX5in5c9ab5Iku0MuthuV76GM91HT3wSB2i9eJd34nNqOu/lctgaY6UOsBsqTx7Me/wS7XB81+j3/AxHvuSM="}, {"__id__": "chunk-db44dbaff21dd83c033a272b4bf3fe16", "__created_at__": 1760493565, "content": "## Preventing Loss Through Proper Backups\n\nWhile theft prevention is a legitimate concern, data loss represents an equally significant risk. In attempting to secure Bitcoin wallets against theft, users must be careful not to make their bitcoins inaccessible to themselves. There have been notable cases of Bitcoin loss due to overly complex security measures, including a 2011 incident where an education project lost approximately 7,000 bitcoins after losing encryption keys to their backups.\n\nWhen implementing backup procedures, it's critical to understand that for some Bitcoin transactions, especially those using multisignatures or complex scripts, you need to back up more than just private keys or BIP32 seeds. Most output scripts commit to specific conditions that must be fulfilled to spend the bitcoins, and without this information, the funds remain inaccessible even with private keys. Wallet recovery codes must include all necessary information to reconstruct these conditions.", "full_doc_id": "doc-db44dbaff21dd83c033a272b4bf3fe16", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_8.md", "vector": "eJwNzolbFFUAAHDCz5QMRXS5d3dmZ+bNezPDIaFoill4YqGmhVmYd3liamGHFWBqKoKmyDK7O7PLHO/NLGuZWGSnlRp9ZqZoYR5AgpVHHpSfkl/9/oLfU+nVUvn7B8m09FyrkHFAG7yBw6QANfOdoWa6CO5TPqbmo5/RO2SevYYcZ4vhKtcn4Aa9SG+n74gOa3NoHV4YPm03gqZQk399wkPMUhRHjTMj8CPQIB0x8tOn49FSDvsIHUaZ0kNmMQdItTtAErKSpGvmfSDCCMZl0im0UgZuRFlCEapBPVVLKNk3KNRGuYVY5gIL0E7uNJyMirQSCuAZmS2eNBIj9OU79T+FCaHPuG32oeBks91uJ0WaI+V+dTG3F33L6tLLRovcrR8z9nGn0Rqp1agCnBRjl1GT+dXMXLQNZlov6dVojjOXRMsGfox7TTqV/KaZunPY4Lj4v4QfwLLAl8EVDNvwbv/r3i32ar0fNY7pz++gg1wEn0noA2pQXgYQpoBRJCA1BlfYR+EtT8STJkXMD7TutD6hAfwJvhFMIVVijF3iiiYjpNXiXf4Bo4w/7Rnp/dKiYICerBt4OplO7qFcrhkeViJ4pNyjfq/bZiMYjF3waMCJNWGN9xU8kR0BSo1SNTZgepzsRTzc9LNY/xB0wVXhBWSQNUJJSClo2MneVffUPQvz5PViE8x/byy7HHzn2OpZZg1kW8xU+2LqbeYZ5242A85iZrNR9W3uIWYvWCeP5b/HsbxkX9e7NZ+V7VxQE8fe4hZwo9hr4rVd07V25hGzzZ7JRJFCa6p5KniubgYHlDZPDL2Y3uaax8GaMeALKitpjThMEbU4ux+MT/fyK4XnfLGaKf8QGMXnBF3UKSMfPwl2kDx0Xlqn3BDmqr7QSa7eO15PRJmozB4jUA1b8CQlhjsIFcsfqeYtXjHOsA3ogrTHOOj9NRKlHVF6kyHqSvQTPTKYWR/PZOsb8N/0B8Z2WE4lgxfQosAv4iwyK+2su1mYTwKhDmO3bNVtdc+m9ns0u9Ceol92ZyCZZ/HVXReMIVyLVf7/4wo7xdOPfczsXzuT6oSykRSc6NtB3+HmNiyyvwUD8I9cjfeeSlnfoD4YohNUPebV1FRW7Ze+IukuGlt/E2ogqE2CACxDiXwWfc+Tax9AleAAO4560XU1sQKWs5cwIzpRlaX5hpr5VN+MgdLBNJnZ5NzjWcSsE/819vFu9Z/A+3oz3wgHc/u4ZPyFZ7xcblSA845G8JO411pHDQnt0ldyc+Wo+jwouS2plNqvP048xlljreDyFeMOLU9zi144DG7h1uM/rVLcCVsr3fH7pQxpqLEpPh8tIek7VPtR0lv/LbzcPO5/kD/El2AsvFqfg7McjKmgLrklFBXKJfO1qfpl/rC6FiXCXvZgvUh7XTlkV8CbjFeIhwtha/1G8bxRbPckx7o/ta6EOwRz90pSoihICS80N+hHyADcod+C3SKSEuFz1lEgE839MNQrFTyMlIIyuoSV8QgrjaRGxuNC8ytpd22PPtpq0wqsAtGhH9Ni2atgmX4vab4zXttsTbKWR9Zqc6hsZ6F1VT/MS9sf5Z71fG08z8raJFyhLOQWaxUw0z87JNAu6gCOrmt15qBZvEz+0N5MyBOm4dnc3nBvcg3/CHzEQn2sDHMUbCKdaR9R2/AJrtz5u3AOXgnXScXpT1NdvplU2LwUXIVz7PENd9WqxKXkrH2bq2M79I3kD+u4VumIr307dMyY039AwvD00XSlc4zm93lD0T7BfyEow+Ept8ENOyW4NrzUekppx5Qzle1Ux9W+gi+xrNpGO0Q/Nyh0UX2C72FeDdxk4vgcXEtKQCucY/yucrYHfxfIlkSnEX4LdytlZAus0rO5Jv99+KQ/D6cEusA/bJfBpgwMi2SCsRe4rI3GhkG5+gljK2eCeTgauq0CfB366DtMby3ZyhDf4o9Awf85XOL73Hgwkq1Xp/wH3hie6w=="}, {"__id__": "chunk-7cadbc73ee5929a47ba1bdcd7b23d2b1", "__created_at__": 1760493585, "content": "## Risk Diversification Strategies\n\nJust as carrying your entire net worth in cash would be considered reckless, keeping all bitcoins in a single wallet application represents poor security practice. Users should spread risk across multiple diverse Bitcoin storage applications and methods, implementing a tiered approach to bitcoin storage.\n\nA prudent strategy involves keeping only a small percentage (perhaps less than 5%) of bitcoins in online or mobile wallets as \"pocket change\" for regular transactions. The remainder should be distributed between different storage mechanisms, such as desktop wallets and offline cold storage solutions. This approach ensures that a compromise of any single storage method won't result in catastrophic loss of all funds.", "full_doc_id": "doc-7cadbc73ee5929a47ba1bdcd7b23d2b1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch13-security/mastering-bitcoin-3rd-edition_chapter-13-security_9.md", "vector": "eJwFwQtUFOUCAGBQuuSDZDUBlWVn5/n/M7NrD+36yMUyMDCz7FyKTlnnRpikpnkrfGSiBuTBAnWVZd8z///P/+8MXDl5yFQyX6VdwSiJ3iWVqJnXlJPe1Lzfd1Zf6mtq38CG+WbQavF8XmNiAOen1o4bAl93l21P4+pYvlGjPKZutDNalzK/6RfzuOGeh8heejd4TxpHPjJOgGP2uzQDpoxRLXuIP79We2A8dDK1F5U6/9VoaOIp66B6lnsyngWn+5owpPcLB8wmNuCPSrVMlFcr06LptE7bGalnQd+riXpQKxSZN5T9xjzanbhFfWHk8tghLU2+rp2XAP8Y+x7V+v9ClSgGJmp7nXrQuqMW1tJldLX1BjmSyBYE9Ii0iC0HPtEPcvHsgnvICeOw8q1WqkXEe6QFMIgg+VDG3sOhBeoV9ocF4BE0BdnNh+i7SNSrYZ91xprDB6TN8M3mb0hWXnd8S2tF8k6rlg7BXpQJjiV1MEI6h7MK+pQy0KHbfEUC0k6AaYBWgSJYKBYpU9jc8Aq0MHFTf9XsUj+LL47dIBFShIaASVK2eDZYrf1PWOudYgfVg9K11Crjh9QCdrvv8O2GOIqtMU8nCPkAjbd+U95GOWImV0hf08elSuzT8enCOpahthsustE7EC5HczAXfxM+4YnZV4g7kWNUBQkbJR+NrkrOVDPxa4CAuPloaAyswRHjjtQk8L3rWfs2LgA3YZkEYTvRpeHIbZZbFwqcyBihB2+EX9O4+ZTlYz9yglIqdYjTuSL4ne5LUva4MBU/y/arzSRAn07VJ0nTJSirhdz68FH+aXCveZewErQLeYkK2Gc6wjCSlJdoHv2iPuj9qunSeErfklP0w0SX4Bj98mf0Wn63TuIfaz+zk03LvJNQp1UHKvThTr98hFS/NRuPhNPARNTY5k8GYSWZBS/Lecosu8z7qdOGH8TX8fPjt8Jr4hx6i1PiXicXmz1yPf1KW250Ah/4bygAt5vH3SXyJe26dS+FJA/twHfGFxc8B7qMJc6K3NbIM2OX8ofpmAhPHh1XQjYnLlkn5S5lJjmOXDEfaIUPcAtDm+lC4Qv1VueM0+9tw/+WKpUXcwZZi9xAb+ohUM5Kxx4QFhv3aX8jQTCZ65XXi4/TfUJpbK7gqL/ya+Ru6xVvjxSVZhsX+cusAW5EdeYIfY82lB5iA+gCHO67oezEMj+VrwI10h6wJfkr3G4dtOZZL+u/G70uyXfTcfEl4MTWZ8S7wzzcrT1hn+D70G72sRRovqL8Ky56oN6BNCMc7k8A6xHhXFxx2qSJiGh+uB9cEK7i39g+fp94ProS79PmAhfCyAKVqWDuGgeTU2ik/T7/g/kfqRMOayXRwXgLuRleQSeRn+hd1lwjgu+gX9sX1Z1WRN0E29EuXqJXogccqutgg6bAIJ8dVfS0cCM1w8WwnDXYq32fyD3UEw3ov7AiNNmoJC8phdtPSWXaEjlN3cMK5ZdoTmwA/ENcyyaw7zxlfIs9NDKZraVc6hw5g3rgoPxJqpe7Gr3sVHku2t3u3dwIYdsEY2wGly4tsCvt+Q6P+mTBm2XPo9u0DaEs6SmOc1cJB8jfsUYeFqvcllrj0oUzoSGs06gAFI/Wp0o1FrDeiCTVmaRBnWXLsaO2S+LpDmmoU5EYLSq03/MQWCdyYkfyW61OU6x0/z+1cwmR/in8zO9QnqfF7DnnJ7sv9kH0NK10fwk+z8VWtrMitcX9trrM6DBfwS7coC5WMj275Icj99H5MESdeLpSCD7KB2ya3UHOt80Spnih8Y4a5vYK4aiknGTp/AxxULiGF+Xkwd3CBJTvwXI0Lm0rbJxBbmsMcPOd4xg16+CFRHnq00SaFUqtBMvs0V6INqf+QAFrvlAtZIBB4/N4r1NKiu1VQnuq2Pgd50VrrE0FXWAM6t26jh0zb4j3KyfBIhgz1+sjwdT818mWaHZuNXnP2YVbCv4PN86r4w=="}, {"__id__": "chunk-68f5536e6c299993305e1d7bd878f847", "__created_at__": 1760493598, "content": "# Bitcoin as an Application Platform\n\n## Bitcoin's Building Blocks (Primitives)\n\nBitcoin provides several fundamental guarantees that serve as building blocks for creating second-layer applications. These primitives include: no double-spend, which ensures a UTXO cannot be spent twice in the same valid chain; immutability, which makes transactions practically unchangeable once they've accumulated sufficient confirmations; neutrality, allowing any valid transaction to be propagated regardless of origin; and secure timestamping, which prevents blocks with invalid timestamps.\n\nAdditional primitives include authorization through digital signatures, auditability of all transactions, accounting that ensures inputs equal outputs plus fees, nonexpiration of valid transactions, and integrity that prevents modification of signed transactions. Bitcoin also provides transaction atomicity (transactions are either fully valid or invalid), discrete units of value, quorum of control through multisignature schemes, timelocks, data replication across the network, forgery protection, blockchain consistency, and predictable issuance limited to under 21 million bitcoins.\n\nThese primitives can be combined to create applications such as Proof-of-Existence (digital notary), crowdfunding platforms like Lighthouse, and payment channels. The list of building blocks continues to grow as new features are introduced to Bitcoin.", "full_doc_id": "doc-68f5536e6c299993305e1d7bd878f847", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_1.md", "vector": "eJwN0o1XVFUCAHBFBSMxpOFjgBnmvXnvvnvve+MoRK55lI4fa1lRapoaoGZuFKhJCpsugh9pG1r4EcgMM/PezLvv3fvmTYlW22E1dcuPFPCQncBqS8F169jJj5atXLXtT/id86sCFf7CjmXWZuWgPWefAwb1B+wL7JhSJK4OD7Zd0yuj00gpmoSOv90Ub40MsmJc0RITvqSfmQJ3HHSaJUK39yEtFPfLs8XpYh9bDRvFVnMgfA0vg02+L6WYUpDYhZpDhbJHVpT58gTNoXyjrTA+8t3x9QrJPp8y3GyOdeOBwKD2HWqK3BHSwbDsTtdZtZVu0D/Ej6P5ukfpB79ip346/m/Db5aPj2ivGwu4FcJ2tha2ubAwIurT060IfRm/uHc9X6dWqo25H3BdbcDghKlkZ6hYLOEnK7fcM/M3IgdZzFqlEmmMdBYutuZZfTkJ62bgWXSM7iaX5JPKwkg52yYsde5vSW2x6SvSxdDxxOps4p5Av/I8SCvgAjAa9oAh7ZxriEakZJylbMmk1oew0hiRSJMyYB2ege/oGJymybhLKg1VwJUZLRhbkWCBfa/pV77QRgWb4BLKtKl2v+Hlj1qv5DSxj+gzcpH7LPo57o+W8bP0l4PDyAV0ResCtXRNwSmlPXSIHfb8xisWAH+Kl+dXeD4Fa0lSaGmwQ36fBK1t7omMeKrZrMQo8DH/rcsjbjVK0Wb5SEEPtxLfIqON9aQyJ9OTbM1rniYHYyVmZ84GzhFeab7pdQRTozB2FLaSE+iQ/iq5J25oCyJ+7g/eHm4umPDX12B963J9ijhf/Zc9D/HsOfsgZWS4s0ruiY5QA4FFaiw7MxKMKbDU5kURdvFXyCJ6A9yGB1AxvkxHkgowO88Su/W10ZmOW9aO3AY76fcd/Xg/Ws/KzQUqr1VZT+KnUaNRJxWzmsheVAI/EdeY91tfa6Z6JtopXYXbYcxc5TVoWtYXBol/FjojjpX+oi2lzzeNE0BoEjzQ9j+5k6RmaWik2/TVRwtJp5gDB6Pn1RSjr9VBJW+lsBA8rAYTleEfsr6Gmz1n2CjptvAQ/zfys5bqmAivp+cZe4Rs1u/9TeiOponLjVp+UK4zN9pJsW2m6cqQaiNlrBxNN0W5Ha2NfEJlrXj/HuXvdCrXREuFFNQWuGb8EXThmfCtzNK2b2lS7o+wQVqud5F9kb1crVg27qqvxjfEavUs6x9iii9DepRs1+/KBXARl4GLcl/AVTTFPVwrUJaAITULvWs7gcu9R98pjMwTgd+3g72hznSWuYdUf/vK+wLSdwUKOs359V7aSadreeLH7TfZSeMXYxDMR16csstrvUTvmrvxKomg+9Cg9IC+MV/DU4yBfC3eSGhGPTupzqWPeSdBv1kIk7XF76zQRxsz9CRuV2w1nSrm5OQl6pSj/BXnGv7PpCHyffsa8Z+sX+qSbmAsFGIZVCMX70/cDc9Vnrl/xjsrcK81oG9QX5Vd0ZGGGS6hofwHf5elKIfFXnze3qA5yVPiNeFzkVe76aixQKvWB9RE9EU2xnAQ1VgGIVwXe818wXzC3JnvY/nqnNxzIqOvtw/zTDEeiW9ilxJRvSb0lOBnOwIB+ULuLOc04ox2gC1ChfkDGRIGyfuyEToF6mk05mJPgs/pKnDGUxN+NlY1bgsuIl9h0TpIPfEDUgN9jhOscaAH3bTeE9bJufAJvZb/Xg7BMdGO8WOVk7DBTAOT6Rtgif1rfKHdYpFwNdGM2d5N/Amt2bvbZOyq67xrk9ZETtFj3m+ECbwHNLKF7UvEuFeiNdwsPUPC3DrGxf+b7Yy/6XqaXpa2S9ejfaZmLhUvMsWYrP2E60O7tCPwCEq3TzC3Xrivz3gUnTM4kG5cJuVMCFVDxBbbvBVkl0Jn+V/ofwKp6Jh+3djKxsDHzdv4ovN58ql9L2uxJsKX7JsFh1qKTZU2omZ0wPOuOMdMMd+OMDENLMssQoeV8ZJXvtPeAXvNG1aZNYW1hf8PELCbhQ=="}, {"__id__": "chunk-f5f20878bdfff2d0b3e32a762207318d", "__created_at__": 1760493608, "content": "## Lightning Network Transport and Pathfinding\n\nCommunications between Lightning Network nodes are encrypted point-to-point, with nodes using long-term public keys as identifiers for authentication. When a node wants to send a payment, it must construct a path through the network using channels with sufficient capacity. Nodes advertise routing information including channel availability, capacity, and fees.\n\nRoute discovery typically uses a peer-to-peer model where nodes propagate channel announcements to peers in a \"flooding\" model similar to how Bitcoin propagates transactions. Once a path is found, the sender initializes it by propagating encrypted nested instructions to connect the adjacent payment channels. Importantly, only the sender knows the complete path - intermediary nodes only see their adjacent nodes, enhancing privacy and preventing surveillance or censorship.\n\nLightning Network implements an onion-routed protocol based on Sphinx, allowing payment senders to construct paths where intermediaries can only verify their portion of the route and identify the next hop, but cannot learn about other nodes in the path, determine the path length, or identify their position in it. The protocol uses fixed-size packets padded with random data to prevent intermediaries from deducing path information based on message size. Unlike Tor, there are no \"exit nodes\" that can be surveilled, as payments are settled by updating channel balances without broadcasting to the blockchain.", "full_doc_id": "doc-f5f20878bdfff2d0b3e32a762207318d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_10.md", "vector": "eJwN1I9TFXUCAHAFS+VhjBjEe74fu2/3u/v97u6DGTUHkjqco0KHlEvIyEyeBzqemd1pJalhXQ13WoGCcsj7ufvd736/uwsZ5XHqaI7Hpcd55plJ2tmFFZamMiCTzmndff6IT6v/P4WP9b5sDxSd7L4FXg4vFHu93+tr1I9RRegH8wnreHDPngNgYWo5vkU8id64rv2LetUFbAndhsfQR3ZrutJc1PM+60IijopDcpMM2Sxy3npkRlfXk9rc2B2Q62pJG1yL5wU+CZfCifDbWHNov3Wo8KLWRq7ABqmCvuLuVwnsI9PUfqxza+mz6g6wNVBANosfqt0hbIyBLf5NygAkeMy8aWxXj/sUuk8p8pU71xWIJzyQQdrIfnyNLuULpEn8Ua6YfNnm1WqkBppOL8G7sTSznL4Y+X1nBRqEB30HWSNoV4e0+drnRk161Cyz/XgXUYxBabUsakfyvinYBbNAAvpS3/uvEA+4hV/ExfZ5ms3zBClv6hfBXw3CXoCz7RVhAOsRDz+I9cO7NK87S04rjypFUp3d3TIdz1fL0efZRajLrpPW4TX+ifRRtVAKsQn+UX5mN+3KcveamcE/9JwhX2JkNSiVuANVOMU4kq4i34my+W8tSgvhZXGtfFf5rxXjFqU4SaTrwxXWp4lX2L2wxD6VbDHm8Y+Ybzk3zWOOLczBwJ239yV5fmrf/aVyQv0iWEV/7fsUNJmXzTxrX/pBuoJNZkE1hz8d/gXMUDLuG2GXYs3ia/wQncoV4xPcqu4s/BLFseyODFnH4wVDOlBmwSF/X2ATmNoRt1YqHvwzm+zuDP6KzuU3yknk8VziZUk196RD4dXWjWSDModbkX/E9aKzcIu2RhsTr0uzrYfxsIrl+2i7jInjX4YzUT0c1zbCsyDBjZBcU7W/RU/DjRxQzpIaciX4o7wV1dqD8WncDfCJHABZ6CLa4nrYkCP5kqmH3RySRFy6xkwGj9CdeA6fH2uBK+U++KS4WOpMjojReC1sg4I2zV0ujXL3wGNkKp4HdOtqWnU1kG8eVGJGvTlF/sl4Hb0HS8XFxEr9Hb6g5xsyO0Hb4DkzV3sI9ope5Uow07khPE9vZm/hv7GH7ZpIjjlRzFYDrNR9m7+av03txbv8s6070hLYnTjCHk+sU+vQq6EziRirDe8Eh0A73W4cjh9Njr8zDOqKHOUZ3Cyscc+B1xRRm0wrXA5N2F2JN6jPBp5XolY8t4Ru0O7Q2je3cnfsZZ3B0NHwKPdbega1QIf65SYpql8zGlmmtDZ83VwKGtFXwXJnm3UzcFKLwiozI7k6dVtcL1xIWLCFHbO5gtswwl/wedQZaKZxMi9XTlkFsQb7Y0ektv6uVW99JLwFpzBm+czpLKLwdBVeiHvp6cQBsZrtN1T0gPNHUZdb2Rx8KNlv9MlTQL0+gvbKG8igND9fba12FwiD/AClPQRG3YbOYQPAc06ZtYdW6zN2P6VN2l2MPos3oTKbWau6FFFQq0ATe9/5S3jMzAHZqXuTceeU3cwLfClKgU3Jt9sr2Q67Ct1D2mNuZ1X4Kr5uDcCwMGC9Y5YFXqf5DMp37XeFlOrCr0Fj59zUEmVjl+q1mSxl4AvCUzQVWOl8zcqcslSRWSMtTU8X0u4uoyWSY4WQYf+GnUosFpdbJemtcDSwSu1m1amecEtHFl0LK7VG8UPzz+i48g8gJX6SS1gB6A+Ns6hupmcgj/VGchjtdTxpkZW7Bntm5s/CZF80znXVtXLaBXSCXGat4mqhDnAsF5WQ6vAmu8VZb3O6Q4uEfuO4mRWp4SclDtEFGrbbxceDXrRZftA7nvdL7pL1RnoZvP2nuLsowus7kAXPcE/oz8GQNsvfRCvJBHOzf5n0HBGkA/Eg3N5RmLpsfIX7kpn6XfI76jW/I/8fwTnfdhg/FmxO1ysN3Dn6N3hQd0iNd8Ss1U7rYdCjHQb5IOZMl9ZJ/7SyzQhh8f8B0/KacA=="}, {"__id__": "chunk-ad590b28a2c5c5ea17edd5a875097408", "__created_at__": 1760493628, "content": "## Lightning Network Benefits\n\nThe Lightning Network provides significant advantages as a second-layer solution for Bitcoin, enhancing several key attributes without sacrificing trustless operation:\n\nPrivacy is greatly improved as LN payments aren't publicly recorded on the blockchain. While participants in a route can see payments across their channels, they don't know the original sender or final recipient. This enhanced privacy contributes to better fungibility by making surveillance and blacklisting more difficult.\n\nLN transactions settle in milliseconds rather than minutes or hours since HTLCs are cleared without requiring on-chain confirmation. The network can support payments as small as the Bitcoin \"dust\" limit or potentially even smaller, enabling true micropayments. Perhaps most importantly, Lightning Network increases Bitcoin's capacity by several orders of magnitude, with transaction throughput limited only by the capacity and speed of individual nodes.\n\nDespite these enhancements, Lightning Network maintains Bitcoin's foundational principle of trustless operation. Nodes operate as peers without requiring trust, using Bitcoin transactions as enforcement mechanisms. This preserves Bitcoin's core values while dramatically expanding its practical capabilities for everyday use.", "full_doc_id": "doc-ad590b28a2c5c5ea17edd5a875097408", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_11.md", "vector": "eJwN0/tTFVUAAOBMLVHipfK4z927Z3fP2bsXGUJFuZE5ojgi6WgoZpZpOElkag+KQiTUSkdKQS9wH7t7z+6efVxGsIeJApWaqak1PRWfxQ862YSNVtpI/Q/f14oK86Z0NZl3c+/aC7mvkcL+aqQZZQEIN0/4Cwy6DigXuRNobHiZMcEoxoPGJVTU9rA4SZ5GjuLq3FK7Nr444kkc1Cixn3O7VgOVi4XejbdFv4LnnB8EpuV4hOW2n+vyVTPdYr3wPRPjfkaNcY9eEnAHpkU7gAfuJS8Z6VBETry2dXPbR/hiKISCVEBb6HKDsf4tVGP2OmeOtFTMQsj7rXlEHg7I6Be10T+Wv2OMF9PQQGQKHp15VZ1hTgUvoje4Uy6RjGO2sKzwDDmljqcejQXZ36RL4ruYhsv8L0c3xIcZJ7NVHII71G63x12ZuKEt9Wj4KlwDT4t/KyqeGanqmIouutPVbk+nu9gsNf/BHeQoV69tBWvCZ/gQpszr6DYJA0bM5wP8D1qNN9PoTTwl7PN9A2sEaBQ6lxMHWyfWqZtAplYr3AtlxwvsiTDEVUcOuUZRf5DZ2V/Y89t2SM2dE2TO7DcH/E/HajnVfoTkk1n6HNzXcE3cQBzoNeoU7kIPSiktq/B1aFn9erK+sqUXp7hofbDlw8gBMIVUkXl4m7WcvSRn2ll0kHvLsZ06Ae7BZHYWuOnq47PMPNKvjqAr1YQZ0W+zE6OT+RQ6y1cF8kkudyJ6NqtWWs2tItNhl/WSmkrOkh+wAnvUo77doX38MK+DLx2QHR1OJU+DI/opo8BkmfdlAI/5qtjk7E9yWBgeMxz5UynumIRfFMeET7YlJYqE/fyz0BsoIo0gpnaDtYgKl6cEmU7DISHzEMeJ3UI9mgwWsM3qNhwz7+fOK6ktu2GZkZzzacwljBb3EGCXwdtSIzgNbwjnuE/NOaZijYj0Kf/aHtILBOmu+pm2XuuTJvHb3XPANtTOvsK6fSV7+tG6Vl15wD8gbjIm6zvZBuqnFkba5FXIuewzdgo1iitC1x1O/Szd4B3iR8o1rEhGNBfw5UolWGSESTldHW/075D3wvX+m5Hp9hLK97+kqmgSWUxyxW/IBiWHH5KfM+9Q8+WFgWrN5G6QFv8imC79Q+wwI3wv3JeeQfzqVJQHh9A5ci+8SladD3J/ZX6Q2yBe0I77uuxr/Fx0WThpHjZ/o3q5Y8qT/m27YkKqfh98WzPFLOlKekDYay2ROtEbrhXULnwh4xYcT3bDLpBkdMXd9nx+JTxILeIFdl/aJH2tOSP2qn+j84y+0tiBVzA/QmdyCOSZdXJGR7GYBg+y47iY/6SS3bHUwcTdtMuKkztqoXGTFBtLwGS4QGtnKvSV9jhhvFyovOl6wVrdnudq0ferGBUZHPxQKIxPJ/Xtu3yvxcu5ilCDUEsjLRueFq6xOZ0OrpRZbDUkzsJ2e67n24c+R/PIAbIo+oy2RykUOvw0rAR9IrZLI2OodrrAl+XZPrHJuAIeiZR4zrMfy17jsPW7UbNT495TzodLtVtGWGlmLe27ENQr6CfsG8os+oq80Cq3P1Prws9rszloVzT3CC7GzSxVBqIX3WVcnTQxfJvtiegQkwz5iN5jOc1BvNG73vNcuDdaYL2nBgM1RAk0GTlqKznGXo4/bs7jj+OZzo74XDbGlUkRups/JJxPvyptF1+A49BJqZRJNqs9JUkZJNXcYiD2STwDM6hHS8incQUe0JqdM0PL8AH9YfVfBiAGNMS+lFfEF/MPMcVWPmgCFrdGlbSx5Jb2k1Glz1bSmLf9JNz0zlRJRI8myqMt0rAvyA+6RzmDHG1v1urVP9yvWHFhpOtN2IZSvSHtwv9L1urTrUpjJ96oej0hI4Z/dCzng9JlvMxMM1qZIN3DtFvXcCzx6667ZlKkLOO6E3lqxGfRY2QKZ+Lnrf2R130lgd3ycUCjw6AOriN76CGQr35CClwk+h9nN5Rm"}, {"__id__": "chunk-f2fe8b00a3fa0f113b12e48d4cbe0c5e", "__created_at__": 1760493643, "content": "## Colored Coins\n\nColored coins are technologies that use Bitcoin transactions to record the creation, ownership, and transfer of assets other than bitcoin itself. These can represent digital assets (stock certificates, licenses, virtual property) or physical assets (commodities, land titles, vehicles). Early implementations assigned extrinsic assets to a single satoshi, while newer ones use mechanisms like single-use seals, pay to contract, and client-side validation.\n\nSingle-use seals function like tamper-evident packaging - UTXOs can only be spent once, providing a mechanism to transfer ownership. Pay to Contract (P2C) allows a spender and receiver to agree on data (a contract) and tweak the receiver's public key to commit to this contract. A powerful attribute of P2C is that the contracts look like normal public keys to outside observers, maintaining privacy.\n\nClient-side validation is the mechanism for verifying ownership. When transferring colored coins, the sender provides the receiver with the complete history of transfers, each anchored to the Bitcoin blockchain through regular public keys. The receiver validates this history using their software, needing only the information pertinent to the coins they're receiving. This enhances privacy while ensuring proper validation of ownership rights.", "full_doc_id": "doc-f2fe8b00a3fa0f113b12e48d4cbe0c5e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_2.md", "vector": "eJwN0ItXFOUCAHAlKxUfXYV02d3ZnZlvZr5vZjbjoMiJpIdHzSeo6YXAUqwVr5foGB3UjkTH9HpDvWALLrDszs7OzPfNY72m+CIRiyzqkldOXhW8mYfSPObrXPVcCQ+nfn/C77ww5xnj0/Lk09OuEsCmpk+Pr29Os0YGXpFHWZWwRt9Ajcc5bJl0PJFv7bXO6TH5rrHGP9rYwX2jrqqrIoNcJ3vfyDSWymn1E6gq+Bv8Xppijzc3SxpzQH6XfST24hGwzXeY3sZlSgeBC9ULJ2M2MQPLAmWgTcqWyvFKsEEa1N2kiisVcuVbYD74RJmrSSSH+z9vCUWxIDrADsolvjdMN+4jl+RPGkuIwp+TJlvPIkTX8aV4rqvOWuj0s3YiAFtgBs6VNmtH/D3W67EA+Tpa7R9UFzKy3u3aL5dptfp85OO6ps5Ci0iKfcN7nbxBrgDTfzq8AKwQKe1bY5iuUPrFv7snmrv9fs8iRwNbrKfJmbQKf9nUBbQK+v0TjAJ6gOS1RuQ8rjDeR+7ByUZFspmfJ3Sj+cwUU2kMJT9WVkm1WpXvJ7ZEtMhqf4W9Q9wiXvCGEu3ij3qzBsw60ikMWQW4x5zl/Ah1sC3DsTOp/6ophtWytfV7AZLtXCr2uMvkLPVLpV0vTjujddCcWcsPAQH2cGO9bxoetNe9zznrL9be8up4wB6iX6FfDxeD2tav0SZmhecEypGDtqg+6ZQIhWqO1R39gL+mrIzfRCPibwt38EDoknuE1jPppJhJwuiYueRPvaTN6uDDYI7vCnsSISLCK/4qg0PZ6rDTA0aaOfFhUkyqcIlQ37LVM0YYrN+BznJlWlBUrYPolgQ9J6V12IZ74bPSKfmy8NP4MDeGSkFPRd/EDPc/shHm7u/jssRHse9845KViTVNzdw94uMZ4bL5QWSy+Zh5z/8eOo08+jFyu2nDlFJ+hntQfk5+QB5P5DqzcUQ7RA6onbBH+a452DIS5Bpd/GHPqN2S+JpyNPZI+gaOlBU9wi7XdsJ9BgEZrg7jbyAFHIQTwGstBc4eY2Z4O0xG2OgWaiytNMyL9iqvxu+21jM/aMHWj/QmrQYtUIrQAzNNGlZ1a4sZYNq0uqZ89o95M0uEranUANelv6DdpwZAI7pHbaXeIoJ0kbsFLoJa3s2t4tfDdHXAWgbPAZcY0wLaKPIuoNOzmHLUHQg4nZjY54ViuRhIVrnuRZV8HoNAvXRKatMqlEztF2GZ8J64T7zmLIqdmDSHbNu9KXJE7JI3ObtAg7g6pYXaSA7vqJwUh0n0L3obf0A7SkYnvhAjjBq6yTbGE8JiqgYOh/aZa83p5ttCN0xFZ+H7YqsxCKaLPydxLOK8TJ73Z1qhRD8/mssEd7QLahdpsKqFb8m/NS++YeyknoCIGbLuy58mgjBfmGhcSv/KescgVi8MUr+Jc8UuemxiAZoGXjI30uOifybYeYhCpIjaSfvQZ3aNNa31ojqQmIUui3nybPEhNw7HQtnhrc2zpULwF+wnM/Bx40XAN7+A6yyfuZn+uGWeTqNS3N+83vir3U5J2nLjvP4f5QzOZ48IvdYkex1Z6+w2n/TMoH81sqhriIpfTyuKpCRCHlqh7ePkIXc9uiFQYaQaV6115KZeSbcl0sF27oZZredRe+SN+JzYbmebXtv21hgn/INanHeJM82r3jXofbGAz5cbZAouJX1yJ/qCDeJDUUCyRV7tcU45F8mhcImT7tvPtsUX6jvje6wGUo06uIQq12eQpLYXVEtNTCk+7VtLT/B1ENq1xDjI9TEvWf/Qdmm+/ekur6dQzGX6lC/dv+AlKEnkpiquUTgaPUZWce1opVmpF8VY7ZoxETLhE+AdfQnBCQyeQAX63OTn5l3zKB5vDGkfUimgGK+mq+Pb4QO1X3pcUfBiWzKIQ9SnzBe5K1N7SJP1TziL/pCUw7XsJS1Cz9xlwwz+ArgdeJmB/KhIELga79gzndt64ZjfAVLapNQ="}, {"__id__": "chunk-5b90dc1f120dac3cce305ef9b38e4c35", "__created_at__": 1760493792, "content": "## Taproot Assets\n\nTaproot Assets (formerly Taro) is a colored coin protocol heavily influenced by RGB. It uses a form of P2C contracts similar to the version used by taproot for enabling MAST functionality. The main advantage of Taproot Assets over RGB is its similarity to the widely used taproot protocol, making it simpler for wallets and other software to implement, though it may not be as flexible as RGB for non-asset features.\n\nTaproot Assets is specifically designed for Lightning Network compatibility. When forwarding non-bitcoin assets over Lightning Network, there are two approaches: native forwarding, where every hop must know about the particular asset and have sufficient balance to forward it; and translated forwarding, where only the hops adjacent to sender and receiver need to know about the asset, with intermediate hops only needing to support bitcoin payments.\n\nWhile native forwarding requires separate Lightning-like networks for each asset, translated forwarding leverages the existing Bitcoin Lightning Network but may be vulnerable to the \"free American call option\" problem, where receivers could selectively accept payments based on exchange rate changes. Both RGB and Taproot Assets can technically support both forwarding methods, though Taproot Assets is specifically designed around translated forwarding.", "full_doc_id": "doc-5b90dc1f120dac3cce305ef9b38e4c35", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_4.md", "vector": "eJwFwQ1UVuUBAGCDkTKkBSKIfL/33vfe933vxT9OTSYyW7AQRRSx/JlZzIKzlpmaiorg39E1mkvkn+/77v2++973fe+9KAHaSRc7qSXHxMlM1wzBcIY/K9vyVLYdt+dZqGzVQt2H3XJtCZuAPUYuq6ZPmLnKWe33JEuomBwH0/yvg2SY/MdRdyPplfI0NfhLYyBT1uOdVLSfvmJWe247l7271HHG74RNQa+4S/7CuDmlR/VnJE5fEDighN1FAMm1PD+2xLPWKMSn1BOH+iI5asmMd9g0bT8Omw/0OYe3iZutrRjC+EAS+CJlJ1fobitOT4MfgjXEg2d6+rQ1ILFtufcHOke9DK9m3oOvoGb3xWyZjAiJtCDyhr3DeBZUBPuF10XV6PG1mN+ggsi2aAu5ab0gJEZWK/FkB/4S1+iL+VeBHdoe+DY+TmpomRJwhwxOlvJl0emoUI6GRlk+Hgr043XmJ+0S/Uxndpdksqf4QfSzaLePkpXormiw03CVXSZ/qqr4gFBkHsanw01HknC/ugZNBLXWdrCKNnUchynOfTgu84MsbueQQ+6EQAbaQgasTa2jfJ4/1U2m5/GZI43kVuhd9oT2UkY6mhXpFU+x3WyiOJeVwySp2N9ELvrOqvuZQeuiT4MxMzWSxxcY4602cDd9s1llNqJHrKfcOPgq3dD+PE2zzwRSQL35mlLlfxLf8pwLE2UQG/wXXpsdEh8CxtqMVfC72J4QQavFXiuffWIulNaxrPZfSw+MmXCKW0UXRe7wlJRi8JCsI+HgSd+3UDdPWAvkUlbiNIExkuhmsBZ9Pm9UKqVsONxQmx5U7hnPto6ZgI8LjuLc1v+gG+RzpVL7Mz4Dk+WiSL0/11bVo3KDtRi+ZcngeZvC5zBFn4F59H1/EfsK/ZYfDnQh0fqpQmJDbK7oKHF4Iv3c6UKXoA+9jFLlLrmG15OdnT3WOeuGs8iYC/sUwO6zbpjOjoZOSBdBgvqdvlIchbO9xVpfR6o3C87WkCWxPdFLLbP8Heab4EpszJxztCm09+2DMCg+yqpDM9BkOBZ8IBUat8M3pFqeQC84OfZ6OYOtUAO8EBTCQmsD/6v0gu2B19g2Um3/BlWYV4WYMjC13fWK/44koNPQ66+xDaVdqvTeMIvBUuVXUpNnunWP1EoxaT8kdGWmbqRN2iQkoAbsaJ2xW+aAvUDxZm/Cd+hYynJtBEbp16hVYVoFZ6ELNEv9huxTdqFZ7o/5ODSXvZy63dcj3cODzjJfZSBPf5eFWbX8o8ifpEm4QEgCe/nj5E2rStM6ruo/iL3itYbx4iGhVHnaSIo+6enAyZKOemEO6LJK5a/x/+zlgSLno9jMqWecD6Ll5mNgvPaG/VHa31m126znkSFex6Y7S0wPPCaVRg/CFVYc2IKTeRnIZJVCOR2W9wT+plThQfGicERL09/nf0mvF1608ztH4Ea3mfUYQ/CU/eiRS6SM/FO3UaPUoV2D2zVRHwyW+DVhr/Stfwv/iY2bH8+a0VFmLJN9zj7+YXO/1SCmgX+QCmJY9+2fB1/SZ1kTlL1KvHN80kmw1N5oOvSYe5wX0ELtgruC7dYoOAuu03eEPumyvlPfzL8UJN9DZV7I0K/z7/l/eb80m9wUTauG/WtyNXkkO4uPYN65kK3nmrw42h6a0hoOlKg7Ypr1Ftyg5QVWo6mK0rze7M62MYZ17IF0nubiab5SJ52esPuE26wy3Irnm3HKhNiAk8Fy0GPwPD0Y6avX2+7Cj+FQpCVcJ2fAeLSVXYm+F6uyprS5rCBqkXz6sdkkZLasFWfS+0y1i9RhdkyuU15TYlIzuekfBK9a09iwR4DZ3FQTpDzcIt1id0yP+j1k5qTOP9CF9oVQve8kWycXN9a2rzSHM8tBN7uCR81RJhCHbHW3WyNWk1HS3Cs8M/k6uiQc8E4D5zoyWX7ic3oLXA7ioJT96cRKZa25Mf09cV/UsufTZ4z/A13FnlY="}, {"__id__": "chunk-a264a00d58091580ff4a4211b0ce9738", "__created_at__": 1760493792, "content": "## RGB Protocol\n\nRGB is a colored coins protocol that pioneered many concepts used in modern Bitcoin-based colored coin implementations. It was designed to be compatible with off-chain payment channels, including those used in Lightning Network. RGB implements single-use seals by assigning colored coins to a UTXO that requires signatures from both parties to spend, serving as the mechanism for future transfers.\n\nThe protocol utilizes Pay to Contract (P2C) allowing parties to sign multiple versions of contracts. When used with payment channels, this ensures that only the latest version of the contract is published on-chain. Client-side validation is implemented so that participants don't need to trust each other - they each verify all previous transfers back to creation to ensure contract rules were followed correctly.\n\nRGB has broader applications beyond asset transfers, such as creating identity tokens that can be periodically updated to protect against private key compromise. Its design focuses on privacy, compatibility with payment channels, and maintaining the trustless nature of Bitcoin while expanding functionality.", "full_doc_id": "doc-a264a00d58091580ff4a4211b0ce9738", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_3.md", "vector": "eJwN0ItzFOUBAPAmklZAHSivXLjHPr7d/b7dvRARCsqbSGMQlRQaB9sUgSHUNoBpBgYigqkQQhLq5UVyd3uXfe+3324sLyMiFtNpBUSiERqkQ4glTSE4MA2K0wSx7e9P+O0Ey3PfP7KEnJfPuPvQrPQXdpp6yXKiBegY7mQ/0TT1bLwwOA9ecDb4lfZKfZc8CmahNkcBDW6vsB//M3TTvZ1aZLeh1cYbkWy5evojYqM5YDZJWdwH0j7+PJzvzuFfQ0XTZjpDcDoYFA5KE90G5ZZ8aoaBI1Ihupv8KKcJzlNnOwPMaapHvBUmcJZTYieNSr4enWZM5xv5MjdWnh/aqvYZVfZyeQXc7U0G+XCdp6EiLckNWmf0Unu+z9Gb299K3OUKnE5xhtbUbrjjw+f0mGGxN350GN3EtZHp8jkj6nQKX8Is7rh81G129Sm55k9S60CedSP5HRuEJvzYzmBHzSJ0MpBDMu1K5vf+A5CJF+MR/nu8EAy2dXGZ1BrnMj3XL1SnRkfQJbOEHEZfk4G3NfQKtwplvSmQ4mCu38UOS/fSo/BArFrs9Ostw39dzOFadV9dCG+Qi+1r8XU7hpr9v7nrcRhXQSX0K2A4JLXJyiOFqEntRicsyM9oRcIF+X5yOVOB42zcHvzDRbeYy0W9YOG+frVf3SeWWRkdRHhGlVoP4WXklPEQYJxbwoLkWZHnBtsBx0SvejHQ4W1G88ON+HxKQn+hsPk4LGQ9mm/N1mSmxG60NsBcawIMelErZL1IyiNPg42H9OA47qfac8IGVWmu5i86C7ynxS5ztVfk1rubSC3KE+aCcuVz7j+wR0e4NFLmj42/ixLZAVhlPcHUiBIKyTGQp2QFmxMn0YbQNHwGXMe7xQkdOwCRhgWLuoMnBrY7e2GLNRle4RdhxMo4z97PZ4kMFwitJZ9wI6AHfspGpFqU76X4uN9ljygQH1FWoMfQdTMW2MTrpGTqTK2c6pYOpAKKQh8UFsOhdA0/peUFJLhPcJnmOZtKbFGz5F+mFmh0RyJZDCqkaLDU3CUsjFyivko0WxXaEqMEPIsHtC36NXsaX6ENiAxeiirAN85Qxwnuh9oW5bOm6W6xVyRPmrLHvAn220k3ypeBf0g3wNnWbqcf3eV3oDqVR1u5X4glbPWhp7ylCMd76U7noP6OG0DF7buD/5Wqcsd420zafxeSaFImbtjOFkeFS+17IZbK5aU4z3zdkMQWGghpONvPdO4z+UZL5H7oHfCUvMJ7MvWQ9Co9lKjzEmxGqyTM5msiUb5Ge0ybo66O/lm5HZ4rPJdqgBPNfGEWOqGtNJIxmlsdWAXHoRb4W8pK16Auv7r1tp9rr1Ij/hjyIRxiHuan4ZD2CKkj3/FLyUTvYbzW/VadKbynI/Nf0nbcSb+M/qStyZrq/tx4EY/CV7IPiO1iGbpFfY3aqM1ebfIC0+if9XslqkOhJPY9ifKf9ceTYuVjWI8+CBdJX/BjhKR9mB82G8Gvxb/qP8BrrBXEU8qEa/YcLcNbZO8EF5urnGG4EXfbz9iyK6br7A4rbfU1fYVpTAf7yZALrfMkQPomdwvr/YIJW+Fm6k7bA+1NpYner0bcfL8XZViPy/VhmFhDtuNx+Cg97HwKe5hCeyeOM2npjN3G3fMHnUn670C19XfzJPUgpw8ds/7Y9v3/dzeyl6WY+Cp/zlwih2AqFTXLlb3WTtTHEv8N0oIfTabJXP0umOzMA/esjfFaspfB8JqwSy34cW17NvxQwvYFoxt8CerpDDfETDILuEvaHmvAfF/XyHh3W4jidnA6rlVybCI9SgxrXaSOD7HfmitDDeIh+3N8le2xn3eWwSs5/ahE6/H6jUH+Z6hbO+136XsIbr2v5eE5TCVen7pmloYrxWzrZXTKHDHetl5KVfspax65yh5v0M1Sq4ffQVeT0KSZylvYacPIgK9xJ4Xf5P47vkwcwlNSMepJ47h7xSpN/Q/F3LFm"}, {"__id__": "chunk-91b44dc62cab5001ba1a80a439ed3ec6", "__created_at__": 1760493858, "content": "## Trustless Payment Channels with Timelocks\n\nThe simple payment channel described above has two critical vulnerabilities: if Fabian disappears, Emma's funds are locked in the 2-of-2 multisig address; and Emma could cheat by broadcasting an earlier commitment transaction that favors her. Both issues can be solved using timelocks.\n\nTo create a trustless channel, Emma first constructs both funding and refund transactions simultaneously. She signs the funding transaction but doesn't transmit it yet. Instead, she sends Fabian the refund transaction to get his signature. This refund transaction serves as the first commitment transaction with a timelock (e.g., 30 days or 4,320 blocks into the future), establishing the upper time bound for the channel.\n\nEach subsequent commitment transaction uses a progressively shorter timelock. For example, if commitment #1 is locked until block height +4,320, commitment #2 would be locked until +4,319, and commitment #600 could be spent 600 blocks before commitment #1 becomes valid. This ensures that more recent commitments can be settled before older ones, preventing Emma from broadcasting an earlier state.\n\nWhile timelocks effectively prevent cheating, they have disadvantages: they limit channel lifetime to the initial timelock period, and force a trade-off between allowing long-lived channels and making participants wait for refunds if the counterparty disappears. Additionally, the decrementing timelock creates a limit on the number of possible commitment transactions.", "full_doc_id": "doc-91b44dc62cab5001ba1a80a439ed3ec6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_6.md", "vector": "eJwN041bFGUCAPCUB1EBJUQXZT9mZud9553ZWaMzT8XKL7TIj5AgwMpL8zwxN+IqtbRMO0UzjyKQFZbdmd33nXnfmUHL4jH0nge6lEwsKu+6sJUy9ehLU8s+SPLu9z/8XkePBO84+KmxTW23zwE3Pw7ku190/oG+EH/w/zn2rWuGGhbbcS1M9X/AKuwXtLfhu/4GxYsfYgdhn/Iftr3xop2ky+ha9AY3F+8wzolbVQ9/j3YVjNCHVJ5bI9xvzXB/0Lpv3CD8Dl2AU+kIaYv8NetSfkOpYo1aKLZHiPWLQuQCNk2qj5XQKva9ElZWhMfo3wDNlxi/1IMg8AwoQ5EGsz8x2zim/mz8aFYr6WLI8ste75eoiB3xb6E17L/wLBwLXL5Lng3NteBm4m7xTqjAfjxM20RSpY6WUlSNXCa0GvAnwVej+UoPDgXOCuk0afWgKbEcqZDLVWbz3TQF96JTRtKNJw4z3mMbnGNckszNKZK+0kUUoQsDG317o0/KxfS4+Epws2eV926zFr5jPcZOxXPR7dos0E7b4wJLUdaKtfwC9LU9FnhpsTSfLVVuBifdD02cjU7QP+kjnXp+Dde7f4lZ4rTQ7YHB5rflWnMV+8jcY2F5NflYTdEy1XqyzJeY7FUq2A69CtzFVrm/o5+1XjeeAAcSQf8g9oOkrVE3+cQcolVmwjmT4OAZ/R3xAN4lg2wSeU9MU4idOTKW6Ix8ltVg7RL3KzvF5Z5O6XO9He5MbDBPozH0uv8GqkIrAxl0gN5pTzY2ZT/l2pyTY7wmzZNOBge1D6OGv4r9Toer2c4aLZQoAAWsH70vdKmFkYdzS6RL6N/wunujXgjnCE1gL7wRD8tIrfa7Fc3r0BgslpulIQJIE2pk/8RjWTog3K9opbCAOr5sXJu3xCpXeHmGVeeL7L/JnSZvg93qdGsGdr2keP8ONeNN4YY0lc1HKxI9pLyh3jxIstQheQzNAjnGHlenctfEPqOFb5UXkzbpVNM+/W/WVE5DM9Vz9HXYy5JCR0OGf2bTRr6XO7z/FiMDWIEXfdnsfKwU/YT+IKbCmdpSPFrsyNstL+JvQz/Iy+lCuS3WI3XnYu0q7iOD5AqolF00Nb5UeZosFueDSGyWnQIXAKJWEIgWW49Iz8MyMAwfcbXCLvFDq9qY5lD5sjSey7dL/S9RhsbiYuMXVVV/Jn0CNXdzqxWkHiKFepoc4SYFzqBiVKY0m6EoBw6hH4W/ol/dH5lN6LRnDycLXeYWcbp6gWzhwiTbE8EjrHIyJxpFtyiXoeE+bFI+TftNGSUvit+NnjJX+o/ymfJ5IPz/RJ/3QbG78YSeL19WCrju1q1wl30k/qjTYJbjdfSP2EjsA5uCz5oPO5NY3EkKadZbombOwQutozSkv2/njr9hTpUugnn6G3A9eFN42pPZmCdsjmag3a+uQ/dJp+K2cyQcA2XaSme7UUOY+yQ7r4RIS+xqPGwX+iaLq9GFwDVUiMpYJX6GNHChCQPyJf0oG2l3sk7wuLlar3PuMQ4k6iaOlp6Te0DSGK2nOhlwCDdZXWaRtJaG+DGBQ2Sek8ZGWDvpLP4ZtTvRT7ICmUAG6+F4faacEXt+0lmWmz7FBMEvo+uit9vXwx30X2hZ7jFUGVbM484GEuP6sw7rNznFZjvLg+tZN3pWmw92yXvxQjCotKJexsVdwWz4CrmoZKl18DRfhEvaHhM/t+6lUmSgcbj/VjpFP6Fsj6TzV1i+8YRVLoXAy/J0ktpkCdPUTKVuwmFznc65R4HlRIHr9STw7pttz6W3Nm5G3N6PcZtyER4H2+go51MXz6LgL6gAbeUf0G4TysQs+1oCgHGwsu2OSI5nibbNrDRX+LBWLK91oD3NXpZwIgN8vVNCKzQ3LKV7WuaoKr6WqLEexbkHivR3nRq5uq1fu1foo+WxlCDLCzG3Z5RR6owkX8EH0HMwiHcET0ZTAh2eK9FFWrOxyB4OvsX/AzDKmQ4="}, {"__id__": "chunk-1ad7333b26b807a58de1fdfbec373e3e", "__created_at__": 1760494056, "content": "## Simple Payment Channels\n\nPayment channels are trustless mechanisms for exchanging Bitcoin transactions between two parties outside the blockchain. These off-chain transactions would be valid if settled on the blockchain but are instead held off-chain until eventual settlement. This approach enables extremely high transaction throughput, low latency, and fine payment granularity.\n\nA simple example is a one-way payment channel between Emma (user) and Fabian (video streaming provider). Emma establishes a 2-of-2 multisignature address with Fabian and funds it with 36 millibits (0.036 BTC) - enough for up to one hour of video at 0.01 millibits per second. This funding transaction sets the channel capacity and is recorded on the blockchain.\n\nAs Emma watches video, she creates commitment transactions that gradually shift the balance from herself to Fabian. For example, after 10 minutes (600 seconds), the latest commitment transaction would allocate 6 millibits to Fabian and 30 millibits to Emma. When Emma stops watching, either party can broadcast the final commitment transaction to settle the channel. In this entire process, only two transactions are recorded on the blockchain: the funding transaction and the settlement transaction.", "full_doc_id": "doc-1ad7333b26b807a58de1fdfbec373e3e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_5.md", "vector": "eJwN0YlXFGUAAHBT5JmIokIs7i7M7M7xfTOz3qKGEJFm9lTyKNQHeaCWKeqDJLRCQU3EAzVAjmV3Zvabb76Z2aVCs8zbZygeWfHyIiyPVDyywtJUsH7/wq8EUIPebbiCz0lPgx73S645kVnqHvOYeJobx01VneqRmtcGlKhHpR5Gz2CmvlJ9E2aQM675zn7kPqsyS82G6FU6b47WHgif+FOIw2itihpw2/hNfijW4RcH9pb/5TcEi9VvfZlaPzFbnA5L0UXQFh9hhksYZHNNwkjxXlU6XgPd4G+8HeQgmipGmTCiMo5ckxuYUsrpG2I28U+pck9hbYRyonwaWjXwSaBn3cewAtQbd6hn1YWga2kS6mG+o/u4a2ADyIPh6ngO8e+jO9oNLT5wwTsKTNYSxE6XSzglTcJ9TBt9UUiKuS5uJLvoROZs3RzS273fG6bnsk4xl0o1O1gvd8i1Cc0igUCJMdhKprcQQr1Hx7uXgwx7H1EEvZUFnGI2gSoxhoroHqurYFIwIphp/wbY+FdBu05ImFUlWOBzKp8fibszl3E6NZv8Ce2OfN9BZwOMI2/7y60PNIsuqH9OaQ1harQnPyCIN0P3n8/HV+VHYAJaLL1pe0/opf8a2Ct18MnGAS3W6bSWMfNCZ/F6PJivJLq7UA+Ws6ahJKPbxFKjrL/IfOqAs9M/WL3u3cC2xSTSqdQ4V6epYYYEqZ0MGxzmPw9K+rZqYVKHcgI4kVgbBo/TNDMUNCZs9VSTTeQ7K09f4Y6ku3wqOLP5PXQ3YTjpT8UJtVqK0SwO1qfgK/LSuPM4D3zEPoRhjkbuKJOntSbshRZaz7vFr0GZo2PAWLAJprh2STnVLUYv0IVxwD8CxcjD+Mlh16BQVd1ROBeUu5zo6y0sTtuy1IgS0sQXjM9i59RPqvHiZjgGnkEN5GNfu+8h180ugQvCI30UvZ2E603ehWYp1RUuskUZE+3FjpHaSKbT50/Y3mepezY5I22qMJhTJALvBLtBYnAJk4UK4lkch39JKOY1eXVoet0r1HIh15WqpPEmE8t+wF2qnMyu3kg5vqE4d05CpRyQKrVF0NLS2FTYhk8GW5TrpJIOibfIY9wIh6pr+SegWGsgKfQdrhmIgS1csnlIusam2BO1f5gC4XW4z96uDbXG83PhDG6yluw94mXcU8kR9dTA/Z63tLFoQehnMEzYJX1P0vVT1d+xH4p+fp6zCCaRxVSc9kzIj5zO/n9uWs5Mhy9qIPM7vswtk2oD22rmMh1sV3mF+YZCqAPUSu4g50eD1HOBGYpTOgsvoB7evwJ/Usv9MRzDjTFXWTJ6142p4zyGzwkhlBvoBe14d3RFfRg+7S4yH9euC2S5C6RcnK3/QNTgZKHQ51LnkhxvkfEZGkLK8C72Zk0UvxnMUKPYz5WH8s6AB1519eELwXVaA6uFGlsPaxlqZ/JQKPRECSNlvih9u3AIOYytNV3xWJTENdlipalclphu3PRt00ardWB/tV2TSD/rGKlnh6FOqtUaL++jI7nhzARxBLW39jJabLUwN7Q1+gM8lW0zKtRSxlYnBx+Qf81x5ILcEywi5VXPpBI+kx3ls9d+wbZzPhWTY1SikiUMNy663jZHkFkGgoOU7qBb7Ak5z4jUkrgi7xVgBlu0e2YXYSIJZ1aiS9xTOI0c4F8WOTDR2ohmeGbxzcZycZWYJ6RH90MTQwqbaOQa3xvRA3azVwxx511pM3qCk/QcawJph/eZVGqm65FC4wyhTWzWhpAK9d7a2WCevo1rIaOFq3S4cc3Y0N9XdyjhRXcZXCMscTeiDP0feJfskHdERwhfxp+sagAcTLOmmZsVT0JP02K/qsqmY3CRcl4pc86URpGgccSINm/KP/nPWZOi91F7mCXIh02YTbxKgX6rfGb9cGVEMALMC3ayd71TyLL4DKE/yAxUUjb8I1mIDXAY9JWT2DHiW1hzP1YabbeUWj2PDMEF6/4D8GanvA=="}, {"__id__": "chunk-e910f1332403f4a8621669db544b327d", "__created_at__": 1760494056, "content": "## Asymmetric Revocable Commitments\n\nA more sophisticated approach to payment channels uses asymmetric revocable commitments. In this model, instead of creating a single commitment transaction signed by both parties, each party creates a different commitment transaction that is asymmetric in its structure.\n\nConsider a channel between exchange operators Hitesh and Irene, each funding the channel with 5 bitcoins. Hitesh's commitment transaction has two outputs: one paying Irene 5 bitcoins immediately, and another paying Hitesh 5 bitcoins after a 1,000-block timelock. Irene's commitment transaction is structured similarly but in reverse. This asymmetry disadvantages the party who broadcasts their commitment transaction, as they must wait to receive their funds while the counterparty gets paid immediately.\n\nThe revocation mechanism adds another layer of security. Each commitment transaction's delayed output includes a script allowing redemption either by the intended recipient after the timelock, or by the counterparty using a special revocation key. This revocation key consists of two halves, with each party initially knowing only their half. When advancing to a new channel state, each party reveals their half of the previous revocation key to the other, effectively revoking the previous commitment.\n\nIf Hitesh attempts to cheat by broadcasting a revoked commitment, Irene can use the complete revocation key to claim both outputs before Hitesh's timelock expires, taking the entire channel balance as punishment. This mechanism allows channels to remain open indefinitely with billions of possible state transitions, eliminating the limitations of timelock-based approaches.", "full_doc_id": "doc-e910f1332403f4a8621669db544b327d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_7.md", "vector": "eJwNz3tQFGUAAHC9Sh4mIyjK447b3dvH9+3tkVhgGj5SJE0rIHBSCA3UMdM8MlInwcEEJEzFDDk57vbuvv3228cV4gNMMUdLm9RRZrRSK/OJWBmSIk2h9dfv7186eMd1f0+s1uo6bkym9os5wiUQT6xwEjyD3HzQXw0z2J9JjFTRkm8uNUf7xsA6rkvY07zcbLNvgD2oKOkKOqPPVEeJPS3X5FI8nY92naZmspHOV55YnNpBDRFTtFr+H7qASaNOiVh42/eddIIt11fCGdI16rG0kbeTXXi7ZNJXzevcL4l2u+yL8tTDIdiiHw38bXfjP7UqqY99i+tCU/BGb7F+xGVvGarfBwPCPeOy43aQETNNt22lVq0Qfuqu4fGp3IXQEW8s67PRwXy8mODQ+9Z+FOReDc5KeBNk0DX6WTUsWmIGpAR/CdgtPiaDypfsdF/I3v5JGf8EqiSQmcAecmxWT/juyDtxsREpTtTuYBcfZuM4hWRxkSnVaJlYp5TLea40npe7NIu41liv/05Lgv9TP9ejfS6vJXuB5IwANNemX6TylWNsvlYjsoKdqmoogNG7N2kHjZsgUug3HwVF/TntmLND7qNXkQmeDLLV9oh5Tel33VEmSBeRg56bagPZyhJUwcUo6+yPVIFKCkXzi5Tfmq80TUosV48bM/zJ5F/1GxQd7qVXpdylGWHc2H1Ohl1IkH+uWEE8/G58iOlwFJuYGoRb+FrlhjXTs4KxkJJmN7xh/ZC3whzqmDNLA+imfiSkNxeyh+XV1DShgh2d+pQtNdDUXEkizRjnXkX1LVMK0XDSIWXEt4GYmE6mg4We2d5m8KN6hp8pVfv+Yi6hclArTpKRVMVPx2tTotCGhPme+WQNP818EQtGRHKpcJefw53EcWQE+tZK1JNiljTSvOV7YFgQRW2CK6R/9bVavbLUOge+0XiKy4JuUsQO1Sayv7MrlOeDydK0wCZSF/zWmq40iBscSV4bU2DrpAv59+RJnEWrTXkoXnaWaZlKPf6caSez5aiRJY4xKCJ8I9THPi/MZ3vJQGCy/Ry/BE61lcrlcgnbTw34BuXfcJ0riPtBHfmaSqFXkMf6NWRXtzhoUE+uqr1itraqsUWUsIMoXEXCB04zcQFXasQDHW6h2pu4//0FLELxTZPNaukkbAW15L3GLnKDa2C2Wxskl7TZ+AK/rKcK8ySndBT3jCWBp1ErnAtPbR8nDRpL5CiuSrhvT+MK+SxcBup2vmu7zZYp5xjJNUs1HG52WuRp6v8f+hjViBT0yrds4+NjgwfQTSlP7NDtTGtwD5vp/xlc/MiLnlTuoQZYyvi4emm/+H1w62cfgfVovf+CPk55A8cZO+Rh1m30V640jTZK9NXkR+xTH+OF5D5uxulNQ3AyGWO7indwtx2Fam7gIe1me9UYbiqI9p5nj/Be0A6OBUqM9lDs6G1oSnhYwlF1jXJYn+PKI0XKEnmISqGz4GMx4NrCjBWsemKwjHxFRYEH4gAu0C6rz5itcUfRckyb+8l05m11I3defEltHpWrjNBqqGx/Bc6nsyMiyRrUDV7SYsxG7ZG22UiEsXCKsZE9LM1TAMxlqjxnYbix1XsQX3LQCXska0onsuiy8isZBw8EKtlhux6o75ttwUZHpZ4J1psyeoDbuNeMTC5Ke0dod11Ex5NmgfGgS3sR5kk5go7cUthZ6W3lTsjXyFLwnc4bIXQ78AwoDCV418HVaoU1X4nXB8hq7uuWcKC36SnV4tnnPOAEpBvttSLhHvhBq97FIQSGO3K0XDWOCMw8qiU4krOD0/TEkM3og67QIWCHr4sLduf7drJ91GiUp/7hnRXaak7kf0r5FJ/SgJqbiJQ78GywU5uhs3q3fD2xmxS05DiO232oFz0HX6B5gegWMjtcbOBwGx3Qa7DOdmuLkFvs5vNROt+nLyQzbKOcy2ERP5vrc7a1JIM07zf4WdWDe8ggqif/ASrPpao="}, {"__id__": "chunk-c066ba30821a0c79d2cdbc3f74372e23", "__created_at__": 1760494069, "content": "## Hash Time Lock Contracts (HTLC)\n\nHash Time Lock Contracts (HTLCs) extend payment channels with smart contracts that allow participants to commit funds to a redeemable secret with an expiration time. The \"hash\" component works by having the payment recipient create a secret R, then calculate its hash H = Hash(R). Anyone who learns the secret R can redeem the funds locked by the hash H.\n\nThe \"time lock\" component ensures that if the secret isn't revealed within a specified timeframe, the payer can reclaim their funds. A basic HTLC script might look like:\n\n```\nIF\n    # Payment if you have the secret R\n    HASH160 <H> EQUALVERIFY\n    <Receiver Public Key> CHECKSIG\nELSE\n    # Refund after timeout.\n    <lock time> CHECKLOCKTIMEVERIFY DROP\n    <Payer Public Key> CHECKSIG\nENDIF\n```\n\nAnyone who knows the secret R can use the first clause to claim the funds. If the secret isn't revealed before the timelock expires, the payer can reclaim their funds using the second clause. HTLCs can be modified to restrict redemption to specific recipients by adding signature requirements to the first clause, making them versatile building blocks for more complex payment systems.", "full_doc_id": "doc-c066ba30821a0c79d2cdbc3f74372e23", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_8.md", "vector": "eJwN1Pt31FQCAOB2oLSAQH2A7XRmmmRuknuTTFtWEJCHSAVbQMVCYfAg0D1LZfEF1sqKcFoEgS2Wtgstw0w6k2SS3HuTmfIGYYFFQW1VEBeWZSsoiFpecngsLkePnOU/+H76MmA49N6O0fQpZVRHWWsE3FaXm9E0Vs7Aq3YCLQKUn7YWkbOxW+ys1ObUel2XA2qBsHDzlWRP6z1xlLuJn0gXOsecXtKb7X+xr+NMVB4awf7XnilN2LRbKQHTYRttE8L0M+v1ddtRnKnVpwn9wCE7ofSE2pgy+TK4klWu1Upf5l2xi8BL/JjcbgJwTFjcPsN+Gx7jSjWtHYvX4Nkts5jJ9nPuWHIklLUq0wyLU5TpqefhEzDCHrXG6f8xfkq9ATvMfLBKqDdnwwz+5eSkjWHwOG3B12K/W62wO9lny938Tm2M2qFnhJLgsLIPN/hyhW02JmH0mJqWU8Yh+R8MtfLNXvGoN2pVt3YlrvmvOpTZihfTv4L9uAr2ZsvlEUNK1SZ0gXRxDxRX5L3DIipJm+lJty2yXPbAHsF1TgV89GIgIA1b0wSL8HGukeyEnjSRdqFLRobAKzX0saSQinuP88PTa8gUOot8JK4wmgLZfysky/DX1jNcjV4u1+nXUbVdywtFLcJCS9Y+FMfqhu9b06NPiS4BFf7dvB//we93LpIuawSptLLAu6nRsRfiueSGUQjmSW3qJP59cYHioX24NB4GQ5zr8LEtYo/2z8JHhXpjji05o4l3iExtM4JWw2Y0lTxEH3CryG/GJ8LluL99D8oTP1Zm41K7gXmYVNEFwlB3K/kGH1LDqeVSF/CjSxEBnACDwQ7rnPqkOflRB3VzvWFQWwp/4E1hXOhwwYNkguQ1PPVI71RBQsIDWo7Qm2IlvCHMZ0+TD5J/vm9Y6mbomeJuWhFtTs8gz6KYuEJ60D1jr9T63pesNiX+lvQyaeBk25t4WOPoHpwpbxRi+KTa1+xniWgiO8f8jq+ETyf2cdVaHf+NubrQl7irMEI9X6bV+taj23ymfNSennirI2atgjPljcEZ9N3YyEROYJ1RAgfzx/QDkLVj7Dhj7pBXGdapgqftfWC0U054Z2NhndHiM1ANhnaoaLz9SrA+GIsdJA1ojupRpnoN5jQF0mviDfibpnITwE6mLjDbd7xjIaoEYbnUmbvGgz8SGo2bqTPyGnm/UxFnnMUgO5Qn/UgyEgYot+eBnWg8zCk6YMXyvZueBBbM2fSp93knJ3iBzyUngt1Ekr1FB3BWQYnwuf4n9QN6Xlgbn4q2we/8GcIJ3Nj/buHP8gDpPJ0WbPC5XLbvDPtqsMZzw95nMmAKwz3yuHxMqtL7gM/EavfOhqTL4GX4DaIN0mASNin5W3jzK/85eg/upcUFXdHJgZfsF6M1ibE0Lojx7cFBwTvmdS2GSHC+PTjYGBlm3gEr+XOFFOJAIF1pG2YzczG1VCuhv5rZdg+6Y/6qxUgnuRnfBvspvdE2MQddN3WjNfkUOiraoIt00LVkg/Uzum3Nsr5OfYqfM7LIW+gZ0KOdoiux6DSh7Lz33PmRTNSl56r95D+Ske4u0pNapJaIaamTlJqbpfFWMWzgF/kqhOH2v3EVXowG2tXKE+0lia3OARxJ/M724n4RLrM+uoD8HY+R28zDoG9qLB1Ia+BZ+x1+EH5F7lBCareaK2WhOmOawqFLXJ1VrDQrhrpUQpClhwt+xJdSXxA7yaGc+Lf6bLSeSQoraC9yCkfYRthfaCFXjV98P8ll0nLytDXB+Z/0pnkP54teq9aM4uGRf7XONUfEy6yB+RMlQQSqx+x2EagnB+E8ZZcc4Bv0FYM7uXXWydj37beZSTQITjELhKpIjTOg4AKZiYbS82SDG6bXtK3GErNH28OUsDJpNvcqSX43X+xWMvdSM+Mt6WiiiGzHw8X7e9EmKSoeyRsTDBMhtSTvLDoJ9ydGIi3UzB6UlviWmUMLV7b/QPoT0f4/0dad6Q=="}, {"__id__": "chunk-9041a3a6d7ab1c5cbdbf8145a503cbc7", "__created_at__": 1760494275, "content": "## Lightning Network Basics\n\nThe Lightning Network (LN) is a routed network of bidirectional payment channels connected end-to-end, allowing participants to route payments through multiple channels without trusting intermediaries. First described by Joseph Poon and Thadeus Dryja in 2015, LN implementations follow interoperability standards called Basics of Lightning Technology (BOLT).\n\nConsider five participants: Alice, Bob, Carol, Diana, and Eric, each connected by payment channels. Alice wants to pay Eric 1 bitcoin but doesn't have a direct channel with him. Instead of opening a new channel, Alice routes the payment through existing channels. The process begins with Eric generating a secret R and sending its hash H to Alice as an invoice.\n\nAlice constructs an HTLC committing 1.003 bitcoins (including routing fees) to Bob, conditional on Bob producing the secret R within 10 blocks. Bob then creates an HTLC committing 1.002 bitcoins to Carol with a 9-block timelock. This chain continues: Carol creates an HTLC to Diana for 1.001 bitcoins with an 8-block timelock, and Diana creates an HTLC to Eric for 1 bitcoin with a 7-block timelock.\n\nSince Eric knows the secret R, he can claim the 1 bitcoin from Diana. This reveals R to Diana, who can claim 1.001 bitcoins from Carol, and so on back through the chain. Each intermediary earns a small fee (0.001 bitcoin) for their participation. Through this mechanism, Alice successfully pays Eric without establishing a direct channel, while all participants operate without trusting each other.", "full_doc_id": "doc-9041a3a6d7ab1c5cbdbf8145a503cbc7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/master-bitcoin-3rd-edition/ch14-applications/mastering-bitcoin-3rd-edition_chapter-14-applications_9.md", "vector": "eJwFwQ1QVNUCAGDTKHkiPymw7LK79969555zfxZNHJ8+KwWTZMtePpsyf2p60YSO1jC+RKlkShPMiUhd3M1duHt/zj3n3ruIWQ5ZMigvdVQwxcqnSZSWOmo5VCaS9b5vLbOnBH64zq0I+9KfgsaE3ZaF/a4qX0P/CsYCJ5JvaPsAQHXNLeZM+3vrXjpROWQ3sTPJ53alU6k85bzq0ZxP2ueSbvFgKq4eQI8KsWg4VZvqgEO+jWFtZyM/2tzHuKFu9hy7BvShLBiWZyRyje6Sp8Ozoz3CTJjAf7OnhRfAkWQ+zHbeAE40U+xmV5uM1i52ipiP4hqo89+KZeK/tXIzN2Up1UL/+NGKmDPJjgDBPGuaxkgyh0bcrqCElnkrQk+oErtC7EU59Et9hfoMHudrMDuUfG6DiOSK5JtYBHf4bfJesZZs8v2vqNk9aM7KNjTWux9sUGagqyQXtHAn0Wm1VOPsPrDEeJ9MdgNUFW+2dcJf8Sfii8UGOSsWur/fN1b+EcDiLdYsYdDe7JbBpfJGuUZeTi6atbbK/SQDzhKXqfeD1tbt/qfoZ2iNIGEedLU20hfAEbfe6A9mtR+zTtJLuFrOjPukXbRLyzXXWzloDRkTXmHNlKrBYWYJ8sYfMI/p1+FlZ3TbKlpF6szzLKcV+L7WhzmBzCF26qpd4J1nDeDp+ETwz1bAXAzsljawP8ZfUzNhmTGs3jCv4I92rqPr6X7xTf1Lz1r/QTTEpEl+8J8gL7nD6hTMhvHyf51R7iY727ibtjP1tqJOTkXEiPcV/rBZGb3TOsl4Fl3Ti9LH6brEFM0Dq9AY5Tn/oaJ+NYwXq6eMj4yo6lVqQQ45TDvBbbgNHFJW8vMD3pYh7nvhw7wB//OxAfNddrndLZaXIGWWvCUUZw1SnniSDgujpLlaDl/orjLaUw+K0+B58oV1zHPUuCa8w3cq1WLEWkrLHMCM1W85/8FThKn6BKOENJFDOBbYFbgKcpUkyuF7hBowgnbyigqkEfkmwamvWh4BZz13xxcFC8nbiVJXCzLv/ynNa7ulL0EQ9KMIrIZNVnPhetgbC7P55kKyUByFZyjXuMOMT9bGv5AeRL/R09wpkbfKnQZlJS7nI0qN9oB9FWzd2qm8ykzeXk8nSRnSnpTH3juxWXxa8cZWGcW0Ak0A87hfbJ/5Ov2NnyNc5tmScHg/HmSG3Ep0j1ipbCZfu3HmLtThtcE/hNtiH7khm1pYmdpax85is+xz6qPCWjXOL8XliQ1C/X0Ph3bxc30xHHK+RSf4TlAqHoWf77jpKHS854jSCVeZ7+CVnqbo8pjEZYLnncXqcu2o1AMvIbv4cWXYUvA5sJROSTQ4Z+nf1Yn0pe0/JQe5XtRLo+SMeYHeIyXpGVyW2k16SIxL4ANkNhygGR5Fesy6rZeYVZw/VszO5h+Sk3BrKkdkQyWhwXRT6GTgph5M1yHOiYW2JH4Vb5An7FH0RaORseTvYFik/MPSODdbv2JmCmvlP8QOusSdo1b7onAKiOof0Gx7biDCvsfs5ce0tTJ/EKAOc3+Ri1aDnuajTgOJwlLUZ1fR0Xgv/lQbZHc6r/j3yNfhLaZHzctOc6v570Jv4SR8LeGRM/Xy0DT6Lm2x+wEpWghAYcWOe63u5q+U9XQ1XOScNjNwH6JE18LoWXYfesS6wR+V8sARaz7/MXyP32aekSPSYyGYas+8n1aHxnrr7EukCbtiKZluFklY/av4glFAauhLoSz2dV8e91nqB//PcJwyQ88g41rrpQL1Ns1Ak9XrkkA8ZBlZRCY5QvK8MaFws5T2t7ct0LbIcZq+i9MOoHCIsl3ehYg408iIdoqvJd/I1eoeeaMY0C6b34jPKF+0PUenal10MRfmX6bIeKjxSu6dVB4+VbAbc+rb5gk83VqR+MU5DjqcKvN4c6k5H2+Tg2AfyecXkV6np21A7JGX0Xo4P7yJm+25YC/gdoBefXWi2xjS/g/HF6Lt"}, {"__id__": "chunk-90aec4e2b7fb62bbe21fec6f16fe4021", "__created_at__": 1760494276, "content": "# Bitcoin Cash Fundamentals\n\n## What is Bitcoin Cash?\n\nBitcoin Cash (BCH) is a peer-to-peer electronic cash system that enables digital value transfer among participants through a decentralized network. BCH uses units called bitcoins that are transferred between users primarily over the Internet, though other transport networks can be used. The protocol is implemented as open-source software that can run on various computing devices from laptops to smartphones, making it broadly accessible.\n\nBitcoin Cash allows users to perform the same functions as conventional currencies: buying and selling goods, sending money, extending credit, etc. Bitcoins can be exchanged for other currencies on specialized exchanges. What makes Bitcoin Cash particularly suited for the Internet is its speed, security, and borderless nature. Unlike traditional currencies, bitcoins are entirely virtual, with ownership proven through cryptographic keys typically stored in digital wallets. Possession of the private key that unlocks a transaction is the only requirement to spend bitcoins.", "full_doc_id": "doc-90aec4e2b7fb62bbe21fec6f16fe4021", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_1.md", "vector": "eJwN04lXFGUAAHAxS/EKlcAN2N2Z/Wbm++bAA+KRZUp41gPyYg0VMLzTIktMA8M0EA9E0RVY2J17vvlmFi0T7Vlq+lI88qinPs16omlZHh0+O15l/f6HXzeUK+V8INvXpDKzCqwH80J3zLPkgnib6dQuo6nyvFjQJ3GlUo55DxOzmcTxPWL5DEtPsQ4rx2EQD4D9YGasyrjCjfZtbn6R7gSLYL2ZSA4JH4sI7YqsF/fYm7yLzRJ2IDLQJW8me4KbjhUjfUhYLKWyeFF4U19ILYAHd1Rqn/FfKPnM6KS16n2rFx7txIGzrQXsUNLJr1O7xCu+H40NRqX/SSnJm0O/Sb0uBnEX7J6awOQZQeuSU0fiICXPobNFyUbMyw358DccryVE6+QRqIvrwbyRttP7PXMAzzU+Yq8zSrgezTTH4wePP8MorbuEi7jLRuIgOMecTnp5atgiONUowl481jrofq1km92MhMYskMsXs8P0RwcX6TP99Xahb6n4Auztn2CP5il5cPtXbBTt401prHUkcBMLms2fVsrQCORBCc475Fu7D98Aj4O8pPkA1d1PnuuukiVmhztZrjF34+7wDN1fOuIO1cGWirZLyZQ+VIpTq7kO8zBVJgnqWFtL3ZTyuTXR+wXJM+9TnZBVcgMHrHx4y5hiZ9Pj9RVMT/KHE/aebWX0BfwSaq+4hc0O3DTf48qUjYEM+10wAN+x75oxun8rsb8Ba/wXmd/1eK6vwZrL/OvhZk+5sFUZiUOk0p0Et6WKxulAlMsCYWrD1uNkJ7pqrHNO+pfgUcSyDlGCuVj4uXUeLAMl6qvwosl7C9pqmwvhQ6kOjGEfs26xaexf3GK4NSWkeGAWucZmksPKSXUI/iRQGKtiutAAmMgXKEVtReb1liSjXYiH35ErnqmOTSYPvkA93G7j3k6zNaNlbOrfoIZ/SjykbEnxuiHfW6F/7XStQ75NCdvbcEakVHeM9SCQUg3C6mv+O4xJN8Cn17bbI9QGPhenK09HpuE88IBdAZJTg7rgvp0WAGthtEnHfZmJ9J+pv2qLtB7GEKYc9NTOWPf022lT0LR44OlLFnBpqFEvjzUZov4luCPUK92dTpSOh/PfwovbO9VP2OWCyU8zp8MT1jFO8AN1Jf4w6TI6AmcKmb4SawxcyL7jLzcGRk6lJRmP4k3qKakivQ63E9rNECLoIazFSttXchkz3987qYP+XrigzmLvkZni8OYC5m9upLscbES7rSD8MDQXesSAuZFu4xu1DiXfU5JGN2x476BQzC4Ke6JH5Gz1PGTl2RGPPc4shn2QCJ/xd5EIKdaC6Bz1CxMnjuOGy3eZzeIQ+1ZCdSwPFzDrnJW+9OjD1GR4ASug0h5lLmNqTM3I8Z/0FtkR64Fx0rkKfwdeGEb7mocHQqRCL8Sr+X/oUn4pX9vEgY+5yegtPRz5iN2HQ7E+UMVrlIgsC3NIh10ToO3HMRXYyPBsE6wVVrqr9Ux5L6OkhL2/WqvIXb0RfB4t1BLxbYdxUuBlQ4d289DUveoy3E07Dc+Ys+Q29gO4lIi6yHWZezCtabF+dpXcXxtm3MLlkBNWM1Utq1sw+Mm3HFdbEhszXkHH8LWA1xjk3AhHuWNyCfcsu8X6A2QrWegoboTl7my5AU9tmh0+zk6w8kAlqooNgrl8N0iMCqZW+FSgyTjJI45CX1tHGTXKi4n2Grva7W+H0044GdEc/iWuTM/VmyLZ7vstxfCK5wfznN0v4QkmGSbiVcZi7YD3Ee4wHsbkaxs89a3tvp5kGnXK3Rq9GV7DraBGykEwUTcl6/9p++nd6BV9nrEf9hKXuGXqNTAfn1fi0A2tAiYpQeccWQmel55TnrPanPjYL+RnfbsRG+wHC01Fi+kuGNfwBqwzf6DOu862DFzPbMIvJ3dXJhpHcbxQDK8GQmCv3VejdB+7n52kOtQgAcqz/Jo2Cc6mS8kM/JeN1P8A6C+XdQ=="}, {"__id__": "chunk-73198011863e083a8c980f807453b1d2", "__created_at__": 1760494509, "content": "## The Technical Architecture Behind BCH\n\nAt its core, Bitcoin Cash solves fundamental problems in digital currency through its technical architecture. The blockchain serves as a public, immutable ledger recording every transaction, while the proof-of-work consensus mechanism prevents double-spending without requiring central authorities. This system elegantly addresses what was previously considered an unsolvable problem in distributed computing.\n\nThe mining process not only secures the network but also controls currency issuance according to a predetermined schedule. The difficulty adjustment ensures block times remain relatively constant regardless of total network hash power. Meanwhile, transaction verification uses cryptographic signatures to prove ownership without requiring identity disclosure.\n\nThis architecture creates a system that is simultaneously transparent (all transactions are public) and pseudonymous (addresses aren't inherently tied to identities). The decentralized nature means there's no single point of failure, making Bitcoin Cash resistant to censorship and shutdown attempts. The result is a robust digital currency system that can facilitate value transfer globally without intermediaries, representing a fundamental innovation in both monetary systems and distributed computing technology.", "full_doc_id": "doc-73198011863e083a8c980f807453b1d2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_10.md", "vector": "eJwFwQtQFOcBAGDRMIoQGyIQuONu9/b28f+7e8RXIlYx1EcDdVSawYAWDRqDlzRNzaMDEjW+EhuZgHIIiPfYu/3/3f/fvTsJ1qq1EYGMj0kiiVQdRaxNo9WxaUksGt/9vhplfAH6dIR8WhC13ACDacxi9Gdrha9ampyhyp2u7vg6l2PPMXUXziXrtEFSrNwjLdJWPRPNQB+A7XRI8PNfxfcTQT7v/lEq5bv5VnDDEu07CpbTwVCwQFluudsn4f8K7wqjxUPCk7hKmomnW07fWHWlt06dp+x35bT45VA7MKdJl2Mx8eeuoOc2c70jRC+yr3BqfpV9QHZo+Wqh96TRSwPGeV9fsNdcz89RzpNHYjr/T/EWLYxFrQ1WSSiJIuzz4nZykEt3fA7Wml/r6ZqV9xBs8g7BSl1lDnH1JJW69pQ3f4P88ve0y3xKDGhv4TNKjZkW2gx98mGz2zoerHDd4e9rbvrYeQk9ipdqU/UiUuVaH9TBLbYmEgztzE+V5hvDfLbaDcfgXjJV2qIHk23CevmmmlCMuOZhLNlxVinFA/z3vEs+YX6CGu1a2AByuXPZR0Bcb+DeiS8VeT47Pt77Lhkia+FphlGzEqv1UMdMVB3bmd+j1H/UKP6E25i5vp5Ypd3J1HH9ZgWooLN37g72S1Qv1Zz0B89tPM0uY30o0RxC/6Bhzq+7vW+Acdw1dbfwmlCgPy/76ZeRXxqrW6vJCC2IpQpBBtG1+TfNK56/GafYQ+j6qMkiCxajWnWm+SPaGJ9oz+WaY9smdIMUkCL9XW7Ze8/MEP1kZ/wg30ffxxuNUXvSzEw5zaR588SikAYLuaJwnbef7oMlakAIuNOs34sBsVQuVJe2h3IPuX6Ftkn7iM+5FznMFZFr8VtCkfRb7gIYG9xlntJfMP5A2+SHDEufAzfsHnw9bxl/GbxFfhYfaj/I5XD1vA4vwFWkM5ae+NOESRwyx9NycTP/E7fBaHTM7pjC/rU9Q1sD0iKTs4rBv9g78GiHZj6dc0x9jT6Hixp78DpXiFnEfAvixvQk1jqzmuHLyEPDLP1kl35J86MaY9jdmDNWL+YWoqaWTeBjV+tHA0avVN6Uqm9Obgk10cneH8TP8GHrF8p8Y0QqBCzqMLvknoxxysXIKrgAnQayaIftWI04Cd71LAL17Dt4LmwQ50kANYeOx7IdxdEraF/BiHrXHqYekqm+4AvBifQeWc2VcH9hrzofgDHqWd2MrMGFcjTa4v41iCYmyttBj5EOL2pVQFP8pAVcBdQIaCc8J3e/6aoV2tU6qazjfX3QsTV2VL0VKo6VkAq0BXwJNoCv2LukwfrWrAT/894GvPyyuB5XCu/JrFnNfxC/ZkyN6la16zS/hLsCsqwG6SlaZ15tm0/eiEyLtOvttEjrY7+zu+RtOQtgITyHyveeMh/jJaRXWSneUBjfjvxNUo0wT3bQlOZ8uRKvTFYIU8gO7QSDYT2eRau0TrIruox9Gg7KDByQK+kx8z73LFjrGSM4MbXOoaOOj50VJNPQLNa+xD8IzoLZMS/fj94jG1ATrDMOoC72TcFpevETYqoZp6kkJcFb156Z4FhhZLhvCnuYXGE5+6GrD8xouYBUOizWx15Uu8xV0RAJWK1GOluGMhw1yB+dgQY8y+EfjTK11hqt99Mv3FPIi/L+8CY2V35o3xDXyB3SdGOW94LvJbgE7/AllDzeiRd5XjeTyhiaJLPtZ8KZ+d9oi1G58iDzQzKKHRdNsc96IH8gOAdTsh31yWFQa9RgWRjNnZHOWJdgK0bC5ayKaIDeFH6XSHIlwVbohJnhreF68wn5sbE6vEBMUX4TORJsFQcgtr7oGA4GcK6d3lLGerxtJNU6Yu2Hx+UR9BIJJZrs/+CteRPp26YdexT6LPa6cRi8jYrhIFnKHU8spDC+MHbbducqwX5yHyPlnDzIEDCHdpBX6ZMgBX7n6hU+V5d568UkmQ83Mv+2T6LldFX4/2xZpz0="}, {"__id__": "chunk-43c4df492115b3ea751f208da3c86b04", "__created_at__": 1760494292, "content": "## The Decentralized Architecture of Bitcoin Cash\n\nBitcoin Cash operates as a distributed, peer-to-peer system without any central server or control point. New bitcoins are created through a process called \"mining,\" which involves competing to solve mathematical problems while processing transactions. Any network participant can be a miner, using their computing power to verify and record transactions on the blockchain.\n\nThe Bitcoin Cash protocol includes algorithms that regulate mining difficulty, automatically adjusting so that a new block is created approximately every 10 minutes regardless of total network processing power. Additionally, the protocol halves the rate of new bitcoin creation every four years and caps the total supply at 21 million coins, projected to be reached by 2140. This controlled issuance rate makes Bitcoin Cash inherently deflationary, as it cannot be arbitrarily inflated through currency creation beyond the predetermined schedule.\n\nBehind the simple description of a digital currency, Bitcoin Cash represents a technological breakthrough that can be viewed as the \"Internet of money\" - a network for propagating value and securing digital asset ownership through distributed computation.", "full_doc_id": "doc-43c4df492115b3ea751f208da3c86b04", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_2.md", "vector": "eJwN0I1XVuUBAPBhakogDLAgLi/vfe/H83Ev4CceM5FqDsqBlCGnzITJmHrOjlkjIcvMci5lckwBeb/vx3Pvcz9eUPHgDMSMFJPSuSOe4yaCmVqG7igm00bbfn/CrxFOy+s6cJOU5ly18uFDTyy73nbsf0gGGgnn43otKYa8vSn+nGq11K3WT9PVeIq9jf/JqNJZoQ04VGRnwu/c+daz8n/UUTApcMa7exsmiDahIbgD5grz5B9os/i5sh+kwn8JN3lWG+WLlYBTllssbWcz8M9SFXfUcx8H+SiphN+oi/kwW+rp59d7L1gnMwfYXvi6Fi+VRl1J8wA6YgyE/XmTfWmRn9Jk+TnrCW9h+H1s0k8Ng56yy59sJ+nMFLnXLuH2P7lX+JoW6W9F2jxxEIi7MNqC+E3CTD3O+mX4de5a6I50mdYYfu5genn0v3gaTTIO4NOo39rstKTd8V6Hpuol632ale8uCT5qZhkzhCzfIErgenTQOour4J8gDeJT0t+AaRjWCTBovxvrEx/iW3iOfNA+xc5yz+3eh0v2jfCjYAl6zVykLnO74RL4orhhei1igu8KhlvGvSm+bcc190Q/JX24yB+EUtslbiC4wDhDjil3saFuRneiY0Ig5xVjv3MoeZYwIZokNtNV4IWQDjapG4NDZjcW7HJ3LdNu1PJV2kq3OrPLaGTS+RFvYs4B4XDWJP0gzLMaxRP2ONkZmkEPmT5vMnybJmaf0lZzjn46lO9p138V6QEbouflAifJKHC67VaPkdUfyA8lCq/CJnQ2Os/KRhn6Tpv6EpTLdI1RkdGhzkZM9Lb/knicdIIVxNUaxbv6F7A65x6czwXM2biP/1hqwSe4Tfpszzv6e9xG12V2+WrNgehFdwJ8AJ+Gc9F5dVwv1NeFttEMXAlO2V18k0OUaNhlJd998xM31Fq41QRjwhE8FV8P95n3XCV8kt3plNI43/fCn/1HnTIlOW2dZ2xrln8B7jAWq1+BR/k52A6dowVJmXKH1WucZyD5OnTWuwzWwxpryJ3UlBdIh/FKvrHWO6x9poR8w4Hf0Au8/y9x2hSi6+lZl0Au2w7+aPpRV/awOhhbFEygtUIBKqSb7XdQvPVASJNu0XnEgaWCIK/2j8BB5SvhtjhF7VBr2GH0vu8KOBbZSP8E7/G8+KV+mSyM9wv+5pNTG3P65G/sXvpvWicH5KX4hGVbq7hu7gGoZ10+Ji8mu1tqtUHE83X+D8DV2Hphj9hgtaOX9SVwJa6kn/GFQCcVWpGuZ/dsnwaP4JXw97qr/zV6TPFKSyOV5iKaQ8a9N/gtYDk72SkyV9BWWAd3ge+lzXCpkamXS4M0Peuae1X/RfYRy8OXCsfZD1CbM8bvoP3mY2KdeUN92Dqq3iCz9EE60eqSCkknqhE6SErTsFmTeoB8hJuBX+qQ96RmwE7o+//HDSYBM0RpSxBF80cfp3DoCtljfSHU2Qnamsw/oG9xHmBgyJlo3lGmomLhR3Q5sty5GziXlNtQQVB0qv2IXQc/NMKgJX3y1pbAXvuT9FdEzazWX/J2ei5ah/XKhsl0i51qPdN+jdbrc7kU62MyIM7Ifhps0YqTpwPKblTP0RRxjlYkv2G+wT/ubHAikV5xrTWBk8Vv1TRr3OcHPjMRpcQaomX2qGe++ghcbpzNHMavxZKZ30rr4GPGTH5F7svSiPWlFMEvCTvUASGBVKABe66lum8az/kG7B/Ca9Ak5illZPo/g9iJ4/vFdUwfuUKHvMehzD9LNOMoc539GZa4JXBh1m3xPbXHfJ4K7C37I9+ZpL0gX3wx/FY4QC7KjD6R/fu+KrxBX7q7mj8mjVse+gKfaJfQgHciOSzEm4/b6y0gBHC5to987jzjFhMgbjcBs7fF9T6vTDcL0avaKpRplKH71kL7d24sO83uzriZMUai6nL5EFoZvcAsszuJaRYIy0BzU6H4a6lK+w59SIb4oNpjpyoLjErtfyWlqms="}, {"__id__": "chunk-74115e825cb0a30f0a65807f709558e8", "__created_at__": 1760494478, "content": "## The Evolution of Digital Currency\n\nThe development of viable digital money is intrinsically connected to advances in cryptography, which addresses two fundamental challenges: ensuring authenticity to prevent counterfeiting and preventing double-spending (ensuring the same money can't be spent twice). While physical currency solves these problems through specialized printing techniques and physical uniqueness, digital currency requires cryptographic solutions.\n\nWhen cryptography became more widely available in the late 1980s, researchers began creating digital currencies, typically backed by national currencies or precious metals. However, these early efforts were centralized, making them vulnerable to government intervention and hacking attacks. Like traditional banking systems, they relied on central clearinghouses to settle transactions, creating single points of failure that were eventually targeted by governments or suffered catastrophic collapses.\n\nBitcoin Cash represents the culmination of decades of cryptographic and distributed systems research, combining four key innovations: a decentralized peer-to-peer network protocol, a public transaction ledger (blockchain), a deterministic and decentralized currency issuance mechanism (mining), and a decentralized transaction verification system (transaction script).", "full_doc_id": "doc-74115e825cb0a30f0a65807f709558e8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_3.md", "vector": "eJwN0otXFWUCAHBpKVbj/ZDLvXPnzp07j28e180sFMWVMHTFts0gTaXcwvKVp5RST3pw1zqigAdUSJH7mJn7zcw3353Lkh7BOkoRHsFV1tKDLKu7JZHG2XKlhLzH1/Yv/M7vIVg3LfZxme7yT3FsY2LEXm+LHsdYOCoralg8hjLNU8GnPNX+/cEk9IiRhxeLKbGrdCIqRw0Nb4Pr1mtuns7GC60+8TY1CJ6MIC6Ln2eKRoW8T3zALDpUIaegtwSG3SClgq3gBfYvVm7wvWC2PSw3+FvhHWqGPGyy3iThHH3NmscWoxXCMfoKF3Qv00vtGz7P4WKwIvqqXBfOluM5PQapPlRenHZfzYOb3OmgIPrQnawMglT4kUagfTYjfKrl8GOsz9juPgA3g6mouLZSf92TS2+ku8nTMKepgd+J5lqJbCvXpAyI2/UM/LOwFg5mdMhr9Hy8ECz0D6FOiyI3h0j5I9yB8sksqztaSd40l+OywErYJSwhOXZB3ov7+8AgGqcjPAEWw7+jVZxmlESHAQO2SSliAfayhdZM4pT0BfGIkBiQwONRjCrtFs4EyWCSu13MM2cc6bf/x7r4522fPoSyrTqxnN4lF+Ju2Ji9CnaTcfMHUTEWcH25Q0q9FDafsrPz0pjq8DPMm9ZzFMFcYfq4KVNqPDPB2sA0e4Qa1t9rPKvvto+TDNwLR4QieFe4w23R/0NdF9aYPbQnfC30R71Iv2yuZr9mWlBN6C7RqWzW1wfb6JFwA9PO3vA+wV+AC7S4tQHVEwmu9sc8zAiTyFYLt9311nSgGCW4lK8xXkIR+AtEoZOAIst8iezuQCcfoc4bbUYDBlKn3Ba4m3sNT5InfI/K7bIfZGgDxM3IevA3a1yd5JthlxsVsVF6QpTE1eCyNj30bqRVPRkLyhd5L2r0ZqJ/qRvS8rgz3jFUaI/7fkdMZ2t88yVb/tg4o+2KiexxtsVYaqxjurjVrvuRye5boS38y61bYbdwR/08/TdCIh+SpprH4dPMK7KNL8L+yHptLe9Sv2R09oeUb2NS84RWDJqdnfgBWZpDKBV6gvIqiruxesFrOS5p/8yhwL8PVnGOMOYvOwrQjdhZosfc6Bljd5qLYh0iidM9s4WEaJH5qTtDmC+tC25g55D36GdBr1JBJDr7wQM+GeQe2WPWiVe5/dwWuCY0P73OdwN2OQ7IX/lPGeXGtxrD35c1MKQkGgl0hDrm/a2QLBSLfuWc9j7qYVm22XsbHLWHQISsiy5nLzqTwUN+si0xY3wV3KRePPRJZDKKC9fYUSoplBDoyGlSFPHJiGqVPLYr8pPweVO55IJllo3TrUywBuzjUqQvxVnI0vb4C6O9zmjbKj2TSY1VUTeFBvKesNw87whGOuErum3+I3BS+6uP0mziu+BRzIujMFUcBM/iWu9+4wPPEN4BTK4XzJIHDr3Pvy6cA5/hKlAsFqlvtD3P5xujylBktnBWWw9TatPM753ZvwrslfqEEJiHD2r1Vim/Q1jkq9W/s4HyB99BtdJcpk+1D6IPnSfgeWoruxHt8kC0SM/illhd4QmukLtnoeDPLT21cfMCSrIN+Pvmn2jFCqNTDo1+FJRw/9V/5Ou105phYZBmbvLvgJdgvfoO+pN5nX4CtXk9vj51AM1lXMIY7JBUfCL0Ne50E3qvcBi9S9XJh9tqwGn+HXmeez7b6+8Ht/Vlsp93MF2t1/lZ2lVpj305mm6r6m7iJT3VrObnaJv1nAgLfzFe9oyy8cCA0aMUu6q58T3HjGHtOLwEvqEo6wvHLW3YRzErrQxjSF1iLyVF6rmsJHJ6aLy1QG8XJFQ6Ne488Ovqla45oIovQ0ca3/JicycMUjMZmciHP9qvYcw6xRI9C19pm20/UFZwKdECOmrcYke0beZ2LtM5Q1yK8ohsfNMqsqu4RuRkmj3YMgJn5MXghcNzQRGc0JrMGDvI5TP9bKUfetOEpMgKeZX25+gJA+J1gf8DSqeldQ=="}, {"__id__": "chunk-844e1e80d95a597d23fa56d6c5bf6cfc", "__created_at__": 1760494486, "content": "## The Origin of Bitcoin Cash\n\nBitcoin Cash originated from the 2008 publication of \"Bitcoin: A Peer-to-Peer Electronic Cash System,\" authored by the pseudonymous Satoshi Nakamoto. This paper combined previous innovations like b-money and HashCash to create a fully decentralized electronic cash system that doesn't require central authorities for currency issuance or transaction validation.\n\nThe key innovation was using a proof-of-work algorithm to conduct global \"elections\" every 10 minutes, enabling network consensus about transaction states without a central authority. This elegantly solved the double-spend problem that had previously required central clearinghouses. The Bitcoin network launched in 2009 based on Nakamoto's implementation and has since been expanded by numerous programmers.\n\nBitcoin Cash's total market value has reached billions of dollars, with the network processing transactions as large as $150 million instantly and without fees. Satoshi Nakamoto withdrew from public involvement in April 2011, leaving development to volunteers. Beyond its economic implications, Nakamoto's invention provided a practical solution to the Byzantine Generals' Problem in distributed computing—achieving consensus without central authorities—with applications far beyond currency in elections, lotteries, asset registries, and digital notarization.", "full_doc_id": "doc-844e1e80d95a597d23fa56d6c5bf6cfc", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_4.md", "vector": "eJwN0gtTFdcBAGAVydg4VATh3ov3ta+z5+wuAmWwxlA1OKG+GkCCJGo0xpk6TqMGmUqiJqbWGAMVIYK8LrB395zds4+LpTqS6CCPqCEmbVWM2kkRjNE0TUXjK4o2tt9v+EbkeRmbOkuNEjnD2CCOgo46TxR2OKhdOZQ8hr4gCxwDfIVHlHKyxr1H/kEnK2s6vtHPRpu1n+1dKafZx8Fhbqd7RS0VF9UvCe5h3xDmJxfTPdY6aa+4UBgTzksDdhBOiQzATpQdoPyJRii8jCXrh/QKKSaulpYpDfg9AOR101PpStitbgNIuC4WebJwlRXiX4iUS6l2Jrye9jlaFN2r3Tc8qfnKQfaIUMY1oQpjgr/Omym+3r6rirNa3PTA195bIoZb7WjDBKsCbqKd6j66XGO4u8IigQndav0MxDtZ1iTiBV7v88oNUoZB8C0yk9xC28kpPEm+iYqt5e5FtlEv4LKsO/oQn4ir3EDgRfpP2sdONSfzWQYEJaqqHWTepnXs57AWzovGG9XAxi/HnpEPCEvhMsV11jNdzlriwprIDm4jKFIuWzXqdeeiyCpH0QWWYWv5l35uupnsblDhvkMU60L7AlQ1XlZSnI/xl+2PzWdbi3GqcsifI541kxryFY922j7NFLZ9Em5ma+mZ8Kh/QM0Tkvk8molO4lecbZ4f6SBeSxl7dmJQ29D2AIDWpenrpUeRU8Y4cRQ3gZg9aLSSu1YePer9icTMAuFr9k/CB75aPicljVwTx/MrOFdZiIfVudZDKxeDtA/I38ObpU+5a2Ff8L90rrgbV9PqfQ3mWVpv7qIh4pcq9Z0wAclmPoxXP2KyQYbag+LSmfr60EXzibwreAztQ2+CQnKQnUwypAhdw8323bEaBRRrgTnyDHG2VKMNGnOM4UCWm6JE5Apnu/hbbNoT8fTIOPE6HXUeaMkwJLiR99NL5PGtvyO447moznxHf2m+3dLJ38AP6X6s4/6U+epzKXNhUNC1cbKClkk38Pz2P/pXKyrZa07TF9r/noDFQZgN46jHPRYu4J+SSiOJ5kDgnCb6+bY+bbURhlO5v7YdUdewW4zDYpVwKrTFtmFVqI98E1vBHyIPxKekXOuePRe9gAkQpC76A1mSKMIGeXHUy68yLgg3uCBdrA8LHQiE8tCZpkqcKq2FWcxJ/QBejZPhiLEesOlvKU1kzJroLpWnQahsNdaZj/jRwPkGAc5AbdJx7Udhs0FRPJsBEXytow9B+X1nM5wTmIU6pQJSw9eDByTTgnpc5Jgnn7+gOPBSSyGR8dPqDOlqYxku0zPp9/xpv8yd1OrpNusd+ir4F/oPaIFd8mXrb/4xJd6dQvJcoiWh03QDB5tzvJa0jtYylXge6UZjZNAmvsdakd2jnotedYakWfqR0EbxN/gL/kNrvq+IVqHP4DNohlwbXSlbYhHIjpSwD8FjWthxWYwjYb0gWi1qVoobB3abCcYwWBF8Hslov9BjXCP92gGmGg6D4+ZNp5cu584wjwwb/8XpspP9061vuffSNuDG6Pd2s/Y0WGAmkf21Q5Ue95GvP/pm22JzjznsJpIdRldzDy01b/O9sk+YE+0xVgh6uD9yznkN/QFnKbp22yfTUuPDcA28gm+GEsRhbac+ERBUZw1J3fb/79g7Qr9mZnGD1irfFXg4dh+USfOU1wO/4EeUBEkirYoJ34Vj+m2u0ngCs61i+27sV+pxZonRzf5Z2BwuDV1qXaattMulXukEKTG99pcpm/g+kB//6r4STyNTzvTalA2SLB6wR80hkhdNcK9qT5p7gSyuoif474JfKRXszKbJZEA637zRvwW+Ik9xz+DcQC791rgnpXhzgWrMtuqsXHGSFDOKzWdjb7j97d3B9dalpOlioXDHiLf2oDnaVn67c/RAl/mT8/uYqX0UTatPUhfgpfvHyf3t5dPuw0p7qzV1Wo7yovSu2AMGlEoVMzOJV2bbTDO7cUTz4/8B4cCk9g=="}, {"__id__": "chunk-1c0cb5dce387023235ad3bfd24ab5588", "__created_at__": 1760494509, "content": "## Bitcoin Cash Use Cases\n\nBitcoin Cash serves a diverse range of users across multiple contexts:\n\n1. **Retail Payments**: Users like Alice in Northern California can acquire BCH and use it for everyday purchases like coffee at local cafés.\n\n2. **High-Value Transactions**: Gallery owners and luxury retailers can accept BCH for expensive items, though they must be aware of potential consensus attack risks.\n\n3. **International Services**: Café owners like Bob can hire international contractors such as Gopesh in India, paying in BCH to avoid traditional wire transfer delays and fees.\n\n4. **Charitable Donations**: Organization directors like Eugenia in the Philippines can use BCH to receive international donations and distribute aid quickly, leveraging the blockchain's transparency for accountability.\n\n5. **International Trade**: Importers like Mohammed in Dubai can use BCH to accelerate payments for international electronics purchases, streamlining business-to-business transactions.\n\n6. **Mining Operations**: Engineering students like Jing in Shanghai can build mining rigs to earn BCH, contributing to network security while generating income.\n\nThese real-world examples demonstrate how Bitcoin Cash is creating new markets and providing innovative solutions to global economic challenges across various industries and use cases.", "full_doc_id": "doc-1c0cb5dce387023235ad3bfd24ab5588", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_5.md", "vector": "eJwFwQtQFGUAAGAUTUfC5ICTA+7Yu9v999/HIcnL1EgxkshHNiZhSQOJ5CN8hlaTTVkphsmoh3DcHrt3/7/37wPTTBIxHz0wlLJRQzNPEx+hMoo5mQzR9H0+uDB9+76IfMTTZlQw66gbbL4zQ28B2ezZ4CS2I3TXyAA9lp/EDl3TvFKvmrW7jGxJngd96nw8E+aS6FpNnm1elDhxNMipLwM6vAeP+rOMaPEie0YMgPx0lcxJg6iFeZ//kR+SHPgb4WsSRb7wfA9egUN8CTfoP0WHuCkqa4wXH5Of4NY4wvrR2k48Vr2SWgeTwVjFCk9qsjiMLqPPkfuh54UX2Rr7OPi5UE2a6cXUCadViffNIF3mk/AiOO6awu9RSp2HQndArm7xPwg+3dwNavnExIVKf0gQNXJY6cbpqMDyvHDZGNJ3Mdmh3uCHcEUoT34LZrJ/oRIyQPMwi28iH6kJoFQ6Znq17IZVxlJ4Cm8VilkvV+hc4e+JnZZyhJsomlw+XqA9Kf4rt5nXYCb3C1jkoQwdcdqz+kFxGh4t1u1axCZohpq4ZyVjcQUYR8AFhtuLqCkGF2x3ecxS3GV2kQGQ614H95nDQmeZuPDm1ID8qRipiQYxeDo11fOn0klec/ymnmx2y2dITCCJygJR5GW6xVghrGvymrOVfl85XUZ6yGhuK6oIDDKxqAdmgUvUD+GTjEkcag65yUzR27WordO4J2jV9h1T5cqCMXgRrHb12DRYAG+G1wufBKulemMfGUPV+DOkI1L/uE5HNz3Wf1srFU4gyfwl7gDJMMeoVQ0Vm1vF7EaH/R9Xt2Ux20alOMfBF9At+J0w15XIFpsnmIW0jZmUvgqtVmrBGVzJJZnLfUpwmHlt1DX9gWzjX3Fv4QfUZKcWGEzFeBmYLLJ6MbpGWHQMVTAdXJlWb5SnWGE8mON+ilvCDzX04BfNfn8hNd+YwDTTS533g4Y+j5nanGKb7r7hB8531QvqCGGWM4+Pp5eG3wXnxVxy1bUYPS697yxib4yPgPykHKNx2y36EyY7eAHftf8VG2nKjdcDgfpvg6+nPRcKWnt9f+NNYDnJ8GWYE+DnUNXe3lMAdoSvNF/3s+p4fThk8SYuik1V44jETU4eBa/I49l/yVf8PfQ7Cqs32eH8x2Atbzg7ySWmBnbSG8MAVLsIeolI1BohR1yP3jH3m+/BLiaNvxxMkAsbyyx5oT2uOCiKNfph+Jk2ElQ6p9K33fHmPN8sZzkOMntxJe/jJVIJZ8E74V1ULO6xRWA6eiiU8yUJaS5AAzQXtNr3kru4W7Wwmdyv4BbTSoptyY2lQh1VT7/sOc3+rY3wzueX6HPARqOaGbQ7wiuULajdXe3pw01yYlIz3py0Dw1KW1Ny0YjQSGMx2q0dF/z2HfBDoY16BAukN2lKJ0IezPE0wZkkGZXTHNuKauntsJvMJ4e2ncUlhA2uFcbotWrMrg1GI3FQDk7iCZfIl5Dpit0ecb2Z1mBdQm7gx/QCrk865/iKPqn/bJyrWxBeBZ+xA39yymayMxzD3TX11N+VZ+FIc26wllSjDu1wC9WSKZPdAUchiigvSCvp7Q4vzCFdttcdAfwqHqXwapNgJc6kMm2/PsFiJS1oDvpAaTQfKf6EJXxCeMAzoNeQf4waOkWrk38wHjplsNf0qtPFLwWPdyTfKyaIG/BqT79QASqJJe4PVAlPI284Wt8dYpntWg8tiEvd1/FZqU03iD+FwNHqLK2ITMQm+5aYEbaFirg3AsuojUaU+yppoAt2EuYAnpz6k3mJWD49xb3HCe7hrhnBeBHqVYyVPk932gR8BebTebrdsTc1VclDk+E9+nvYHl5gnsMdXAT2ySu1nVoyOaP1NZbiSnLQO1ufKlu1IrhJOa70kSY8pCfgXPMh/R/5AKxVD0bL8ga2BK6HmdQ6cok8CvWiQpjJXIb7RZs/3lWFE12RYCypI73aA///YmygMw=="}, {"__id__": "chunk-ccb66b425336a498f5f6c081a7131fb9", "__created_at__": 1760494528, "content": "## Bitcoin Cash Client Types\n\nTo join the Bitcoin Cash network, users need only download an application or use a web application. The reference implementation (originally derived from Satoshi Nakamoto's code) is maintained as an open source project. There are three main types of Bitcoin Cash clients:\n\n1. **Full Client**: Also called a \"full node,\" stores the complete history of all Bitcoin Cash transactions, manages wallets, and can initiate transactions directly on the network. Like a standalone email server, it handles all protocol aspects without relying on third parties.\n\n2. **Lightweight Client**: Stores the user's wallet but depends on third-party servers for access to transactions and the network. Similar to an email client connecting to a mail server, it trusts external servers for transaction validation.\n\n3. **Web Client**: Accessed through a web browser with the wallet stored on third-party servers, similar to webmail services that rely entirely on external infrastructure.\n\nMobile clients for smartphones can function as full clients, lightweight clients, or web clients. Some mobile clients synchronize with desktop clients to provide a multi-platform wallet experience. The choice of client depends on how much control the user wants over their funds—full clients offer maximum control but require the user to handle security and backups, while web clients are easier to set up but introduce counterparty risks if the service is compromised.", "full_doc_id": "doc-ccb66b425336a498f5f6c081a7131fb9", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_6.md", "vector": "eJwN0gtXFFUAAOAMFTBwEyEl2NfsnZl7Z2blICfLMJPSlFWDlLCjYfnIjklyKNTIV8VRgwRXNpHFfcx77p2ZRT091FLKklATtRLNV6lpZZoUlWZmj+83fKLnY6FpOyIj/Y1kMrwSe1StNZjEE54ueqCiZ5fgQrxJkekCuJ/cYxZJDqsZZeJuVz1z1fy7LZOulef58sBAq6HtAv+vd55SAHuoU9Lm+HV8nf8KRIQX2Aw/NBvQPHErewj9wq+V71J7eY8xzqwYMUf4IbxK+JceZjwf3SUcp6baSfx+uJ3rHHwHuokv6Ml2CdgVNrg1WU4uoNXwldRP5LB8IzTI7xer1VlMF6qwRnBl4ibuxpYsU9drjQEoDayEmLYwCykqnPuuXu5eoQ2m+7ZMonfS5b7J8HfuPH7YKnMuBiH2R67CnKlRzCDSExnpmUTyyTihmF9urLPuA3Na/JwTNxljQXl0lc22dIjfRlOFlKzZ3EfaFXZAeBDOYArITyjovxOOVjO0rexu5yOJU/RCVIz2CQeMTeEDVmRIjvCXNAXJw26hAaQIm4m4O5t5yDOq5VP6RtoOJtD+g7NHK7F96k5LwKVCmTiGj9lXvWEgqWVwInH6Z7gynRXynthL/Emcp90SG91MlFdPtFVqm0IXUSE+w6zH3yLWGbCd1Jc5ISYaO2ctiJaqf9D7XXtgpT/FOX24KFXCYKzOlWYHIkn2OlzoKaWGax1yf3pDTr14Rf3cdxafyEiPd3C1kX1cpbwibuqrCQsuu02QBJLol9UO8CQ7EnfTbeFb5nlnnVJpTzZerT/uHSZI7l76O8qnDUJjwQi3mzumMYrI5dPp+LBGo/kgxJ2DrzO0cRezUipB+bhIbw3Pxsb/X94SlnJD6TfZDRkP4n2Rs0DHPWyVIBgzmVQrWZmg+thZ3G18v/WaZza4O7selqLbwnBqo/R1YpHxuNxNPo1fArvaenHMWAfqvAGy3ByszmEOas3Bp/gq7orfNj6Up1NzuResV+RPjIlgj9zLZEn9Ubs4I4Ekm9pCR7Qp5Fc4zbWeXrbZ4Ql6RkcczlTmTyWq58a91ApwWFhqOtgYLMXJ7Rc97VatuIBLsxaZHa4MQtBRZpHeT58E97cWwLWRMDPU7AKS9wH9mvIivRWmoyO8S/WS87AV+FFQ9cmU9jHj0yfIEqoWzlHvkgN2nMsTdsE5Vl9kJbt640maoo+xQ4SbehE3Qk8XmhiDrUHN1ilPAxvCNbw/XOe7hGrIYFgLe+X31OVKJlN+dyiuoSXMP+r70s7YQC3K9IPDcJ1OK0+gttw/GzrdcZtzuNQUWMY/zQL+IFqvPo63cznmWKknMT7+WGxjIhmf0IrpIi5V7cpc5jtK/oGB2I/yeKZTH60rWoFMWRO5JtzVuoKn5N/AEeOMvoQU+JvDU7jv0XimnunkWkChti1rPNyLX7NXwd14qjpLPg7PWpK5EbRjStvh3Uvvhdb6NFY0083ee68Nj7jeE7fhaeaLehuskh0eG99PGvU030V1gTgK9ikLNZkclAd638EHY7K3Gx4gdXIIOZzLzDHksNmtEj0IVxunc3SuFnwEmuL75NutVTkz8Vg83Rcwh8J16jW6h3isPKuYnSdPhRucbxjJeo3YCX5VN6MPEl/haYkgndr4CE4hz7GHhGdJp/M4nCY4oggl8dXcMkUVxgmLmc/UezI1PZW6wwxYqy2HWMh0mRdiU/iZ4EvlLe0Be6HWP1IBEtJ1scXIVi87i1GBlE92N/bl/sXk4WeYYPwl1GcM1Vow5+0mMWpJeIfUQOfqJVRQbRV6cDWo9s3i88TFyhq5Cy0kIeMYWx8boxzjAtFc6m38u/aOMr8l1T/EFdIzraeMpaIaRcYX6vTmkeQ0WWUNgWdyvnfPVW6qPn0UfsguVNbglWBMsCn3kueyb0f2tvAE5hv9jeafW5NwPuzxPQlSUDmdyVWpaXCGt8YQN1/VkmP/AULuoeo="}, {"__id__": "chunk-20ccf74ffe7055989b38e4cecac035dd", "__created_at__": 1760494536, "content": "## Getting Started with Bitcoin Cash\n\nFor new users like Alice, getting started with Bitcoin Cash is straightforward. Bitcoin.com offers various wallet options for different platforms including Windows, MacOS, Linux, iOS, and Android. After downloading and installing a wallet application, it automatically generates a new Bitcoin Cash address for receiving funds.\n\nThe Bitcoin Cash address appears as a long string of letters and numbers, typically starting with 'q' or 'p' and optionally beginning with a 'bitcoincash:' prefix. The wallet also displays this address as a QR code that can be scanned by smartphones. Like email addresses, BCH addresses can be shared with others who want to send you funds, but unlike email, you can create new addresses as often as desired for increased privacy, all directing funds to the same wallet.\n\nWhen securing a Bitcoin Cash wallet, it's crucial to use a strong password combining uppercase and lowercase characters, numbers, and symbols. Avoid using personal information, common words, or phrases that could be easily guessed. Ideally, use a password generator to create a random password at least 12 characters long, as BCH represents real money that can be instantly moved globally if not properly protected.", "full_doc_id": "doc-20ccf74ffe7055989b38e4cecac035dd", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_7.md", "vector": "eJwNlItTFeUCwC2NTMVCbzzPOfs4++1+3+4eBB8NFmqGJYKK2km4xRRCV9ToJYppaj4SUDRNSQ5wDmfPnn183+4Cxaj3juXcbl3URG2QKUOZwNBxKlJUQJuxh//C7/ebH8vclF757Eer0FeMlwsloI/JIJdaFouID3qLvDmerPrXtCB6X7yr/duqxBV4UDzj9EXmeivU57nzKM/IY/+k71hdeBX4KfwGOc79H05HdAQahfwn3Ju+TQ3VqYtwRtOmhhJmAL4tLRNKqG8TdpBiU0yrl5YGbVkRhsGYxEJ5dTAnnC73uKqoHHY+YygFajuZDU/AD+BX5mxUqSbII/QGbYGJPt4jz6ye2HCVPi7V4GJh7ZOtYLV5lLTgw/Y47iLb8PFuNAuPoW56qtB6K7lxE3XS3cEVSj0oriksGug+sQPzuaFQZ8pSdIvMJXmoL/Jj3c+wCtdEgVQgHA3dNhXeqPfznxxYqxcZ8xJjW6fps81vzBzu/PjKhm5XPpfGdqvPwA4tW9zgOyWWRL7UJslB9+vNErgOj6ILcrtyyXOKFOJvgRV0xJ54jNbZj7veaq6XekWVWki3CXkJud43mitC97RnW4aC+2wn+o24E7wLs8gaOts7Cy92jSUv+uJSfqB3qTK3SB5vtth7Xb4UgT3JxeCJ+JWmgyhGj9UIWQ63U2OcZXSOnsLbpI1cc8Xi6zFdoMIlyV8dTgHXIxko1SPwf1ibE4OEJ1caJ0/+PboTX6EYZZu3RNPcpcYW97naE/BlMxmeNufiOGfIulD7G8jT+pNuiIe4OnAl2uHMB+2RNrJQXGPvwXnWc1xlZDWsgneZXWAUQeKbTEhbCmqi+Vw6ykQ76FVkO7z4gEWfN03JNR5DX8auRz+b2erYSBHxUwPW18ASfoKbxWlkX+MRnaP8Zp3og7c1jp3h9JLBhF6ph6k2C5xf9eXCRvUUKBPdvgo1wey3C8gSbQouCa3xlgnPkDzrOLMyOs+MVxZpmaiyftGkdAkKHdJCl6qd4DdIrbi09l/6UvMFfYLUHtH4ALWFxOFUOELFkA77SeahpCnRv7jLzHvaSzCTXbInF99gCrg48XJwiyTjGtd9PtX5j1MQ9po1ri5+gPoT8+LzeADcgmuinUqeUMbsRdd0AkNaFszkDhwqY9LUM8Ji/q6UAD7Ew7APtsLHA5/qK/RHXcgKcBPEGfJMPMm+aW8UJ8htYpuyLjLevZWb6p6AtnlmyAOR/lqXPiSXspfpSnmV8zDMgp3mNXFldKvkl4vwiFDIv28+Fm31+vmDKd3aDskGZ5gTypDyVzQA05lsz7vWJf0w2s5fgSJ11/YRWvsargP5FIfOo2oynR9EA06pdsfJ1b+Lm+X4NMdwBSRp2CpNTp/cTW4xK0OKOcet6BvJ58aRhrBzWnrb+AcMyj24vSkzsic8zXha3JU8VQqis4eebdz/wOJ0s4hLEPdbg87/AGO+o9JgGeoygOVLOmedVOdEboD9Ui1cgM4ZU5X1xj22gv+N8eND9kSc5c1vmmPsVL83j5OQnrotjvWzM6M1rhz9mOkWr1pPmLvp+zDTcqlV4FVwofmf+rVmy5juWk3tjX/LGMshsM0TQnbSMe5eg6UVPyjytBrvG00H4XilxcoP+pPPBjihOnJbW8KWR3LAiKmC/zrD5m3rZdDlht5HzFGsR/rFyeEypIB8x9PfVO4blOqsY7JfZLQnjBVosZKGXiAHnFhnRaAitsZi8QVYTi9QzMQZ9jxspvTS5XRi9Ae9sfYLUAGzk9cam9mPjKtKhlWFBunXuc/rkvCDj2me5lejN9xP0Sc5Q6eCMXirzJFimmKOcP1so/4LfA3Nbg4bDzFho5N0C08p5fB0+KA+moxwu6VY9SzW7fUkRmsOD0enGOOaCuwCLR5XCYOhcex3+kzzIpExIJDu1HKNUWwQP61d4o9RJFrG7XN2473J8xM/Q6PNL0KPSgOBQaHM3cvfBIQkWyHtjP43SKWhvQ=="}, {"__id__": "chunk-ff8058e3309262bc3e26c6f2932b47ad", "__created_at__": 1760494748, "content": "## Acquiring Your First Bitcoin Cash\n\nNew users have several methods to acquire their first Bitcoin Cash:\n\n1. **Free BCH Faucet**: Bitcoin.com offers a faucet at free.bitcoin.com where users can receive a small amount of BCH after signing in with a Google account and providing their BCH address.\n\n2. **Cryptocurrency Exchanges**: Platforms like Coinbase allow users to purchase BCH using traditional currency.\n\n3. **Peer-to-Peer Exchange**: Users can buy directly from friends or acquaintances who already own BCH.\n\n4. **Local Marketplaces**: Services like localbitcoincash.org connect buyers with local sellers for in-person cash transactions.\n\n5. **Accepting BCH as Payment**: Users can earn BCH by selling products or services, including professional skills like programming.\n\n6. **Bitcoin Cash ATMs**: Physical ATMs allow users to purchase BCH with cash in many cities, with locations findable through services like coinatmradar.\n\nEach of these methods offers different tradeoffs between convenience, privacy, and accessibility depending on a user's specific circumstances and location.", "full_doc_id": "doc-ff8058e3309262bc3e26c6f2932b47ad", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_8.md", "vector": "eJwFwQ1QFNcBAGA1jMaBFIJ3AYS72717b/ft2z2BqAn+UImE0RCNgxExNJoUvYkYf1pqR2smKqISEnAS+RGOO253b3/e293DJJIYOKOo9RdoSooTG22idtKmQduOxVZjk/b7/sDnSEs/aDa2B3caLv4T/1x+kzm1d4m0m2/novz+9r9aH9JcblYw355vBTVJUbxpiW+Vc/4xLchVwJfo16CVu6UXkhZeIPkxb3gHbuRu+2r1b4S76MmgDOVZp+S58M284fjbwmq0Cza4PgPHtVrCFEyRKmGa9F/k7vwtvIQBexcWoR/ZbrQovC+7TG6wKq0UZLIUrDT+KK6nI8FTnqtaOfFEL0sqaAVNyjtSgq5Gb8gefqX/jDNP3+rsBy2+TLRRGI4n+f3RnWCBw5L3eibZm9hPUZI/yV/GEv7YnsgYzasD13JSJNUuskvQc7BG2wluqmXRacIDbkT7lWK41sJ0tFJ7Qy2Xv/N+mLhm1hr/IAuFucoVVC70cbmedjMFTaPX8Wacgj8hWfSSNMGsTTQEgtwT6Jd4TNHlo04vdaNaw4MBPCZsI9nMz3tvQk56LfC5HJr5pu8gRxLjataM3sQebbsVyruG13kmxPXOXu91UKxNMCGyLBiU6zmgFHbvFr8yP3JWmW1Gua/JX0F6mMNprwpb4rZu0+/QHd8Ssqbnafk6GKEn6b/AAWV3YA73MpvOlYAr4CidxW/NPgb2Ok3aqCmaUWNI90IXaEZhsABN0n8EjT85FFMYN3rFOCNd0tbRBlrXKytbwqeMkD7KM2oOKvcZ5j08CZ62ZggcXU2qSBVsht3SFS52xMvNI1UI+3fJMvy7Nh9flBpBf6RZeQGkchxexW/Ufx2VuCLtVdxIS/0DpM95iwnZB3kRqygsVetJJT82KT5dd+GtoFTbFfmIDpPB2E9xSC2mRU6THoLV4H5XsbAHR7UFpmaXaJPpFnoBLmV+6HzavG3naaXdZ2g2mhbvY2OPLdU7+DJmMVoGhun6zFv8o2QjP0dLp269AqV3tflLuv9tFZphfBs8MN4z7/p0/2Rdgo/G52k6aMqr92vqNpTv78cNICu4g2bDE9BtZTkb/TtIU84QzNBrTQvnK9vQVLSCeTjzuJARGRA0+ik6Zi7kzqqDRnvH+uy/oYf8MEKBL4jC3fD6hWe1+WRaeDMcIgt7SqWvpeeVGifNOY8r+A34YYzmLWLqgZ9P8h/DFvF3+nEw5/G94hPcWYERaqxBbowfNzYJbym5OFNsoMvRD1hT/0nqwqK35ED4cJNAQV1au7wvbdz3HOtiR/RvtNJ4jVbNGz6GLbPXmLMNFS8TtsM0IVM8Z67zVWPNcbnHnH5yAn5Jk+oxozPAiZeNPUw+WkP+B73K7LjgmS4HrFv6eet1c6pYw2ZzSelFfbv/GcUbyLTK8QmmRKjmZ8Zj6lVYiAratubcQ4bRRwKR1bZo3FK24CGzwHgQcOgKpf1ggv1evAOnC0mzWU8lL0T7fPs6T9uT7RvWz9B5NhKl7Dbdq9zouPnuS96qjp26i4Fknvl7br61IrJEPeqHzlcKn9WnNTv3SVaizRjXK8BataBHD2TwJ3sqUb1+CBZ0JM0WkmDH9F8EF5tTEDTa6fcxlumMNHCH2P8QR022qjjDuxg949xpiZJVQOkJdC2yXo7PRiTRz70v9Aenepa7lweFYLpzUSwW09FuqwoVyz6pzdpLrtL7XRH5sD0hD4hPRj/XBmEqmSCnO28f8SupShl5wH6bu5lfFP8LLVZTyNl4t7kS3TWm+5B6LvcRG5uDzhHtQnSEe1cvBb/RCuIbpItUIK0zUgNs+HX6FNohpCea4JewpqvRKBKkuIsdNSwaokNgiqR3h8ywU0jr9dc85YFSkssW2Ne1hxbh8yMD3FNkgbbB+UxfaI+jfWbIfU8/oP7JbeNWPtJxlMM20krVC51/xnXxBIrhC+2vwEpTxJXsWToQH6Uz4v8HhqKYeg=="}, {"__id__": "chunk-fd20fae34fce5b3ff9d530c16afbdce7", "__created_at__": 1760494748, "content": "## The Transaction Process\n\nWhen sending Bitcoin Cash, the process involves creating a transaction that transfers value from the sender's address to the recipient's address. For example, when Joe sends Alice 0.0138 BCH (worth approximately $10 at an exchange rate of $725 per BCH), his wallet creates a transaction assigning that amount to Alice's address.\n\nThe transaction is signed with Joe's private keys, authorizing the transfer from his wallet. Once sent, the transaction propagates across the Bitcoin Cash network through the peer-to-peer protocol. Within seconds, most well-connected nodes receive the transaction and recognize Alice's address. The transaction becomes visible immediately in blockchain explorers like explorer.bitcoin.com/bch, where users can look up transactions by entering an address.\n\nInitially, new transactions appear as \"Unconfirmed,\" meaning they've been broadcast to the network but not yet included in the blockchain. For a transaction to be confirmed, it must be included in a block by a miner. Once a new block is created (approximately every 10 minutes), the transactions within it are considered confirmed and the received funds can be spent. This confirmation process is what prevents double-spending and ensures the integrity of the Bitcoin Cash ledger.", "full_doc_id": "doc-fd20fae34fce5b3ff9d530c16afbdce7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch01-what-is-bitcoin-cash/mastering-bitcoin-cash_chapter-1-What-is-Bitcoin-Cash-(BCH)_9.md", "vector": "eJwFwQlUFGUAAOAywwoL4nI5lp2Z/Wfm/2dm8fl4KKZpBKiV+vKZqVkZaWVFpuIJCUqGYYk+5VpZlpmd6/9nZvEI1B4datkzhDzQwtQH4pEYkQ/DNK++b7Vw0ffzrh32hbSbdiEq4c96t4YWN/ZICB6oTefe0MbKy4zvErA4hATMVrxGAeIdG/izNIosql8gDjGn05fkReFSUoK26SODKzxV3BRkGDVEERH6LG2dWoxycFX03yHBRFKiOCisZKrY17V2UjNyIhwjZEpx4vPRY/FJ8Sx3ypMgnvNXbE/dehzKwTDMJt3U4zAHnLAixDLjAd8Bx+nXjTTT5/N6OvFD4LBg2TQ6p78Fp5IePNs+SmLAEeoHmA4/MjDaAxcDyUnBS5TYpPWokf2La6co736x1miTK+pFfaWLETP0JvwIm6s1GwfRAyY7uZdKgVuSBvGH7AzdzybIs83MBqRUW62BtUag4Xl5PGjiVJl4FTBPjeDayK/iZZ9H2qZp5nZ+BhkIC1xALPBFIkimNoTx5JS58DJtU/G1VWyL0WxOcb4V3ocZMNIYBXMMS73rbND3D/3UqQicxzm4Ai0PxvBLnbVxea5fVFQ9tPxZX2OoFE0nZ2RZ6DBN87YpqCerPWiUmuMZqy0D1/EE5orGwAuBAtJvHrOWM5l2kZ6hPhZqoaTk6d7VQq8rSGfolJCLf0r0kbTUFyIZZ592DbxZu7++C+2o+x1m6RWePvp9JUcextwy+qRT1gktKlxEzlFd9NOh5tQctlfNQBo3wnqKn2XstBcCze42H2gbE4qxhhobTqFQw2hqNM81XA3xXLH+B/zI94GQ60a2V3gtqZJdKVylfvDfBH1KNJON7xk+5TGnN3W+08fuglHCZemBMQ13aa3JrTpGz1CHzd0gzd5j7FXPw/zNw0mn/a+ap1V6f/RQYo043LydvNpGYED5kpQp+0GT613NTY55b4TmK3M0onXEH9h2SLsDi9m/2AC7LDWWXSNWk1wOUEXkN21VIJdeJ/5j3LCOKoe4NqiFRCUdlKpT/RHcRVyg/QRy5GzZCQ3ER6r3xeagH40xehg3qLWFxgV6iz6BKkT+UI+5SZyp3KUuCTw+Y9x3fUzvE+eqVxjRormdbHFgMxeLnhPWAgZ+y0SQne5RKFXsD060Y9kjvFmeB9qkurQt5Ef9NGkXB4Qw4mze/46ytbaRPQvGgXJhd+o3XD6OgxvlbrpPukLq2EJ+CjUHldI2zPf1kRbQJiyoe5J9g6uraaVvVOYLmewnI74fVo5LcL9QwPXojSkLtEV8DbeQSwJRVotVYozmb3nLvC9CmluG+7kBVG5+YWY7QTNSnmAvrT6pzwpWwRIC3bEaJG/CT7QXuQ751+0DZh7m8CbrC+mYtoJhhK0pNlPiP2w2udvYe+5d0lz0X8PXwUfhNf4V3FUPhT582HmdnoT/1BP1AqnbPo6btANqp25DN5opvsL0oledIi2drffeg7M4N/7bfhnvoCkQaexWS60a8rIrD3R4ZTTZmxE9mwBMC+fqJ5k3Qg5wrGkp5+vWqw+Hg+bbzqc4PbmWnmOtwPfAGZCGEkAndZo/olw3Z8i3GDbpkHSTRMEY+3tykPjZ7fUlVHtgifweydBWCnPxKKk/XGZs8Gex64157FU5gbOlJ/E4dhV8CSyU49guXw/XbK2SekUPl2VM4+ZYhTBXzbfv27c33ffHh9dQkpiR3K4UBQdJgtXtPsqMd+9lt5UO0X9GybBVzSM18TGudpCp97DhxBcCvd4I67h8Iug4TOXQpCfEGTDOS+mqViGNJTMrB6OTYBldSy7yK2CeVYMHOcXodNx8oexipo2I0nn9UThMOM2eIkutM85veGPloLpa/ipxsXzENQHvc18OFVMxxnztHfsg/hx3JtJ4L/V0yG/dNf6FS9Ba/RmmCrvwcTnoGSkkms18J5ylslRyUi5c1zDF/pBkWeOp/wFXqbP1"}, {"__id__": "chunk-27957400b91b7f73e8b779b994e0c38c", "__created_at__": 1760494773, "content": "# How Bitcoin Cash Works: Technical Overview\n\n## Bitcoin Cash Fundamentals\n\nBitcoin Cash is a decentralized payment system where trust emerges through interactions between network participants rather than from a central authority. The system consists of users with digital wallets containing cryptographic keys, transactions that propagate across a peer-to-peer network, and miners who produce the blockchain through competitive computation. This blockchain serves as the authoritative ledger of all transactions.\n\nUsers interact with the Bitcoin Cash network by creating transactions that transfer value between Bitcoin Cash addresses. These transactions are verified by network nodes, collected into blocks by miners, and permanently recorded on the blockchain. This distributed consensus mechanism is what allows Bitcoin Cash to operate without a central trusted authority.", "full_doc_id": "doc-27957400b91b7f73e8b779b994e0c38c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_1.md", "vector": "eJwFwQtUFWUCAGBRNKSTPEO893Lv3Jl//vn/uQOUh9LoKER51E1XTMxd2K2UbLWHGB4swawMLIEDLCkXuA9m5v4z88/j4lpiD03TzGB9HF+pGLabpdKDWikfS57q+xahgjzvzgF5MG+N2Y+HudnkIn3fgoFnYEnsUVyzbYNTjSrEKxIxGumQvsm+Is51XvGf6+6l04wJYp+2jn+npzMeMCvQclclFwxmkzf4Tv1VM0V4HK3Ft5VMHDXHeY71JIJ50pOBdncT1NG16CqnOndYavB+g4NiaXaS/6i4CozLPo/WyrVMkvs7Li0b+nZag9OWubaiLeZNsTyqBDrAdXqUpqtsXhWs993ynwi8a8vAztwh7DFYK9G4ZS3PuRFNgu7cEzSIFPY1tM+cL6vyYPgyLvS3iuc5U2mEe2M12uTsUX6qfzr+hI7Q41mngMF6xEr9FyNVvBj4gTxt7r47NezFB9UrdDN5SdsT98uj6oS0FdokvynO5p5Nv8V5Ivnsh7RZIIH3xdEwTwvwDONgvA4x8Jg0Jy9orug2bZldiRHw4nqhCw/SHfpqux9tFv7Nj8B5+Hm9jjPifdER5rR1SakmuvUmmhzNzP2yt9ooa5tLHvLulfdLGhmHHtTu4Ruk8lguTeD4aFMMhP9srcy6ERZ4SO6KTAlvxJfpYSfO/5VsEYbox+aNqEF2BKv4MbBMSsCHwWNmLTugVfMpVkJ6qlxkPmeUNdexF0kILCXF8lW9cNt/1MWR620LmELgDxixfxhvW4Y1JDRPfStmM5+JO8ED4EzPITNV0PUW+wP1rDHHLtS0UIQ5KhraiQ4Mv6SqcFyuDxew7eQwmJfbCb/J2a/tE/JhMVoYGGFYdRi8q6fjVWRi9+Xtk4xy7YozAa1HR4W1KEMu7byt7VJl/RpOQ35b4Gc7W+kLXBp05bxinbJOh1o66thZ3D4xXeqjW2LT4o3Rf4IV9lm9zv0Bv75jirPYOKI/RV5n68AZIYEsz3lA2AK2cRtci4w27oj0oVnVA31aJ2bTuU/8DLzPUB3oOQa+EosYK7jRW9mxB/SAOyJV6r9QC38hlqz/qIy5/i7uDX/G/qr4+H7md7LLnkhK9AXwWVE2hq1lqJzuxveKA+QdEuevo0TpJ9cRSGkWeps/5KvU0kBFwOaXiMkZCdQLbgoJcNBYaKn8i0pTzxoyJe9TqVM3rBrnpOhIm8Racw3dLP/cnMhPVFLDZdJ73qWYUJcoGW/m/Ndd5YwHj0PdejkQ9B3ikyRR/Rpe5daSsLuIFAAfVwNOCn8SryrfasB/TruJxzzb1Wf0N6Jf4zDKF850lTjt1lCsGD0KPWgU/wXNpY1MieiiPq609zVtDVrqjLoJs85vw6DdCIh50mpDHxuVsfuV32LQ/N6oNXvNelzqW51yL/ZFTOEayaBlnXMQBUsCc6UhZSvfhDPAaXMT97A41npf70whxV8jp4ZnBH6kq635nJvmaedhDV6Md/FPSG3xyXZZ92o0DIdhgVphHtKfY2vBBdpELloXrEoxTY5C2X2GtHTfaaaSLCFZva2e8ueg7/UZ4RH4oiySxfrxeKsZUh7xYvqzdklQ4Ux2M/HnNLDrYbEWpcXYVMaLIb0IfW4scer1buE3/bbr/+BbAs3tzEFYSe8RS5xNeqb1IPM3NQQbtS6+OdDkOEKzNB9NN3G4NnclP5MW5UYCC9Av2deBm5SgqdZZu9/eqJeCdVaiNxk/5eF9d2XvD58zazxRoQsM9BRZhRGvvwzOoQP6BtLOf46jVgOYxbLcnrYGGjQzM8vjJFrR1Qoe4j6aOj4UoXLu7h6sJTEP48dCauwFfjc+bjvaIuSYv6r9IIMeAIeNT+kls0+YJBWrY2TManFCRopRZRJvgtLSkq/Hja+YcmMXvIN8wcZtD3U7rZ5kOz9SHDug9KmCBITxeh7PWuvIdP074YCQomUJCyWF+R8q6ZjFCAq0KvR2u0P/AxMMo1A="}, {"__id__": "chunk-7df2f8256fa4c3f9ba14fe521f1fbefd", "__created_at__": 1760495006, "content": "## Blockchain Explorers\n\nBlockchain explorers are web applications that allow users to search and navigate the Bitcoin Cash blockchain. They provide a user-friendly interface to inspect addresses, transactions, and blocks, making the cryptographic details of the blockchain accessible to users without specialized software.\n\nPopular Bitcoin Cash blockchain explorers include:\n- Explorer by Bitcoin.com (https://explorer.bitcoin.com/bch)\n- Blockchair (https://blockchair.com/bitcoin-cash/blocks)\n\nThese tools allow users to verify transactions, check address balances, and examine block details. Each explorer provides a search function that accepts an address, transaction hash, or block number and displays the corresponding data from the Bitcoin Cash network. Blockchain explorers serve as transparent windows into the otherwise complex cryptographic ledger.", "full_doc_id": "doc-7df2f8256fa4c3f9ba14fe521f1fbefd", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_10.md", "vector": "eJwFwQlUFGUAAOBMxaN6ICks7rLMzvwz/z/HyuOJWk9N5HkQpqkph0dq+dJKkFIoTbO0TDDzKbLIsTszO9f/D7MZZLoF9VTAIu3EwCuFNMSjopJMLev7FtTMGdNY/57dLVU7C1EHHO5zjP1GsRhFDaHxVKGhWMe19fI7Kf1GJ2nyPeH9VvTYV0CzUqKnowauIzTRjLLD6uJwgVQBGuUs1IuWoVT7JXxHEOAiP0NNGuNy4uSxYKewVsBoAnyLPlh9EAAnJrVFWo7+E3vEbXrMnli0gcm0ZkhnZYo9zn1TK4dK5V9wx775cAGaZ33BdSv7xLMVMfgT/Ig3IhwBnSPa0PPiZOeM0MsE0GJzLNlE5ttvg4jnfr6LhnXr4OtMDjsAB/RRyh3G5mehbFRknUXLpG6l35jIPq20ohjxKInYjdRwa5H8Jb+05rSRxY8Wv7L+DaajQdTfYIOi6u6Ev5JXHHhTnYq3kdOe4qq5bIur6+FxoASXBsrNJmGs+BB32dtjHZAyzU/eXyM8w2aJrfxLOCbUZw5wpfGxu1pROOWu+CHpcpc6S4TZwlYwE/thUNsH7kba2CHeksjf1lTrd1MS1uj7hNlOfPh7X5IWZj7A5eyrSibcUrFlT7o4Ur+nvD/ilOpUulkGn07Me+CcoJjzFGwmwjcNULdWu6U2+HicX1fAk60SKkvewl5H15U67lGvV8yy41R3da+6DF8zL9I9KF9vUR5k2rlRDIfTRvQbt7kL+HP4o/UH/7T9KXMuUkp82vf0K0Yv/QGbDeN3zwp3KOPRicRSZxaqIhvJXDKSCmqrpS0pXq0X5isfgfMeT40XRc3p7sVSKjsJjan9XTjpE4R4cbucrbeCTmMHCCpxeEFtCUbccHJAvMElclVCgXUj+KIS1T/DB9EwMNvqCV60b5vRqmT4D2ixBkdaYamnAV4JrIePo7vGZ3hJ3UIrEVOOLzkflXuySYc+D74Vcmn3jO/o/qSHPDq9lXuZO4wum357IsVKc61/4UCymhq39yP+VyhzP+kXIkxoL9jMlrsUXCvE++J8srGTuoozkoeyG4xLydPsKniM7jM6AGs+Jy9BUfuNSIwSUHO1RpiA72BK2KxZ7CpUoJdaKyo9zGRpnurjHrFtuh865hzPNB2Iq331qI+9aYi797J+uFJ+FicmDED/mZepB6T9/Hd2A3E7j8FC/w1+JbllngMXqRotE2XCdP8e+xtvu+XhaY5hi9AUZxXs1s5o/SAabuSOSCdtk0qTbuuzzXdhHNfJL7cKBV67FthsdZELeDoo4JrMwWR98hhQLdm+DPUanuuk6W7hV5TKnZdULhPne2/x94wXwmXOz3o5Lnba2PnKeHYO30KM2DPBKDlFDzCLwjmVGTte04qHTkw6gaf4y3QRVTCF8s/hUk+zkWUVoZC7mJ/gfyWJMC8oITQOD9QEuFTtdP7gn3Jq9E/VHOY5EsRu5VW8KZzHZDMxUhAM4WKcJfo0toZbhRjzWWctuT+4ALTHzTR7arZhzu4J5dYe5vNBvTba5cIbrSHs5Lq+cDs4wL9OPtSHVyH1qE3ZqTaw1hm54JhRZT4P5uuF3CKfqGvy3sqA2WnkoJwaS5qAB6Vk4I9xk/6LdshcnFJAl5m8nW/ECsSuFX+wL9n11k1fi6kDRrYEGc2IvBP4CfmEXKsfGf5cYZJqpy6XVJCH/wTHyCVBJYcjjXY3KfP2EdU3BS1VGIIg53xtXfUw2mj7TPUee7X3PNcGpypPEiD7g9tdO40j3DblrqvPum1MU3I0y1HRKaONLWEa9Sv4HFnBD3IgygAnYAYuMnXUDDbhN3ZtrKoHsbgdrnQfQrlJKVYeXgVzpDVMHH6wbpQzVdOSUsInqQ6GpgaPHoVvshX6OqbZSAhdITSO2nkoAQeUWC599yD6N1bjr1ZuF1vC12F/uMkaLzVTffQlf5oQL73tulp5H5xiTyAFpIv+H0rwrlc="}, {"__id__": "chunk-825b4473fc3b80814ccf1d1feafd2774", "__created_at__": 1760495006, "content": "## Double-Entry Bookkeeping Model\n\nBitcoin Cash's transaction structure effectively implements a distributed double-entry bookkeeping system. Each transaction debits (inputs) funds from one or more accounts and credits (outputs) them to new accounts, with the constraint that inputs must exactly balance with outputs plus any transaction fees.\n\nThis accounting model ensures that Bitcoin Cash are neither created nor destroyed in regular transactions—they merely change ownership. The only exception is the special coinbase transaction in each block that mints new coins according to the protocol's predetermined issuance schedule.\n\nThis double-entry model is inherently auditable, as the flow of funds can be traced through the entire transaction history back to the point where the coins were originally mined. This provides complete transparency while maintaining the pseudonymity of users, as the \"accounts\" in this ledger are cryptographic addresses rather than personal identities.", "full_doc_id": "doc-825b4473fc3b80814ccf1d1feafd2774", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_11.md", "vector": "eJwNzXtQFGUAAHAKiF4EptIBd3C7++3u9+3uiQ/M0ZzRgTTzlVOahpqMTAlFyJjvGphCMQV85IPHcXd7d99++327e2Bg9sBnUhm9NNLUqHAYX/moRNNRGvO/33+/HmGW74OPYozX7rBmbWQ2C/+J57cgFNJ2ZF6TPqe3MDWOoHyhhVTpicwxdbXbqGjswb2sLwzkFNImFnLtzlWSL/cLaYSE4qV+JYNF6S7xljLOVx6Rlfjk2XACbhc2DauENzmjKSxdrh/jVGmfyAbcpx1QjoUTgaMc4kfad5TV6AQsNA+iGj6/QaPn3VnSkzzxJvjaOaoSSWtYQubQ82pWeKx5EN5E21ipKhgzYbnTaKp0mVUqf4LPgr2okF4RkftGpNuqA2owl58LL4rH0PFQEb4HvyUnnVzDEDvJbHkhTecc0GJ6mt+HU8IZwQ+0SeIsPUBr60w6jiNSOzkjVYcSnFqoBVpxq3uF9z24n64Dp+gCf4jfQYNZTKNKSTSTVrlk56dYmzsom/B3OY1CMJV58W1YTK+5F6enan4mknjWo7TCeYHjxkS4RZzNdcW2y1/722mq8X1zPXlEKQ5cl/8zl+zanx2kHZQzU4Zt1kvS19JLxpO+w/p+uknPgI/ROfJuwkd/NXubUv1NkmQYqNfooDvxTGcj0Gze/i30i/UmbOfXi99re2GZq6NZVSewxc0h60a2QdrNLr4bdRor6T9ZRfRv95Jon3eDfs11VyhEKHpOdenx0XJnCwl4sHxh6yVUAKv0BeoZMJrm7HDYNGccrKZLraTQSekLsFwr0dco20RHnCWfagjQiBRHbwuXtddBnLjP/g72it0gGbbhWPPDnmeN4tpT1JXeE1lnvcTVWmdAopQvxOAhkof/5dMgNZeI66UDrBd0xY7iCnExTIGTyc92iqCAz/Dq7BrllM/yxqQLsYFwiXnOzMUDMAGc1V9hqcER4SFcaWQkX4hompVlKzaYANu273RVB/6B5/EV8bY32ZpXV5M9Dd8CKXSItVTs1R/Q6ryT/F3GKuHjQIQ/4CoLvysOAosCfamX9HXuoJobreS+w38DTXwZT4rtjtyzLLPO10BX29/AaHQ0VNTT5I/7z2HoR+MDTWg5uwMrpJ0RChiMwEfRQvRiOMnmEBNuwgKl0anMqm38Zmvfw1N9ldqXtmPmsSLff8prSi4bHsmtC+ycK3rFJDgWTcFvCWsyV6HhUYXvVBOd43AivG3niMfMiyjJV2K0yXN4Dz0HCkgG2+rt8OSoNTCPOyIO8oiGB55D5QwKhzMfFNcqW2EgotlnwzNAtvSXVCpVcMXq45Hyxpe0D9mAlW9doXneAvvTHaOpW4yHD1qvPTXESrFm6wqpJpv0mP9DQ8AHdcl5VVno6kSH4CJjlDTTW20GjQ1oetIwbQac55nvvYvi1GH2lPteTl9wymC0/jqfZFxFaWyqNTTrBk7JkkG5dkTbB+vRRWptHo4viSfJUMGPT5OH8K+ZOUJq8+t0aPhLtkYuE08LR9F6M55/xJxOi8SMjJXm3kgDsJjDj1KLTJNVGF+3zmR53GBYad+VDfRDQzLcHEXCdqGdTLae1sNNcda7al/oGOjnPrfO26PhV7gyuzgwlm33P+N/AY63E+Q1LTLrZJv4FdGhcr85X18GEs0k+IPUgorwFU+8ek+NZ6/4HOVIskSmNb3NZihe/Dwrtx/ySOF0q5Ry2gXvHmExl0PjIrMixd6U4ANNPxEQqEPbxBMZE5lL3+Lukn5nB8Q4MAY9oc8gfnYZvMOeA4vw4fpdEKz/E+fQN7S4+t1ggK4FrWQF7fDG+RaxEex6cMA0aJ08jqjGGKuZ9YXSqpahtfry++8Ig1kS/YP063ukr4zBuNH6ET5NVgonM3pwWUuBvdLZyI6aTzz6PFngvIpPu0+QPdtGwVznPbxUeEyqQfnhVAD4N+EGPn3jHviGZxQdT7txgvg/oxenPg=="}, {"__id__": "chunk-022c054a9e09ebcc553c15462098498a", "__created_at__": 1760494971, "content": "## Anatomy of Bitcoin Cash Transactions\n\nTransactions are the fundamental building blocks in the Bitcoin Cash system. Each transaction represents a transfer of value between Bitcoin Cash addresses and contains inputs (debits) and outputs (credits). Inputs come from previous transaction outputs, creating a chain of ownership as value moves through the system.\n\nEvery transaction includes cryptographic proof of ownership in the form of digital signatures. When a user spends Bitcoin Cash, they sign a transaction that transfers value from a previous transaction to a new owner identified by a Bitcoin Cash address. The new owner can then spend these funds by creating another transaction, continuing the chain. The difference between inputs and outputs in a transaction creates an implied transaction fee collected by miners.\n\nCommon transaction types include: simple payments with change (one input, two outputs), aggregating transactions that combine multiple inputs into a single output, and distributing transactions that split one input into multiple outputs for different recipients.", "full_doc_id": "doc-022c054a9e09ebcc553c15462098498a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_2.md", "vector": "eJwN1ItTFGUAAHAtK/HNQcDF7bHPb79v904HHTU1HFJRaHwRToWPHMq3KWqElaKGCjgZJgjicXfu3b6+b2+PEkjDMkIjBcdHMqXVOJCaSuYDR8wxR+r3R/yuoFMjW798bPZ5Su0EWWPfCw03bkeXeerkDD0WZpEJhOXvwXPea8YyjcUKVtFEO4Eep5Vbe9R0qdO3EBzju6Lvk/GenurRKVP9m6ndcDuZRybDZjHVm6Olie5wrXtOaGBVf2+y97SwFm5Ehyr8Vqk3Syrln/V0yZNI/xqvvMqp+uZ6W4X3+cZQQFhm5rgPGTVCIz+NvqUvkvHepZ4RAOMZZsnQq3J60geBv8C3klJ3gm6iPpKGqKnmAXyZ1KG1cR3SOJRlXuImC73s3EhsIFFrcI0Sc5kWdFb4XruGdocpEjWv0RkpVcwt/C4u4D9O+jmhDazxZxjFcgEcxOZETgTHh2fCVeoeMoLLCQrRePg3Xq78oV1IboBFWgbfX0jXjrJpZLd7jEcXH4e+IAv5kOX7QgAX4UZvF8zWVgy+bdVTxdJStxNtUOpRXuQQcUZGIR3GoJHDHTBOdbou2Jl63oFcclJpxrT1Jnye34W+i4jK0WCB+RWzrbbDG4+3wE6LqZ3peU1rINP0JuOUHg8G4EFcCq5mh5CL/Dl3G/w0MMSSAomkgf3FRhoD5pGZwnpHNvUUxrK/cN9qvODwXVVL8GZuD51LYsMZQqGWbGwQAloADlY61aLK+r3DXOMZhd2CYvQcvcteg0c6SzjM6jV3RaD9Ay9xlN0OSLA+IgvvaaXGh+ad/YXKDhTU4oQJB35NLIazFNYfDafpMXC1pwV1Mk3kLtwERoO50mIeUhfAeqPS3WH8Gv+70k5cNQ9sAy5CP4n14CJ+hCeRRDbTuI9OwFdsxjHVbsKjzfPgfNwZ/X5kRwCzMwIJTDe66b2nVCuV9pPksqF7iY9l0DtVU/V/zWFJ1oEgTmJp7tlkrM0Ib4QbklfCo87Z1BmhSnpq7AouUVKVNuYH9bEwAlB4BrnhOk6VSWXcv9Xl8IZrMTuJ6afT/g38O8J19T7XZi43GmGcXikOxHf4AcCBr9uJ4c34hq/Vg8OBCJROqn+KEdCPPx2u3lchLpcdbBa6jdvhJrGP6uE6+J+FMOqTjoRcVqX/A5gjLTCOWfGBiS7btbjS9vi9BWQuzrW+kcbK16Xj1nR9qFAWOoJ6qN5Ag7wy1MpVWJmwSZMFl6eZZINGAMhuKZGejF7ytpsdYBvYGj4sDPSNTelmStn5sFBcHZ6gQO1rY6eUwCeRrTv6qWGQBrvE89Ql+1V8zJTFi/xWoQt45Z3WbOplTxdxGIOid8wzQktkJtuJVzF9IMOaJaToL5ASHurpdJ2eGCxXsUmMv61hnr0uFuSLN+lm2G1sD75lWqiXLZYHyPfi0vR06QxYQLzcQ/6JutTOpmerFbggMkeuJbusu2A/zjayYa80ES0AC0VHFBi3RzyBXWiFtD3wCH9uHmebxTE1voMt1iizmH7E5KvfoO2k2vm5/rX2dvJ8htHp6su0gKfRk8GfyusRPrCqbpO+zr+FeUg8ynOi6HwgPVTO+/fDWHoOeRrsFBYlbkbPG2e5T/B0PIX08BJ+7O91xhhVuqxfQU5cKMfVabjIyoV5VhzXH18RuyWH9R18g5fAM9oD1xpPJRpo3fh/vwqxcN+b7nWE4VVzT2RwdAjOZFfb9fxn8jhOgFepI+ZpqyNhEmwEE9B908/Nhh+L17Ui68XQCfcFPsG8Ghwe/I2Zd/BHMp+4VNruC/118CzM5ta7fcFt2sveTK3V3+5vg1Ioi7wqfebJJwv0fPowuaWngnizm+t8bgzONr+HovwpeGgesl+MphrT+bE4z1/O79OytLVmPp+JD6NM43WlzB4T+Z3UpKjWGhdlTImk6SXQD3sOTuOWkJZgnj8mWI6cWpFkycPcFdIs3zmwQi8iFH5Ebtb+B3DcopQ="}, {"__id__": "chunk-edef858d84c3e854ebe80b33abb70067", "__created_at__": 1760494975, "content": "## Transaction Construction Process\n\nCreating a Bitcoin Cash transaction begins with finding appropriate unspent transaction outputs (UTXOs) to serve as inputs. Wallet applications typically maintain a database of UTXOs associated with their keys. If not, they can query the network through APIs to retrieve this information. For example, using a REST API:\n\n```bash\n$ curl https://bchn.fullstack.cash/v5/electrumx/utxos/bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3\n```\n\nThis returns available unspent outputs:\n\n```json\n[\n  \"success\": true,\n  \"utxos\": [\n    {\n      \"height\": 603416,\n      \"tx_hash\": \"eef683d236d88e978bd406419f144057af3fe1b62ef59162941c1a9f05ded62c\",\n      \"tx_pos\": 0,\n      \"value\": 1000\n    },\n    {\n      \"height\": 646894,\n      \"tx_hash\": \"4c695fae636f3e8e2edc571d11756b880ccaae744390f3950d798ce7b5e25754\",\n      \"tx_pos\": 0,\n      \"value\": 600\n    }\n  ]\n]\n```\n\nAfter selecting inputs, the wallet creates outputs that encode spending conditions. Each output contains a script that encumbers the value, typically requiring a signature from the recipient's private key to spend it. The transaction must also account for change when the input value exceeds the payment amount. If the sum of outputs is less than the sum of inputs, the difference becomes the transaction fee, incentivizing miners to include the transaction in a block.", "full_doc_id": "doc-edef858d84c3e854ebe80b33abb70067", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_3.md", "vector": "eJwN0IlTFWUAAHCRzBsFQa537O7b49tvF/NoNC1BQ0kwNJMnQZYyjrdJ0FAgZpaROqWYIsfjXfv2+3a/b98+RUcn8xjNKK8OUBvEK6bLcox0rClzkPr9Cb9S0Deure0OrVVDsReFTfAt7RFZHnsSlmUVWZ28K9zoMiOnWFN9NVMiG8wvGhzKa9Gp/nruFUsce1ssjgxPe5e5FxtstSmXkN+Yodftvd+ygCxGv4LrLavGz5IFOZvmsrcTNNMGVYpXija2BSrDQMvO2q84eEFtkhai6UhU4oxgqht28eOF1ehIZLln/q6k6HV0ARxJu0xKweRERs1vuk46yU+RY+Py3P34MWmtiC0qjg64uSojl3xIGkhVUwKdJXnhaNojp3LDQz57ukd3rNU/ktyOx0ECn0jL1KmkjW5thXsOJLmhl3yCj4Ne88TINWwBzhcvZQ2GG40Wekv8LVgnVzdPsFK4K40/W07gJJNCf+7cgYsz1wttwgHhj/BQsNY6zXcpSxXLzMcGXEAT226D9yROvSby9FbkNM53t8srHCkyCLYowcgFV5zdBUMgnzuEl8hLaUPL53QTP2aPRANaorXL2qzMNPeDw7TGf6v1e0IT5xgFsIZ2iIjmc9cUbGD0DbmhD9Wr4VwUk5woP+MAqeYrPao8VFsS1YSRVhJ6HuXQs/xAwjBz6+LkQmVu06fOqdwi8SpxetrpaeeV+C/oZroEXjauMxjOxhXs/rErHR8JXaYPbwmDgA2+tvKN4tg8Pc/3jXmPrWPDrBfrUp80xTgJjgv9JC/9gKniTLqd+V3/FNQgt84yZWYE8MLLdLM2HcXLrytF/PvaXMuVfInLk/4R8+ga7GfLTUOYGCKoEZWR2aA8lqNeVf4C2wSfZZEnjPVuzVwmBNjzRl66TlyNQ0SHOEtgrT+tNXid0sFPElLUOHlCcBxz075LeoM9dsqQNDifHUZdwUHBVTu6d8jMFmY0X4t6/TfhI8ajLDcrxGyRwmeiyUO+3fUV3hC4qJ0BK/kkQ7Ur3UgsljcIVeFX1dK0rcH2zEpcl7CMO+dZptfjXL42MAhgI1WeTrqZ31i3lR37Et3E5cIKIDvPIREUmA/FGjB2b4NeH2oOzVQ2M53QJBgcg31CO5usPhDdA54Wtu1mooWhUlmX5zPnyTTuIdjScqP5X7lLybJ20bNkuHRCLVJmWFWoGozSHjnjpRwjqkwa8YC5Y2wFP+kGmwhvRJ3sCjZCnpEDru3KyXHvWoVOqJTwmZ5uJh2c4n+IvK6ki33msMBnFKOj6iSHO9oxZoDulXOVKfy5gI++EWnyX+bXceXiXTgElliLmGOKEn2I82ipY1/6CeoI9HFZKU85C5Ffrk6aFW32vJ3Zq11BOcbJ8DVtmjaR5KijWo+DdHA+rod9LpztFvFa0Nh0FQTBAzHZ/xTztQTtbg+nJhkb951ht5H/18xeeU6UWM3hEq3fLIc3xTx1CpwAt9r1WuvISl5VV/PUXI6ryLMZDtHL3XAftF4IZTfvzvSCCvkt/IsRocNIObuX1KZdMIpk36CF/OMZKWgdybLCsQ6rlWthcs0F+A2Q6/hbfkmL+RY44vy/WvtROyjRB8qHXANEtx1DfWaGIGsbwdHQEb3SWqpvU8ZQRe3cl2wi+x01SPeCRLxe5tU/jEJ/gVjG4hAfrFcO8hU0PuuesgL26MVyJ5qTNs3+xBbpFGSjp+3VYqtyhilDixwsPm/P8zTLJfiE+EtrA4rAHnm4kWpXeGo4TRiUuseXjVVjT6DRXuk4giZHMiOq/02pIeN+5APUrVVk/dhyC4rsRejFaigsMXIKuWOWi8DosgrYHU6XtDhBxYPJc55VLPEdisRoevRDY4Jzjmu3WTqqyCzUOwwJthn3+YfYi47a35GB9lH+4ygkm8IQjSD9IB5c0Z5nR0R3BqMcbb3o3Bfql35UO5tsQUc8uMvV0sP0L3KZ/w96rpmt"}, {"__id__": "chunk-d68999e887e9822431d56b7285cd0c07", "__created_at__": 1760495024, "content": "## Transaction Propagation and Validation\n\nOnce constructed, a transaction is transmitted to the Bitcoin Cash network through a peer-to-peer protocol. Any Bitcoin Cash node that receives a valid transaction it hasn't seen before will immediately forward it to other connected nodes. This flooding approach ensures rapid propagation across the entire network, typically reaching most nodes within seconds.\n\nRecipients can verify incoming transactions by checking that they contain outputs redeemable by their keys. They can also independently verify that a transaction is well-formed, uses previously unspent inputs, and includes sufficient fees to be mined in an upcoming block. For small-value transactions (like buying coffee), merchants often accept valid transactions with zero confirmations, as the risk is comparable to accepting credit card payments without ID or signature verification.", "full_doc_id": "doc-d68999e887e9822431d56b7285cd0c07", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_4.md", "vector": "eJwN0gtTVFUAAOBCVh0SEqMFll327u59nHP2gENPc0ojNNIKTQRTxBkyhDSUIHIstchHE0bu+iBhX/d9z7n3QlZaOGaaiYWSlSklNEZGD23ExgmN0enx/YZvCFXkff+eg+KpUzvXgwoYlFvogJmF04UxtTB+n/ZlxzGtKntu8ATBdBldSVjUYsvRTGJRr/YYsM0Grkfrtg3dzQP1ND8t3O8/5CwnGeYoGIKe/I5oEei1rXifXOc5ijFqxa96PkTN5HNrdd6jQYNbg0rgSf1J8ybq2bNCjAUHsq8wvK8IPiZdcM+l56L1LGBP6GfAKuMU+I4JE0Bual/nYTBd7eEGgwGrAlyQr4JZpJ3uIFu3b/M3pf/E3eqr0B9AF8D+3R+RMu1d0QPOes3YMoh5h3caksSIfqc4BA4ySTBE+/QEP0H5Q/xHcJB94WawEQxIm+gaZg65V5gQklTAlOyK241MHdnFVEc+9ezEFxMP8Ef84/T5aL8NURt2QYc8z4g6HyU/2d9wXuzBX6FasyL3mt4nbkXfkEzvDfElYRY9qb5olQanws3c04HXgV8PdByzp0nO0EV7oh40ltOl+Kh7EjxvDbEzfQXS2O5etRlLRr/wp14bqcEdepexgryvblQfRrlKDZerpvCLzIuBV0gjN50ptD5Vks3z3AIjlfxjAIKEoP5ydiMvcb/59mXPg8NkP3tWSSL3yMesjMiyrEsta+USkCmHPYu1urTNbE275v6Xn6yvRStpi9pk5+lu38vsGznbmc+mtHrbg+1oN7kd/R4A1sfwW4PSffLzrl+0ykDI38BG2SY2E/39zkIqwqg5m63Cbk6AEztHYbnwNliCGnwbpLVx9Y587hdtr2bwMbPetcZywMXwfnQauMlOul57N4LVhSgl45B6gy+2scaTAWGGcIRcId3qnb4PwWU/xrXCcjMlp9a8xbs2XmZNyS3g1qld2nI9mbWixbkZrhf8O9O3ZfVKGWij8AJKjR3NaAscxj+obrA3dty/SWxMbHHvB8PKFfNb8Rzjw9WMJW+B52Vf/Fdvqsl3rBby2c3klH9ArP3/ymUpJVhCLrB9/A9kceeBpHpaI40XTtEXtYvIo5Xw7eCgMpsa8c74yTyHsSQwQh/itMyfvW9ljOe+QtNRMj8qjyOj7BzuCJyhtxt/eu/Pncuc8V0KmviAlhFfRLN4T34CTLC74oP+N1XIjgGGbQIF+kx/snYX2qbZzAg+YZWy6zmfzAhZXC/egbtpG3cTfe9zcUm+Ndz7/kqVB0n8ba4GNWycFYfhU9x4vTyHDa8GswNt/Bdev3XaXGA4hIacXcwzwhTQE1m0Zz24h1Jx0F5gOBVqbVOeIJNzJnPjrHi4jB621kGXUpWzSm6fXKkWil3GmJnAQ+QTUIqg/Jq3Wz+hpDFlfNlEC0yCdweOR1dAR+y8kSKsRmN0TtdVLq48YhzQS3EB4ewxw0kOqp3Ca+zcYLfvFX6x1UqG2WJHkUC4n5V/zWLpg7ZeJ+XOSW4tjRpt9eyhnHDwpUSrfsX8ji4JHt1Rp1d19LAJ+hZ3OVaoLLSL9Y9oB9kSuM6cob/LLUI1Ox+dkak7guZLdZma9jH3I50Hn6CVoMiyaBdpBOXKJd91ZRO3ivi9pfAz/SD+u7OPxMhldoaayx7QQiATF5uHwQDbDzcYM2BVvhNOJdPyNgXfQWWi4WojS7lbckbsm2ammiWm2s9qM6GRfEm9qrBkkO7lU9l0zymv2zWiJPhKcEwuIC3xemUdeihxBNzF7BEKuUdoLflACdlvewcTRUI/+4bzOSMUGcbIjvi3Mwh+MukvwxmoASESM0XYalyzzsKJYr+nSU3TZ5FxsBp6GQeV6QpbJo8bvLlbelDpYEd8wBzlNqjJaKl0WCuxHzZ3Wt2bp1vXQVd0ibQynIabQUht52/or2Yfj18zrguDWp3ghMliM5yv3IerxXKaqwctlP4ft46hnQ=="}, {"__id__": "chunk-0abaccdbee950dc736bf46c32c1d8de5", "__created_at__": 1760495027, "content": "## The Mining Process\n\nMining serves two essential functions in Bitcoin Cash: creating new coins through block rewards and establishing trust by requiring computational work to add transactions to the blockchain. The mining process is competitive, with miners racing to find a solution to a cryptographic puzzle that validates a block of transactions.\n\nThe process works similarly to a giant competitive sudoku puzzle that resets approximately every 10 minutes when someone finds a solution. The puzzle is asymmetrically difficult—hard to solve but easy to verify. Miners must repeatedly hash the block header and a random number using the SHA256 algorithm until they find a solution matching a predetermined pattern. The first miner to find a solution publishes the block to the network and claims the block reward.\n\nAs Bitcoin Cash has evolved, mining has transitioned from CPU-based mining to specialized hardware. Today, profitable mining typically requires application-specific integrated circuits (ASICs) designed specifically for Bitcoin Cash mining. Many miners join mining pools to combine their computational resources and share rewards proportionally.", "full_doc_id": "doc-0abaccdbee950dc736bf46c32c1d8de5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_5.md", "vector": "eJwNz41TVVUCAPBBpLInsiQf7+Hjcb/POfe+F7MqjAMySogW5FcZQSRqumxlipA5jGZrDmXiaCwh8ngf3Pvuufeec98Fq9VNWreSRFtbzNhmKs3PIXcNSWkEzci233/w02Fj7rH30vn7co/bJ+Tx8FFtu5ZghwJ3lWtarS+lNY8+r5axecpO4weSxC3E+9B5azT5WVvZ2yY/LUWpS3wo1tnzcPy6YrLb2IVClVTm/jT0X3OZ/5a0VznYISi3iQKvmFvhJeCC+fwq5iE5VXjUuRGY4i/kBqQK+HVkEqxW1honhRr5mvox2A3/bS2OzmNKDWRUys/LJcY8tMdbAcY7C5zb1hAOPrxDKG9bh86gnd1X+c875qCE+ARfow+ROm6FeV5MQa+TxWCyUCbk0Q/VtWYuOcZmyAF0mv1Weg6166nkEM5kPgh+GuDMO/gdsVfbNCMdrTMWakUo1T+TJOB3pXqmABL3rNjI1L/q05zrpIW8a1+Ovhe7gxb7dupPCqcj+fxfsAu5lB3KWZIcT0eq/R+7FCSgtcotWBJfYE3QuTkhebSNShsyi0EI9wijTkwZgMViM5mQPSrpYOJ3mTY+x7npXUaPkhG5WmsB6d1exsfU2Yl6Vna9/3TnBVhj3vMo/o+YMyTPHIu9H7lPOBVpQj+xM3Ia7XE6YpTKOi1w1uS4rFJIY1scD9pqAO4zqVAa84f5adkudbvcTKPRB+iDWn14G33VOAVviSUWZavcreAp0sIUg2UZVZwCG3GRMsvZoeXbI/ZPus0OqY42SSxR+sGR6ATJEHuDTXR3ey8hzjn7OSPRXiD3cR9r41x9aD43SIe9HwpLIh50OOCD98M8ehaMSC8AD6oV7iXXeEM4xXop3sCOu70ts3g9vl34UqSAlR3yAbmt+2OptEp6EY7T+TmV8QPRDZmt0gLmOBnuvufdgE6AIm4LUy1f0RaTVXS+0dSR7HzelQ7d4gprox00nuFW7y9I+8VoA2usk5oDL7P5AHQtwzw/IM8xD+pzjSeE7VqJ520p//fjtJ752oAvxD5ulpqnhN32pU4XV56VTyWhlnnBGJPW2y+J54Q6/D1cSv4kPsNUm75uj66lVYizRQ3/TB+B+ywWV6Nj5IhxXvwoDPx3xTe4CtLE7odd7r+xjXyiUMqNZniEftqM1otfweuWZCV5LjPJHSL3RsDlb6d7yCWjVvk20C/fsIrpEGgQe/he7hVOCky3y8TVwlKQCvvEg1yQ7pdyvT/oEN7BX4BypcEeFjbKb8auhlpig9xZY4t8yH9IWmmdMU9bG82Y8gf8m+7DOLpUQFAUXR3J1GNutqrlTOkmLPQ3CH3kk64kudB6Frc6DWauXmmH2CBqAEeVu3SDcAPPjGcEk7pqjck4YkxSZ5r91h0rHlhJulDoQL2xKOu4NhY7oV5EG8Vi8RV5wJsIVOYAjBJG9IAjzC89E9KDxomsn/ddgw0x01qDEdmqPaGqoE8R2Wo5Ev8frfNkyBcQQDeo28pnp6qIW2f/Cwxa6+w+eM9shpuls+ml/Fo7EvLCBBLE/emYWU5ftga0y2S9fTsudHvNr9Vy+CM5bLTDXVo9c0gvEKao7fsnWzItFlYaNYEyUolWdA/S5q7fvAvjN9sv4hH8d9IlfgmX29PlQuczfVU8s90X+UT4xk6Wd0hbnArcL7+Wk8jkQDuwCM2xNgcq/E3QRwyxyWxBe+2wddhZQsez/0EfiBShq+Fmq0y7aH9FlkspouVqTkvAnbGdWS7ebZWbrWmNvrm+p/FJcEGq1GnGLvt8ZHfslL1XLQ9XgnaQhIe4Tdl8YBbtYJeIIbDJtPAoGgZ7CB9W+S/cs+MpcFHQEC7iQUO2epV5yJd2xfwjrXSG8YrQP0nl60naSPYZvMQ8CR7T/R0zjO/AEUcn3viY9KsJgrf0m/TPxjlltjAv/JYwTqvMqbHJBxbIXrxN/jUQ1HvkothjXpbptldrdVZA+D95WKHw"}, {"__id__": "chunk-d53365549ec872f732f1e7835ceb654c", "__created_at__": 1760495044, "content": "## Block Creation and Confirmation\n\nMiners build new blocks by selecting transactions from the mempool (pool of unverified transactions) and prioritizing them based on fees and other criteria. Each miner also includes a special coinbase transaction that pays newly created Bitcoin Cash to their own address—currently 12.5 BCH per block.\n\nWhen a miner successfully finds a valid proof-of-work solution, they publish the new block to the network. Other nodes verify the block's validity and, if correct, add it to their copy of the blockchain before beginning work on the next block. Each block built on top of a previous block adds confirmation to the transactions in the earlier block.\n\nFor example, when Alice's coffee purchase transaction was included in block #538345, it received one confirmation. As additional blocks were mined on top, the transaction gained more confirmations. By convention, transactions with six or more confirmations are considered irreversible, as invalidating them would require an impractical amount of computational power.", "full_doc_id": "doc-d53365549ec872f732f1e7835ceb654c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_6.md", "vector": "eJwNzYlXFGUAAHDEM3TzYt1lgd3ZOb9vZhBTPEoKJdEsIEvxrqc8UTIVxUIrKX0qiaRPUGgX2d3Z2Tm+b2Ygj0xCDSoJy4f1DPJ5ZoKYmmFmLwy1+v0Dv7lMl5h2sB9OST5k3Sd7QE74qPqblStO4YYRVxMbiVXaVDPV1Ye/vHcVWqROUR7xc4jl1C3kUSqYwUwHfstdKNusG+hCUl97ZsiGU4T57FBjsfkdLALZyfO99UK3YXknhgYLDF8I3hZ6Is+TyxnBLBCvg21MIOkvMpY+jz4Xd4RUjwh8ag99gMmgPMzKSp9zf/AkSAMtcjU/L9KHz3CtsGLwcjQmuZw4oG5iVvBlpgPUe5K96caFJ1r0C8jPpMgDmAL6sJHuXgQbEm8ZW5QH6n3pdrAPuVvUSRKsFtuc54PZ/S01W5oCd+IupQjaTIf8umCv2eV6wBwSooOZ/vfBTn8l9YJrj9xEr3PNs550r9UMdRF/RwHgZSWbqAMO93B3GyoVW4UNQqcxwepiY4wzFuc7D2rgTZCPo6Vm5KWK2EdyBr0fZfGd8l5mkKWLa8RK7z6UDZ7Tv5btxlSlg0ytvUA+RlNRkXimeih7yriaUA/2oBnkB6FS4Wj4oHBeusxGiVsjFD6kGOTicCHYLJ1gbVIs9yU6gaLVdeAr9QaaTLThemdfo90oIUarO0Cx/UVftzDcP1BqJFPFDWi29A2qC45x1hqV1L9814hqJQxOUaPBWaXTlwRy9vdKNF+hnwVO6wMlxrLpk1Au0xvqp5Dl0+EEsL16rOrnYiKNWIQD8J/Kq/iX4LeoEbwXPoUTuRPkLbqwssFXDFitGB6DZdzZcJw5gzvNbaDd/HRXeySBmUZgol2ej9M9lrHUk1PbIBSAZWKJwFlxqEM5Ttgwwd/xuiJDiYvGCGUVvQna2dlapqVoN5gHnkGb02A+/HL4j64uM8uLyWgrIVRHvwC+9z3Y97yHpGPZD8NuqT+5T3lGf40/Qk1ny8IzQ0vgOXDauAJuSh1MBL8Uvk8oQrq80VwtPR2YzLaEsv4/J+lnw3nOWmmKvpB06vl4GKjSF8Q+otKVWXySnsa9BTOMk9Z42aMuCx/2tUphtEl8UX3DX8dRWq/aQn+m8WKPEkONwL74YcxTxN+VrTCfeZjQECID3SbH7uXvgIe4Ru1RDkrj2V7vNPFvodTssO3Dvfx2MSPQhD5x3AYt3CM6jh/NZQm7MM/3A5lA5irAAm44qgCzIgFaAeM8g+m7Yo5Rs2Up3CDNSsiD6wLF7l3sMljsTklcjpC5mMgS29lpejE7L5RDR3HX2W3qUbwCeUyJ/YluoGR+BeuIsrQCMMj4VW9CN+Xx5j/GyOrThIM5KSwyShLjsa1u28ek3OmeRP2r10bW0s3lrEEIDFbhQPZe/EjPEDph/8CI6Y3mXoUk28nOjOuhjrNXjD/kUeKohD0WxTqMMVU54RT4XWW5PjbiQ18E3wkOYK6JY50Es8W8qrorHtqjuNEgTy3Grfrv5Nr4ynApeUz/WcbkDG0TvAQKvFWhM5jQU+jZ6FpgTdVd2oFnOH6oodFCSzLm1K6XVoYPgUStxt/ErkWF3ILIk4kruWNasLpvpImuURjxmiIQz5gl6DIqdI4zLGKSLntnW997XhEuYR+/28pEIy0drtSOgGK9DJwDDiO2bCL8DH6CyuHEpHFgYcSdZBNV6NHnMHaDE1Zpk2ux1ihl6+e0Lt9Y7k1pol4S50ftxmoyL1A6qo3Ugxudj8HvwB5MM2lMeZYw99BcqlnLIfvQ76Jn0Z9ShjnV+S3aCKvgaXYuztUcXGrt0OCn9lmwTbuoNgOGr0NPqFe8nfIaE3JX1f5MIzqidm99DPLB1oT+lq5nm/HGEO/WuBQpdWRzDakcx90gT9lNtuJr7kvWZvSj8T59T/+HDijb8F2cK96FM9F6+zmcHKnHLn8jXxQ+6S1MmvzRIL4+2AFzlVh8WcnVo7T/ALROnhs="}, {"__id__": "chunk-b8a18e0ba59edafb2cfb76c738a11505", "__created_at__": 1760495047, "content": "## Transaction Chain and Ledger\n\nOnce a transaction is embedded in the blockchain, it becomes part of the distributed ledger visible to all Bitcoin Cash applications. Full-index clients can verify transactions by tracking funds from their creation through each transaction to their current state. Lightweight clients can perform simplified payment verification by confirming the transaction appears in the blockchain with several confirmations, providing assurance of its validity.\n\nThe outputs from confirmed transactions become available for spending in future transactions. For instance, when Bob receives payment from Alice, he can create new transactions that reference Alice's payment as an input, transferring value to new recipients. This creates an ongoing chain of transactions recorded on the blockchain.\n\nMerchants often aggregate multiple small incoming payments into a single larger outgoing transaction, consolidating their funds for operational efficiency. As these transactions continue, they extend the chain recorded on the global blockchain ledger, visible and verifiable by all participants in the network.", "full_doc_id": "doc-b8a18e0ba59edafb2cfb76c738a11505", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_7.md", "vector": "eJwN0PtXFFUAAGBR6cjxYGiICwI7Mzt35s6dWU3UHipGFJov0gRJCUHzkagRis9UINFKEUiQVRZ2Z2fnztyZnVWwo5LpEQmVSkw8aampnU6Rkoiv1Kgo/4Hvh+8zMWfEzXqX2e4U929EO7nFbJqv12oUX+GLS1ZyOfgnZYg3lZkM/iT1eL8+RgsRr6ntVJ48h5RojyHWNsRmmyHGCq1AGKYmUw7PbhYJc63d3jK+W3CPsEXHSwnGdVLme8+/SQqTUsX+rJcL81+06p1vx30irBU/RCc0r2ETW7lX1SxhevV6kMiYwj9x0x3H5MLK67FZcD7WRVp7BrQz0/B//o7aRyO2OdLJbrQOtVr34DtaDX/WKDBLjJdxITgWFiGVAVk/af8C/saeIMvVQUYvyKTOUOXSsLgtUeHORXVjzSO1yYqTNoUnZjX+UugyfywdItzU2iNmgfvSel837mEb8RiYLuebI9k0FzEV9ms1xX6JXx6fLOwxzwiHQZf+HZxjBpEp5vItdbl4FjWTnA0q6AthiWSHLnO2fNl4dejX4scxlJzpzRc26e9iu/WCeIaez11gXudE4+C+ecHbdBbfYf0ue3SbUeIcqqWAby3aO9PfZiQA3V/ktJHfbLJ+G9skVT2g1/oOgRAlTdilDwRrsBtkaP2pSpyPEpWOgMO4R0YzstaMV9eFkNFSBRkHgnwoUwxusqHwiM9Qi/wqbq1bZ+4FrXCCusK+EC2Onei4p1+VGx0Z8B18hCvSU0S3PApvCEr4fW8iszHiCuyMXiJ/JAywb1f9cI7vvnFYzCHlZIF2inVpCUKfOJvSQ21nDglWZBmZVvudcZkKcU5AnXxl4BpPom7AoLiZaR4iKuVVt9kXWEPtrZPMi9VvWxNRuViEdonYSFevqWuUx2Y7P41q0tu4/EASYfUV7EvCFP0oWaSxcnHV3shd4kDxG/xxTGMgZ3sBDg88X30cJfs2qR7/99RJ9c/YSSQKdjrSvef0T9CM+EKhwF1Al3I74PukEH3AVfoVRfR1x7+GWrSjlqOqic1DxXBj3I/Unjoal9PjPOHuB5yXmkJnevop5wmNtqhL4Gr2lmMiSibrgmNJnnHGXwQy9CQjWSzVuuk2wU1ydc6+HjwRZ5OQoT+Yl5AlZPoeMy/zq6BIXWFv1LUFttlS0TPOJ3QX+aPmZz7Bn2G/i0RnsfGvSgyR06QWLu+pPFy54g8bdjxuqz1JyiYWNx6Hskk4nP1UTOo7DK6iRyqRwtHwfTDb2UPOAhc31tsM/lJ76VS+o/orriu2mP3c3aTzREQENQWQcoHLg7XcZlgLHpp3jFDjXd8d9yNHlPCG9IbWEB3G5GoL9AEBjszdlh845WGwraaPtNNMAFHGcOMhv5SEcomgmtSACr3Xu07LR4t1QeBgdm2XL3LIuNoIpRP2xC913mLz1Qa8iKoA2UGGGQ1i5IvBW5RTmarPJgf4TcQwSvEvWoPqQmPQXmGlHCFkWo/kcyAR7IBZNNCizHNKf+9kulf5FS8glcYgnEQXwB4AuGT1F3LDmApbvc+Sj0Aa6zdjXS/ug3i7OYe8FXjODHoGS5esOHk4hDFDwTJqTekKmMvmyQMcOxl7zUn+V6UKLNLzNJcVo77ibaC2RtfIb5ID6mk0MrDQqVqdWiEOCulG0J7CSLF9xU/xXcbNdYIGo68wVwpB9bjRGSEJ3BN6M75ubnVj0s86Tx5U1fu6yTxVhl2eyX6765E5Sj3urpRX+bbCbyJPeirgeLTQs418SNJhBTyopPN50aIQy3VoJWRSdVmgKuIuvsFnMM3cEbNFm+kYEDxLjde2IBf1t7ZKnfd07K6W6hmE08wUZq2vTfnMN03vh0W+Gg1iUwMzjBarhzTbrxI/afLGMEuUZUYLYyNvMUvZ/WSgxQROWwf1PoGKwcfti/eupJ3QI+zSfmIpPY0qxJvtOdDn/4urkWJQkyMsPgvdpzfoswJTSLfjf8y3rJ0="}, {"__id__": "chunk-615197100c66ca126ad0fff87ce3c459", "__created_at__": 1760495077, "content": "## Wallets and Keys\n\nBitcoin Cash wallets manage the cryptographic keys that provide access to funds on the blockchain. Rather than storing actual coins, wallets maintain collections of keys that allow signing transactions to spend associated funds. Wallets also track available unspent transaction outputs (UTXOs) that can serve as inputs for new transactions.\n\nWhen creating a payment, wallet applications handle all the complex details of transaction construction, including selecting appropriate inputs, creating correct outputs, calculating change, and applying digital signatures. This happens automatically in response to simple user commands like specifying a recipient address and amount to send.\n\nAn important aspect of Bitcoin Cash wallets is that transactions can be constructed offline. Similar to writing a check at home and later sending it to the bank, a Bitcoin Cash transaction can be created while disconnected from the network and transmitted later when connectivity is available.", "full_doc_id": "doc-615197100c66ca126ad0fff87ce3c459", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_8.md", "vector": "eJwN1ItXFWUCAPA9WomKYgLeC8y93Jn55ptvHlcK0NxFt8QXkWgJdLQkUzvYot7SdStdXcFcW8gTKQgBcy8z987j+2YGRZLEJM0eHiyVOMbiKwkoLXscreyscFx2f3/EbwzVI688vJgcloItE4FXDDXMwYqbzQwKJXWFYIE6tXkVvAmOIY/SSQJ4mzYgTbd3Ib9Wovfzbdwmaz3wBQbdsfZq4ZTPo9RE+ulmaOO/aGHx3wfeDp6nq2WK/ASe17H/R7FJ3uwfJxSmf9WYZI+dHpUPKOekepRA69FuNKI9bdwRZoALaPidQS7fv4LJd07QD6FyOIdUyj+pk4K3+IdU3VQnz5q+kflNr2Oy4Bj3puSm30Vv6KfIXLLOfkUVdVqUedGsh0ygB4acfXSrHgLH0TZQhq6axXyVrFlvmSaYmDoFxaQhvAeXcyv0LqZSMHCGNiGYJW4yLhsC6Gy8Lf7c9Ffc13TQlFtm0TG8NnqhuXfKDrpUicCFcIGVyG81huANcbUwObFE14UCS2x9QAyiZHmpdI1s8T1tn4WmlM19jXKpU3Ip2ZDyrXOfMADbmT+zXwoX8CzjiZaPQBbbYt9vjJJXcDskCXdFj/Nmw9YG2Qrq+YRIHn2V+n5zRfod+RPze+cFbew79WYXPEDa6BnWDDBgZnon0yeZ3d69bhXnxTFvFc5wNXG/NdK4GZz2F0kDTAfwCDmgwrxEnyPvccFpfyQ/Wyq/v2kzdZ1eE7sSHhP5lA2pYdyBqydnWpPEHbhQXW8vNY+hFOpHahG7iX3KNyry9DfkDpynLHGusLlGpc2S+PCT+GWh3OjhzgTO60fFz7gjuIdKtEPwjWA/SPLNdHIkGj0rpSDgA3g2HG/NEYfq9oU/UA5hC7ItC8QKLo7v4yn7hDk7klSfQJrEdmGD5a31Oq2k058upQr3cJV7lAnBYeoH7h9ypdxpTNVec4uxx7/Inc9MovWkN+31+guBx4z4+Fyv5EtBlvFB4lxUjGLCcXsBpXJz5D6Sm5YfjVDPRU+DkTgPyjMKWwyjg5vNPur72NLEwbDWlKl/HP9oWjH/Lt/bRJFH9DIKo0vp8+F4csR3EVaTeW6GcQ+PsrfFmT7k7mGrcRH/JbsDjzfS6pcF1smMXiB0GSN8o0jxRfxLIE44OO13HjAz8LfMY/yHYpn6anRI7eN68dqadHm71Evesi/axSAreJafr900n1F/8T3Ll6AK9b9SsJE3V+EMuTT1h8iwuMT1sLn+29FrQitTBNrlFFwJN3DFcWfTl+vf89lQefCc5EEbzXk6G4vgTwQl0EWWq/XhF6VNYgY8pPyOu0kCzgK7JzYz+6VbQg05PWFYSrBL8dYWPkqDTPdfVJVigmrU5iwC0D5PkmC5vigc9UbNVMNrTAXX7Fflld4AYsQHTUzt1G/FPseJ8sK6x8UvpIrm+6JzBRnkuTeYB4R5ZOvB9d6lsWWWpe2ETzhncL+H149aybJPPiN1wxIp3/lV69eXg4iwzJ9G+uw1GrH62TzjfPM//z+LZ9og9alwAq3DpbVTGwpwhE8jr6sbfRrKVw5HGXi58TRpwRPdESfOr9PTyN/seJhMT0A363Jju7iH/ZKVvFflvvBu4Ud1Be7GTcTr5oNg5CR7PXIZF1llRicKGUPiONdn/WJPYf+OL3ArrbvMN3LQ0QLZYqF4zGpjVgdDsNzxT39eqAMTcAFXaxxit7gdbp6z1IrAbptqThJWKNXRtgMF9gk8LnAJMf5TKWXkSNo+cSZ/US8j7eqvSgGTqncEPGwNGClf7J7EawOZbj+3UAtxA4GR6BqjAe9CJdp/YC93XCqKzjIWwhz0B3I2plGPW+NINno3qR106a14J+7hR9GeyHZjmIw4OZFVtbusbYoPVlqy1m52oyH9KqgxbljXyX6c51xVltj3UvYy9fhPqolifBo97IsZV4yc+rqwBLfVfue9JL+ObgiYTgbb6S32YncNxtT/AItWm/U="}, {"__id__": "chunk-a4b0a62c83d5c1a1cc70a13c42de724e", "__created_at__": 1760495089, "content": "## Advanced Address Types and Multi-Signature\n\nLegacy Bitcoin Cash addresses beginning with \"3\" are pay-to-script hash (P2SH) addresses, which designate the beneficiary as the hash of a script rather than a public key owner. P2SH addresses allow for additional functionality within the address itself, requiring more than just a public key hash and private key signature to spend funds.\n\nP2SH addresses are created by applying the same double-hash function used for regular addresses but to a script instead of a public key. The most common P2SH implementation is the multi-signature address, which requires M signatures from a total of N keys (M-of-N multi-sig) to spend funds.\n\nFor example, a 1-of-2 multi-signature address would require one signature from either of two authorized keys (like a joint bank account), while a 2-of-3 address would require at least two signatures from three possible keys. This provides enhanced security and control for business or shared funds by distributing signing authority across multiple parties.", "full_doc_id": "doc-a4b0a62c83d5c1a1cc70a13c42de724e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_10.md", "vector": "eJwN0AlXFVUAAOAsCyEfEMsT3sbMm+XeOzOvQMEl9MTRtNA6ormCZSll5YLlUuGCSomGoBkI8vZ5d2buLM+sNKOoLCuX6oBmlpxEyLKO0iInSPGQ9f2ErzVSAQ+9fUa30KB+y9mGLreswevjScISaZ2Rmukw1rs+YBtguTBGPaW9aJ4zEu9drreg+RhqEyMadBm91Gi9yOwnCb5/mM3kJF7ClzGvRFcHBUaL/cl/KdT7tpmD3nP6FqoKpgp3cnmETq2JeIMuYbo04E6WbsES9xxmGmwNnDKT0AVoR32BCi9b22JWxxfDxWhuKF/e4Zuu/g3a6cyooG5wbUIuMhS0q0NSf9wpjWEnQ5uRQyYYftMvvOhPo1bwL0QL0SW6lD9NZsKGfee4l0lR+Ee0F9OeevAaNd1qd3vFIr2YP2rWaEGQT+WHP/auyuikjgk72UHjmjmNglQ1a1efC0/Vg3zxgf30M+oQmYSWBFOYTO9hrjPF4ywIntF5AnIzXQNKs35KkGOp1nFwWlqINoil3MKcSVqhngKzSQPU5Cq4zFiFh1sVLA8+5b7nIqxT7WuaaR5wPwbeMBO8n+PqiCgsAQlCOumgMuRcORvuVk5Lx6kbwBdLgmvEAtyh5ypb+SplVvNJrQ7fco72uuVOuAP3s5fgCDyUlUD8oQ/0ivg+OMuxIpa7V3enSWsdawCdnSjl4X5uALP/DxxSBlJWonwyRPZzl7UHmKeMjdzU0NbIfn8j6FMi0qvGA6EZ6p+RxJyKnORRw/EY7rHaiYITfxtbyI1u3m7WSVNMjowhJ3ANjqBd1E2QkuGlRsDNUY/aA7jGKP2O53H0M2A1uxAAXXA5RKBFK/bWkk1sbbDUMRTq0CekjY5/ghaJF7gez9GsDUojzuULzF1gnK9L+ZhbZB3XlzULwlBwO3nOmk5/kjkVdo26DPPuaw/Y7C/F5ygyHm/a/Qmsn37GuBw9FN1En2bnswn4VvqvzLikYegPsBEURGazs5qKJEavhBMCKx3zyEhw964eriqoWJfUh/Ae37PRGYTCN0Kvkw7vd2oHV83cgGvVXyg/zpe3cde0rcIC/TAVEa+r9ngJ1SePzd4tHskYoQ0Kfxh50MZs5G3B+8Q3A6v5fXZPcKR8GLnRWW6s3Ao1fgt7E131LzeS4R3iXWiSXBKaZpzEn5FCealYIbTrbWRdbC8sEebD4abp6RYWhMvsTwsCd4fU7byHiSoZUjhUz9Sg36wiVhBcqhg7Gl3LdYgzlXtbPmWd8iNUlzyb7tIqRx0EPZ7+7DNyUF2pzKBS3aJWBnXuXeE70MnVJcjWIC7EBpeZ/Rn7PPwLFWaWxYIia25nv4n3No1T6sylsYeJ21gHf4xdheWpWeZBeCRyQP8pMCvay6zOedN20Vgs7eHm0jub0tW0jDy8Vn5CfQ+eS6mhU9kZSgn/AnqEd5v7OHu4CmfFAcrCI8mTTRrqJb8ZDtaRlRyJhNNRJ/iQGyXVW8PJkYgNloIr/AJ9GflCI7wHrlf/wSHtB9Ko3EZf4W/ytzNl/tnRiWQY+lJbpIfZz+lTsfH4mDCHKVfbSLHlc73M9HAl2uTQRWlP4+SskY7SWFd9l7xDkZslQOP53hOyD/2kv608GtuiV+KT3C7lhCuA54Z70EFtCttrXTcuWG0NE2N1LI7/IF6XVukZCPA1vo+UQfChrxw+SK6KBfDf6O328exmvYzPMCtNm+4MRFmnNo+0cs9mdcMpRhqp0s9Hh8Gdwe7Qk+rXynneJozTiXIW2Lg9cLdVJSezE0ApFcY3tT54zcoDAOfSzdz9Sh1TbYSk7pgA9oJ5YnpDuwZhhfiQ2hb+3XGFJJBiKUlpEQbURO0lrV87ILVSjUa+kUge9Xzlvksdm3MEPE1qyRRyEe2Xz7ScJQ3p9+hNxjEDwcmkju6iiohPn0Sv4L+KlrH3W0H8Fn8p5X24k03lr0uVhGdAaB4870nXllrlSrH+HwrclaI="}, {"__id__": "chunk-156c9f9d61f456a81904df3ef40b3986", "__created_at__": 1760495089, "content": "## Denominations and Units\n\nThe Bitcoin Cash system can transact in fractional values, with the smallest unit being a satoshi, representing 1/100,000,000th of a Bitcoin Cash (0.00000001 BCH). This divisibility allows for microtransactions and precise value transfers.\n\nOther common denominations include:\n- milli-bitcoins (0.001 BCH)\n- bits (0.000001 BCH)\n- satoshis (0.00000001 BCH)\n\nWhen processing transactions, the system handles these denominations internally, while wallet interfaces typically display balances in the most user-friendly unit based on the amount and context. This flexibility in denominations allows Bitcoin Cash to function both for high-value transfers and small everyday purchases like coffee.", "full_doc_id": "doc-156c9f9d61f456a81904df3ef40b3986", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch02-how-bitcoin-cash-works/mastering-bitcoin-cash_chapter-2-how-bicoin-cash-works_9.md", "vector": "eJwN0v1TFGUAwHHxjdAUS+WAe9vd25dnn91DDamBtBC11BETTbKR1LQhAqYUIjUrokYMcciQlxPujt3b3WefZ3e5zDK8rhcDZpreNLV8S6eiNzMqxmqkrMx/4DufH74yvzmn4bUCp0+caf3N7cz8RwN2njMdLBeXqW7wnP4tIfpitn7WsCGGO+yvnZScj92/c2lMm1XpuUksQvlgIT/WcZle6Tt6Lkhx53OwJQN/iC4I/eBs8El+W3CymUP7cJyfH3wc1IoLjHJxhWbzfwanwUeoBDgpPaoVa3+IS8xTpAruz7wVDPJVyjz0GE6xy5jNag23Fn8uX+nZBhuoRKxc6/CYwe0xQfGLBXKeleBauZlcimLqFd1jtHViCvMX70gX9VH6R+q9aJw06U8YE/VzbAS+KpZGeP9M7hvUh+Yzy4RN5kOciyT3XgwcJ/l6hH0dT8IvgYAYZMc6+2iGeRRUGTejX7LnZCV7De8IudzdyA3z6SBv+hb6M28FKuOHzA+7Lwhq88B+g/wAV5Kd8QwuDCdInFiJx5snyGf4tDQNVMHDwghYhx82R+0iIEkjM9fEvoRprNvTgJtjS7k9djpusv2kBSSFCHD1tlNZypvhFYZEaXI/mg+brPU6BbeTgOWm3kTlWoZbt3g1FSwEo3pvAJLy4Fj9U7wn2tc6iVpvjUFfUJQRNS/5E5EkSEhzPA9ld8IDsdmeYbKW6jeu4V9RLi/ZCj4dmsoUchSaq3TihG+RUCE+g2fkdCv3RaD9Iqlkd0UOa9OACjZkLwED9FbrN/gAijilfJ2aa15V12hl3mKxXmv0vMy2gTfY6hkb9vaLv08Z5R8O+viJ+vvkflCvvAI2sufNp/23gJP4Cki1invi1BB+hi3p3ZVRCUTxR/AcI9M55jYA8W7akH/FA3wR2oEu3qhLgI1NsWq7ecNS05hZsBgupIvbtveupLO6HrOPhhZFxwXWojL8c2g4JgYOd2Uq4+njmQNqWFrmWSznh7bqjfQ60KxsaWoxOp1/Y42eXKqOLcDPIlW/3pMvbkYbcfSGtCh6E/ZQtuoK9fn3KSFT7jkf/UrYFJsED9mF3BBYGi3sHce/hi4zH8GWnnYyCaawO0AuGG3rxyXCbWBI+KE5HY73DErXuJiJ1Vo9yUT4FXKFOgt3gEHokeKxfn2jvgiXYpZKSrXyJ+YHds+N16+AuWCLo/bMU9vBeHBiOpVJye/iZfSdeIx8hl3LuoIXem/nLwcukVXC3lABdU560DwZKBD95GxoLnPQOKisCS+XvWwHLlPzsg65+mSGP4IDvuXoIKwWdghb1CFzsvlF7GyHyq3ynQIV0Igs5N+SR0gN1+V8ZAHhY+ce70phAh1ln7eOCFP4b/Dd7hE9TP4LISSQYbRp2vn48eCcrs/BVjrZdDvzvnotvMAZlBhwXXwSTFSqvadAVBwx76V8YKxpkhU0iQ4r3xob4H0o39RuriL36l96a0EdTIcHpGPxsO8BT4/nLbYhK2EcQas1F19utLY3Z4wxB5SpnH2gU38DHCMOXWMuMUvoqu60lrBXbKfwPVmzXRn4VudV3OUkvNVZx7hiq0GZAQfwUb5QxYGfxWb+mvGb1sCmWYXy38o46z+9BndZL7Ka/gg4oeYZya6rzGqeI+9I660ScokcZxir35NptgMsRuz1cBdIk/fSVYw7BwVXo/nBr6W7YGmg05iqYvA9voznOdPdV+kSo86byvRxT+kv+HOs5SSe+QHbgY7qRmiBwbQJwv5YpzmFM7rncafJOuZQdoSLojX0OFK8r8I5yg0w8vNX6DPR2d6v9CMwH3Upim+yeAfK1fe3pcJ9TguOKjOMklYoLs6eJTxISu1VpMCXLlWYrHXVGcR+p0iXzN3KJ65UEonEcSM3AdWLO00J7entQC+QuPKTdgI0q2e0qeR18W32nLK0tcZsQTxVHakE9UKS2klfV4aEoqgkvkz5cIJssOvM/wESspbB"}, {"__id__": "chunk-fbb6a08e7efa53a143d1ec6e69da4819", "__created_at__": 1760495111, "content": "## Encrypted Keys and Paper Wallets\n\nPrivate keys must remain confidential while also remaining available, creating competing security objectives. BIP0038 provides a standard for encrypting private keys with a passphrase, allowing for secure backups and transport between wallets.\n\nBIP0038 takes a private key in WIF format and a passphrase, using the Advanced Encryption Standard (AES) to produce an encrypted key starting with the prefix '6P'. This encrypted key requires the passphrase to be decrypted back to a usable WIF format. Many wallet applications recognize and prompt for the passphrase when importing such keys.\n\n```javascript\n// Example of BIP0038 encryption with BITBOX\nbitbox.BitcoinCash.encryptBIP38(\n  \"L1phBREbhL4vb1uHHHCAse8bdGE5c7ic2PFjRxMawLzQCsiFVbvu\",\n  \"9GKVkabAHBMyAf\"\n);\n// Returns: 6PYU2fDHRVF2194gKDGkbFbeu4mFgkWtVvg2RPd2Sp6KmZx3RCHFpgBB2G\n```\n\nPaper wallets are private keys printed on paper, often with the corresponding address for convenience. They provide an effective cold storage solution by keeping keys offline and physically secure. Paper wallets can be generated using client-side tools and stored in secure locations like safes. Simple paper wallets include just the printed address and private key, while more sophisticated designs add features like holographic seals or tamper-evident materials.", "full_doc_id": "doc-fbb6a08e7efa53a143d1ec6e69da4819", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_11.md", "vector": "eJwFwQlUFGUAAGC1J6AlrgrItTvHzvH/M7MaapFFhheeaCoqHU+hvIqSAjPpoYZhqM8Enqgce8zszD/7/zOzGmJ2KN6aJL7qFRqVeURZWWglFanR9z3MfKC4m4fb030+J6hvgy8wPG1bX4tx9aPIcv645z+wDw+GpWE/RpGj1mGd9x0QZnNFmmLXMAPdqWRufYeuWiucW+L7aaYxMyFPGivNZ8eHropnhZOgeNOXSrnzM7huxsKt9DvKJSaVu4TKwlZTSBns60XblJPgTuhNeyNcXMtEw2wDmywuwl4hn16k51jnQVT5RmwjPnlfWsgXi0VzZQPQJSUmvUcv874EqvF1XwedQ/XHMHA/TnJeHX6tXvR08k16bfoNdx83LpIB1qJMtT9/hPm9MR7vB3uVsDmZiNDF2+AgOGe7zIhXIKqwnT+IBd4NW+GG3YVJPWIwPMWTLbTpWWadf52zJ2Sj/bhSONSYy34O45Qc9enILvlF9U++zDdGyXGXRm8qvWSOnSj6gCIcl3rsx+mzWKDXiWnafPEfnK/MMlZSP5A2uBnMRcvoqOByPtRzbJ3K9ix18vEAG5ijwOXwy3Aj2Uia6GQ6w1WMsEzjIF/dkAnjYSq+hw9zM1jTGBSsxd2hVjoT5rnOpZyl/B6Bq3GK1A3Waq7MGhM9L+wMfoefBwcZW16iLhA/BvWwJDIG7rFelV4hd5xHAh1wR2PJkKt8YRKrJ5M+dkK43N1oPOtZRTQx3olFtehrMhrG8cQ7RdFhoabBWHcfXslhbFk3xHLiJSLOIy7zvPSvu028K9wxzoF4cb1Os1tQBihRXNocfwWiaBPMVIrgxPTHUJDbjraA+cIxcw0STBdYET3Cy+wx0CBTQcKF2Q1ghJ0nQakztJCbRlSn0FsCUgTWrnFauEniMGNF0hmpctQNNMFIsJu1E8Y+PZMMg/0k24p4/1T34JQ97aFZXsT94NmY2Cof4HuVF/F04Ru/CaaaSw1OW2Y9YW3ne8TrXCd5yCkI9xizKRx60mpNbNdavRZ5ZpfmOSD+Bo5TE5GGa0EPGEcdSq/Rhjbs0H4hFfjxhIawSyoWZ2l3IpxSiavY90AL8aHd1Fo+W7H10/QIfz44J9+vzeU7uM9gstTCpwve6DNgq3TK055cylT6b6JEO1EY4IvzrXMAriIHxXcVH5xm7kyYJ67hrFCRcslTLr2kbUL3tNXSas6FqnnW7g708xfUJ/B/qYWwUZpkFWhjG7qoh/R56nB0hv8M/SjHAEpdgHx1Lv4yCHsLjMvBh3GLlKF8Iq0CF4zTdpE3D26nYzkT9IKY5OXCZqUYLyY3nT4crVlIPEZXQgVXIlfi1f6pRNHdRpzaZZQy08zv8XoxmP4dLoBLArOYbGFSZFfgW/YDY5O1W265r5/0h2e0tsPIhkmyx3kOxDS5rLF7NTAIscZ6LRe+gX81VT3LaAo/Bo+DrfJkeEG6i3uZq+YJ9QHwk3oDnamvYKtDr3OnrEeNHaTISQmG1RqpPyg2RuHOwD9kLTMA31JHIgZmmZY5U34hPh8PNQfuDRisPJyD9jh97MjNRq56NbnKKAIfRSTyCTlJpxjNoMkznvqdKJHb9jX2rjVHuh3aia8YnybFKe2RDcIT1hWU67QH7uERcJDxtrdXWWQ2Cw9ISXwav4Z7Td4M/7aekxDIQZQaAwucy6ABJeJ88iAs47pwFbooDDJjghl6oTWDfMG0sBkj36R2oi3aKcUtTqIfxWmBoUI/I9Pf33tE7eY6ueZIn/msZ3o0nosJH6aWc0fRKlTlxIERiAEAHBN5jFFdajwHm0q1Sn5CZGAkif3L+xQ3HmdZp/FX/BV5FVPklJMKT67WzbThBfzF1DqUbh4KvQY6GuPBGLPanBo9oR2ONNPHkEtdyF2z3nIk8V9qCO6muvAMfBtWubPqhrDhhK3KJTARrNH28p3JAC2LDjaw+T8fHpci"}, {"__id__": "chunk-154f384b132c658e79fa24261eaf6078", "__created_at__": 1760495128, "content": "## Vanity Addresses and Specialized Keys\n\nVanity addresses are valid Bitcoin Cash addresses containing human-readable patterns, like \"1Love...\" or \"1Kids...\". Creating these requires generating and testing billions of private keys until one produces an address with the desired pattern. The difficulty increases exponentially with each additional character in the pattern – finding a four-character vanity pattern takes minutes on a desktop PC, while a seven-character pattern could take months.\n\nVanity addresses can enhance security by making addresses more distinctive and memorable, but they're also a double-edged sword. While they make it harder for attackers to substitute their own addresses undetected, they also enable attackers to create addresses resembling legitimate ones. The security benefit comes from forcing attackers to generate longer matching patterns, which becomes prohibitively expensive as length increases.\n\nVanity addresses are no more or less secure cryptographically than random addresses – they're simply more recognizable. However, they do increase the effort required for attackers to create convincing forgeries, as each additional character in the pattern increases the computational work by a factor of 58 (the number of characters in the Base58 alphabet used for Bitcoin Cash addresses).", "full_doc_id": "doc-154f384b132c658e79fa24261eaf6078", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_12.md", "vector": "eJwN0o1bVeUBAHD1kbXBNkm+8V445973Ped9zzlA4MeyGlA9VAv6eHJNprjFk0yUmwO1qTkppjA2YSqkcLnn3nu+z/uec+DhcT7p8gMhUhNmZDWSpUsqpSahpa6tptvvb/i1KRvy6w8M9RaIc53vofNCEj+Xre57Hd/Ch0gtaTIJO+1fylXBk/RX9JR7kFoia2UwOdaDiY1gWDtNNsW/1r+xbxJZCsHj7AS3HXPCI/H7MueDI+hxIUG9P3+J14ze0DPEZ6Cd1xwrZF7iCrSnYl3Sr3G5+kLeKN6uL+/ZgD/tgl4vjvBf5VQaJeoEWh6d636YtEVoYf/gzhGH1Qnpc92X0iA3y9fwrowh7awGpRteBNXATFhPdjirtGK7zaja/2d2d/COGuI2x4pzE91j7Jj5KXPUXpezBueQEm6nsIOscefEh9FBtpY/23rW3gpGbWg0w8/M0ewQV4kG1HX206BNvSsgw1Z6hw4ZRf1r4yE7oXcr+6byGV8Gt/cU2mG1HKxBF/zhvChoMb6Iv4Wh9V2vOGs/LgiX8oI2AqrI9cgMd4VEQI1bw1/1/Oyx3kso0ejS0nJTQb+dFPuZE+Z+ix5ws9I2UBpbyaWAhzsqzVrtcLjJuBj4C/2jMAXT4Q/2lAdkoZDs1mfJMtAy12SkhyPGx0qCNGRm4fPqe+ACn+U2mItpia+fHuw9ILyvvOj7Er2x5zUhoXsvmBFScQd5gK13JhnoLCc0+B5sJ0d0iwWUhdVqgd5vPgpiXGJuBWkQd5Aa80dGs7HvT8sYhakNvMxN84ivYU9YP1ZSoodoXFrqJFsRqpECo1wY0p7iRkG9WYZi2U36vMCpQB2+hgFYKH5j5gud4ih+Ah8x96ndYM7+lYzas5FcjTbT0kA9SUOfgNvddYF8eVt3nuJnBa9TuIibyCr+pD5KNma/IhR13THW977KisGLPIy3g/kS1BrDJ9xJrRYs8D6hFfwqHKGyfhimL1jG38vtgjLKZuv9b0sr8JT4tHeAmeRGcUx/x1iqt1ltdkhUA+mZv0StXo95BvJ8jbXT7jNft6+Rd3RqP2sehhNMSsppbZ6FmRGxhQwGfk7fj8vwGdN2P+wctjo7QnzMKLAWi2nO6lhcyIdXnDL8NX8CbTIf4wr1UvhTVAn2gX8wX+LSwJLWRUyUjOB/4v8Er8RegJdtL/guM8Tn5j0GLzlnjHb7mDgOHX8BfdbYLdyjdCXU5KdnnpO2kbGelA4Hf4frY+6SDG8IbWfvVUdgiv0iSkBX3dWBRvB88AOuhNzqVoxEWiT9LafNCKu2cczMQMnym+RyV6N/BnzFL4My63f6vYocSdrGLkSzhC4pRt4Gu8SbRDVYd5ystza404G3tJ3OAGohJcoBwx/pVYK+IpJkzbJu2+eZPTLwHGmavsb6mdvOGb3JmIlftzbi4ayP8WV+0d7N6IY4W/gFTUIPK0etKY/L8VlJ+46qLWKFlUceSnXo8/ag/KToF2eDf3PtxghTYR2XG/hHfaXuGMk2xtkbcLH1fXLcSnaqdcvqAAPCSXgpPKAGndncQ06IagvK0Qx1gtfk+2ItTrtT773MTGKHr1ZeSb/NF6tlTDkYjk6iJ7r/aq6wzvFltiT9npNBnTVhnbK0+DbSKK9UX9IiVjP3JCZE5FI9x93ijif/hhK8wrksrBNDXiinGKVKlsLyB/PGJMNclKdIJVpV6hiuo6l8wEn0Mtyg+S6+31BJH56gmcocMEh/Ym5iPwePBLNsjGwbZe8RSpVbdpHwUfC5/3/74YI+5lv/OuM6XUsH2FGvE8wLpIFxpFMif+QOCDeN02iJuDCYa642p9DdYv78ncmzubXG78wp/lsQ4WHGVmsraQ4PSuuNv8cP0fTIKfBfeEN/EKX4VprFPl/0bqFB2QKirxbajbTUHKGD8rRSZFRH91rnnOeC95BqrU684G12vkgqymySHucrgx/kY8SgqPwvmMTXkkqvNVbl/g+GPquU"}, {"__id__": "chunk-d7c5331744cd6aceba3f3802a68080aa", "__created_at__": 1760495143, "content": "## Fundamentals of Bitcoin Cash Ownership\n\nOwnership in Bitcoin Cash is established through digital keys, addresses, and signatures. Keys are not stored on the Bitcoin Cash network but are maintained by users in a file or database called a wallet. These keys are independent of the Bitcoin Cash protocol and can be generated without an internet connection or access to the blockchain.\n\nEvery Bitcoin Cash transaction requires a valid signature generated with private keys, making those keys the control mechanism for funds. Keys come in pairs: a private key (secret) and a public key (shareable). The private key is similar to a PIN or signature on a check, while the public key functions like a bank account number. In most Bitcoin Cash transactions, these keys remain behind the scenes, managed by wallet software.\n\nThe recipient's public key is represented by its digital fingerprint – a Bitcoin Cash address – which functions like a beneficiary name on a check. While Bitcoin Cash addresses typically correspond to public keys, they can also represent scripts, making transaction destinations flexible. The Bitcoin Cash address is what users see and share to receive funds.", "full_doc_id": "doc-d7c5331744cd6aceba3f3802a68080aa", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_2.md", "vector": "eJwN0vtXFXUCAHDoynXzCggZz3vvzJ35zsz3OzMXa7VO0UtRQ0kTl0gxKlTM47EVinI1TXF1PcaSq2jIhfuaud/vfOdxL8FpQdcssXzUsWSVjo/0tL3UI3koW7PSNba/4PPLp0nIDBb2bjEPq9etAqEfOUwraU5egUOgw6iR28K/asVeVv1YlTqPGHc6J40GdXL3WDQRC5qLHGZD0WbUw5xxfE4ramBywmt8MwRB1i2oDfAfw3xpgPxDLdQRGEN/RA/Bx9VmME8OS4001w6VzFA/9eUp/5GfiJzzr5dd4CoVZReUpMHoIuF7ciF/wNon/M93BE4yjge746+oNqubiJ4Qrwa38o+yu2B2MM3eBT3si3KZWWHvN99yTnHrwFKwDW4mq+Hz3ibxmsVEi2PfsN8E5oxXYU8inc9AVfYfcBnYKQxxk8AQ/auZy67lv4q1SL14rzFbXQIP4Ae1D30FifNcLu82J1ihorRUdPsozbDaGYc7A93a7MCCQC2+2u4xr4f3BcdDxH5iviuHTdJdAdNhnhyVJa1KrE86Ha0iKh6WvLxH9VtX2DonBpfC4+Ig1yi+aGzEbybnMjvAz9a6xEH6mlMZuOXzK8+bV0lD7JnEFO9tPCV4IT4NzOz4uzBH6TAeSdVrdUzD7m4uZB2N54YOCHq4BrQJMDqRnZ7cLJwmPvGsXZhqhDHjb/oN4I9dkhcKa/wXw0slmamH/6LHYJXRaNMth8Et/R18H3wyHMx8m/yFqyIHjfLopa5y4xg6StPtX61ttsm/4R/0f8XvRtMSQ2ixf7WzSrLJt8lNItbmOxXW3o6DRWOVd8i5wIT2XH2lfJmt6MoRvLhYWKEugzLaSlYoAJUhN9zBl2lvgjvxfUISf7j79XiZM12sTrnQCMuCZ7mjVi/+jawouEgOqCF2nJUmvGc969zl+0CpiutGSTJfzBdKQJ7vijzuHs1aRI45AyQ72u+8hM+C/uxT+LpTmSgj67M8cESYBke0BUXTkAsuUadaWxOzA7PkZm0kWskspGFtCZzfOeJfgF+13fpzwK0E8WDkg86p4E9dM9k7EpM5j7IUdenEOol7I5nKmkQtWIJbRRG9Z6rO45Fr+LHAwuBvXVl2AnmsHrEKbsJ1Whik0A3YRPbL5bQOxkSe2xZOCaNyOZDg1EipOUk49Pv6E4l7sMuo7zDsuWyN+p06akWtHEvhs9W4eIuuxHJ+nRQT94hcLlR7Ip9FjphMcKeRLS6Sq52v+eXwEXOjqAY+R31KNT7kC8ARfX/AMIrYlbjt7pPwslBa8JqeiNTiLDi66316pbMC98F++Z9yOxNPtTl/pgHkkZqEnegO+Rz5LlCvjHMiJL27Jjmzc16y1beBMtp64bBdcbfbyrcdYQwuNT7aslNrJ0+RYuO/1mMKAlP56TJj1vAR7CIF9Hu0kc2RR+UvtPhbL6PCwF1OJnjJexFv7x4Sf9E3kqrtL6B8OyPZC2/TDINRmhRHvl/8AW1N9hFi3eBWgflsQeKysyG0Ln4I4UQtyaJjneNCC7sskBEC9CxuDNfRa+K5oi/1Gt9ukIkL8wbQHzWXHYn8nPJYN1gvU01mmDw3T/xBSmd/iU8RTrPbzO0JTRqmu+AqIygtJ23m+3icuFjbEcqSeiibs4msFZvNs9y7yTp7r/VC3nmaATn7VdCiTk41yFvQvTDNPK7b6tPyTbs3mIta8Bt6FLjNC2KJnem4kp9pIVDr+OlyOa/4Za7EOG/cppfC/d40QCdU2hmFx0QdrY2soGe0OLzJnjJLw37vMM/w7dbDdh/+tHsMsyzs5qSuSeE67t/2vWqq5SMyLByFfbE8ekoqV3Y4bxvDouRc1APyrOIDvwub7Q1GJfhJHo85Oj75ipOJT0QWm4CPQ4AlPGh2eN3GZWmuxsYXJTMpdfYE5tEi/vREw+43r4v3ix7/TUG1nzMfKBzqmAUzyDp+n7JaaEEPe4fEalBiu5xRq9T8P43ejKM="}, {"__id__": "chunk-49d0bf99ad94c73c17b05a6bc2e2b6a4", "__created_at__": 1760495158, "content": "## Public Key Cryptography and Mathematical Foundations\n\nPublic key cryptography relies on mathematical functions that are easy to calculate in one direction but practically infeasible to reverse. Bitcoin Cash uses elliptic curve multiplication for its cryptographic foundation, which enables the creation of secure digital signatures and keys.\n\nIn this system, a key pair consists of a private key and a public key derived from it. When spending Bitcoin Cash, the owner presents their public key and a signature created from their private key. The signature can be validated against the public key without revealing the private key itself, allowing network participants to verify transaction validity.\n\nKey pairs are typically stored together for convenience, though technically only the private key needs to be stored since the public key can be calculated from it. The relationship between private keys, public keys, and Bitcoin Cash addresses follows a clear progression: private key (k) → elliptic curve multiplication → public key (K) → cryptographic hash function → Bitcoin Cash address (A).", "full_doc_id": "doc-49d0bf99ad94c73c17b05a6bc2e2b6a4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_3.md", "vector": "eJwNzXtUVGUCAHDUUFpXgxUYGGeYuY/v3vvdB7Jhoq5oShu5tiWbmq3P9ZGgDFvrCczW9jQY+WgR5DnMZbzv77t37gCtHNBWbSXQk5m6nbIidU/bbnHQNSt8JIbbv79/fi3Ecan+rT2Yll5wvmfepiu174N/dK/BeXC/U0o+1fi6QoKLzC/h8+Ym1It/a8d5xdnNDapvWcdbTsewmc7Paz/ZOcONc+FACVGYdYtJEdO0+mkh9jGwzl9KNPMncQgUZCaLBb5KPgF3wDbtzdYyfFzyShe1GjAgjBzMVRjojVXgDWyvt0goRH3ghlISfMB9BWIwB4q4W9qnFYn9vrv2QuVR9Wux3jiMdW5UnOpsCS6meZiHoHXWCjiiMZnQmo8EJ1onmXvkBabL7qN2OVVtSzNNZsgzjPPBx3CCk+cUwy5fd+zVn6aVaANj61GmgDtgeaY/y/uEFeg9ZS0NFeBp0EeNLebc6QgXockoOT6BTSGOsmG/HKny3VQU/p5ZQn8pZfJ3msvaQzCGn+7wwGq4NbAUTrNHHqo1GTlMHaX2ML5oqpRi/y6Q7ozwHlgsv8yksdP0HrzA3dB0gnk2cVaRtU5LoCKND4mX9QwUIWf5h/yhyO9zn0R76VoZZCREQd/s3IsG2WZ1Slu5s8LAYIgjY0eIc2pn5ljgmvsAdyw+jh22l7jDYBfZr1Ry6w9EufLWJDAju0R435gtPGqFWFpvMNYadT/5JGsbsVNNo6txD1VrUS1j2WnUoDIM86xK3ITKLK+6RD1PTCZqhI/A0/w3SkfiIJyaXeQmeRqsUdRnL5RJfy03OzsVXPHPbM7kXg3+LxqhZTxEbBM/b73NB+zLsIk7z9/mCmlDXkPkmCnsP7RRfWrQY3PazMRKLkz2spNZgD5Am511ar07SXqQv4rvgjV2X0JgckWKetB4yd3z8yJyGbFBLxWrJclOlqvdOcYz1ML4oNlPDhsuOoHr0SnjOYoMjGWsZVfQpwMR/i90IVdnfEjmUoNMvfoBqm6agk8rq/gnvF3kGyadeJ8sU89y69EWcxNTop2Pzie/TA1TL3OT+Hol37awDg4Ih/WvMzrMc4eW+ZtxX+KRQ2dwrf4HfkTnnWPiKndHVlkgy6jBn4IXWQxfsKJwfFuMvcRNIfbXQzlfus88yRVOr4gv5aPiINOPVx+KGd3qXKvRvsHXSDvjNC7DISZJrCSWOGsVH8fTIrFX3M6+Lm6iuOhC/JqYBfapf4e/SvzaX8cVY93/pnkO3hGy0A/0OiDo5TSDu1tuasvURYGbbAExgHusZFPjXd9c9LP2H62pogdyUpIvM7HcvUQuok+A3xDT+DWwuP1hOiw8jj/xViV67Er/iDMuMkTfjrwIqu3F2jX0MHpOtThZHYjUGHPVFqLcOOr8h1+e7WUqfKudf/9itj4JZaIPYRu4w41x15VZ3GJwlq52rlOnmDp9V8dT/k3aRSu1kRa+QmfQXrUKkd5OvoYez3/GXRGK0Y325sgtqhOuDwI7ZIdabzfUAQm/Y1+2rsQfZ78hNjMvkQPmjRg091vvgK34v/hPTfezKrSJgQq+KWejObs1HC9VJeYWc93uko8RBfS/mC+omUYDNz+Yph/MuE+edwr51WiC/HZ8gRHCYbXaWcU0+pK0k+af6S7g4naYHPdFm522nCy8W8yLP8Ep4lUnD2bD64DE24hLYphmbUcQ4Jm6Uznp/ha8nU9xVzt/tWfIs9gk+whGnNf+zjxuHbZz7Dd8F4LPpHfIfzO+knPgKLXFPoTn+9qnXyCfx13t86g54PL+MbsUjY/1JaJgTZNMzYD9+F3PFYuQDgS7iSDfQW30lVgsfRSGrAxzO/Mjeg+rbL4WoHcjOt6IXgnmi/vwHux3P7OrYo+YV62dsV72C6IIpRsS/272dv9Ge2J2r7PSXhTv0e+a3yoDzEbnO3uvwPrX6QdBqf2JNY5eEBwGO4j59PLcS9R6vlzdClJBjftPpxRvM/4P5DKbQw=="}, {"__id__": "chunk-84e5c53f381b55df824d124c25d75698", "__created_at__": 1760495353, "content": "## Private and Public Keys\n\nA private key is simply a random number that serves as the root of user control over Bitcoin Cash funds. It's used to create signatures needed to spend bitcoins and must remain secret and backed up safely. Loss of a private key means permanent loss of associated funds.\n\nGenerating a private key requires finding a secure source of entropy (randomness). Bitcoin Cash keys are essentially random numbers between 1 and n-1, where n is a constant (approximately 1.158 × 10^77) defined by the elliptic curve used in Bitcoin Cash. This is typically achieved by feeding random bits into the SHA256 hash algorithm to produce a 256-bit number.\n\nThe public key is calculated from the private key using elliptic curve multiplication: K = k × G, where k is the private key, G is a generator point, and K is the resulting public key. This operation is one-way – calculating k from K (known as finding the discrete logarithm) is computationally infeasible, requiring a brute-force search of all possible values.", "full_doc_id": "doc-84e5c53f381b55df824d124c25d75698", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_4.md", "vector": "eJwFwXtQFGUAAPBUQjRJbHh53GPf++23e2oZkNF4ZoGhiEZjzWSYAqmV4GRlof5Bvk1J0QThDm9v99vd79vdI5AGFO3FlKRYlg8azExSx6DIzN7G2O83xbMpeLkt26lUSu0Arwm9TKr3L/treNj7vN0iVqoV9e3eF/gdEm2MJdOjTrRLWUkEMIwKqC61w+SNz4Sa9CUtlDtRWJxaKqwL50bGKufYfFPxtYnvsWniCmWE5Etl+y8ql8KFkOM3sw1IVzvr24MpMkKPiUlyYfPO2BXYF12EW8XzvlHwkvGD4TMSvDvtKribbpVO4/bgm3yrMkvdYTORBnVXkNHvRXvhEflhwkgb/Delw9Y1fEN/2ynWnz3wbeOpgB/X0oRbL24kZ/jNVob6GjsB3BI+Ih3SRNhgP2L9INZRM6lJyjQrRW3lp6IpkbWgz3zR/5jkyl8bFwJ3uNeYR/lRgU9Qm7rGPEOmmYtxpbuSmyZ0+6fyiF6tHdWuS/s4OfPzoAQP8BnmdCXJeqRlC5wPNK8Ajlk3MzW0MnqbM7jb4KEsCnaiDcAkF5XT3JD+iz+fm2/5si45VXT3hOr4VBxD2/B0sCoWkmxjqcUn1YZv609mJSrdOoAF4SNcujKiLyS4oVTqmTwUA/a/1MLMfNiaPmpyF1Xo+ZJ5Mn6HfpD4eQ9JbFkOXqJWWCHh98A2aRI66i3iloir1WUSse8GKTho5/lYuCx61tjMb+P61GOkWKT0GdaHHGXUxkqkQXIRJ6kJ6GhzcnguHeWa5F5hnLJn96CTCW8jzj2onzRtPBp/TGWbMwHFOFobrVAQdKQNNOWAUKycPQRv0f/AX/UlYAzIg+1gllqbWcL/qp7kX/H14OeY8SQkznN/lNZSTwg5bC/uUzeQivsS3TQ4LB7H90mW/Xe8ViiQlkTWWM/ES/yOuJ/Z5e+Wng+OIwpe7gyYW5kSZ8AaE3iKu6Zz7hbcpb9ODYiPm1/R70dm+6rgBJQgX8XD7AtZ/ewiw4MH9xxXWUOGyZ6hyDoUjd8fSIrOAef1Sny5fk19KWpgazyhfbNBGpegDjnf6RXi53KOcZyNZ3bQvzAFuDGeGhuvF6s5ygMRB8fgNTIU+wpMNf22DJbyVfAmqpCyvbfAOXEKmmJ0HZDlWbwjhMQtboXSLZ8TU96tY/Nii71XSBKuVl5VCt0RVG7KTImiwk6SgPoBBAti6bLSpCkpdaL5n3ZG+Znfmoa5+e5d1Bq+s/ElMa95u8wqHdjwlNJCZo1Wg+7mP0Uj6hzpIeFG/Tdmm7bV9Mgh2sI3TcNYD/sUXnk7fIzUucnMb4LtH+ZmS+lKGuptbASXnRKU23LCaQv47AZ6nFhOXRd2WzlUBfnW/ESfK36gZTRU4xFymboHL7P3SjpqZ0PUWScJn0WJsVR7uvxT88egH+4MrGYKqAgotWduV8KrrcqWjWCBkajF0xNBGL+B65vC+FhDNcgW/pFrYSLstwebLlg9sU74n/oy3kBcTpqsg05cTr4wB0g/F8oisEg8bLRFy+sL7TLv06TM+p5LiB7Cz0ROAEq/33XMje5zZg+TwdbiN9VVyav8KZEqZgZ7hXv14CbraasVMiYnGfqhSUV2jbqA1Hh+NJdKS+lzqIwok8dJKwgN3sNf7Ntn9zDLnWJl0CJgbfB990X+BFBBmtUt1AeLhLnOMuGKpGr7jQ8phOpkPx5ved2z/nVwq33eypdTzN1ZteYtfJWIvjLhiDfZOIlu8BicBhr6zVyvPhDIbj6JrYiHO7D3d3SCQGuXEYk73FWj2H8VjHe7aWj8JE1k9tNd8iVxp9Fr/inukUbruakzhDM4l1Ag76C3aY75szPN+iMrJTgGD+Ij2DGeiNVEH9cu8PPAU+FNloCGQRG3CTCE0KfsmajUTk9/52BzZrWQay9yRite73cog73obCR32CrxLd7M0vhXgjv8s+B1jWUXiqdIwP3eqKH+B/gMnrw="}, {"__id__": "chunk-cc9829a558a5db5b95d195a5ec55a730", "__created_at__": 1760495353, "content": "## Elliptic Curve Cryptography\n\nBitcoin Cash uses a specific elliptic curve called secp256k1, defined by the equation y² = (x³ + 7) mod p, where p is a large prime number (2^256 – 2^32 – 2^9 – 2^8 – 2^7 – 2^6 – 2^4 – 1). This curve is defined over a finite field of prime order instead of real numbers, appearing as a pattern of dots in two dimensions.\n\nPoints on the elliptic curve have special properties that make them useful for cryptography. In elliptic curve math, there's a \"point at infinity\" (similar to zero in addition) and an addition operator with properties resembling traditional addition. Given two points P1 and P2 on the curve, their sum P3 = P1 + P2 is found by drawing a line between them, finding where it intersects the curve, and reflecting that point across the x-axis.\n\nMultiplication is defined as repeated addition. For a point P and an integer k, the product kP equals P added to itself k times. This operation is computationally efficient in one direction but extremely difficult to reverse, forming the basis of elliptic curve cryptography's security.", "full_doc_id": "doc-cc9829a558a5db5b95d195a5ec55a730", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_5.md", "vector": "eJwFwQtUFdUCAFDM0mcoKMZHuBfmc2bmzOdmRSqVZmXdpZhGKyOtVFLj5Q/NFmkomloIvSfKk5/Xe2E+58ycMzNXlhplaZlZflrxXJkG5S9MF4ZGalBpqe2dAkbcu3ZnEjFHhsmnMFHcCTC/K75BWaAd9ZZH0vBa+wKXAc4IXqTIPouXY0d9zLgOPkBp+LpxljuGoQBhQst+f5y8Wr3FTpLj0ga4uqbL+FuZGpyjTINDFezPFU4BqG5zNsPFsDOrJzJb248XaC9pifg/cIeyKtBlyOJu5LtX4UQ6FezD9U1LG22+3s/n3oU3QDnNU1PTn9KK6m/bluGiSu1mbKD5E2MphnuX3spG6p90Zgf/xJvxPXgZE+Z2KS0oM3BFSuYL6AscJkHnO3GWejqToYz8iDwS9XO/5XrhGW698gp601rCNDhdfFgOoCQuXV6vrSG3US/4nkPsV+iY+R4qtCe5PfrT1hSvFEWjedwufgvuji618hWvtkI6pwmwf3aZMUQtRct8F3wlnKiuBveRxlhhpMReIgUDKdwKel2bQWbqFfZ+9UOpGKWaHeCI09E80K+xBoA2/87oUbM+elPuM3+VL9nXSZ+AuW69F4/SGq134EAndVgoZKAl21YZr1m9sQvGH+6X2f3FT9SbtZvYcjxROBlF7oimAf5DTDd+2MuV3zb92OTUY3haaMZWIEalZyWOPimF3QpmGTkZ7XUelwenl1h7hP/L0+U7vB3WfuMV5sucypxMsFe+SVfYV9A8J9kaan6e8RBKUhr4Uq3/5gnb71CCkTWkEA1AeW6q38eNjyart6VMlhGvobulNcZB8Q82bNrc7yq22qWTtEZ24HDZUcMQ2hr8CW2Xs4wCslI8qL8cG+z3wha2TRK0krr5TjFt3zbXWS6PkWvpi7DWX+vuhceUg1yI3O3dGSkbuhKoZpU8SpmAZ1sZ8cv4CRBxFyE9OI59wf7R3o7VjbkwnZ+vt7EJUhrulR8Eg3KSyFBYgCJ8Dvadj2LfolajXGsBqKnYxC21XCH6EGQTPhoWT9B5FqO/KnbZX4Cz7LrqA7gfTYYsFO1ykIuT7b+G1KOZ8UucTJ4ne4VaYw+tCl1x46BAPGwWU1/Mkvtrt4wUsMfKE2aAVVnfoBQnUV4QPCWudv7nvwbnauvBcew1v5hZLBAmj/6utmrLvf9aV3G5+g4szWl3s7PGqj3crxmKVgT/Hcqy72JWZMySF8GrkffhF/HvoQ23m0V8hMTgHi3fO8VmQFvv42rwiWhC9nn7sDSHy0Hp5JB1FCfJvWYZPmd/QF1FgRu0PGe+mxPXxETxUXi/sEb8AbbbOjdI0Z1LwklPx4OMyV5r4yl5ibFFzHUq0W6rinJoA6xA6SifIK6He4ZMiDOhdrpXfKM525+88Xm9wRjYNAZO1iphB7xmXBTHwenwZ5zJFcB7nMJ4Kui03zRO24j/zRiN2kgdtmMvByrq+uB6mZE+onOYbjYu6PIgtoLUOIe4qpQEq8Mu0C+6h71P+E6xVK6GCclnwBE62K6B39EG8mcENI6xJfQZOG/1wwfqUvxvzCPs+7DKCWw8DA6JrcFqMJZOgVejbfRrOlVfRx/Qjludm9LchValOzr4Oj0t/YWWokX2RX4aN8+7AUv8YVtfpc1SLv1UmWnnq8XKLDqq8bhyDk1kLTg8tJNPtheGVoUWcw8OHyd1k6dl1T1LF7or0Uhpi9NBhotzMw7gnw0+/pRXIRwFUTbRKmOTAgekBu5t97JTxAywdotlvqHvi40H2diki43OnLf8BvHjWBccr2yiFDxMdmi/8H+PuCGNSnPQG9HRYkDejYYIXweb0Up7PrxfXASTSSXdR0rEE0otXUAveJebshuSrAvI5BPABGYWbtTz1Cdoz9Y4EYRM/xnikd+sa5F2dF5vJWVkujY25XX2llCJIckXA8JzYjX8l5w1MiyEAUdS4E64Lj7Fq7OX6v8Ayt2wPw=="}, {"__id__": "chunk-b76e95740011949e6039e1c8ca384196", "__created_at__": 1760495578, "content": "## Bitcoin Cash Addresses\n\nBitcoin Cash addresses come in multiple formats, with the most recent being the Cash Address format that typically begins with \"bitcoincash:\" prefix. Legacy Bitcoin Cash addresses begin with the number \"1\" and are derived from public keys through a one-way cryptographic hashing function. These addresses are 25-34 characters long, case-sensitive, and contain a checksum to prevent errors.\n\nTo create a Bitcoin Cash address from a public key, two hash functions are applied sequentially: first SHA256, then RIPEMD160. The resulting 160-bit hash is encoded using Base58Check, which includes version information and a checksum. The formula is:\n\n```\nBitcoin Cash Address = Base58Check(version + RIPEMD160(SHA256(public key)))\n```\n\nThis process ensures addresses are relatively short, contain built-in error-checking, and provide a standardized format for sending and receiving Bitcoin Cash. Addresses abstract away the complex underlying cryptography, making the system more user-friendly while maintaining security.", "full_doc_id": "doc-b76e95740011949e6039e1c8ca384196", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_6.md", "vector": "eJwN0Y1XFVUCAHDzqzIUTEGe8h4z7917596ZebAWpJWBIbgcTRTXRQlOu7qknZSSCtnVrFTK3ISULzHex7yZOzP3zsxDPXV2YzmLZWWi+ZGpaIZ5DnhKO1FZ9mEfu/3+hV8pehtXHbjublVdvglVk12RBuuo164ux9f51+IKVmZfyxqPVqg+7VbWxFd5UXWy0yLmo39ZppgpvWcXBnMDva7fu18OdOZYQ0Y5GQll8KK4KxXhL/AsfDzs8kk6Yh+TFzEgleB+6wrOtKYbd+Vcluen5iuH5QzQHOwl12ilVam8Je1EvwmC9r72jd3v3YOG8HvgXntzOOHUK1vBKvOK2RH4lYzeuydeFetV9rmduEf8Fh/na9ijdLobgvOtUYF8Oce8E2+ODWTtd6dMV9vvhWvjEpaVptjTofPycft773VpJfDph1GOmcdHcDL2avwfcKirOfodmYjcfz7s3E2Kjd0oaazpfJnehLO6CyJnmJvIQynBU0IENoOUtq/36qCRjkfFOTX4jFHIWpRt9t3da8FhUk72kJnm88FNfIEtwvzEMjlDW6+c4v644vVIfgxgnfVn/Kb5XSTpVSfSUKnX21VjPWbNJHVisTLIxIx1sCxRH9pup6j7u3xSq5kWOCb/3ex1lsQD/j/BKnGW/QP9MDQCX85cjPr4rcol3M9e9N/kQtvrLNcbClC6IVEDXxLmhgc6a8QB81n1AL2TXODXhGd4yH7C34O2myn8RnAw6gtetha3V5iq5ktUZEfoQWUpYzbmHY4OUoUSURP2khjKgaXidjc3dGH3J66slrs2q7ZuxHfF18n36WFU5N9HQ9KoUK15Gymh5bBbSZcfkXezQZxHxoEp0DcDJD7DS9gT5BdrbfspsZOvDm30lpGv8AfgBPxkoh1fZ8FgM0/ic6TFmKL0/X7ZBZbD0Yl0uyb5pTA7kheEKE1eFP5l5xAd8Eq0i7GQ57CyYJ0420ph1YF8OiOyRChMlKIOeCSbK/nSZHle6/eBykQted96BX2sLzbXG2GlXrOQlDkmeS69U+hSzlhv8bMJh4l80muNe0A0E74JdbvarRc2hj6Q+q0+aZ/1lD0kPWKuSY5FCTMV9JHV9CU3qB5j0cwTcoietc7LY+Eb8h7t3yhsF8BJqNpaGifSjzgD7MMN0hqqICSPwGPZ5fYt9AYTnUhwgfyUrLqfsv1OETmEP4IpHpw6mpyHs6fOlwvFlepNewQ+zoPkdomjhvBSrxblglw+TNayBkwVwZ0TckkK2wAmdx5qa2XTaB85CG6jD9Nqo9ZulafEN8b/6H9XayOj8AQwXvPzK7xQ3+C/AlZIwzgbL2MdoFZdynz0kueaJ4ykE2n/S0cNVfA39hDQAwf5DmBS0z4iXjXGmJWR/sgFL0991HgItEhj2ECiyGhJVPGFaqUwHUdlMrUVSChGBvk2+E72XczytqFNVrFeYB9Vv6QNXjDrVeNZsynrGhmn9GORvOKUJH6InJQMSYd/cObyN9gMfBHc4jxImb6SR+iOQJmokG46m263e3gGvp72H32VrwJdMudGL0rvxp60/2uXdl8Cf5MmBCdYmvWFtFB4IApArnldvq/rf3YqXR+sZlcVwVcsPeYcYFd1n9XDhuN1WcPC5tafA90g7EwjWnLAnZQ8B71YnnQ2WUIuq0e9SmmmvENeZKwQT4crlE66U12pHuk4pA3gmexzaSEfcM85lenPoSZWYU+DW2LpqYuMF8xWPjLDB15rH9GORxa13x5YTOpplzUR34PuiI7lp3ENnoObonXWAvsk/s1rDJ0AmlCV1cca2xpdojrUyJalXWRL1hbrZ4koTRyzy6COp7B8RbFOkio91VnGSCxDPRAYtLPdo3wOhWYZPa3/VVvNavV37FVqNDKcNoq1jy3nBXy5+zg6qK3rGCcU0B/tElKS1UbnCbHkKfatNGLOU7YKb0NJ8WiXtF57jvxE0ryHnGZ7p/t/cDuZHw=="}, {"__id__": "chunk-bf215d952386100c114fd45a4c03da6a", "__created_at__": 1760495578, "content": "## Encoding Formats and Key Representations\n\nBoth private and public keys can be represented in multiple formats that encode the same underlying information but appear differently. These formats are designed to make keys easier to read and transcribe without introducing errors.\n\nPrivate keys can be represented in plain hexadecimal format (64 hex digits), Wallet Import Format (WIF, starting with \"5\"), or WIF-compressed format (starting with \"K\" or \"L\"). For example, the same private key can be represented as:\n\n```\nHex: 1e99423a4ed27608a15a2616a2b0e9e52ced330ac530edcc32c8ffc6a526aedd\nWIF: 5J3mBbAH58CpQ3Y5RNJpUKPE62SQ5tfcvU2JpbnkeyhfsYB1Jcn\nWIF-compressed: KxFC1jmwwCoACiCAWZ3eXa96mBM6tb3TYzGmf6YwgdGWZgawvrtJ\n```\n\nPublic keys can be uncompressed (520 bits, prefix 04) or compressed (264 bits, prefix 02 or 03). Compressed public keys store only the x-coordinate and a prefix indicating whether y is even (02) or odd (03), reducing storage requirements by nearly 50%. Though derived from the same private key, compressed and uncompressed public keys produce different Bitcoin Cash addresses.", "full_doc_id": "doc-bf215d952386100c114fd45a4c03da6a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_7.md", "vector": "eJwN0f9TFNcBAHBaY43VKijIcbd3t9/3vd29gGi0ISWkDRYUIplRK0EjKrQWPYJWglWxWidOjTjyJUTg4Li9ffvlvd09CEmMQRLUOLGJMTFaI2kZMbXGJHVSpibGcZovzV/w+eGzJOyL3HkRp/zqgNNnN8AMq9satFcpDdTTxv8gFWukt6FsuQTuxX8MHCX32luVJ/QXwINGlvcwOE4h9FVYMxjn714+30RdY3KFUfAxmNk3wR4WimbU9pz4iRPJR0XgSTQJxrtbIyz3tGmzS8Ev+HGlRd5kVIKFShs4Yy+MDM/5jdMEy+BWcB/gjOa4Na/AYeRStVHOIH3q2sQEnIebzWv0B+i6uiN5PCkpbephx6cWc4sjjyY7ySKETOSrjVf0HgVf4DL/uP6lnundBSfwalgTizOV8qvORm47mOYew+uUxP1Iegq2G2/jEemoWxUPMCv1ZbBUKgRn0UiClqJwibBF3E+ySQlYnqpD/3C6jAJYJiwEEcAqGT137Rq5kHuGe+OBYrkNrbKqHviViVJhOMK39IyyBBfxb5obA+v4fHE3+Mr4Fxj1z/MVozQFpZ9B6zvWCEfQg1q1eVWLd4x5HTjuvuLGuOL4PvY9M4wz9SuJ8qwPMzuVQ9gHq7rnS+XCPqfZiQqNTB3/o/037A/QpWAGsCyVu2D+OLSZ3Uu2gaQTFj6x1w8M8638YWdYOucrVUYTV5g0bpfMh0e4HXGFW2mNOj4wrkgYhXvpY3ZleIX1T6PDfBfXv6AapdpPwwu8fKLYWrBKzE4UasXiZTVk7AovRE9YjjBb51OD9HNkvfmF+Rj5uL0B/sX0pDojR2gSb8A9RhF/w+TAiHKcZaWTaMZ9jpRSLsi32vl+hzvX1Ut3xfPIXn2pE1GpgU3hWwDzJ/l7yXbBwFl8nvsQPKswP4jLULczICbh2dBjyVWpWulz48+2kjObnxJ51FrgfuZ8aHxi1pBifJv9VGz35toHQ5Mmk6iWXo1nsjPNBv89OXXwcdXD0Y4KRgKT+GX9QPD95DDpgDvj34tRcsVrNYYCl+GXmRouDr1llrH78DV2BzPO7IND9sPeksxfgwJ4Cn8q+nOKrNe4Wc5Jzy8sNrcFp8GZSeA8DpodWjst/5L0kxVCC5MJN5jDQic3F15Xo6ZfGJJvwmvCblAvV5B50IWr5AJfzLxpbYxXmQlmqdAiP+T+Hl/GOXQkogJIbXDeBnfEWjM9UnVgLFJjlGsH0U71KNhkBMFOTwgF2NPmAqa1ex30q5AEbcix8UIhF5ay3xudRhjeYSeQZrTlVHd/HllHnbPrrblhW/UpCKaDCVxPetGxOcuDbwbekfLEuDlAz1cyzMW4wqM9lxrE263XY9Xta5R3rO8oj7qIKvBIYLu1l4raOc4bADIFXgOgA/fz/eBdq9NcHYrGNLdBOR8qka/qpzWfXSjNoivcsJKrjZDJgc/E9UZezDWb4CCp0bcaX8+61P8Sv1a+pBD5kPxvUiC9bM9ha8F23OLUPXfL91+a9M3Qp/VSeBkWDK9vE/ctqCebtcapxLvI19mPoObY+2DQ2qxPVdbqV0mQdHkH2S2wEi5yW03MpqPdxviBvya2SlG2hMx2V8MenKsc0c4zH5HboXTvP4kskp41vVczuq0h/7hUptUITQ5M+JwBaqpDq+9hWz4TeZ40i7VAZfdo0/QVMFv6Gy6F5fIWlEdP5xeZG2A+WYkn8FyxDQyRb5KT8BGjp3/PD/sX9DF6NyPANPydBKgYdx2siZUk/FRCuqmNabN8MxGtz0fL3Sl6P1ueinaV5VT1ngeNzpJuynsW7qJnxw9BSn626wTOkX4HsslH+BVpkFRqp8HPw03JCm1rKuScMi4qfzDWkj7CSc16dWwP3t8xVbht/uz5XI2AZwLfSkNOpjXfTdOXejP4U9YR4Wt+Cv6tNyZOhnsdSXzLq3GbhC1IA4eDceFPkc3orphmfiMeEnW7h0wnub7/Azmfkkk="}, {"__id__": "chunk-b1b0e067d3aa0512f362dbd9890341ac", "__created_at__": 1760495826, "content": "## Wallet Types and Security\n\nWallets are containers for private keys that come in various forms. The first Bitcoin Cash clients used Type-0 nondeterministic wallets (\"Just a Bunch Of Keys\" or JBOK), which generate random keys with no relationship to each other. These wallets require frequent backups as each key must be preserved separately.\n\nMore advanced are deterministic (seeded) wallets, where all keys derive from a common seed through one-way hash functions. The seed (a random number) combined with other data like index numbers generates private keys. A single backup of the seed is sufficient to recover all derived keys, simplifying wallet backups and migration.\n\nHierarchical Deterministic (HD) wallets (BIP0032/BIP0044) organize keys in a tree structure, with parent keys able to derive sequences of children keys. This adds organizational meaning to key relationships and enables public key derivation without access to private keys. HD wallets are created from a single root seed, often represented as a mnemonic phrase (BIP0039) of 12-24 English words that encode the random seed value.", "full_doc_id": "doc-b1b0e067d3aa0512f362dbd9890341ac", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_8.md", "vector": "eJwN0otTFOcBAPBcMqaoUR6CgnJ3e7vf7vftt3v4PFIbNXZSmPpKxheZRLQSaKDGSHwkjZIYFRgD48VEEOVxd/v89tsHjPhg4kBKRBkdlTYvNYYgMrG21VSsTJzEodj+/obfN6Fozlj7Qa9WBt6KwFY+k9w1be9lgUE+cESZq4SMvzCfoUvcNNpot9JajUilTRCk0b3WgcRWGHPO8jc+4jxKfeLnqbv4x0faG0UxBV6la8EnSMcFgjnzAl2F32w+gX8C78gvHMX8u3rY6LI2yH3yFzQpPMqvBfvI7/Bw1iW3A2/OfMzXZfOh7/mIkmQR8DzKFdPsXvGREMHdsMTikqtCkZzRQG0C8W1iuZciFwd+hk9bb9m3lQ6vGzwX/y0gwYn2JLBOnyxU0D7YqG/NFFkN3Ba7jPn4Ib6sbtSf4Negm/xDcab7X5IXPER7mY3ckOGqVIzier1fmRX0sd38v6yo8TeznN3Tmoueck1awlXHz4G85gg8fjBF7ZJy+Ykin8OJQ/CYfUt0EvdbN0oUFQid8iZtqN5n/gP4xIh/GZ5v9qIoKUvf4f5JzmOS+UVwMYqZU9RBrx+t1844L1nnnYX0uHg9tgBV0rVGrjE71J9+3VwsvUMGoBrDaKbcTji3WuuHU+nyKSYtqBtvPeJeIbK/DXwAF6EUd2Jsvx5hBXLaS8IXjSSjDV6Fz+LhjFK+BC5mtyQw+6mTC0S9yksyknCN+QYtAzXqaWsSPcGvoUlar1UXWkZ49JazXx00GTquqsP/e55CTjiHSmAp4S00LZHweXNAhXnHCdP92VvMX+OT3GXYAX7iukAkXt4yD93VRsEePPmTtOh45x57Er+W86Y4jllgnBHep9HQ+GkLtdLYaucp3O1Uie+iL4M9UqpTqM6n/+ZEb4L0WBqjF2C6M6P1z8KA9BJcoWa0dTLrudfNvVwj8of/QLISHe5k5xKznR4zLyID/2JfS3QrDeZwoIh5MrAJXWQbQI+4BKbKxCoCH/HjJegw+h1yV4+SqYDz+6FPv+V+TEZaajN92Yu8IeH9pqsZZv337K2UaxyErXwJ51MfBPaJ33DJqCjeRwrhBbvKS+j/JJOEDWiw4aBTJhbZDvostMI4ZReDV/VCuVMdgELdVj4ZzWWOc03/X7Ebfiq2NpZ798Q0YOOdRnWgxfSradqAPV06gTl7uZlPPHg6fAf+3WogS3nOv1S4KX1o/Efe0rzNmafmy2VCk/maEPZAbOjos2oG+lVqDYrK6+32KDSfMQ7rh5UhfqaerdbjdP5r8p01oLzQMlUqaD5vP6OPJNbhXeg+ruPO0TWenb6S38XmonkwD6vaqFYrraTV/H23ns5qrvB2KlmHjqFunO8dzR4k680HzRuNruwChqUT7LrQJnWu9y3uTOPAKlRA5phfzfArt+1UeXXiHD4PNx+dlfEFL2V/6eFQA7vEHmsd8W9TKvWTh68Jc7wFZpr60M7Slgb/is+KxWIuHLYbEvecj7ke7DWmWm1kPjfG9bQUWDXksu05bwSXKRukufiCXWzkM3H6RJy1tPh1UMtfcRqNffgG6KSuW9W2x+gI+kClcyOWDINKhP+WGQOHhX2q57bR94QdTaX8K36DGYlXKMNOJtvu/ICennqAVtDdoXr0ix1Cde4PJuumHhp0J0sv0joQDsdop/+IeFEsUbc3RsKbcY27W54t+pqrjdGmGuoXFxLTzfMCmTnSiF3s9rI7lSXssPq2p03fm+Wir/z9ZBzpC30t/UZ4Pf7Iflu9idYI2+gU84zwI/ucEXYLnQ/UP7aO47erjLUDfGdeUV03xr9onmQOQAV3kEoqMmnwim5pp7gJdKXxufCz4mizM1a5q2hAeFK+kui3kLncEkFFRr6T3HxcIBTaP5Lp0nuAQmCXmqvtXOsU6WGmmC+bi6FqVzkJVAn6tAdCob1cb2DIjLMMDMZChvyqsE7qM2tRWbzcet4tIpem/Q+z+J6e"}, {"__id__": "chunk-57c0a15f9e4ce7d2a9afc8ac59359c31", "__created_at__": 1760495826, "content": "## Hierarchical Deterministic Wallets\n\nHD wallets use a child key derivation (CKD) function that combines a parent key (private or public), a 256-bit chain code, and a 32-bit index number to create child keys. The chain code introduces randomness, ensuring that knowing a child key doesn't reveal siblings without the chain code.\n\nThe derivation process works by combining these inputs with HMAC-SHA512, producing a 512-bit hash that's split into two parts: the right 256 bits become the child's chain code, while the left 256 bits are combined with the parent private key to create the child private key. This can be repeated to create a tree of keys of infinite depth.\n\nFor enhanced security, HD wallets can use hardened derivation functions that break the relationship between parent public keys and child chain codes. Hardened keys (denoted with a prime symbol, e.g., m/0') prevent a compromised child key from revealing other keys in the tree. BIP0044 defines a standard HD wallet structure with five levels: purpose (44'), coin type (145' for Bitcoin Cash), account, change, and address index.\n\n```\nm / purpose' / coin_type' / account' / change / address_index\n```\n\nFor example, the third receiving address for the primary Bitcoin Cash account would be at path M/44'/145'/0'/0/2.", "full_doc_id": "doc-57c0a15f9e4ce7d2a9afc8ac59359c31", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch03-keys-addresses-and-wallets/mastering-bitcoin-cash_chapter-3-keys-addresses-and-wallets_9.md", "vector": "eJwFwQtUFWUCAGA5mIaSgHGRx33MnZl/5v/nzoVSWZXMR4iPss1WWpE8nXxEa/hAs7NrykaeY0Goq3K4PLyPmbn/zPzzuCjEEQXNNtgyDEjWZFXWau14sHWhI6xrQbrf56Cbxd5mvukjNGBBWAZFI1mfiDUgP9qX8i5TRr1EnmKfh3O5/eZGaR4p1L70L4+M88hsMG5yDewhax/7juK0fzXGxELPV5EiyaH2C48xd7Qn8W/Yj33rIyf9G81eZvOsfOEIp6M2bpKy2h1jdasEtfvfqT0Pc9kVcLoR4gfCi8xy3xnyCx8XXQwT3DekRdb7aNgnA1XL9c2g1gATfW0GwBt1i8XP8C56GxuPTtsBWAJfhEXqKmtM2mDuokfr91L5cJ8+E2w6EHEU6tPY9aSFughr0prhz7inrprvlH/SLrOT+T+yl3y9sX2RPNhpdgKF8+Mvo6vQKjEeV4aG+UPK+ay6wxU4WbmF4mMX+ZfJAYzVG7Ud/JMZi7j7qXOoZeIdaS+oyO4A5a5BYz5ai+ObPhHOiLP5FqFBuRJcFzTCy2TLdRNV6wVwO76S/sAaFI+AEbATzhb+a1R6AvYUeiF931wZjCP3SFgoUbOYEeIFc6QC19nQvcaj/quh99E/vT4+TVzCzrXLGk/DYf1r8I3xbXiPksT/LbrTmck6PcfQUnNKxmFCue+Rw/b33MfygCJxOdRstNyxFOzir6O3w6/g63goUkn127L6A1eOT0Vb6NPhH8IxfM6bRffUPx9No9rVCX7E7McXyCV8X3XQgB6hbwq7fUEuWzdCc/nyv+w3J2AceVFNMLc1csE7Qo+0Au71TgMvwx/V5VoxKg4/zqUJd9ns1HJrk+tTiMTpvocKUBbDpdqDUDJeEqwKFpFmx5BSL91mDb4PfEqKYVCFarH5CL2FBkiAbjROxNLhA1QCn3V+0NSa/qzSpW/UjniG0G51gdxqVuGcBsG8rAXZQmFQTyVT8Sg+if5Uy7g8/DJpmBtET3Nz0Y3IOnc3rBWe0D6I2ORb5ZKa5L4m5zCvyQVWtVrB3oIzlGRjA8hITXRfd57A291TfBaguO6jJZlljVj46cQMWOXapZeC88Ype239j9rWyOvgD3grmSzOM47DQlexvsP6nM9WmoV1bJr3rnaDexVOU2r4CjbI/46uhWM1DfZO4QkwWUjRnsqi9WNKlTJglojrUdj4e3RBqBT81d/l+cLqs/7HT3eeoEKIgxv8H2qQpOvZvjc9E3obj2PrFTHYriaiq1oHupVTpm+q94UF3HbsbamITqirmXUcvCaPRJ/R8qRu7V1hwFVp/f74VOkQk8+tE/bAJHNS7CDdxsZxDLcWKjynFKo1KIBHfWPWm8ZqBdstzg64Jf1peFbfjF+Xz4W6cU7m/AzKcw5X6w7PW2ynzaKg6yB4FZWa4/gQ+Ld6krjFmayMPkfzG6e6qsG51NZYK1rpqJECTUkzRuvvUiBrnO0gxfK4+pCUJ5a7y9EcXx98DIbMISVBHRZGUR67lFyVUljg5SP9+n1PkVprDTrz3DuE7YKox5y/ZUq1QdwT7VNt/hSfZB11WvBAI2Mctj6JxdMZ8E61aR0N9fJr1IUwSD9kvSggnzHGyGWmOjjka+X62C7HGv1xwjK/2PmgyduHHxm0J0H8xvozyiUe/bgRAi/YnwkrbZ8vJXue8S/qV+hEIdIJSv0/w7PGCvEi3Iq3JX6ROm4OgXR1uq2TtilVAKrVZHdmgZ6inE+Ot1MChBniJqgGuUy7kHUbVAmPtIWkO3qdrwNdZjv7HB5irsnvGU57ZpQ7WUCXaD24huvC6Ym15CAqMGPMd/R+VClfoZPhNbREbs+4LU3WeJJEb5byw7nSLDPPeIGPwEc113Br2h7ySjgzebWxheSyceQ9lSLPoCSmwnuZHCFY/4fujPWmLdADZAvfb3xnXoAedn9kA9dCLiiKugNNYl5ib3k92TL1H+Fi9Hu0xjtbA8SylqT9H5/YpeA="}, {"__id__": "chunk-bcfd4599debaee55fa172c9d80eb0a1c", "__created_at__": 1760495790, "content": "# Transaction Fundamentals\n\nTransactions are the core of the Bitcoin Cash system. They encode value transfers between participants in the network. Each transaction becomes a public entry in Bitcoin Cash's blockchain, which functions as a global double-entry bookkeeping ledger.\n\nA transaction's lifecycle begins with creation (origination), followed by signing with one or more digital signatures that authorize spending the funds. The transaction is then broadcast to the Bitcoin Cash network, where nodes validate and propagate it until it reaches most nodes. Eventually, a mining node verifies it and includes it in a block. Once recorded and confirmed by subsequent blocks, the transaction becomes permanent, and the funds allocated to new owners can be spent in future transactions.", "full_doc_id": "doc-bcfd4599debaee55fa172c9d80eb0a1c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_1.md", "vector": "eJwNzo1TFFUAAPC0K800FDwE7o7bu3tv973d46wJU/vSBkxGc2qS7FOj0MwQc6zUDBVJTUuJVODgOG53773d9/aWHBOV0BCNjCZLQfK7UjAyKTM1TM2Z+v0Fv8lKb+jVbRMZCRXZO/Ex0K3vMKsTQvAI6jIc0En7EwCEUHlwnTaBXGEeNi94MOEQD6nQUsyI3BvPlVLBdjvEjqMRnlk1YeuaOsb7Fe/mTSgiq1l3c5d4XesVnPQL/6CQHjyIxkgt+BgttgtDF5VH4Vl0Ek/kC/XHlBRwf/SFIPTPD68WnkcLtFXeZvLSyDnCVu0E7w6uioyV28TJ1kjD6ZmZVQiGO9/CGs62vb5D6iW8yVprmqzZguh82ivYwLeMGLjDv1y8kze7JlIMbsJmZ4GSJt4ed+J5+mI+HSwUp0v7UMDaZDYCot6MO/BgehuzlcrgooyxbEnNNnWZ5K7p4eNGbNWaElfERtZRP15d7ctVDpE1Qixw3HhOPJWo8z6qWGAokK19wlKro+E3YT2eGSrFFWyE5wK/IObjKn8HOOD8BT3H+vmoxGopF08Ae4R88DK7RlutSHyBt4wXaZwOtNvQ3rqvcIadXN+r3+KFghGJhCRzHtrCi4UpWR3aFv44Ga4a7AJw8i9hH5kSvVp71GduWYmrzLN0iH6OtcI3E4Dn1S1i130PCw/73sPPSlw4Xr1c9iQXud1GX6Yc6bREvQT2RAeZudKMui2Zd9PVmZ3JLlIa7gq0Cmtlzdga99oFLA+uCGPvZlgiZK410BKJsynoJyI0JEktJuIfEhV0GRvkBfFi2J86OtqIB6ut6uX4B/pA0BWcobwIAcP4BrgXuZUltUW1k6TTtBo26j+p68t3JcZVt9h/w5PyFezAgnWWmsYij0gdigaX29XgGh9v5NZLsKYmaraxj8NpQvtmklosS1np5qT6wkQS7CTJCYn40Iv6fv1laxJ90D3X+Nb/Jo4IAv0j3gaAMw2mqzdSK8TleL6mwDEgqS5HgNpg9Ey0zMyxc8AKT0rWXMiEz6RikOT6RfieDolF0b/IQ88N308cBsdZZID0raqJzXiaiewlZjvv8QzJWsG6rBy8OL4M9aGldQ+QU6PehhUKYl+j73k/onhr4DvhecmBKvFs0OedzRqNPiTiYE2v9aevUm3TP9FQ8K3QTD6BV7PPpJrgu3in9W9KS1UPyAe/eZM8q5TtajoanujGChsFoXyPdVmMwXNUE4cJa7AYdLADkTKJk0sZ8/0+ODTW6T4iNsEUch+dRs8Y2XIhXmqXux7yZ6M8dFTuijjsM3w7uRU4L/yYNhFvVBJmFchXmoyD2mv2PqsJnOJO8XQcqxFxkzk3MJPvsjLEHr7X93P1JTJNTze+CH/AVXxXSlT8CPlBfuZSrT2yLr4MxIRKqQqdzIySTul1b595UxgQeD8yv6EVnqAF5nlrhtxq3GMXwr1WlP4u34ED8kY4RB786SQzrnWjgXgzPOr+xrpIuoVS+Jem0D0WYP/4von2+3b7S0yPvowAC7qG+UHV7+JF2EJ+AEDao1VYU+Mf2bO56J8KDvDx6gNynsurJAa9ETiK7Ni97DVSLBxWb0cN5mhUYhwzp5N86RH9neoz4q+0kt3SdqASNg//2vA0W2mtkwawpPpeIyJo+En+hIx9P8AKrvnPB8/gv9nI0cOColJGhfgBRtE2/pKdYdXy/aQ74R75uaIFmrFOL5sxq2hEqcDVSnEMP5H2uDwHHySv86dYD4pK1+kRcKHuamZu4FXm4t/Rm9YULc0gIN+zAe7Q241ZwYXczRrji3GENVIFxTDgLlYOD5mpbL10g+4I7w608A7ai67Kizxvs8l286f/GMlkYGIsrUwvr1lP/+S7AmONYeINY47xtb2TWFYpWGkVAIP0GKe1H1EtGhougO1sXGbZ/49skRET5ylToSYecR2W3wifNg/zbDun8j/tlrGf"}, {"__id__": "chunk-9f98afe7439d229e936dbc445cc3a9c4", "__created_at__": 1760495799, "content": "# Pay-to-Script-Hash (P2SH) in Detail\n\nPay-to-Script-Hash (P2SH) was introduced in 2012 to simplify using complex scripts. Instead of requiring the sender to include a lengthy script, P2SH uses a hash of the script, shifting complexity from sender to recipient.\n\nWith P2SH, a complex script (like a multi-signature requirement) is hashed, and only this hash is included in the locking script:\n```\nOP_HASH160 <20-byte hash of redeem script> OP_EQUAL\n```\n\nWhen spending, the recipient provides the original script (redeem script) and necessary signatures. The validation happens in two steps:\n1. The redeem script is hashed and compared to the hash in the locking script\n2. If the hash matches, the unlocking script is executed against the redeem script\n\nP2SH addresses use a Base58Check encoding with prefix \"5\", resulting in addresses starting with \"3\". This provides a standard address format for complex scripts, making them as easy to use as regular Bitcoin Cash addresses.\n\nBenefits of P2SH include:\n- Shorter transaction outputs\n- Script complexity hidden from senders\n- Reduced data storage in the UTXO set\n- Deferred storage of complex scripts until they're spent\n- Shifted transaction fee burden from sender to recipient\n\nImportant note: The network accepts P2SH encumbrances even if they hash to invalid redeem scripts, because the script hash gives no indication of the script it represents. This creates a risk of locking Bitcoin Cash in a way that cannot be spent later.", "full_doc_id": "doc-9f98afe7439d229e936dbc445cc3a9c4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_10.md", "vector": "eJwFwQ1QFNcBAGAFx5EKeMQT4bi/3X1v9729PWixaahgYxA1Jq3aBM5iYtAWQ7AYRaWKySSdEM20KsHR8wTuuL3dfbtv9/ZOqQXbUaux2iRoMaiTotIUa2mqNFEydtQkMv2+dnYscONowrQCg6nGzkHUCvcZTDK7WA5K1j30rLybvxMullNgT2y17bBdqrs4TDu4jti2RFvecrTBvuZX6Sk7y3ThacxaOo1eB7chYxRFh/YvoD8K/FpahVckP9OW2ZVkN2oKrPDco9Vqs8ybXfizYLD7QLCUKXOUgpR41t+v9ip3WX+R27u3RyC1VnGySvgHsw5mHaiHr2tH+OtkqXZf22wkpbl67f7d1vLgVfsD8T/uMr+fYu0C3WvGBDRnjfg3dCn+YzHszhVOKJfYX4WLo93AiFQEj+ul+lZUGd1G59AJ6SGZwO9aM8xadgd5xzjgvtK9Di4X7vI5enOKU76kT/GXqTvadriYb0yLXr7TPWeL8LV8g1kQrxZ8aqmaA9YnLyhzS0bkqVqW4kSZJkxN8F+IuehFvEqrLqzz3dJHmIpEp1C+qwz10s2eghQnTUefoIUFx/Bjea3SYPKJIvhEaoY8j36jNqBtQp0wnzTrX6n1JAIeH3QFvyoIQca8jIakj7iPSV+iFS2Oh+FJWqfOhFnI1HzSa0ob9Oe/bjazdWa/8rTam55fOCr8VtWMAnZWcB/4A3w3tla6YSJ0nGTwk4mzVp+xWDxMrugu4dDBC3BcrwiX+xywnx2DL0IsVlgMHaCPlWz/EWYjvdx5EHOeTeIO/+aun+O3SdrciZvs88YDswV4zBJ8SGv1P2K3kRPCjfxicwTVqJ1oljSFceBz+hfCKqnF/az0wPuq5dpzjtxmarvGzHF/Lp3MO2n34mViK/8K/Egb1t4wftFTap90V6FWa3HXEvs2zeBHxPWHC+wac4C0+hm0XXZL/8LTex4yk3Znz1/ZEsuhfhelwBn5KJxFlvizhJe5frVBuQQLIx+CYTaExuj7/Hm9Wqy0y+EtdczYQt/z/RFuATe1umSb9kN2veTA8eQuZrszJ/7n+IjPxxnwA/GNxJHs7+OL3u+hHO0WP0NXfIA5ZjnSDXQ8Oo9LM+VWi35XHKJb0NfRndo7zim4ruh/wnQ25Mk0loAx2IxLzHZ+OXRok6IDuuwp0kLxlcAqkic/QyJOV/hza6n0X3GSXqS/M58HNm4PLKVX/bu4iugwfDI4wXdIJV1FjG7kYxI7w50C961HeFRg3PMN52wVrQmGjCZymu+jr0Kn9tzcanqdcfL1HVPB6p5Q4o6/A/0JvsBtYg0mjYbhHg9ky6wQPa7/QHtoVPHTMZAO8R1cgfSzdCazMlVrNOUPk5D5llf+zr8DjNsSF+pVdoH4jH5GWc1WGZH4qODVjpGyQKb/JWFr4X6zXhhyZOkR+hq4GYuqa9+/yeyF86JPM17j28Sn3INEnj04+834RqrrC8XNRoQEIm+zgyQzNxs/Ib4Q2I7+acbkRUQRruFutMb8C92g6wrw3CdVygj93CzTtjsX4adET2G28ZydQdulCSVszTI2gGOJlXIpGI0N0ESyxf5pN8xfJlYlJg6HJJHpA4VwCZPkhuQGclqp4BtIvXhdvYgfW5SeVx5pSqIYv9S5URNcuOcTtMi4D8rSFSqf3MlYeibXYK6TKoMK2cd78MdiSkciDtziz1ouaaWkCiuiLN+f/DLyjT5qVtIQLoMd2kyyEfuZ7gRLs3pOWPvzZ0t3lJe956IT+kCgF3xrfkpPOn8JUvgtMgh4bRMZB1cS4ZiPWWBUJ05Ea1CG+6qegRpJUyAH/B20Cb8PHgWLzR24BQ9QpzWOa0ibeRzP0Z4Un6cHSUgBWqP4JtdOTpm95mmZsneJT34QbvQFrXL1WmCmlq+22HXc1PQ9ejS5S6wzf6NczK2I51lz+XVitVaDzloR2gc+5Mt5IGTCn4jYcoGtWmPhNNlJ7iWbvCPa/wHuSJYG"}, {"__id__": "chunk-615ca45f4071d0a3fed21704773a59e3", "__created_at__": 1760495837, "content": "# Script Execution in Practice\n\nWhen validating a transaction, Bitcoin Cash executes the unlocking and locking scripts. First, the unlocking script is executed. If it executes without errors, the main stack is copied and the locking script is executed. If the result is TRUE, the unlocking script has successfully satisfied the conditions, making the input valid.\n\nFor example, in a P2PKH transaction, the combined script execution would look like:\n```\n<Signature> <Public Key> OP_DUP OP_HASH160 <Public Key Hash> OP_EQUAL OP_CHECKSIG\n```\n\nThe script execution process works as follows:\n1. Push the signature onto the stack\n2. Push the public key onto the stack\n3. Duplicate the public key on the stack\n4. Hash the public key\n5. Push the public key hash from the locking script onto the stack\n6. Compare the two hashes for equality\n7. Verify the signature against the public key\n\nThe transaction is valid if execution completes with TRUE on top of the stack. This systematic approach ensures that only those who can provide valid signatures matching the conditions in the locking script can spend the bitcoins.", "full_doc_id": "doc-615ca45f4071d0a3fed21704773a59e3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_11.md", "vector": "eJwFwQlUFGUAAGCtDCkqIY5lWXZ3dv+Z+f85SM0ePjXL0mcqGaRppWYI5oX2LM+kkKQyUhDkXJbdmdl/Zv75ZwB5dgmKZiZez8o0jbwy0yzMni/xyuz7FsBK9FPbatIld7b2CKnClsA645atyR28TJ4AVPmP32V9zJ4S4gJ31Aqaq07JCjpF6KZ/pP1TwwO+VeosltJPnGrnGtocHaf9bb3bvAKeyBT0I8Gg+prQXfUSm+cY7AXS5jnt+kQaIQfDYT4n9gZNk/7lm7gESWZPe8c2nxLb+XPGbfZSIwsp6SIu9WzVBFrvvY/r0ju1aegl3whUqt62/XQjuSB3wM/wJq1Hku2gMI9dL+bj7tg0mkpnhEyznSkJHHfdEde4k6DLbOJXZ/4W1ZSBcDbyR3bYj7P/GFV4vTkS3PSP4CxrlPV+IKS1RO6NVEQO8YthObzu3Wvl6tOct/FbWDUnep5OWOm8gA+Ai7Ep6NuaWiiDtuAw7Y7uoL3mSG5F1jyYrx/UElEbPd+yKJAkxQsTxF7rqLKVXCcH+TlcMUwC34rlWg6TZg8UU1mhdCLXyx3B25U2e0203NdH5ykp1mXrYs1G9x/iIPoswcplXJ6ZQgbIJBaGf+qV/olSBvQZV5g17C3ttlBEDmkBPZnjwx7WDXDwI67O0T3t5E92uN3pPG/uwmtjWb4a5bDYi/px0/VC6YoxE7YPvOGPT5tsFWpvgUQtqExEOepBsFtbFkgLfR70opM+nU2BA/Ro9XorGS8yLVcfN4y/BOK15bCbd1s8WqCG7ffgSmeD0as2wpC+W9yibMOOq9vciZawSdEp+B57LsOLB2CH0N+8jIoloG9E1e4VOgabmjV+QU2WNpuj9im1jDbBEYF0ND9y0rlO0vB5746mb9AwpVPZHsX2vujC+FWSz3jFfJ9mx17wjsJjfRoKixP0k2gOfVHLfnSpsaghwq2BH4brjKeUz7RC9UFjOGxoXkVWhpbCVG0Xc9Oq8DP+D4Sy2O/Ru5Va+tRAcWMJn8o+E4tzytRsQRAGs8X0MNLrjkTS8VkwiQXofu96vaPpqNoPPYmWabNBR0yNLlUiLbD1ZOaQmNq8M5hPN8GraBJuElZxm8NzwT/8eC4OxQuHPVdpt/cddILvr78DE1HYJ4hVqNaZwcnCTDHLGBJuq7zG1oOvTFvqEgYa0M43Reas/FDWCaLBqx9V1wf4fWy9UiGVNFU36AZg18U8oNU/lhbzq9Huxh+ZON4tdcpCqN0noxtGMYhjvovsByGPSzAyzwcx06oL+r3sfpBCFiZ+qvQKG4X5UlxDgX2FntEFb0rtWiWPy0K/ePLdc0Q/2U7ucTiyRZ1s13tKMw9xacLCWE9yNYl3gh7FdzMlV9mgLq8fqV4jb9BS2IXnVgwBFUYJl7lWovuJFaRGKvDxs/kzsShboHyFjyVv4Uvwd63H6x5mXmxRrT2ozwucgshQ1W32oQIQFYrYWRK2cshepap5GnqIWUyO26FkqG2VGq2j/rH4HAHRQ/7nueNwSX2I/Gj9jCthkq+QDCe568aF+pgcLk5vdJbjR1rOmqNC3/Md1gJ6C+aSJSJkc3AH+CFw1xoA+vFh8rjEkVw+al63XuEHqIfJMXWo9xv8slrqBvxUMsqvtH1t7qaj078gZfCMlY1Wy4XGaW4n7HSvNC5lHkQ9UHTOyWNgPPc3vAXCyiw/YxW1YmuwJ8zwdgOeIxH4q/mcUR8D9jqdB9mgDO7JyAuO4RNhHi6yFhkuqxVMV9Ph5sYw00+HxjJzaWQmfsz3asJddnQ022sTFe+QyzPGo1hwm1BjIP1XsE0qwE30MdhNM5xU7k3uQNol45j9NutT/kKDUG/4gn6RPkkWY3+CGav1SIErdDu5H/Unqi8B90RHt0w1H7DbmArn++okCPTx5Am4R/ij9gSYTGTaVTdj8+jAl64bQVPKBSbMy3jGVWS+bnoppKLxP/ldqao="}, {"__id__": "chunk-c69d48166b7187f59df5c585bdb80b9d", "__created_at__": 1760495842, "content": "# Transaction Creation and Broadcasting\n\nTransactions can be created online or offline by anyone, even if that person isn't authorized to sign it. Similar to paper checks, Bitcoin Cash transactions express the intent to transfer money and need to be submitted for execution. Once created, a transaction must be signed by the owner(s) of the source funds to be valid.\n\nBroadcasting a transaction to the Bitcoin Cash network requires delivering it to any Bitcoin Cash node so it can be propagated and included in the blockchain. Because transactions are signed and contain no confidential information, they can be transmitted over any network—secure or insecure—including WiFi, Bluetooth, NFC, or even methods like text messages or forum posts.\n\nWhen a transaction reaches a node, it's validated. If valid, the node propagates it to other connected nodes, creating a flooding effect where the transaction rapidly spreads across the network in an exponentially expanding pattern. Each node independently validates transactions before propagation, preventing malformed transactions from spreading beyond a single node.", "full_doc_id": "doc-c69d48166b7187f59df5c585bdb80b9d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_2.md", "vector": "eJwNzI1XFNUCAPACkjTFFT+AdXd2vufeO7NEaEmZIoJHnop9WBmdiq3jMzMNPWqJQWVJkckqDxLcXZad2Zk7d+4spOXJygyTIPHxjudhvXeoLC3tlKFR+dEXVr8/4Pc1GJ9v7TuNP8h/L1XI/oZMf5yucberl+V57Gpmm/0KSdjaDkabSHrI986bZjHa11UkzXbO2/3GRRQjB4UHo3NTPxNWZ8wJ+rDQHVgIjtOsVB3oU7blX55eCYpTa/aI9pSYB23UMhGZkpTvIKecvPxa7TxnwDNwAy5wsPo8W65f0PqZReKYwDpkBdTICEl4toEXORG3o9tMUxsjb7Xq6XXeefkL4BVSq3TB3U6Zl/z9fko+dMrpRWcc1+R7RLoqzTafESBYIvL4ZfuwEVJeZfPjB1CZlCWxWnryEDlpiFyUHYCj8TvxTGEBGTB9sCFRb5TCIdSLvTQs9Ntz4ALpLLkYKzVr6QG/5jwc/VQYyfhdqTfOshNANd4kPkI00KW54Gjic+cr4QiVOzd4j6FZmgrucbH3AF0qf6bMzuttHzWLUCb53d6QCit98E7x+kClIrktkfnUr28I0NQce5D00TpUwH6pDtKK5t7G3/RE7tx4lbbSVGGm/a4R0AL0BnzQfsd71OSlCtKtH8O5uafIHDbTHm24YqWliOVx+oRxzj10c/QPnK0v1js7KPwfGMqqYfLkEtOTg8lY60AuoSGjVchmw2Yz+FO/mTs6cULyjPSQnsndJ/+UWK+WOYvxOdrgPCwExY/5grjzgid6Bm2SLtmfgNO5nLsKMeSQ/WtSDLxE9opno7eL91um+CR63zfPapK7yXIQQBiEosANqdViCarSzsqb2kNsjB+LhpKa9acyQC1xPb0WmjCkDsuI/Jd+YO60r9prUbFUQk7I3fSQs4M8DUqgh9a5YoRlSrjnpDoNBVvpW9llqfwIx3Q5H7enSU32VCNKljKlr5X/K8jM9B1my5Kf21PAjfIR+RpSPH0Mv1dr04tkwpdKK4xF/jRhp1LtW5MqxzdJUF2389FEq/KafjfHsNdaU9qugzP4QfIPMk734LCallikHLND6m2AJ1mpL8K/OIeZu5Bs7cGZ6CdzF6yEe6zNuJONiyG1Bq8T23EG2y/lgG72IekU8CNdupCHDNu3RNGUWXZLUmnu8/G+K3COGg02OjeYW5wq1B28Hayii8gW5TO9RJ6LlESPmh3+wf8ReRZ+ROL+QlV3WuX/A018XMziTqpF2pskDa5GDVJJ7EWxXExv9ln7wRPS260DViF5anIbWgsuJPLYwdi/4ZB8Tl64q8T1p8a7Gbnp8VlsSmkGY8mOqavlXGelvbUT0QpmgG5kG4gaHVG+IdFpP+KEuwXNt052hM0fmiKkxawjK+wa7XsjHRyEyywhEMKejpaWb8B6vVzdq1Uzu1oegNslzhkWgqDfkbumKjmJf5Is6x31D/K6u4KTMbZy1BEwRtO5QuA6txo7pzcZxdpq8eVspnO71WndIrJifUcVzUiujU1SHuPny98mDtmXSJ4D1eftGuJNNrI1Ebbj1WRP1sxUT4x3b3Fq9PEGshvJKHxcehY9NbmL7ICu/kqkHqfkiPkFaHHWgTfcWjtpV6OJbR7/u0KDqRI3MQw3mwIKdPXaNukA9ybDXLJDlQbhRjJNjciZ0MSjMD34EryLVAS/BJe4QqMqsIbcK+JkRlePW2VN45c5k3wFWm37vl2cOd1ZRrxAFYfFq4FR8z3rO7gUDcWLSR4+Hl/AF1gfgoL4cjRZOkJy6KNmr/tklIlNU06AGUyldcJapd1Pj7PtWcNgtD1gMlI5OE+v0E/Afvw63Q+exndzjeGFxtfJlVyauphf7lD3VzeNbOTbcHrugPdB/nzLVTObNXGUfYsUkZTbQ953NvGX3QrhenEJOW2N02bAxJ6tnE4qd4/oMd8v8nZDRKXB/zAFYHLbOUBaBXrC5mjF1L8ATLmWPg=="}, {"__id__": "chunk-79c2bd17f0ca0f4056988736051cdb61", "__created_at__": 1760495860, "content": "# Transaction Structure\n\nA transaction is a data structure containing several fields that define the transfer of value:\n\n| Size               | Field          | Description                                    |\n| :----------------- | :------------- | :--------------------------------------------- |\n| 4 bytes            | Version        | Specifies which rules this transaction follows |\n| 1–9 bytes (VarInt) | Input Counter  | How many inputs are included                   |\n| Variable           | Inputs         | One or more transaction inputs                 |\n| 1–9 bytes (VarInt) | Output Counter | How many outputs are included                  |\n| variable           | Outputs        | One or more transaction outputs                |\n| 4 bytes            | Locktime       | A Unix timestamp or block number               |\n\nThe transaction locktime (nLockTime) defines the earliest time a transaction is valid. When set to zero, the transaction can be processed immediately. Values below 500 million are interpreted as block heights, while higher values are Unix timestamps. Transactions with future locktimes must be held until they become valid, functioning similar to a postdated check.", "full_doc_id": "doc-79c2bd17f0ca0f4056988736051cdb61", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_3.md", "vector": "eJwN1PlXFHUAAHBCVOAlhwquC7s7OzvHd44FMy+MyiREEUNRwRLzjodoamZFqKWiiZqKB+7CHszsfGe+35kBlNJnXr1MTJMyohQxJU2eRYlheWVR/QufHz75/NKU9oPzsF3oMtt4pcYqX0QVZoD/CgT1Ka7PcAvVpPY4Uvk0coU/1lihxHMLd8+QM6vv6hcSnhL6osv2DLTfHFWXSmV5TviCaAi3WMjDZ7W3QDvJpSDtM9djvFB6IFeGBoMPxc38Dt8BYSL5UJnn/gis8wAhl99enYZvCYVkuJHIla+PgJ8YhVwRTcFOqZf6nJ3lAdurxOU2xI6v0fTrlrNSj1gUnF0bAgncAPMq3+LP5jDy6UtRpJYKzADk4jgo99JZ8HdLI9bZHfKjZM33GMWL3ZHZ6nmQo5xH3TF13ChmmJRmstRL1HX9NL2Vuhb6F1yTIDdfeYijB6yrWWB3EiWIIDYPLjbS+b/0Pvt2wwfWI3wTvsZlB8vwevEiHkwPFyv4NiJPXw1Cxit1h+0OPo6PkU4bN2FT3B5XI3XDHw7O6UGqG7YrbhQpCHSj9rvXYAvN1m2X1JtEqWMU/k2eEViFDcC4xlDv4yIYpQR0KxtpPym6dNJdp9YT34pPII+yXYnSvsR1YKx8kXiY0EyNQdm8mdBC5qAwuKKmQ1uozq5XNoXjXC1AHQpOr8mm4pg7bBUzXmzW8jxNsMCjks8Z39ZaRBMXaCncY6efi0bV6u0nA9qbSg8VTc7lKrUib6fRBd9n24L5oJS+Qva1DnGfE9agvXC62lfPZ3dpWzSg/BhUNbs4uXYl61eS2Wu0jcqHl0IFlXPACaGUviENMdbII0Abn8FNU9bDVmq6dByFSVc1rxxvblXp+ie4/nyueJbdoi2taTOeT/gCzQPv8oPMDKFRn1n7jjORmco14JvqIOKYpSvWLi+wnQPjlK10L5rqylN60Wv4OpCr++Gp0ilLAvmrZyqlUaeHTrcVxLwHCjwSHRVi7A2gna+ESfwj19fKP8kZA4vAXPZjpcQ8gca4koQmfql6yrFh6GKmAD4fzAk64SLqFEr0nlQzlBgwQm0AhOuwcsZaIj+p58MTeoUjTYxUN/4v0Ckn0zeoX6Rt6LZljiPPPdo1i01BseIAdzFor4zmL1OdfAWTSSSZ52v/BuP4VGkOCiOWgeGMz5IJdgtlekEtGNLILHJ3gJ+NWWgZKJGfA23UDucqsVnfZM3EpWCvd419s3gLX3aGe8shB8r3/URB9yS8UX6FTIKj6Vhug7TEkehKp44yDUQVuoNehQf5caAQDQd/VCWSIhPBcWC1fgtvJf+x1lMx8Ongde6O9CdD03U4p/pl3F9bpLVIOuMNpdHHXb2onXH62dBdpswYCb6TUuliYzYBaitwiF0LWdcCetrQCaF4f3fSBLnLug0ALj3wsm0tFuho8AALVd1sv8q5Zj7xp75S7me2sZNwp/qpbzy6j+5xgjhJ6OF2gVVmp7Tb8wt4Gkj0gRAX2qmO9A8lrjL3vN/oy0Md9CxwiJgotkg7vLWwD3ISF/xn4Ouuvexy7SSTwL9aJaEjAVSHcDzoAoP1I2y6O1otBj9rdrXQLejtuNESZudQhGDs60NFosXJ5/R42lBgQGQ3oU14nSPKVaZgvsTMUkjUDG7jBaC5MpPrK3aovcnzybcFCQ0DiWKP0ILWut9JsTPB5AbPOPO+r1K/Y2SgY0Qri/RnpHLQQfWzriInwmNmC7uEjUjKpKOIuSCGv1tdpr9ozIC68weqnDgaxNpJqVhR4Jtq7p4M3KukoIvERlsK+Qgn66TokPIpgXiBm7kzQ81xRPA+bZQl3NY/bqMay5Jsui1q/7/aJNSU+IbrIHUJhRm56N6uVsaKfFUfQzPUiwcYSUI4ehZMNKPUxfXfo7L/px5rZlG3lH3KfXiF5dnJuJUYPtCmWpkpge/YD2x2YYb7JllMj0hcJP6VNAH6lRo8LfgfkEKfXg=="}, {"__id__": "chunk-06f5d970a1921413dade071c2719c7a6", "__created_at__": 1760495876, "content": "# UTXOs: The Building Blocks of Transactions\n\nThe fundamental building block of a Bitcoin Cash transaction is an unspent transaction output (UTXO). UTXOs are indivisible chunks of currency locked to specific owners and recognized as currency units by the entire network. When users receive Bitcoin Cash, it's recorded as a UTXO in the blockchain.\n\nThere are no accounts or balances in Bitcoin Cash; instead, a user's \"balance\" is derived by scanning the blockchain and aggregating all UTXOs belonging to that user. A UTXO can have any value (denominated in satoshis, with 1 bitcoin = 100,000,000 satoshis), but once created, it's indivisible like a coin that cannot be cut in half.\n\nWhen creating a transaction, if a UTXO is larger than the required amount, it must be consumed entirely, with change returned to the sender. For example, spending 1 BCH from a 20 BCH UTXO requires creating two outputs: one paying 1 BCH to the recipient and another returning 19 BCH in change to the sender.\n\n```javascript\n// Example of finding UTXOs for an address\nbitbox.Address.utxo('bitcoincash:qpcxf2sv9hjw08nvpgffpamfus9nmksm3chv5zqtnz').then((result) => {\n  console.log(result);\n}, (err) => {\n  console.log(err);\n});\n```", "full_doc_id": "doc-06f5d970a1921413dade071c2719c7a6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_4.md", "vector": "eJwN0otXFWUCAHAThSWf2A3uhfuYe2e+me+bmUuWQskJXx0fcSJXdvEcClAUSfKRcYzVOpaZCmgvNZLXvXdm7sw33/fNhcw6IhWK+EhRS91WsyKk07aKtWUPyJ67v7/hx8PBqd43Jzjlyhgn/loYVWdFWH6CU6aGz7OLoIds9CdinfpP4Xojk6XFv5nQI/fgU3qD/iEZZ5WhqPZg8CS4nvjKtJRv3R2tVdaa4AXxlG0EkmBD5uN3nYKzlYDjbguQI3fOhvnhb2Beo58f19obs7P3q6niZVVHTdoa/G9lIZlifSTLfGOwjL9uvKAPmUnkHb1aWi7wdJHaoCnqK+bT9gX2ZDwtXLQ31fDzl6X1NNltZ6RnPk5nYpG9Y1cFfrbGwG7kxZUwJ/6rHnBaBFs3ySWx0n8T5gf/QuYqaewSCfNHwULhAnrB3GGDUBt5Vf+vlI9f5HrVzUqRXcI+EbaDYfiTMZ8tc40TOp0dsIoebNkUXaALgXPcL9xO8FBzp1BPQ77u0GPoy2gjfQmVsPL9q0QdJuTR4t20WXvLyghWoALfHrSXK5Jle7vbk5gs/Yg+kH6xDsudvvLGYnpSNLWT+IRxBXPkPzDhWodOE1OrsrZZQ9phY544nvZBzgGCSx02NawbG3Gh/RG6TI4JWyObxGf0E9KnwWr5Hv0CzQHpDNkRYrGYtCIeMi95L6G/qnwzFMokB/7dOaq9Su9LPtSksE2kFF2x5eAASLVvCH38qL09oYW008hLHYp0oWx6B+1JrNT8fKW5jOPFXbDI8ople9ZrIlyM1zkPg2I8yH3FNoRWvfYDzDafDU0ErfRWqBI8paVqxdglP6dmiEvwLlLTZosH5R5IyCHjprDErJVy6eam4cBSdpy/vcOSGxQqV6MUusj0kY2+OdbatK2gnHwZzCWP7isNPgh6lVyan5hreORloVJYIa+W+hrPR5931sQLgoB9at5COcFDZJKe4Uq0hT3dvmvc28Jm4+14H2r2LlQ34BZ+t5innmeO+15tKeuPLTa3yQo/jOvaJ+IBYZ0wERXZn0FPtN9rGQX6cTtd2Cb0xL+Pw8n92sdoOd4nXCNTojslvz2rYyS+ne3jXGiIex0PoCk2h/ap32WlmIUtRcJs1QnUKylkmjwg/7H7oPfr0BXpE00WbwusxavMOIQAgmK2xDwOR9oemHA1nKXeZNPYCfqn0K3UqffjZPsG3OQfkraIjt0m/1PTYl9YA+jP22fxETE5cQhmc3E6E+xylcFT4TfZan60mie1gfv5YYHnD1hL1VmhlWRR8DFGzLHqDF8BbQzMiNbC+ei33Tn2QSuDCUZDaLR4BNaAJ2AS7YwlKTz16OMT67Qh3347tyXstwDncdF3wenbos5YcRLOjGXRQOSa7W7i/RI7puxEc9HPwhnTiB2gL4HDbJeyiOuA5bBTWJk5jxuSrzEP7pN/jYxunwH6aK95xVLUd8mPzh2gUbsT75VS4ALES3WwpeNzfYo2CPLQW0I32WImop1NtmD5UsQ9VIx4bcn2gPPwYryCDtqifjlUSlsau6I/CAPGy/y5VxYQt32aSR2Dziww16jBFbhZqePHw3nmIyFZuJF1ln1uTIbVXDZaq89zedhUfBOPCB+LbmmSrplXqcd8X7pKqtSM9rH2lgSSX6e/8xK7KFN5mJz0YDQTjhhdwafVc5JJPlDfU/9AvdgNKgiD/0gkJ0qcWvMJo44lgdXy71yaXpg+iRS0Z0mj5Dfwqqx+vFwrRvfIU0k9exJsAXuEHa3fS6zF23o1+iKpx2fbplvlqFbPQbe4lP+fHTFjco2VDvszd8q1RgnpktyywE7YVaDEZ1qLXy6Uvg6Mtf5lnqYka7m4wrhP38j+xo5a02E4XmnNafJZ00JnzDfkfjMDha0gTmmP4hp6HY04W2OF8Q3WbDIoHhDuxj3e9c453BXd7GsWs7VScVQ4c8cRkBv5Ds6PNNvH6HQazfwfs1+hRg=="}, {"__id__": "chunk-5d4b06c58e8c18fd80f7f861e37ecd0a", "__created_at__": 1760495882, "content": "# Transaction Inputs and Outputs\n\nTransaction outputs consist of two parts:\n- An amount of Bitcoin Cash in satoshis\n- A locking script that specifies the conditions required to spend the output\n\nThe structure of a transaction output is:\n\n| Size               | Field               | Description                                                  |\n| :----------------- | :------------------ | :----------------------------------------------------------- |\n| 8 bytes            | Amount              | Bitcoin Cash value in satoshis (10<sup>8</sup> Bitcoin Cash) |\n| 1–9 bytes (VarInt) | Locking-Script Size | Locking-Script length in bytes, to follow                    |\n| Variable           | Locking-Script      | A script defining the conditions needed to spend the output  |\n\nTransaction inputs are pointers to UTXOs that are being spent. They reference specific UTXOs by their transaction hash and sequence number in the blockchain. To spend a UTXO, the input must include an unlocking script that satisfies the conditions set by the UTXO's locking script.\n\nThe structure of a transaction input is:\n\n| Size               | Field                 | Description                                                      |\n| :----------------- | :-------------------- | :--------------------------------------------------------------- |\n| 32 bytes           | Transaction Hash      | Pointer to the transaction containing the UTXO to be spent       |\n| 4 bytes            | Output Index          | The index number of the UTXO to be spent; first one is 0         |\n| 1-9 bytes (VarInt) | Unlocking-Script Size | Unlocking-Script length in bytes, to follow                      |\n| Variable           | Unlocking-Script      | A script that fulfills the conditions of the UTXO locking script |\n| 4 bytes            | Sequence Number       | Currently disabled Tx-replacement feature, set to 0xFFFFFFFF     |", "full_doc_id": "doc-5d4b06c58e8c18fd80f7f861e37ecd0a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_5.md", "vector": "eJwN04tTFGUAAPA6NVNJBcsD7o7b2+f37e55Vqhgam8VxRA1ssxEC5XMiZC0B2hlajXaJJrc+3b3vt39vt0FckJHzSmcYEyKTKzENCkmeymKldNoBvX7H37b4Fx8rnkAzcgrJa70tuBaZbsJnXz4qO/zvE5dNa8kr1Fr1WZwGqQDfOMhchR8yubpHklGLjQ7tEN4Ot2Ol5LnkfvWbuOBNK9u9pQbF7haEhl1IDo8eNuEDllyPie93FR0jGySllHjnOnKEmV2IgndQZc+RnpTeEP1K3vl9WY2dmd8SK+4/Tos1s9rTXattEv3QVYpAZeCW5n9ckkkZvyKDqKJwaWkivoYlaF1ZJGXZx4WHgdbrUBDLlGZtfY3VIRjhtdzb+rANw1mwy+pr80obGJeDBYZVJIIUyN78Sd6oazmTjL7rEKph1+H/7QrEv1CG2wV8sQVqSVcN9MZX0W5d6xG+0yWnajP80Xtau57Mgpks3V0NVVIA90dPC1cUcrETkpOVjRWSlm4yLps1sRbIluzRqK5aLV3HP4ivMTsAFdTS/3l2lkPZxVAJK5n863F3qR5kPaMvx8OFzaYrdbErJNOhajRi4Uj4CLVJmgpV7w7Pcf/mnMdhCJfeXoAYQv1q9oOUG8WZy7RAJnI97Ajd1KCDVs5Cd2jzNH6UFCXqe1OLTw8Kt9fLDdKf4J2bQ17nl0ovWO9DoayxanlToicjOVPOMGUGpVClTSUftFa5B2iZYDx2pZ0PrwET+hHjTrrun4b85m3W3/SX8DrPJQu8uujKmzBzagJlCtLjWnRemYEyKBCsF8fMH6MzxQW67Jx2PUdOEru5P5G0cRKtUUICC6uWp9sic6dxq+pBcYsulvcCG5Yq+KZTq8cY5vpq/IuqSR9k6814HUGleVpV3iY/IYdAzOYP9QB+l7SgzaQt+jJuC1QAdvlainN7E///u4/bANpZS/Aj0BR+riwJfmdrwBmeT5LP++dEf1Z+Vh6wL6bLk79ZDzNnwIddD84yV1AD9qrAE1uphrELjLF6Md3SZODC50RbJXdTh8nPcJ5/Ir1F3s25yX8AshpXBPOx7N3nwNKoo0ei0c2XtQfU38Q7UBF7EQ6EDLxBGOdWInG6QV590i/USWwi8sGCwMrQW3602xTr2ZcuQGlF500D2oDSS7ogjFhi+LmR3NnlDGslz2CIQmi5/is4BNUBR5iJ+m+MDa+z6HNQ2Khfk3bY6zxPUM36R54i1YvLgICrESDqTbhhQktFrEyuUPJmFCEGs1bEpZ/mTCMOoN/8NVYQ5LPgQAuJSF4DiXEvWCE1GD8vuNZqzOzLtDMbYIi/QSaOZox9uZOt6OoTO0wP8JZeBo27GGgUytMjZBLrBqyzjiMDhiX0H3GNcNSBH0+YhMiqoyGcm4nA0axNYR/hmRZleHDOVRDPvsOKvMOegzjin5UarenOPX0buuRcLc+hw/vuYGORz8wt1nPGkPlA3AZaJJH2W5uOHqEvBfYaEai263X8x5X/yUfwC3gQ2eru50UmX0gAI+RiHHK2KwODa1mKWZDPBznBQxKQV0qbG4yv7Tz3x9EhtjrfEIDsVpfGVMxtCf5/6UfTbVyXuqMdjrQ6i03K/wz8dvOTdoiNFoaq66nW5Nva87OPDwp/WTTKbzMmiUP2v1coWefeomdi+8YP9/ppuvIPv4pz2+wlzzMVQZFbq0QA7RyMys2psg5m6VWxOvwTuOI1M9mA3P3cl4kpf+/7MJ71DZuirAAtkhupiblj0+lX6k3kz3wPS29J4e30bf4b+2YXkudIGPBL/ouep+9wE55X02OYWb9f7NG/cfcnzxkjjMLwcuRatDPlnJV1GR3mZCbMxKsyFvoe98eI1TRU/U7IpfFjXxfotzvTW6wOhPzpM1Kl+SxLjOXG/ncl+23QvOZnWxmRkFMi0+HDwWx8xL3k6My1bjZYgNdXAbfERqmL4deah57NlvCN8xTnrvJf657oUM="}, {"__id__": "chunk-b92214a17b1e5199a41af505cdd353b4", "__created_at__": 1760495905, "content": "# Transaction Fees\n\nMost transactions include fees that compensate miners for securing the network. Transaction fees are implied as the difference between the sum of inputs and the sum of outputs:\n\n```\nFees = Sum(Inputs) – Sum(Outputs)\n```\n\nFees serve as both an incentive to include transactions in blocks and a disincentive against spam. They're calculated based on transaction size in kilobytes, not transaction value in Bitcoin Cash. Miners prioritize transactions with sufficient fees for inclusion in the next block, while transactions with insufficient fees might be delayed or not processed.\n\nIt's important when creating transactions to account for all inputs. If you consume a 20 BCH UTXO to make a 1 BCH payment, you must include a 19 BCH change output back to your wallet. Otherwise, the 19 BCH \"leftover\" becomes a transaction fee collected by miners—likely not what you intended.", "full_doc_id": "doc-b92214a17b1e5199a41af505cdd353b4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_6.md", "vector": "eJwFwQ1QFNcBAGAklxqdEHX4O467Y2933+57u3tgpRA1MHYySSZSaGKUYguJEStqKjWjjnS0SjVGoijhggceHHe7t7tv39tbATMD4xiCTTQx4E8nDDGgxNTGv45ialISbTql3/dAGipQTlzCXH6L8w1aJFxmj/EdPf3KT+ia0Sx8RDZq7+YZTAYaos/pWWSSpqNl1jqm3wzZCJ2AT1kEnI/9vfePJhccA8vVNuKTKrrznVHyW/EOu3yhh70tvGUWi2vxWWIojByC03qxfxf4nzpY4BJXmgtkRgzSIjwPtURH+ZNoGVyWuTj6NDgQSNGex0nO63sBHzQ/UULhZ5S77vnxRYTXRgrcnWfpUXmeNPe4jx/kh/i/+TKivfSBbrGfRlXpPP+q+QVoY76PbEo2Ric7PuWWxFn/yuARps/YJm8x9+OYe7v44fxG6TCpNhjkoTp5wfsFXtk5BiMo1WinryaOzvkKzk4cMob8H/OLnO9j+4gv1wwz/h2ozihDfd6fG1j8DW5mK8TfCWPkCJkNv6Kv96wQSsStcDnfRBo9B6K7sUd+jLfFsa5qGKIHtYZkSJmGm8W7ZJM4aQzkSjgnMMB5nH0pQVJEs5QtIAueti7h/sDcxCPzHyqWx4kHHiI3aFfwDCmgN4VC/BKtQymkB7xv/FL/2naLvogGy0k1XpUtO572euttXJu33koN9Ob1glL0Bku7+4z34E/m48Zk8rAwoR+0mwhByPyn5lJa3yuXdnM15r9CZ6MZoN/XHrkllTizqOi06X71VJ67s8pQwcvAhdyo3B4Up/xPW2sC9XjMHKAjgW2JXvBr40Vz0qvxt5j/iksz9dyZvJugJn+XMIzLnA62KNrKX1fOpPUJWzzZxJd+j86x+Fhzcjxn2EHSKemwtB1MkK8Tb5IyWGI9FE92pCYz9SH7mbDCZ2T289uSjxwjkaP8WWsDadJ6lIN92gdOG2b1T5wI+I/QEB8xntflzue4It9wNwv2gDDemmhCV3WHT0n8QbgIhtkMq079ixnAjXmIzgM50sfmGOmPfNnVhWaAg+/DttbRxIbQhE7xVOIJ+CPJ4mF8YftpkG4WSiP2DJziNiTSez5Tr+Kgd1L8sLMvWQuumUx2FdeovdM92T0/3iANMFnyHbNcegKtfidpSLAe/Yx1obW+JueHozclF6xK3KUl3irvIX6N9zPlO7jK+Kajw14raXAClZtDpEXbkbeMXw2bzDTlbZ0IrcZm8Vl8ASWljQSJW2P3jFfkdWAJcIKsXeEOwYJEvq899gazAyz1bpVKvWtwlzFXnaY1ykP4lH0ho/RQscQoK3Kq/XXOiDGHsHCvsBfMgrOUBroq5oLZTgPJtw3zLubo67pLe1FUAEM2CbPM953bguvYKEv4WjWL1FAJP7Juo3N4PzwBtvtzhSE1LfBm/Ir0A+OSqtlB/Eq7C52ESbsq54i0hEk/flk8oxeSFLpAkUnYOqcG7H3xqfBhdFR+HHZLLx2v0UpjN0AQ1sNhdTu+SncK3/G3EtcNiy7S+tS9DOBWSdP8B09utC+Sb/lmUuxrMTYIZeqzQqXWaHXYcjLDuZ+bypfAQjoNK9GP2jwpzezvGOD2HOuwGrUr3BV3sfB77xam14rhBUTlETkHN7OFZKdlGhXyA/xWsNJJxaZdgTS6PnrZKRKXCilJn7KC3wOsXJeYrjyQb5j5ymklQ54ye2IttCBwIrHULrPvabMDKNkqhqTZnBhep0N6yTkIRvnp5gXK7khd4iLKBUvMUqtFbzcG+fuRY/F2y+upJefNvxruKG/P5bOjPngHXkAe6wC4Jc+nmYG16mt5bDwLc8EZtItY5BRY7ImSR+BJ7hrXH9lJHOse2CZ/JDw0wnQvvU4Wws+NL70x7xnj3zhEPhdr7TThF+o0/+3xP9nx5Liw36kM/Co5blwk9fwEeEgnAg32WX3GM+4vERarr7GcJOcOBzzWavlO2B+eIvtxpfV/1Jqh4A=="}, {"__id__": "chunk-e9265dbc4d02e20f233167486ea3412f", "__created_at__": 1760495925, "content": "# Transaction Chaining and Orphan Transactions\n\nTransactions form chains where one transaction spends the outputs of previous transactions (parents) and creates outputs for subsequent transactions (children). Sometimes entire chains of interdependent transactions are created simultaneously for complex workflows.\n\nWhen transactions are transmitted across the network, they don't always arrive in sequential order. If a child transaction arrives before its parent, nodes place it in a temporary \"orphan transaction pool\" until the parent arrives. Once the parent arrives, orphans referencing the parent's outputs are released from the pool, revalidated, and the entire chain can be processed.\n\nThis mechanism ensures valid transactions aren't rejected simply because their parent is delayed. There is a limit to the number of orphan transactions stored in memory (defined as MAX_ORPHAN_TRANSACTIONS) to prevent denial-of-service attacks. If this limit is exceeded, randomly selected orphan transactions are evicted from the pool.", "full_doc_id": "doc-e9265dbc4d02e20f233167486ea3412f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_7.md", "vector": "eJwN1PlXFHUAAHCTLDULhGVZcHZ3ds7vd2Y4yrQo80hADCMxk9CXibeRFWUvyg6zLElTK+RY9pz5fme+39lZr61XL8onJnikRWlmHqXly9A0K/NO6x/4/PgpApfyP9nYm/hVLXUMvkKeiT7AxBmj7NWKYgL62igMBpn56BLY3XKd3KUvdKVp29v2RRtJyFaEo8p6MyxlkgqHJQfVCeRLIY0ca2zTrrbsoOO9d7bNKlohz5PecR4C94XrrQVKryKK5zhDORMcYI4uuAMM0A+r29UdTKk9jl+r1dBH1Dkcp1/XzytRsdoKoh7/aK3MVR5aAOrNHeAi15+OxJW0ruA27zehO6Q5/AvOdTA/kuepsvclvJaKNfgUuaym+CojA/QKab5JpK8wHLeyT+sGmQEZaXBoNKwlpfhBown8pqTB3U5HAHArHZcvxYv6btThKVaO4C0kC9S2tkBNLDKXRI7wfex6OCQy1ey0BtLBkHV6YdP/dicosQqETuCCNzCmdY1/1NlvPyU/AZdJQ/gse2jkCb1eSBc7hfHy3fRA5GZ7jNm07ixskG2uLZ4jVJBTeqGzTD7E9U/c2/45fsY+AVSLk1rsBXwD8SZk5qLO5X+DPleisePhVwousgeNiGVZ35pd8E5UF+kmLn4PvSBVewfCDfwYbOuzEid9J22PWW14zUzhRfNLplyyAsezZ4NutdRYGj9D6/ApptNOhJAM8dX3PIFzVkq9xdgYbISPi/5VTWANeEc5mAyj9U5+3oWsDfGRoXJrs2/qqhXKy+AX0ME3M7mkXptD3eZCU4w+ohext0de8vHWfHG2NI2biZrZbWsrwb/wQb7b/JP+xPqU5co0hWNntX2Lu1yG50P+PTpDOG4PxKPICPksbIIvKCNQGV6KJqPlhErTuR9oHyFGHooF+RUrZ8pvWJ/anpg3Wi306L+CzUCLiQFCzuIdAbedYZVof8eO0eOkI7KPLQlsZgJsKP2kd4vhA8NxjXgrngNeUqarfnOM5M2ZiLaF78ZT5GZ//1gDTXITA27Yo7xvzeC8zBnxH/ntnLkkxfwDCo1n4d8ogj5T+mU8DJb7NwlZytbo5kQSCwmXXgVL6Ca0DV6OZUoC7Bv9ka6O6vqz2p4wiE8ninpVWp1+mR0dOKtEQYq5xG1wNnpPgJHq+NA1qxTvArlgRGAovL/gNL0WK/N/JlYVpLStTik9JimBZ+QP1XbdVEfZlfoaI4crColmtlaIxklPLhuEk3LflnpoFUiJEr1AcrO9obHW13KX1McylE602HKRbDqNfKEegJQ0gzRhuRSDySxNnmhGk5OitXC/dLq9n/wWrKVT865IE0lGawkx6fagTlZK+eRqfGfITWrYk+QyGibUGQ3i2ESHXkkX43IyHc33LiILW7rQOjysnRswBHTrHm09t1thmNWDfCglHTLPE6RXCcVMTrJDOmgvxJVkkrQY6bSs9flEu3cksOAn6gz+sFTjdMc/jvd4V8Es6ZQ5Bal5rjVL4jc0L4k9Zg8lswiL+onb4Wxji1WNRlFFHR71EyReydtkHmbTpWO4h66mTfYU8iKGaq3zsPcj7Sucrd7HN7ID+f3kL+NlfNT/aiRb+jlwUd9rnUb77JsEEulqaxXmEiZ5SB+mxkhYbljXSK8gvxJ0MkWBHgV989/MfU6frMyDH1vF6iIlE9jEnf+d5ihq7j0olEi4K9GFZA9pQDuz55Fd3k+lIEnBc56gsys6QfCIdcLGyE5YYT2nzZVuxGXkZzLNtwtcX3tCODIozOLwD4ke+0nC2jZ3q53+/w8N7IFWLva7OpneAkL6WDg5VsEUC83alSF/YNZ6i5Vphlpo1Fivym5ai9cAHewBi+xc0eUsijwAW2mqvUx/FL8WmUty4IE4C87TsXhwYoC9gpZHshzKf792VHOR0Cnez27Fbq4MvR6vYIvBMHGvmAPc+Uf5DEj0CundWAX6yyyxw/Q/Wjiggg=="}, {"__id__": "chunk-d78947869054f88f6fab4aca443fd6bc", "__created_at__": 1760495951, "content": "# Transaction Script Language\n\nBitcoin Cash uses a scripting system for transactions. The script language is a stack-based, Forth-like language that was deliberately designed to be limited in scope and executable on simple hardware. Both the locking script (encumbrance) on a UTXO and the unlocking script that spends it are written in this language.\n\nWhen a transaction is validated, the unlocking script in each input is executed alongside the corresponding locking script to determine if spending conditions are met. Numbers (data constants) are pushed onto the stack, and operators act on stack items. For example, OP_ADD pops two items, adds them, and pushes the result back onto the stack.\n\nThe script language has important limitations:\n- It is not Turing-complete (no loops or complex flow control)\n- It is stateless (no state before or after script execution)\n\nThese limitations ensure predictable execution times and prevent malicious scripts from creating infinite loops that could attack the network.", "full_doc_id": "doc-d78947869054f88f6fab4aca443fd6bc", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_8.md", "vector": "eJwN0wl3FdUBAGAaAp4QQkIWeC/Jy9vunbl3lrQiJkBpQXIkWMRimkQwbjEUF6RWJOcgJVAjihqMD8j+5i0zc2fm3plJgGJTidge1lLEEkKjBCTBVqEu0ZxTCESFtt9/+DQcln++b4t9l7S7Zwx5Qke67mKL2Tb5oPBb7RzcQdcU3Ov3gP+KMVSv3UlbzW3FJ2kXOgAHWZEyF7ygH1YXBhe5Fc7LaItvlw1jnfQneFjvsQ7gSPQdeXnbYCCr+45gpttDMvA6KS6OEZtLkJ85trwTN8EK8XV+Yd6j2vNig6fMOo+rY75AuZ6rz4IjWol9JTAGD9PT5iH0kgZwXfIeNkEp8crriobM+doZETtNPAoMc0eU79m/HNfKQCmWjpeiag3BBqOBayQtvM+40zwXnwzKuGX+I2Ydt54WkW3Gc3zUewNtZzdIU2iuDeLbg+n+7MzF+LJwB7lu78xS2Iuh3umrKIbpxjV3KHceWBsuVj41h9CzpAAMd4rhUuE4/Si/GROcz20hNRizsZ7LHTXSAPiBe8fxaFZnl9rP34YtqMtjCOl2He11nxMXiAeUpq5d4XYy4f3WLUkeV0+Zw0oKrbYT4JY3RfrWJuxMvJWmmCN0sygbOt5A1VQqh80VVAoeA38yVgs8PRpYRbzC2+Yv8H2JS1wkftqZxacZtYkJRmmpUU1bfUT5ks+Sf4wicFSZJs4xCkJDyswktNaaWcYx3GD/irwCM5SjaFOREu2NXYLA/7J/I3cCf0XXJTfSh9iyQFnid6gWjIDpZD6/GT1vc9iyPqLRYD37hz6Z5Ent9IB0ztoAZhYM0SbhBPqzFjc/YKVwLBzBIpcX16K/Qd8FTkiUpNo14UFtE55kptEafxYbKWjsrpGyhKW4LzSL7Sbf0SfggFaKrqJnrG+Cb7gj7deUp8AAbHPuZm7y49BtKxLaD1djK3c9LrS/MPrAcfpVRw2uQsVGeXyHp6BzfyKXAkFPfJMoI0/xa5QBUMqqgnuKPOJhVtc1Vb1l6IHlemPobfiCsce9olaAFeKb+DU6XZa4S9o1UzamgYtQKZqjDZkr4utiF9Fschi3JwczP22utyv3ngolTM0ncAvpYu00ymAl4qPc5o4fvBDc9lfKq7nZcA7bpWzHvKfPyoBTfVsTU0QfbKS5nTIuwK3KwSivD6KPg0/n1ktJtJJWOIvsBwKfyy/K/eYesokbiZThGaBPWyRdak1Xdtj/5P9gLIe3wYPuq9y9vKo0YiPgFUfkHvogfAsvsVLBrZbx4D6uKvawcKLwZMfqjFlaMT2Ez/Az9G7tryRdbMEToZX5Z90r9Lz1eeCTUFruZOky9lu9sEXoZR/qlS5gc6CXNPvLc+q4rUgyrgar6G47TXnX+vvsVGLkHDFe18e6Utz4zu7kT9GHwGra6B/tqGbAlNEtdRm+KqWGvla3oRtwgZFpFKEKMqnnLIiSerbevojeiL7nKvDhQDFbyC2Y+TXO4yP4JOsnu/2p/GfC2cBorJcdj/XD7DAwq7QyZ4npVVeCp/kn4VEy3c5hbVojnGcdZEbe+wjqp2ZwaApd5XgVt9umfTnlKD3oo1PlKaRWmt/5e+oRtHCtjdH9oUryCv6R8RgYp4+p+4kUzEn2wlVgmP6NNAfP883qOBjv0emvnfHC99hc7oJ6k4+In9FD/1+6B85g5aBZdIUvWFnxf6RcfBClB/zOVsi7Gd3fWw8ZrfmC80DwPrlOzFTezXsyWey44Qk0EP4jl65x4TIxxi2haW524VqjH4+op5DH3IkGIvU0230c5Oi1oZukAc+j162TyX+rCbnBHBUeQYUCSx7T70cvYWYuspsTOXoJ5dEaUJn/y+CX9rPGtKJBHE8uISvMG85eM6vVZ4pGjtqndjj5dKV0nZagcSuDTNo7SmvZUnC3Mxx+jbvQplhvor9gi6hou7OBkvi+dhPc9M8EQKpqy+ZHfaOBqAVNTC/QD9T/Abc1pXQ="}, {"__id__": "chunk-f9fce514b60cd3764858062d4533e0f2", "__created_at__": 1760496164, "content": "# Standard Transaction Types\n\nBitcoin Cash has five standard transaction types that are accepted by the reference client:\n\n1. **Pay-to-Public-Key-Hash (P2PKH)**: The most common transaction type, containing a locking script that encumbers the output with a public key hash (Bitcoin Cash address). These transactions have locking scripts in the form:\n   ```\n   OP_DUP OP_HASH160 <Public Key Hash> OP_EQUAL OP_CHECKSIG\n   ```\n\n2. **Pay-to-Public-Key**: A simpler form where the public key itself (not its hash) is stored in the locking script:\n   ```\n   <Public Key> OP_CHECKSIG\n   ```\n\n3. **Multi-Signature**: Scripts requiring M signatures from N potential signers (M-of-N scheme). Standard multi-signature scripts are limited to 15 listed public keys:\n   ```\n   M <Public Key 1> <Public Key 2> ... <Public Key N> N OP_CHECKMULTISIG\n   ```\n\n4. **Data Output (OP_RETURN)**: Allows storing up to 220 bytes of non-payment data in a transaction:\n   ```\n   OP_RETURN <data>\n   ```\n   These outputs are provably unspendable and not stored in the UTXO set.\n\n5. **Pay-to-Script-Hash (P2SH)**: Allows complex scripts to be referenced by a hash, simplifying their use.", "full_doc_id": "doc-f9fce514b60cd3764858062d4533e0f2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch04-transactions/mastering-bitcoin-cash_transactions_9.md", "vector": "eJwN0o9TFNcBAOA2alstWsUAuePkbm/37b63u0S0pwRlDGmckYASTBq0og4JGXU0BgkqohIzNkaCYiiCnsfdsbv33tu3e3uhRiNQM9GimUBSUx1+2IqJEAdrqTHGtJLERtvvb/jKhNDjo388YU1WkxPj4jZ+hV5AK+J16AFssq751jmbyCU9B65Qn7Fi9m32wCKKJ/4OP621yPl21mUpiw3BZnLD2ROvUeoMCVw3ZnJXwMpIBwnCu75htR9Wyam2IPWyu6IDW1Q3uIt/Ld0n9XgPovJCvUv5qTTP1a+3qotb11tJSj0IyAe9d1v0WIU51/Eqt/nNaTkhSdmmD8Nyf9TaEXFn1KrQyGTJZHrmi/G31ULpNvwJKbR0oz7eJx4ID4MxMZV9io4cnR+tYcvhSdzvXnXsV57l8KPoxoyX0TM04Iwnr1TOklwxZB1kV0E1ywnL3tNNWOgQP4OQ5MZfEZppPZxgbrAWuz4GnsR8jsYGo9vkNn4cjs9aIp00hdh0tJ+MCt7HVeElmu/0ghomto9ITB2W09WLOnal0t62AHq27k/ikO+srJm55qR4tvhPqbjB4j2Ioz1coTXFdRAP25YuMxdbDGq4CQA4vdoavUv7d7AzVKo+Qh6iXrw97Qt1n3aaDRmHuEGtVHudRehzrp2gG09A48HzqAPMxnPcW6Ml4UrW7nwY/Q/+iuSTZPEFVQERbokxWdlglnAROsBVsK/ZZ1wEMWsZWSD9xugTTul5cJRsCQelDf5dkokWsnskyJbY00WkTYJrQB3PYkflmWiaWYv42O8dn++s1R//3mj2HwnfU86QIb6MtHq2uu+BZvwv8XeRPO64vAWWwNzgPXgVjoAe9aZw3WjkefMN4YCWhT3gB7tKIIk+VKweFgrBDfNHU7HegM/SV9Es1cu6/P91ztMPvENyGDSZNPFYxh5wNCMr5WN4KnOHVswF3tWMczQr/olvB9zF++lTujcM8WbtF54P0g8Em4wvtBxYIAZRLf6KW546RVpjR9yz9dXhzY8+EGMhwjeTy06yfpJLKPv5J6wJSCHl6be0BvYkbPFMRJ1GEZ8VTsON0lhonpJCPwk/zXfhvHbO85ZdBj6SR9gcegG57ZWw1rc2NSOjCJWAiUqnp1NwrDiXJF1wh/APgio2wgp5yH/CzoebhK3yJPNRbq85EBlrfNVKUVap8+li3G2VosrMF+Rie16wT/q85QTcjoLCoNIdZvBNs0qNg79kbId/SFzxLUN3tKVcyDNZPgw5lqG9C6eSZQKBPeBWzM0miet8lXhpbJaQZKyCf5Pq7cOCQzqVl+AVyRFOOaeprqcLx8AoKkSH5ZXGW7EFqmUXGMyxabv/mj1M38MDTdWwqu07cadRz/J93Xgm2cYXkL3RM7FK+qR9Xd5Pq/2vCZdddeCaPoJ328/L5/XX0YvCiscWkSNgGlTNQnhbzLbLE42+UvxXdstKRQ/jN+PFcE5sS1s+OCS+Al7mfyu/n/iUDdLdDZL0pS61JFmz2Vx5J3cZV5ErbBPd45si1Ib3/f+7Yp2JfWka3JzoL/V9x/4sXWLz+Q/l2vDP7O/x7sQ3OM0jwx4qRGdkBoihrNX9Kc50S49YIzSp9TX7Piyw58L7LEq7aMK4FuyBl4SLsc/p3OCMdy5qJ+WGxB1zk5MmdsdrpCQ7IB3LzLWmolawGq3DOYBlnkHrnafVG8p5cVFatecALVIesaLWIqdUiAlb7WVkRuZx0Ie/pWPsjhWYcRX9vI346/FDclMqkZ83v7FPa17fE6iC/t2XlzKWnh3r0Mv0Uq/XmQq78aD/uDCRVXqeYuvVNAyAwsvqAnKBDYir5Hq8nF2He+lVfSNaGznEfceGnfdYkW+hUu3LJv8ggl1GN6f79VRWFwqwFfb7bBidY8XCOTtbyHEa9CArh654krTOeI5utG6AEfAmLgdLrBHN1TxA8qQOsUFul6tSV6MfjV3i120Bq58ttUfx/wBzM68n"}, {"__id__": "chunk-a48e7e81fa16668306172c239f89049d", "__created_at__": 1760496164, "content": "# The Bitcoin Cash P2P Network Architecture\n\nBitcoin Cash operates on a peer-to-peer (P2P) network where all participating computers are equal peers. This flat topology has no central servers or hierarchical structure, making the network inherently resilient, decentralized, and open. The decentralization of control is a core design principle of Bitcoin Cash that can only be achieved through a flat, decentralized P2P consensus network.\n\nWhile the term \"Bitcoin Cash network\" specifically refers to nodes running the Bitcoin Cash P2P protocol, the extended network includes additional protocols like Stratum, which supports mining and lightweight mobile wallets. These additional protocols connect to the main network through gateway routing servers that bridge different protocols together. The overall system, including the Bitcoin Cash P2P protocol and all other related protocols, is called the \"extended Bitcoin Cash network.\"", "full_doc_id": "doc-a48e7e81fa16668306172c239f89049d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_1.md", "vector": "eJwN04tXFWUCAHAecaAwIpGHeO+d93zffDNXRbei10pqZmb4CEM7tKagRZrFlqmImp1MU3Z5yEu4lzt3Zr5vvpm5CIbaMdcs1sQ9kLWu2oaQKWtGUWbWqbTX/v6HX67ETPpgX4XzYrDHflk+J3Xrp5wk9wcFKYl0DuywD3gb1BrxFnjR+So2THbQ01qFl5FTaL3o9FnrQNA7D+Yy+bHnzG3amdZ0sUmcxtbiBRh4PPheTgYLQZ32kLtezIskG1elwyDYmia+pNQYg86B4GPBOvYdTVd/99XWbUVrxTP2eUU02nMolwKra7PtrNhPUiHcBE81PgHLpMnam8w/6H20HLMT56a/a66pWacx7lNKtxUPUhyTCDSOImGrtZHdre2jl5VdgV9lidQYLcYYkA0q+MVasOFR+e9yV47mXUyJwiMZCcHZXoo5je1m0kKP3PI8Zsh96C04I6Z2BP13SGG5szXNWsa+X7ukYxvYRorb+4S6tgZlKDSOrQxn2Gd8qZ4GdXQc7M+Q6QSROK/snSE2qFPV3CDjFAmF7pD8Jw2FePknuE9Z6X5tJTgfwqkw3XcQQLmcvOXbsbdALJRvdn9rJzk3EQ5l6d+pbXtXscuMNrJBfMf6EfWa96iPs8ulZu1W/VtaEsnWA9F4No3eplc1p8pTSLewBqcrdzqbvRO+Z0i1tMg6EftLVCWJehFni63B074u/hieKdc6Hhx1RtqnkBtkpd3Fp0gDZDLP6H2SRvP50rG/RyLR/WBM1stqqbve3EEK6FEuMbwSK+N3gzJfEbwkzjRK0Rx9dewEV5HxpDtkFxj1mRwaEf4merAosBHNdgbaS5T/sjV6lzYEMhg93ACGYQK6GxXKx0wp/Fd8UihxiulooGfsUtaLvalAdA2MyJdD1y0uUqUjOhY2g7NONkz0BHLV+NwfEt6m6bHt3LSmL2BADmgPon+as+jGjon04/E33C/pQV9mPbLPOj8aee37rQMNl6xmORUPyekojotDt4dW0sP1m9Vx7gvR5vBduQ/qp5mr8DB7xH44ZkWGjWIt2XfKuo3JmrBFupAxSl6yZ/h7lQr8gnGIXjGHYH7gLOrDd8I4NBJ4teOCUOy1SPPRRcp6XeIsooHNaqq1HM8Dn8khbRPbwkBayw4IP4fjnR8aC9T1sEd5krh4vn8enyfOsO53+jCSk8xZ5rPBfk2hjW6CV4JWa/3as9579DKbIz0QkeAn4lG13FgsfoSTtEN+YPzCFHeawnHUTy/xJ9sGQaK60zKrkzh/SCS+6DjY5i+SO8FOMB5vd+7FnzXno1LjaavHLs6qDHTy5/lyCNyHrWtt2eicOgUs03YpScZg9HvU674ulMSmh1eMP+Om4ql6UJwNy9zv5Lfdc8avyhLnCg61l7l+e7c+3c2zh9F0/IWUCzEZZko8TpetJSgf+NFEZYG1WyqHb4BncH9gHjxKazpmot/szIa10agc9opcOWey02Os5Y/Le+SvqtPQFso4eUK91CQMSvfYf3aX+3eFKjPy9wTMReRRT5FOm/OFEf6VQFPmh+5J/JGyiDRE/eDd0F22Ft0IBshCuoFuj31MGv5/8ZqzLnpIe1W5AZfaC8Wj8lb2VhwfWwAHaJM6lmaCg+4D3kPOfCFmjHCM8InFksPs+8oksgI+FnvN/Y+zqNVvXY8O6c+Jsoa82YECdbGSTApgdfBurYf+S5uoSnwBFvhRu1f61n3cobEJGEhJnt28VOrcdoeY2HaFVLnHAvfDOHyZeGRMpEzqEwrxFiMecmwq6vVS4SRpOvg3nhvdTlc1rool5eyKuGKLUkfyM0ec69ocrp/7HCuo9HYxtGNCPap0gFsgT8IfmKtRj/U/sBrHucudZFSvjLK9puVu8m6Ep3J53nvsKSZLbzO68RqwM5QAvsnNkxrtKndWTBYqnRXcVvYJ4UjoF+lTIOzJb0fkkqmwLfwQ7G3JVGoVzrggAVwl8sbTzmD4GO21/gDBMJIh"}, {"__id__": "chunk-cb3776d4a40e4c920199719f5e61b036", "__created_at__": 1760496176, "content": "# Network Communication Flow\n\nBitcoin Cash nodes communicate by exchanging messages using a simple, extensible protocol. Each message contains a message header with a command name (command) indicating the message type, followed by the message payload. This design allows nodes to process messages they recognize while ignoring those they don't understand, facilitating backward-compatible upgrades.\n\nWhen seeking blockchain updates, nodes use getblocks messages to request block inventories, receiving inv messages with up to 500 block hashes. They then request specific blocks with getdata messages and receive complete block data through block messages. SPV nodes use a similar process but request only headers through getheaders messages, receiving up to 2,000 headers in a single headers message.\n\nInventory messages (inv) are used throughout the network to announce transaction or block availability. When a node receives an inv message announcing data it doesn't have, it requests that data with getdata. If the inv message indicates a block, the node requests the block with getdata and receives it through a block message. For transactions, the response comes as a tx message.\n\nThis communication protocol enables efficient data propagation across the network while allowing nodes to request only the data they need, whether they're full nodes synchronizing the entire blockchain or SPV nodes collecting only headers and specific transactions relevant to their wallet addresses.", "full_doc_id": "doc-cb3776d4a40e4c920199719f5e61b036", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_10.md", "vector": "eJwFwQt0FNUBAFA3RnLKsSRlCVmSze7M7puZN58li4jFNI2xBSzKLxpIUKCARZJUqHwEE9KcgEFIUyBiPptkPzM78+a9NzMbIUahKOXXHDRU0AYEwtEiaJFAC+KJglDae6+07JWz9t6gUvhcz7egNrBNr1PbrSuhm1wBU8G3orCzLzkyYUCoNaGxXNPpVPk46c3/MnrcPqbO4i4ht+lCZ1N5xufse1YPfwKMkj9tN40P7JhQCIeVUrZS7Ewt42aRH903Qp/IfxK28xngUabA2h/ile3+VRII3eroo2ViLdjJFyuATTA1aCwzzO6hrPNc7iWxgr9GGsXP1CKlXWomiEaaiTKb8xunO7/hovYPYg9+NHhR/Sl5kcygA95pqDfq51U6DIIByzPKGUteM45xa6Lrts4NPeg/7T8Edpnv0r8E/8g2wX9Lr6IQqubW6UgfBj7LpWZJzfwV3ENuyl8Z2fJMPKCmkeP6OsfnLbTma7vM780LUknE27lZmKPdh3vszWKFXAeH3RGyCvhowdsyM0VaqmyRHqZ/YIAzk18vHtx1Tm5ln4OjSa7R5+yWrwOAxgt93GNoYaQ89ST1J593qrUjSRduFDNpoYKt/nG29giw4SJSICV1qPD+V9n0UNgsIr3oaXLQuAjnTtiU26SfCFY7fcm34g1CpjEL9ZgH8APZR7QyOjN4ifYblWhEHlHG7FjRXa6tF/egh32TaWk8N9aJq2mb8CZKGC6YYeTDU3gQaF0r2XL9pHeAbFEW4A59cSqGFgZnJIrVuMmq5eCV8X/WQ94xUFEX248Ja62deCAhCmdxudSvfcceBg95PxL5xCH8tVCPerU05Rl5XssHxIQumANW8EezWpNNjBMz4D19KPixtlq7DEZZnylzpEWiKTSoKXwAtXs34UrYDefrTfJUkpf4Di8x3uHq8VXLnXOCoXA5twZ+wu9D/WavNdTawZwmHfoPMSaxlPLqUljR9nv9fTxNlPGc8UDTxVrhQ3hhzBf6mLwSxSRAbI3/TSpIDphh//JoIS223jAyI13yj96z5gNwUc4bgctqRzzTU8OaAGkzDKre3F0i3m1D/G+5JxhW/gq5nae5pyj0tcN+zNLpyl21kqsXMzS3vTPo2l0Y+sZoBpRMdVewv9CmoF/CKvi2VBy4rUbUqkipMAmujB+lN7gs85hndf6vQ3nKEVpi3EiFhG2KT2nAF0ipUNd2FN6Dy7tfUrJJnHNbULnj1cA40SG/ye8JeNoelOJdZxROybD/vqNIqsnPjc7zD/kXgAVAEEvBoLGDtGSdMi5JOtNt7gMDRlIsjhZNeEvwpSqcj5N92ruBlUFJEoTL9CNzg1iF4vjnqQpSlziHnycjpJEf4u/gZmG/cd3SxTL0orYwTlEZTkefWjn4cWkiSc9Lwe3G3M6ZHl9wcxDK53Nb5N8pt8CQdgje5N9MdvuvcVeJz5nGPmP8w7iDD4oReosEGy9yTwUa4plwUL4DROkIWYkPcIvZJeLaAGdl0xN5z3YNsRuZMPqSNMRk0yXU8bPhvwK1zGiyHVP4dfyuNjb5QrDB2GkmmGpjvrUEaXS19Zpnd2QZfQKPSNNAFcyhy1BYesScHNwXvyaejJUKZerL4L59lky0PdIGxMJ/ar3MakszV8HbaquS2ZOkL9GfqNO7asA2z3VxlZKwVxiKXCWMtjbBtPAQrIuNUi4q+dI7vu/zL5t1cC3dYi8k/8H3onOcsLZJajImbhGZ92i7fbUFwPO+ZPRzfTKKBtzCRuKy6/n66BnxcSNLeiHv9cjGrmxymOTERfLfQKt3P56kpBsX0G17a+h/KD2wPlkkNfo/ROPgeRih95P14qA+wZkib8Uu0fSvN/9qDEphuI2twr8iZ5w0/LL/tKsSZCa+zf8Cv2+VwVeEecGMn0ViRc50MkmvETy2W3hI3avHtBLwem4aOQyvkfLxebEGUug7aZyS5sJFRhQ+m5B9azo24IKkTmfj/wMTx6jQ"}, {"__id__": "chunk-597c05ab1ab999ec221da15897d76591", "__created_at__": 1760496185, "content": "# Network Resilience and Dynamic Adaptation\n\nThe Bitcoin Cash network demonstrates remarkable resilience through its dynamic self-adjustment capabilities. If a connection shows no activity for a period, nodes periodically send messages to maintain it. When a node hasn't communicated on a connection for more than 90 minutes, it's presumed disconnected, and the node seeks a new peer. This mechanism allows the network to adjust to transient nodes and network problems, organically growing and shrinking as needed without central coordination.\n\nNodes typically maintain connections to multiple peers to establish diverse paths into the network. After initial bootstrapping, nodes remember their most recent successful peer connections, allowing quick reestablishment of connections after a reboot. If former peers are unresponsive, the node can use seed nodes to bootstrap again.\n\nThis peer management can be observed through the getPeerInfo command, which provides detailed information about connected peers including their address, version, connection time, and data transmission statistics:\n\n```javascript\nbchjs.Network.getPeerInfo().then(\n  (result) => {\n    console.log(result);\n  },\n  (err) => {\n    console.log(err);\n  }\n);\n```\n\nFor specialized network configurations, users can override automatic peer management with the -connect=<IPAddress> option, forcing the node to connect only to specified IP addresses instead of discovering and maintaining connections automatically.", "full_doc_id": "doc-597c05ab1ab999ec221da15897d76591", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_11.md", "vector": "eJwN0ItTFOcBAHA1hZBJwSa55A447vb2vm/328cRogbbqAlXgWYiQtLIRIygQojBEYORKB0ffSCiYhSEwIHH3e7t6/t2F0gxNrZaSpGUC1Vpo6QZi7HBF9hmdJIMiUWT9vcn/PZ6DsOe/inSm3nd/jX6CwiCf+l51nq06kfPMwPM0+pV/DVodS+lp8IzPT+jUh7YAQcZn7TBcwUPUgXsJqsCv00dsV6CM8wOYxwFwaXot1oiNc8qFZbSe4Rm7Uv+xz3TYA+AMRluF2VqF1yEHtPjVlXmfRTCFwTGtyCWRD7lffSDqsWs6+yQeRSEN8EK8ri5UVoAn2ejoe3cOr1B4LouhpfhdWQys4M7KNVzNWiEOLhx6QC4Y7fqs+pyc0esWDur3odz8Bl/J7wLRkiW/JtoiOaARyli59OjYIxDah+edi1iukBl4EX8u0OV7JDjppYAJ/DOw9N8E9tk7jcPwI3scXEXKW5vCbn1/5Bh7ZhShOdzE/KJpgr1S+UuvU+pUCN6Az/NZ6N69TlzhitVTtnpcIJbA+Nijrkh3GaUJF/gxkMf8EPNS5lXdZF+0i4Sc8EoOwIOe76TErU9faszrkVz7Lj6vTxgXeJuaxmiy16Zutl4heqCbxl3hBL3WW6YbgMNmf7kCf1XUVkreqIv40V1H6jS97hukbUpTqxRd/StpkMm5J9omfSdtTXS6H9JGUG1KIcrcsT1ZZ31blbeDS5bY1SKscUMa52+Q8yQmhS+1e1KPm/e8Pd5n3MUaP3wM/0iehNva99r7cw435koXclIkeZ21rIJ4tzUV6kX6LPuOvt15rGW3STH/IX/l2otM49N5T5wD3sG0HnjY9UvTuozR3YLrP6N2kpGfIXiID+L8v1N2jx8xtnPDqsLtGfQR/hJ709JrpApyFyl8JV0Sg0qq2J5OIlf6xsyQsxl4zJC7c/K/ex6a669kL7H/JvJ8iviAFOGPySP2K+lTvj/irH6Z99bbQnkaFsO1Z12Q6nEQe8NtkB/Geaiq46nhDznPpKPlgQexpGQD1czW0M/iQzC5eRvnfd7TO0PVD1f1dZIGtGk9wFe811D0PgE1nEhLZC+SrujXOVXM9eZbGqUHuM+1xX7RKzJqHGP0383JmMueEGX+BXia6F4z8oWt34p8AztBh/qvz92y3tavaA76XtCORiC56V3og9yX8CDzM+xGZs9JlNLlJNaLbtJPKRkk81WO3wkwPJ31bGOT31zUgfU/4pBb5bQbK0F3keDSPaWdoeFlVanM13bgAvZ08ZSoTTwW2MTNZ/LpVfJDP4BegpV8Tn8Gs4ghWaUdKlnYb5nUDuJx51H+Eb0OAqDj/B9ay++hQKwhvIFygRX+hiegs/G2qnqnjFZdH9la6lxuob/gi/Dr4PTxtdWMax3jyuN3apRTn4IL1pTSit/ItINAN2hxlviSi3Y37xFfLe7gMvjRlG+b8Bd50vFTyizvFNz2rV8ETkqp8lvouv4W/mGdk6Ld5RI+fx2LtOjskHrDdzl6WPWsltRia1TGZ6J6O3IFiMr2o+jdkrsYZLCJXFePJT2Hq5WF4rb1cW4gnnI5zTyo5+wEBfYjWS1XmjtUGbQ00apMSocYivgRjwJEkA5vYj7PDzsT5CBsA6eJK3mLutRa54QxqNMGq6kDtrNajKizZ3Cx71z9DxyBTbKrvR77XVom7DZ3qUt9GShclKLBgM1kd53xzNbxDquRfWCJb4DzPcSbWZrEXLG3aR58Gnumn6OvqkUWy6z5/ALUGUb8Aq5BfyROceV673hMjZXLuG/MSZ874PVVK93fTTPmGtOy5ckVXGoywPlVJF+Sj7OfaYcZ24mb/S/52CjDtOV9pAR0rahSfrY/7/K9CSQHas2b+P3xRy+SJ1v6jjdqFbe9hNSy7nfccX2q7Om5J6hgwxoH6bX2G+QP1lTvunYGbaZcXRPwnvcP+BiOdGzk8S05pREbTEqlqpAmtDbvQkNKg3S0Uhp1I7lG4Wx/wGVN6xL"}, {"__id__": "chunk-a6fe9888049649fdfc5b2e2d912ddfe6", "__created_at__": 1760496217, "content": "# Node Types and Roles in the Network\n\nA Bitcoin Cash node is a collection of functions: routing, blockchain database, mining, and wallet services. All nodes include the routing function for network participation, validating and propagating transactions and blocks while discovering and maintaining peer connections. However, nodes may specialize in different roles based on their configuration and capabilities.\n\nFull nodes maintain a complete and up-to-date copy of the blockchain, enabling them to autonomously and authoritatively verify any transaction without external reference. In contrast, lightweight nodes (SPV nodes) maintain only a subset of the blockchain, verifying transactions using Simplified Payment Verification. Mining nodes compete to create new blocks using specialized hardware to solve the proof-of-work algorithm, with some being full nodes and others being lightweight nodes that participate in pool mining. Wallet functionality can be part of a full node or operate as an SPV node, particularly on resource-constrained devices like smartphones.\n\nAdditionally, the extended Bitcoin Cash network includes specialized servers and nodes running other protocols, such as mining pool protocols and lightweight client-access protocols. Large companies often interface with the Bitcoin Cash network by running full nodes without mining or wallet functions, acting as network edge routers for various services like exchanges and merchant payment processing.", "full_doc_id": "doc-a6fe9888049649fdfc5b2e2d912ddfe6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_2.md", "vector": "eJwNzolTFWUAAPBAMDqkFJPzvbf3ft/uPjTJMI8GD1JHE8rwmDRkQCTtEkwznVI8ASMvng/eubvf7n67+x6ImWie5YEClg5SmUnJWDqUpB2W4mT9/oJfefpW6UxzDO7N7IqOok8657mmG/XmAImBZNByvGnNjX5FH4UR9jrebRiBLn259Klxje0zFAP6NnCb9F/4+8SJyDa5TCxk4lgnOKm36LfQAFOCbfSX7riUD6SzkX5+kraGyBGel/YbY5k3he4d+djrHi6Z4S+kBmEbfiV8WejwXVbfECd4jsEWKpcaKfPqefWIYbNFcDYtipVkHrjEP2LuN/tJOxPC74LrwDZ2tt0JJvsahFlKcjhRG2JmMgflfD6bq7IK+Zu04hyMN6VfDI4HB9QDzDB3g/dV/oaA0o/oOcwcEMusEVvxbTSauao+qEvjPsBzFFLaIN6xtlhNYBZ1XYjDH2llyT3yusigUBK+gsvppt0/CrPR52iJttacwM/Dp4TFsAxUpxy0KrkkZDW6eBFGxT5pmlkpF0bGs1lSrzwTTGb7BJfSq1dGJHifXahedZLgYatDDUeHq27ulFUdYLR2yw2Sdi6AT0bvyT9ox9HTbBzySJ/qSUJ2Sg2TKP2DFsmd+NfAK+E8tDbtJluCs8Bj0ZJUF14GrqvrUSMFFJ7bq3dFtpA1eChVik/DfcI55jDqdx4CreGXUnO0SnKF2WTN2zEVtmQ04qX+VKAkPadfJaajLLJceYdxeJvFWCPFNd+eolekNAV6uHaqSNtFlVLJ7NHQEmgQAyIlMBM1Wk16EUdgC+YRDO8n9/i84JAxUx4l3A3d1bolv9AXWG9mgRA5lZ/7/0FHJVQBfod1hyf7RqZ/ZGhcnblOmst30Hlgqt6pVqhVqAdvFHaKN9RVYJVeu/sTPZkNMgvxd9ZWpppOBCE2HhhSs3rQKIwWazPUMdGBcnIoTSm0c40CMomfpwWMv9lLfi9qS70NrzkWg0nhk9o9sli6jWscOYYMY0MnXJuJkkCr/FXUJpHuBF55it4h7VLKuO/R+rQ8tZVwZVzV1pPF1gj8G+kl/xY24QUcJT1rMtEBTmjPYPKEHYi3zzJP4M3MdrFDuW3lcoGU+aIiU45T+sP0aw4cKFYpegSYBA7BRPWIelHphl3wbeOsNla5F6rFe5XhUoz4luawOq0HzGBpAtFgzrBKwTbyS/YO5fImSzU6yZH2PokMBPzHyLD5/tAV3KNplaCA9Au5YrZ1kT4Hf0c/ux5Ds+FIbrePBlfS/jR7saq8h0eBSmK5VaYN8TWAEVQVX1HfjpGOEQVywX3wudgGzxgTcR3/YzDe3xUdZ35ocuZWVGEcZpfBG/i0a6OyyLLhdYWgbf4Zc6JSpceGv8d7xGJM8T3scdXDeIyKcK1ySSgiOWGhNDU0ekgxN3LXLA1wVTAGd0eL+OoneL1dWcxesz2mUheD7+CHyDSuB66qqwS/2D+ZcaCQzwGU+oL9mZ5E5dMJ6XX++0QzuqUtIwJBhlgDMtBlajAuxTeZVqMz/AZfRzLbE7St/OowYxEYmOP0WKuOvqdv1vZJmK4GbXiK0sJ+4VhqFBt/sQuMDPg6vkmWRrrwBJsIHUxp5R6XdWOGVbK9iH8I5Ug3IqvtlZEL9GAc6xkfWgRf5seaBY42th7Y+k44MbNfWKCVSYluVvSid9ks8wLVjP+0QGSgOQXWR15EXq4quCn0AElRBpej437gOIRAeix6nfkYfIMt3O5I4GuFkybmTvuv0KO1jQE/WunrxdmEpCXV/8G9hN/2jTYT3H3Y56knR/F/oJjgtNC/MMtUgvHCt64ONd69QVtB71Bqcbf+tdAirWImKoMsOxJFP3mbzG+dpH+J51LwY7PUUx7u99YyY/A3mNB+wGeZK0Y2s1yuSSt4qpH5UNhAj3OOl/O5E8PmW9OE86keMV7K5xNEjzMFlmcs1R8hV1t3lf8AOjircg=="}, {"__id__": "chunk-1792c6219d59129c9d4e023e128aff6e", "__created_at__": 1760496231, "content": "# Network Discovery Process\n\nWhen a new node boots up, it must discover existing Bitcoin Cash nodes to participate in the network. The geographic location of other nodes is irrelevant since the network topology isn't geographically defined. The discovery process begins with connecting to at least one known node randomly selected from the network.\n\nTo establish a connection, nodes use a TCP connection (usually on port 8333) and initiate a handshake by transmitting a version message containing identifying information:\n\n- PROTOCOL_VERSION: The version of the Bitcoin Cash P2P protocol\n- nLocalServices: List of local services supported by the node\n- nTime: Current time\n- addrYou: IP address of the remote node\n- addrMe: IP address of the local node\n- subver: Type of software running on the node\n- BestHeight: Block height of the node's blockchain\n\nThe peer responds with a verack message to acknowledge and establish the connection, potentially sending its own version message if it wants to reciprocate the connection.\n\nNew nodes find peers through DNS seeds (DNS servers providing lists of Bitcoin Cash node IP addresses) or through direct IP address specification. After establishing initial connections, a node will send an addr message with its own IP address to neighbors, who forward it to their neighbors. The node can also request IP addresses of other peers using getaddr messages, enabling it to find more peers and advertise its existence on the network.", "full_doc_id": "doc-1792c6219d59129c9d4e023e128aff6e", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_3.md", "vector": "eJwN0At3FNUBAGBATsQAKSTZJLubbOY9987MBo48DiDKI4KecNAUQwJICI1AbIFUEsQiRiIipaKVV5LNspOdnbl35s6d2QiIIhieBVppK6GI4dRYThGVNkgEoQY8xfb7CV+mwKtf7lP8JSVHvTnhucI+a6dbSsaoNWBocX/oMW/A0zHldw8PuCv8SFtjakA+Sz5/yMEXnIX6OqGC1go92bW0014iqc4T9gnwbc4GcspZ4lvsIn6O1su9rB33rnEsvJGaDxrlJvgev0O4Jk33To/JK5mYjKn/VC7lDVjBqKrKwnGpN3FTPCOc5BcErSBPT5gHlOXyXf4yOGBcUO+LU71Gdyb6IDoDTLB6uR7R8xaDSmO8Msfd4pYhyRXxddzBvKl24VzgSdXsh7QcbzN0eVtuGRdQ94mvKJcAbv80dTb5g7hQ3qvNJu+QklA9UpNPRhqtgx1rlTpYSXPcbqBzAWDhc4y951xRtrsi8IlXYE8AL2Eil+spEmMGUFZS85dr9TAhPU+20XrYRvI7+8VuqGnn4Uf4Kq6ld9gp0naRAaFIs6KjBxi+c4hyBnzMPMVy8lEaZz5KlzmiUO6lQlmma5wEHmkBt73nrVfiRw0s55Ok1p0cC7czt5U4P5RUmyx5OJEvDEj7i8zEtdQQ2aMjxc+cHNBsnKcjzQrnafAA/of3eDKCRu88EJ/9/7WzOt++zrkSLh0ZB2u9QQjYL5Lh7iHpsvxhcKKQyTYLWU4fKysDsRE0hKFTBz+nFc48OsgZbqRxH1qDWPQ37gDXzTxt7FGK4EbPZYa7B+lg7/uY1a4J58Gs3DvCDfQumOT+hG6Cb5jiZI62WcpJTCMPwS8Kx2l9IAWujB6DX89gxP860G3Wt5iruSlkmLZMfVHtljPskHPYLkNP+vuUK+L6wsvqKftCRyM6mhgUwe6J9Iz26exLchWbqSF4zkHYTW/cfdF5xL8+oiAcDNv0gvMvcy9z2tmO/cIMriX1R1Sn3G95G+Zzp9GCgs3aTMqB35sR7k3jD0JKMUKPGrM6N5kZofGw3P2Z3a18x94T70m+5aB72TL8GH9i7CK4YCm3Vj6pVXNJ4apY44zyn2BK7Qf35IJLbqltKSx7H9ra/Pjq9J3WvMQGbSnaGjNSr+EqiyaD+uUgUpaA95VnE+vRjq1nhFHyg6nHvMX6WFjdhvRlqq1cNC2S648G30UZWEWnkKmglju05ydleuQZ9Vu8SJyHZ8FdxtdMpfxweiX7J+G4sVBqSx5Uz2m/dcO7utSMwoId4YIR6jChge2VbrKhOOu+ai2IGyBPn2JV2j9vnczN5og4DdwlP9LNTgZYCKuFw9Ee7Udnr7kcnkJNgRt+k1njKjTYuox8yt8HM2m98UHxVTJTfs5UzWeye+13yO/Mev+HcEwdRSflzxBqjSa+sZAT40ImXB8QQYVyOzmDHRrO4QBZK3LwVT3lD4O97p8ZNvZLsdQXvS+skP1CYp2QKTQrofAkaap90a2TGpQv5Wm5Rb5FEmaWcEQ8zjSAUudxr6Gjku8Xu6TB3ETZpK00CDrwJmsFe10I475YVHptVDZ9i/yarLFv0J3SXDLX/VptB1v5qDXZ2gRLEyvRLbJKSeOzaos1n+n3DlkvO3mFx5LPiX3MSmuCVxJp07oMAN97d6S7n9SEtwuN1rBIPlyjfeXtx9ncePUWfkOaV/KN5OBcWKX6Mo8CcJtZBo7Y6+l1t9wdG4h2rkKT5UeNJvYQ+oXfRQ8HVxfP1+8WsvhE/Ja8SvgNaXAD8mJunPg2seWelJZkUtQeYiMnQnu4r+xFOlA3M3V2BbkUFcy/tiyI3eOnoUfsfl4UXfcp9CswnpHRBrWKvgC/N2OkfXeV+m94Ja8GZbrj/KVWlviGOR0sjmwxp4b+QrmEnPh7vs4B/B+ylB7BzZBHadYuPpZqFUQ1oWyMX5WXk7fknvy0e0zeggVtrhZN3QWZOz4TDOV1W9EH08yi/wH+w5rj"}, {"__id__": "chunk-f89763cde710206e9c2bad0f20aa6fbe", "__created_at__": 1760496252, "content": "# Blockchain Synchronization\n\nAfter connecting to peers, a full node's first task is constructing a complete blockchain. Starting with only the genesis block, a new node must download hundreds of thousands of blocks to synchronize with the network. This process begins with comparing blockchain heights between peers using the version message's BestHeight information.\n\nNodes exchange getblocks messages containing the hash of their local blockchain's top block. A peer with a longer blockchain can identify which blocks the other node needs to catch up. It identifies the first 500 blocks to share and transmits their hashes using an inventory (inv) message. The node missing these blocks retrieves them with getdata messages requesting full block data based on the hashes received.\n\nFor example, a node with only the genesis block will receive inv messages from peers containing hashes of the next 500 blocks in the chain. It requests these blocks from multiple connected peers to distribute the load, tracking how many blocks are \"in transit\" per connection to avoid overwhelming any single peer. As each block is received, it's added to the local blockchain, and this process continues until the node is synchronized with the network.\n\nThis synchronization method applies whenever a node goes offline temporarily. Whether missing a few blocks or thousands of blocks, the node follows the same process of comparing its blockchain with peers and downloading missing blocks.", "full_doc_id": "doc-f89763cde710206e9c2bad0f20aa6fbe", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_4.md", "vector": "eJwN0vtXFXUCAPB8oqRFSMKFe4e5M9+Z+c7jCikH1sRsjUosxEjlhKImSoTHs5sC6lKG4J4SUB7q9RL3MffOd+b7ncfF6FiYUWkcKQujrNyKHuBucbRQW0/vdLe/4PPLx+F/F6/2/kIu+sp79oJrVDHaxU11kuWraSlCIxdJTiV1GbvRCAVJFzkX3oRWiaUwl33QcpHXuRbuTesUMdH/zERwBay0xvjm0Dp5E6hGJ+M3uWKhZ16pgKR4PCX8GU8b6WBI3icO8mvUQeUr+7QvwXfS3Si9pLxML8CM0gM/OJRN96LbQse5uzw7YtvC5aguckpqEFcER+B0UCKbQrm9J3rYfiR7sdLp19gKCva0SA/idWK78QM6jm+YL+vn7Ul89+0VRtid5poNoVNn54QW8AHEtruzmOgUrg7048uoH70gpnpXSJPJz7iiOagXarNYLrbbOwwp2WMm6FViLlrNHNA3g0SjAZVZy7Tf7QTnTuaS6uLqmZtpe2ChNgayzJj8BPyHODXikCT4L70wvgrGhI2SX3QwHRskH3tKhAF4r5ydkse1ZdaKR5xWpV/yZNwaegw65G622vmSp9ypVrc+I6r/aS43PpfS7LeRGbzCPCM9i3+Adxs90JWWBbvkzSk9Zl+0GM3qOAgBmQ52gCUozx5UWWuGdBoNuBRyymwCKNhiT/NgvEy14JCQr7yrp3qXg2HQbwXm9prr8FpmAo/iZK4MNCGR3QGWQWyWMfezczyNxMm8pi8XC8zlZH08KVoZmEj5u/k20VI+hX7hR7RByID/MfzkdWmLdc6IopG0rhmv8WeOJunZYqd3lHpFfYSrlleFa+A0uRHI4e1Y5+qhqbTDC+xE+FjoPW6XJ6nz64wjqkKtB4XkrDghtoqreWDPVAU+0SXbdeI30pN6u0xbS0BL99PgC6HG3OJM6w40Heu+kV4uHWK7tcbkQTtBu4L67DmR+fA+JsPUmcXoUTQpc0nIln5CP3ovqZekh+hrcnbqQvOqtxguRLnSRzgPdkRzUDNd41Wszvi3VgG1IfNLWKTOpZfo+XICsx7SapIwTP+VrtTWqxNQ5U/QN8Vz4nmaEtcYO22ArpNyrkYIGkVkq+95dT49VUkgipOnwq7IvF76QNdP0QJ3G2TxFyQLuoXzVJ/74pEW4s5MgKa0kC4nFD0Bb4UdgWeVNCUPz8bbyP1iyDcs/4o1MhQ7JWxUD0rrOEnpxXeBv4hQrHEvFfbwz5k56DO6zLOffT+8jIr6viMDpAm+yraFRvVc/hPxI7gYXohN138zK51CPB9cYd3E76miH+b+Cwu5A7zXGDD3kucS5whF3eekEwodqbDGvZWaFeMtl/UuWWm/AL7WK2A+k2zz7DyryBnOLMHjSWroLLphFUQY3OZphZpWGx7LXKuPoDe5/R3H9SnSYu8icVysptrSRjM/TjlMPtTH4OPcMbuBfUqrVb9Fle58w40GVFO/hStVz0iG7wH1NF9sjbcWcbnsdniIT3SqTD8A1GRUT2YGq7AP3WF40Ak5GX7i7mQt7DI3wg48S9+o/y1aEPvFelHtCHfZU+3deCdZY+wXpzjn8ZC0NriSmkX62TKxOfI9tSjSx2/QPfDf2jdoq33ZjNrD3ApzkZCv38MkxYcCa8UcMgoL4pwwmzhiG55EC7GA2OP7w0L6aS6RL3HukS8rb/G/mc1yl3xGGnD5tceMbVy6PuyMk3a7Gsw0JPQkuK7vTf8q1uEMmENHJ4McnG6UxPa4m5gKcIee7nza+bknNTWJGWOzhF+1O4XL1gVri7XLiNOriV/7Wa5gJjn1Vr8wor8D6tNPSqWxs+GX1KdSYaCP3gze4f98K0TY/Zwv9iKRcJm4Ex4FM8lhc6ntDz4Nq4iLLw5Mh9rR+6zbpIPdxQ1Dh5d2/dOqtT4wP5RKre1oE7t6bmm0grsotZL3mK3kFnaeXotHw9mwR9inLKCuSzcib7jdoQbcHGNMO/h/AdiXfw=="}, {"__id__": "chunk-9a52ea476b1abdec0a91fb145baf515c", "__created_at__": 1760496272, "content": "# Simplified Payment Verification (SPV) Nodes\n\nMany Bitcoin Cash clients run on resource-constrained devices like smartphones and tablets, making it impractical to store the full blockchain. For these devices, Simplified Payment Verification (SPV) allows operation without storing complete blockchain data. SPV nodes, also called lightweight clients, download only block headers without the transactions, resulting in a chain approximately 1,000 times smaller than the full blockchain.\n\nInstead of constructing a complete picture of all available UTXOs, SPV nodes verify transactions using a methodology that relies on peers to provide partial views of relevant blockchain parts on demand. They verify transactions by reference to their depth in the blockchain rather than their height. When examining a transaction in block 300,000, an SPV node establishes a link between the transaction and its containing block using a merkle path, then verifies it by confirming six blocks (300,001 through 300,006) have been built on top, proving by proxy that the transaction wasn't a double-spend.\n\nWhile SPV nodes can definitively prove a transaction exists in a block, they cannot verify that a transaction doesn't exist, creating vulnerability to denial-of-service or double-spending attacks. To mitigate this risk, SPV nodes typically connect randomly to several nodes to increase the probability of connecting to at least one honest node. However, this random connection pattern also makes them vulnerable to network partitioning or Sybil attacks where they might connect to fake nodes without access to the real Bitcoin Cash network.\n\nFor most practical applications, well-connected SPV nodes provide adequate security, balancing resource needs, practicality, and security. However, for maximum security, running a full blockchain node remains the gold standard.", "full_doc_id": "doc-9a52ea476b1abdec0a91fb145baf515c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_5.md", "vector": "eJwFwQ1UFVUCAOBAN/+2DAV5wHu8mffuzNx7ZwCVMkxCyWL9XTHFJUjxiGWlmeQiov1Q56SigmCpj+d78H7unbl3Zl6aLR45FayitoFU2Nkt3WPtaruIGOGBLIus70MqzpROuFmetuTd8XC82u51CBusMu1PaV5abOSHh6NnzKVwgv8t1s/nWUv4VS2DxprX05dpC8WwSh8SSolg9tKlmum4B+S7w+LrgYv0cRbfEIQ7Mp1TivGrsbXydPaGl+JlaCSw2FjtHUw9Hf6v1onDno1aIZhAh/Rqd563L3JTjqfDIFW/kbwvdJG/p7fqyUo2vDe8CFUcfRwv2rOdxel2ZJ026Molo9JWpcsqkD4W2zAyBmnAiBnVxkoHFookF/8IPI8WClG+w7kl7IMOcaBxcsZd4pS6JN3MjvwqLdTuOFzabvZ1tAY+yCt9V5z/tGuj96lLMaRX+Go5Qg+Jw+Ik+mE450i1HSNVBjedTX9jf0DLA0u8a4J9+ln17tGX1KKMW/JfwyOR0NGZZK9drmyD6XIzKglOT19lbpE53Ey/En3kEua+YfAQ36a+oJQ0WkoNmE2zpFbr76JPPhAz0xazHXZCRp/zRdcp+0aLCHLoCKiJxGk95iZpDF0/bZf2MymmxWyjPKxjeDVamt6hv6buYn1g3P7nlBRwyLyccEdPIY/yTvu4e5BkiXOiK9056ETS00ktaKf8Bb/gU/QeY0GoO5YXnApPE4OuwTS8zJWTViBsJu+LnaETYG50UPuO9nvKY2uD/dHzLd+mTIIThAtgHfj08HR4U273N5iteJs5xCpYJZ4bnS/XjTln/Au8GTyFWhvv8J1KIlkuXELfg4+cuWwA58vnpEJU7TkYrgYbg+/ICfpdMhmMbaoG3O6Ai+QufN1bxlR9S+NPTI1Wob1yZWQFXh57Nenfwj75OLzF5rHA4a3gAfAliFcsmMRejz5oj0ZkzxWr0n1E6dZPkGfB/yRv8l6pOzKjZTMZhfeSRzLLPQhv1T/wTlRUpTpwQyjiZx0D5gHHkDgJ/Bacb+c4gP97fBr+2WzCu+tL0+3QYFIx6HLXeL8GdSDK5zRbWiIswIvZbe9M9bjJY3M818x+oxH1GC6yK6PSKJX+AQNCm/WN0Ottw2fcx4R6fkjOB5u83/IB0IHzhKCcTz4xOlGithN/F+qOVsSPTksPZNFAxlacR8qiNfbHeLbWIV3m+0JFsje8HV6HPmWy+gIJwG4ej8a1PCStQPPZY4nn0H3pKw61GuVqn5rAM+ky6STJD7UYa+k58Ithy7nwUfcC8z/+MgfRuqRe62JoN5iD3hHbxDpos3R+nXzuvHo0oI5VPlP/D8+HruHFxir6lPmbcTr1lBUjB+id9CnoM3MmSDYc9kFhlkdJe4q62CajMfgi7eYX1AY2hM4rRcxFptJXAgfSZigYeFAPineVStegmpLNZmCGiljBsd5grSjw8qZv1HYL6+ZBXLuJZIJVkXfVWSFJqrQeCzU2LwtDSTpynGbovXrDVJ/f8/ZtkGud1Gcbw3JAfkarAp+Tg2wLy1b+yCeG0xzDcpUv9f7tEVTXwdcxoNeHxghn0SvsmJ6LN+5ZidXw4VC+QugRPduw4GUmor8EU5NT7bRoE6+WXPKv6g/6LjnFfqJ5BKwIz9VS7OnmFLMCivoalEdnSqvRRP0ecB5ucJ5kJYhnzsc/kOaM5dpreJjFBYNWtjIvlGVRM46Mc2VZ/bxE8UZm2X1NU+xa82UBSIC0T5uRnEmva2ehxpMtmiBIC7GTVEgvkUHc57nkdxvt9FPW6uoG+71J8A3dafbyh7Xn7Bp/EcXINOrIrcPv4dtmNlmv7hHKrUJtRHR5NrAE1kPGCnmaKr7FW/ksYz+JE96OVCmVgZ+UY3qYD0EzesZf70vUm60Cq97+0UnMvSmFaZebA/qTDQNKoTGKS9nTVAj5pz2MbtYqgOIymCU/72+TJoNOvt92GiXO3wG4HaKj"}, {"__id__": "chunk-d9538ba1c5ee6fe988d719531bb203eb", "__created_at__": 1760496704, "content": "# Bloom Filters for SPV Privacy\n\nSPV nodes need to retrieve specific transactions to verify them, which creates a privacy risk by potentially revealing the addresses in their wallet to third parties monitoring the network. To address this privacy concern, Bitcoin Cash implemented bloom filters shortly after introducing SPV/lightweight nodes.\n\nA bloom filter is a probabilistic search filter that allows SPV nodes to request transactions matching specific patterns without revealing exactly which addresses they're interested in. It's implemented as a variable-size array of binary digits (a bit field) with a variable number of hash functions that always produce outputs between 1 and N (corresponding to the array positions).\n\nTo add a pattern to a bloom filter:\n1. The pattern is hashed by each hash function in turn\n2. Each hash function produces a number between 1 and N\n3. The corresponding bit in the array is set to 1\n4. This process is repeated for all hash functions\n5. The pattern is now \"recorded\" in the filter as M bits changed from 0 to 1\n\nAs more patterns are added, bits may overlap, causing the filter to become less accurate—this is why it's a probabilistic data structure. When testing if a pattern is part of a bloom filter, if all bits indexed by the hash functions are set to 1, the pattern is probably in the filter (a \"Maybe, Yes\" result). However, if any bit is 0, the pattern is definitely not in the filter (a \"Definitely Not\" result).\n\nAn SPV node initializes an empty bloom filter and adds search patterns matching the transaction outputs corresponding to its wallet addresses. After sending the filter to peers using a filterload message, peers test each transaction against the filter and only send matching transactions to the node.", "full_doc_id": "doc-d9538ba1c5ee6fe988d719531bb203eb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_6.md", "vector": "eJwN0YtXFWUCAPCyfK1JcAPiwuXeO9yZ7zEz19yz6e7y0ExoXSUxoLR8RgfXWMK1lFAXpRUfoCgseITLfczMnW/m+2bGB5wMs8z2mIiUla0e0fSkRqibuyw+1g3P2cfvX/h9DMvkH7sW62emFNnN0h48KqxUL9oNwR1iXyTfuaousR4YLqCQrvBlOshGUtYF66LLlXJyhH+SZqPtO3+iGwlv9xr74CKvLZyHc4Ag+zmOLTLW8DuC76I35eoDo+irvVvUOukSUtWFsFCpFabzk6VK8VfsvvxEvGHMC2aCudDfBKICh4ys/j0jvm/1EnsVXRq/izqlfG473w6XSsf1DazKGqv8GfamblLOIhG94JwQXhMMIWLNop/Rto5DsXu7FfqI+ifjHXQka1N0sfU0/73+EThqfA5/F7zAfkIpab+MnSa25xdg7+57wfN2d2uOxzYblKvtP5gL+VekFYFKcwX9WCzf1QX+GRinzGh7x/1ze74xjYacAi3bCuOypiGuMR5lH/o2pvwGXpSOy//gtxptMGR9sN+Em7jr0VwkmCF/B1vPYojTpsH/ao3B9+iNPWX2v6TnM1vCw/wckMoG1ETrWRjjqfNSfJl+y3Rgt35R+NrwmQP8c2afMnEvJ98k53CSmcpL8iDL5Y4ZQM32tvtyNXNPcSSEd7PqwFTvFlgijGMsVhn/DnCRof0mf8r9JlkHf/DW4ZhyvPNAdIz0kJb71rZc8SJ2iySSRjxiGqk7pXvphe7r5D6YqLahDfG3tSVqBNWwXn6rU0EGtF5yJ+08XyI40hqfyA3JIVygTmTjUMS5rF2zPstYrTTEmrkm37fgtwDgwNN1xqdY43JgiTgv5oNN0WPYB+pxHnpd+L3+nFqgrcEFRoRMbzOiA8COxcX34SQxmdvHJqO/dJZELtGlYn9GorZAfN0u7XgSbPUMoDfsV62XAw1gLnyMvYVqpCuq2zjiPGa4sr63/DSJP4RLWU18MLB0Z56/UU8T+vUCcFpvkVYqefwcupGfqQ6Js0lPdAIpVnuJJOXgEesSlcxKPDb9qNSMkPWevEVbl9FvJulfmqfMtKdSyIvCNjby1Al4W+8RssxrmaXYq67en57sUndFVF8XdSmXwM5wrQnQ3PCwU8UH0Aax33v9/xePowlpjXypmZA2W9yMF6A+dcheB7/Gp3Ci/43QKq7C87aJ6TLpIKhllNyyvkT58gm5i/01DOS8zP08wE3gIb5mVqsz2AN8BWyHn6Dl7PGMIrlGmx+pYT1BjzSJuczZwvr2qHqSxVLvwmx1ED70B80su4Or1OfJU0KjrD9W59NEQeqGVTBifO48j9Zyo5wB3sIz8EJ/WRYHc1gzG7UbVKgrtFMrZOPh0egYawd/m1ywXgaK+1l1W3suSVI4vp7Nt+/KLfb7wljOsg/r/sy10ZLWcfIifjy44/mPZ6ZwhC/CCpuKE6QACx6IZ97wPGKx2AS8lX3HfLEbxkEOg7GBD8Vp0RbURze3CvxidSY/2qY6K8Jn1fWRSe5K/zekh+2K53Ok/ZzokR5mbVbm0aukVFbIV+QBbRVv6q3+WXo+d53Vsu32H1SXToDjVOuOeCZ60Q+VBb7p3leo1ZlPi3GCsww06uPT7tDV7Efzm0Buxj55ZSA78K7j9m2ST+pPSNX6YXLZqhcuRIuk0n05KBM9kzkjPow09IHHhW4G0/kwqZD/GCzAs9gUd49ZCCq0GqPAGVS9ZI0119gtbauPk7+rflrFZO/J0FT3EqUYnma18Ne4S3OsVfiG8qh8iAq0z6g3OjKPx9LpYnaMiJFW8jdwFJ+zEoxnrBqpzOgC991lkT7/OUvRy/0zzfPJjWJe+2FrQrA72txBrXJSSH+GhnGSctJaTjVSpackgyyX6CJfhEQn0TmMp+if+oc95VqFU0Rftf/tP+aZa4xBeVY3OyN4OppZsnzWQoYIi1NeRLdRLswVb05mos84SHKDjGU7C8Ij3P8AU6yqoQ=="}, {"__id__": "chunk-4dfc3b6c51bb5da6df5423716d1101de", "__created_at__": 1760496950, "content": "# Bloom Filter Operation with SPV Nodes\n\nSPV nodes use bloom filters to efficiently receive only relevant transactions from their peers. After establishing a bloom filter through the filterload message, peers test all transactions against this filter. In response to getdata requests, peers send a merkleblock message containing only block headers for matching blocks and a merkle path for each matching transaction, followed by tx messages with the actual matching transactions.\n\nThe node can interactively add patterns to an existing filter using filteradd messages. Since patterns cannot be removed from a bloom filter once added, a node must clear the entire filter using filterclear and send a new one if a pattern is no longer needed.\n\nThis filtering mechanism allows SPV nodes to receive transactions relevant to their wallet without downloading the entire blockchain, significantly reducing bandwidth and storage requirements. The probabilistic nature of bloom filters means there may be some false positives (transactions sent that aren't actually relevant), but this imprecision helps preserve privacy by obscuring exactly which addresses the node is interested in.\n\nThe tuning parameters of bloom filters (array size N and number of hash functions M) allow SPV nodes to balance privacy against efficiency. A more specific filter provides accurate results but reveals more about the node's interests, while a less specific filter produces more irrelevant data but offers better privacy.", "full_doc_id": "doc-4dfc3b6c51bb5da6df5423716d1101de", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_7.md", "vector": "eJwNyn1YVeUBAHARwQaieUm4H9yP8/2+55yL5KMPaIKQqFi55QSna6QZZfmEQ8fQaZuPgE5wW6ToBO65nO/zvufc66AnmwLZBz1RrRkQVpqQ8ypbk7a0RdlItt/fv1y2SLzR3WBlLEw7fVdguHGWpz34odxbwj30sD3q0iyEm0jJqFM7zE2oT14j5mUSc1NQb2e6vpS7r3NmrBFl45TQbzhWX8vWk+3cNP/Jyev2ITM7tDe3jv4tf/T0Hv4x5TCq5F3gQjQIlkhb+bWn1ovX4Bd4LFwrU2QuhmotC7kW7ud0KFCg7mDq9KUxF35QWwi/5C+rIl1NbhSaMqO40fmp1cwcIcuNdnjDvzzeBfrJ96kX7J1mDer2VbqnciLqC8pWtRQuZsoiY87hkwN6MnfLeCjncG4AucFuT6nmPrGGKgeL6XPhc3a/GujYYdvRNVaTvS7YAM5zvdZXRrqYlrGCqyJ75+dlZumz7I3yn6x+Z6Eetz+Eq081M/fknMdPsFv0HeAH4hrxc+Kvxmyw0/bEaThJlXmnmNPYd7LR9plPgr/JGfAR6YhYrTiht5z5YqKV1ftokkvYr7a34w/pcbLWCauvWYdQJWdFXyauWBaqpkbM6/7JFyuEHuNB+Il6l8kINznpxApzWC71tFLHdTeRJ9fDKNYim49dB7MZRb0ViWgdXKs8HO9hh9qy0DP0NV8NXK1XSUXEZ0IVnttxW49nesx12iFDgwHtNq0L84IHgidQHZWq3QS1xkvq/VI5PGrnAzlGmHuIv8if+Z9rxYF8gW9N186G2+EDxm50PxiIu+4rjtWGluh020zy0ZMLWC9IBR8FS/A/YCo5RR8TJhb8iiGMKniZvQQAn0+uaEu3fij9GH4g5ykX3LuVZ0Ga9DpcTnwJjlPz7RJwhqqQD6AmviTne2VK2GDdIFRa97YCb+y8bREbmQL2A2uEyeA104cCsaVWsTspVmGu58bYQbwo2ERPR3IZF15Go449zKCxWtikbA0dU+u5yuxW/nkTBr9WNYLENews/hv0lhG34txKKcDH+Hp7RHhTHw82G6OREuuV/88T6nLmU/Tx7wrBGXWUzZYo+oaQbA3FJr1L0HdtuwK78CZjL/S6J1AOU6zdiU8TlcEJnqXeZiz8PXtVOhJ6xXTP+xxehrNCDxtf4Bg9xJfDRCShbfKv95R3lulJ4tewGp9FPXYVeFf8j3gAGXoLn+/7lhiCB8E1/jtV7vwzvgpWBlIYN+gxPZJP6KL+7a4zEuF/CglUbA4yBdQd+VO8qGUmmPA9A16ilhrbnb8HF6uiUEaUWFfmbOe6wX/FffRPwLhRELfpb9xFdCmbKm4FWepOoufeq/ggmrBZ4yv1lHXOakYGSIn80fbSvzSfdQZhn76BqDQeMQ2zje2yrqCbguKooXqasAvk9XSVsu/3rHiJ+BnDhTzSvlAX+zj7jkWCKK+is/G5yozoG4jXK+F1lIs69DbpDD1N7qe3i8VGA/ciziaXhV5Whol+6dcxl/9mtMi/XZntypMvOsv1x6RRuRfuF3ZRs5QKuwIN8D2oW3kdHQZLOu/6U4360FH8Hg5YK7RmzYGHYpeUAf5f+nvsRfVm273BYlRA1qCDoNFZRIzoWcEU5zyextvA5vbbotdzJlB0ulLZLfYu8Avv67SZj/uYRjUgpoYm4Bg8zowaabCMGcgchiW5M3xpVrX4h/AWYQxfyF6GEvS24Aa02d5hCWo+7lKiQp9yVLnmTXK8qDDocRX69stJ3Jt2CnyYsbVJZxWco/O83/qR/rQ9ZZZS6XI9nkacPk8a0Db6s8QZaBzPthvgayiZcdq75YuhfvS2mZCfl7YE0/mSOY/GVgl73SvpB7Cq7tWfgIPAE9qG16FO/aLSQY231ECof8tMOmtjAzBJ23cq6nKZWbFVdnLsF/QdY2Q+T/hRg61TT9Hr7LA4hEqNtURCrQXJ8DJzVrgq+/l39Ba1MPykUWg/pRQu+B8t85xG"}, {"__id__": "chunk-ff0293d557e9cc855e7cd85b9aa441fb", "__created_at__": 1760496674, "content": "# Transaction Pools\n\nMost nodes in the Bitcoin Cash network maintain a temporary list of unconfirmed transactions called the memory pool (mempool) or transaction pool. This pool tracks transactions that have been broadcast to the network but are not yet included in the blockchain. For example, wallet-holding nodes use the transaction pool to monitor incoming payments that have been received on the network but lack confirmation.\n\nAs transactions are received and verified, they're added to the transaction pool and relayed to neighboring nodes to propagate across the network. Some node implementations also maintain a separate pool of orphaned transactions—transactions whose inputs reference parent transactions that aren't yet known. These orphans are stored temporarily until their parent transactions arrive.\n\nWhen a transaction is added to the transaction pool, the system checks the orphan pool for any orphans that reference this transaction's outputs (its children). Valid matching orphans are moved from the orphan pool to the transaction pool, completing the transaction chain starting with the parent. This process repeats recursively for any further descendants, potentially triggering a cascade reconstruction of interdependent transactions as orphans reunite with their parents.\n\nBoth the transaction pool and orphan pool are stored in local memory without persistent storage, dynamically populated from incoming network messages. When a node starts, both pools begin empty and gradually fill with new transactions from the network.", "full_doc_id": "doc-ff0293d557e9cc855e7cd85b9aa441fb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_8.md", "vector": "eJwNz41TVVUCAHBQVFZxEcR84HuPe9+7H+ece3nIDhEwqeHGujEFiqWmlJnasjuiEq0fmSiohZkDrDDx4PHe/Tr3nPuBa2izITtSWsoqO7lZy7aZH6OsIpFkbkPq2vYX/OYHxG5Jey+vKyUE3LvBV6FsxJOVXY7cgPzpR8ksct5Z4o9rLIE1aVXYY/a8nSe/on8e+8T4Fx3JHEaHaSfzvAncHlIh9UdLhM3WH8wmNN+5YW8BZ/mFc9PS94HZ1nLYyx5rX5bFoytCJTePmwdH25/Ini++yfyABlBznGAfAR1co3lMfkzwaX8RK8SpQindFZ2ulIGQkf/IDviNeRsuAXPcA+SuERfqEdqVz+Bk8K77dzE1/C0cctKsXFxFa4KjdLWM+eP2YeEHsZZPx3GZV3QfKMG/w7tgNbe1swZWmUvxZSHKTZAL0QL7/enJAqYn9Ebh8YisrACn4DVToT7+YGc7KPVOI21sov+uW8xPpf2xidElWi+XZ08LGHy9upyLc4+jfYiD1d4ko0dY4Uw87IAOOCQPiBfsMvIaiffuEG9x3wX6TAFMI8nGH7tuSsfFJwNiytqYh77VPrXrnqfNe9JxOxNja+wn4H/I4/AbeyVgrSRa++b98A75GP4YZOvnRVceCyJ1qqXRWxoRosrXzFHnnLqGzGU4UgfTPQ30dMZWpwa8blfoz8VOkPHAfKsg4xCKsF/P+ZSbLD1Nr7P7nFDdJXYG+ZIr4FOMH/Wi4M2DrFCf3s+F/cB7LrILOEIzktynDNPdaeQYn6TlsOvoDOUC+znYD5fyhWCPJ8N+CgxYf1MHzRquzbrNC+2T+VksFFhYyRV4aoV7aj63R6oEG9sv0+0gV3gIzqFCoQp/oW02fgvl2F58lH/X/o03p6tCOi12o/fRDPqd+TC2riPZ+gCIzZO0i3y24+9MNU77XwA67nMJhq1wwrrUenQTDaoPOl92r+GZmbXOLa0QtmijdIXx/eyg//XIi8bK4Ds0VQ+F9wgHSI5YRhezE7gStMH6Hni8xcaklLtqAjPMvqjE2w3MhrZxgD3fmmPQyw6zL2v32y7StzQTDKgNcL1WTlcLuiKjX3kv8MVoPy51keJxB8298FHnnlUMVa0M9sJWbwe9o5/VY1lrY0livpkstoi1yuihkJAJHxPGxCbfIudZJl6cKFeldJKdTBkojRxSkmAwdMVejndqyWBhVot43aG0SkwLBuEQ+nfHCpitz2tLtAJc5ZyX2N6sHtzvH2XO6D1oUjQLTcmqwKcP1MNN5iqm1OhDjG9xrBx8jPOMh3Q63mpelqvRqZ/fG5nrSAIL2Jv+O0ZR1wajCo6Allln0AOYbN3QT/1shIhhXaS7Gz+inbpkjQSucjmOlllOM5wFYqKZDh8x6vFuo06bS5fRYbbBWgt+fTBXFfh3fNs5JvyhUO7LlYpgHj9FeQCnYIMs0/4KamK/OMwFZpMnSSPeKYj2ImdpuMjtbx3gNb5H+qW/RKq3u/GrGUn8TM7wY7tbT1OzuausNcfkt9NJqm2ejY4It0G1NWZUx8bsl6AaSSC3QLmgN+1hwkIqyXXPWncc1U7ELEigwPyftNesRNcyBrlt4Pf4JNlivOJXSYsoR5pxnf2s9aP9Bv+2sYotxM32V86maB6MUg2d+HMvEemY+BpRPfvoP7kCNKQNzfpKXA8V+qX0mbw28AxdH6qX86UWfXPan6yZQc482eWx9ls/eVc7iUoU9CgLhTizyYqnj7JNwnuRbH8G5zdk9ACM6sTKoK3qJXEI93FS3WTukjpO5zqD+mL7CFuEt/k+gmFPFZ2Jj0iLaKt3mdeAfeQG2S1UygXaJnI16uNH8TjagPvJmrZ893kcB58BG/n79rYw4xzF19R/GH7totpETiRcslazHuVM5gJTwiF32Bqni4xV5L+BuuB54wOmQDyDthj1geW0JaoInzLDIEHMlg9CxHeLOZlLQTH3hbI1st8a0f8P6bSd/A=="}, {"__id__": "chunk-081d94dcc46b13d30c62885690d4edcf", "__created_at__": 1760496678, "content": "# The UTXO Database\n\nSome implementations of the Bitcoin Cash client maintain a UTXO database or UTXO pool, which contains all unspent outputs on the blockchain. Despite the similar name, the UTXO pool differs significantly from the transaction pool. Unlike the transaction and orphan pools that initialize empty, the UTXO pool contains millions of unspent transaction outputs dating back to 2009, stored either in local memory or as an indexed database table on persistent storage.\n\nThe UTXO pool represents the emergent consensus of the network and therefore varies little between nodes, unlike transaction and orphan pools that reflect a single node's local perspective and can differ significantly depending on when nodes were started or restarted. Furthermore, while transaction and orphan pools contain only unconfirmed transactions, the UTXO pool contains only confirmed outputs.\n\nThis database is essential for nodes to validate new transactions efficiently by checking whether the transaction inputs reference legitimate unspent outputs. By maintaining the set of all spendable outputs, nodes can quickly verify that a transaction is spending outputs that exist and are available to be spent, without having to scan the entire blockchain for this information each time.", "full_doc_id": "doc-081d94dcc46b13d30c62885690d4edcf", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch05-bitcoin-cash-network/mastering-bitcoin-cash_chapter-5-the-bitcoin-cash-network_9.md", "vector": "eJwN0/tTFVUAwPEEs8mkkJeXx33s3dc5u3tRMIYyyjLykdoo5SSEgk6mGRSNYIQpA6IUOImBeIF7Ye/unt1z9i4BPax8oIhYgvmgTJNGBC010zTTfETmP/Cd+fzwTQOzEtd3PG6+KS0zXUq5WKN2qiPmCDjt6bc6jEL8g9ocmG7LE9q2HlEl413+sviFdyVKUaJQqe4Qx8mt1BTnTGuMNgSrlD56E6oMGw3SCQmwdchZkNgHj3CVwTK+nqmeMFkcgIsAHZhrl2M78T+eu/BF7h5cCPf7O4xxQhH6ufkz8AboTbgO1qF4KtdYR97B8/h9jgeNV8VkZb1IxVea2Wafsls6C0T5MPsGExq8BVNxN7/eKkWnSIq2KGpEmwyvsauCIr8aj3d2WXPAKS2Hq3SPBEJET1MyeV1Ya5ZpSdxV/i/aJtTq95yNTB55CufGXDVm0U96loB0fYGxit3cUA4a6NVGj+sO6Au+BQO4TDaYG7Wyy6/u9MYrN/CZlr6g6Q6lLsCqLZbaCi/izPZwpoAN9VwBRWa02us7pQwL2agb9LvypTIUDiKtbJguzACdiHCHldlbD5FlTGRDj5mhR8t3yTX4sPEvjMUvtfyNnyX5rh6UxHA65apVs1zrhc3ybioURRoz9C5wXHsensLH5aeUp5n32B2QrtlLJnIbsKp+pPxqLYwOxyVqk3EMjhI7mDj3MGcDJ62clnnkmn7TtwZz1HhQZNg+ueN435vPEuaenM4sNoPqCiZeSxZ78LOK3UqzT9XycIyWyuxteV4rYbbwW2DKthvKLuvLhi4c65PIY+Cm3icWqpyzglnTOB76QUAuprzBe442KYMvRFdxIrPOkQMp8KMvA9WTFL39frtY7uVGk2vspNYB6TbIFZ6BVPCkkuSYRs82491PNmVu+4KJJMcds9k2Nls8p09tTSuPEWvYM/SPcJIwxtWVkGt+TOa7Wy2PH4CHnY16i3yp5oTvT3+vvNAZ4UtTP4kqhf/ZvFIRHsWXwc9BltVF/9001lqlLdUyYZXtZa3MSvT/VZsNdws1hiHMYbBOax552FhBucFY/2Mos3EIU3yJmgIOIi9TCwdR3qcxgbXBkeZS6UOjm/wEBvHbbLLE25fUjcY1/qXC2+7fwDHjuvQQH52Qo9+mr9BVcit7B4XoFbZR3CEoc+fIkLdSOhBoN76Gi6U4a6byiHFOGfBMElPwkAFgEvse8w/crA3DfhfgO2x73Pvpevdv8HFzBjdAs6SPmk7Nhz7xGT29+SupQZ/vlpUsQaG9eEiIUmRqqva+no5eE8fyp42NdKyNE3JhLbPNvqMp06rTw4Hh+oXbBG+DTDKppVqYrtWzEK9pjtLDW+5frF2mU3w9+nPAz10wC5kkEgGK0CX9aXO7PMBK97111GlhGjiBKxoWkxw2n3zEjLO/xkcBnXkhLhe9knAQx2IPLNPb2yK4CiNV/V17AJwn/eQibWrP2UvZYoilDfLv8BZpQsVbz7mbmFxqJamOLQyk0hXubmo1Gxb4zj8Fnw9W8HOgHPiVnDCX4clcH/nMn+HYxWtKWFya7SRJ0kKCl63DrZ5Ni8Y9oU4xJgrHGxsEqAjULXZPRIR1SEXMoHHDzTTeDdxEUE3WnU4MKsFZ41sTBA85nKAZ7fD80fqfsc2cLUQEP+DbSRE8LAyrl9QQYQKXoswSdWmQvYtMTz8MFXejYuY0+oX7Bi+3MqzlynZlDK5M6BbqAyHch2jYiLM2C6+zTjw1UNly1pcFjwrTtGq8wNZE9zDzURWzbOuf6giKMDntqHYUHwNnjOtxB+iXyXkyOmYtHAxcFh1ylvQCOmIkcE7PIi9FjnArqGqUynckfK/SSomZh0vYUe4Cu6xq6gZ8K7qzbnvUo3FntZOovGafeRBEKCdAZ2SbXwkO4TCrjF2A99TFajNcvVE7wyDHoRh3nVXumwe67PuYUiCKcxPzuVecBf6NUgF7Rb2DN+GJ/P/E37PM"}, {"__id__": "chunk-b96a6c0972c0b3168bd8f8ae22091d51", "__created_at__": 1760496950, "content": "# The Blockchain Data Structure\n\nThe blockchain is an ordered, back-linked list of blocks containing transactions. Nodes store it as a flat file or in a database (Bitcoin ABC uses Google's LevelDB). Each block links to its predecessor via a hash reference in its header, creating a chain that extends back to the first block, known as the genesis block. This structure leads to terminology like \"height\" (distance from genesis) and \"tip\" (most recently added block).\n\nEach block is uniquely identified by a SHA256 cryptographic hash of its header, and references its parent block through the \"previous block hash\" field. While a block has only one parent, it may temporarily have multiple children during a blockchain \"fork\" when different miners discover blocks simultaneously. Eventually, only one child becomes part of the canonical blockchain.\n\nThe parent-child relationship is critical to blockchain immutability. If a parent block changes, its hash changes, requiring changes to the child's \"previous block hash\" pointer, which changes the child's hash, and so on through all subsequent blocks. This cascade effect makes deep blockchain history practically immutable, as changing a block buried under many subsequent blocks would require recalculating all following blocks—an enormous computational task.", "full_doc_id": "doc-b96a6c0972c0b3168bd8f8ae22091d51", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_1.md", "vector": "eJwN0Y9XFHUCAPCITA07FwJkl12YnZ35/piZ3YLKHylEqOWL6FQ4L8MfiSj68D287AcevjjwJcJhcCKIsOzO7Mx35js/Vo9UNIu0TqzncfcOxVLS5Ojqned1apxWps/6/AufZ9DjoRV9hU6j9BcnhXvLn2w0k2QrMYiFCn2QLaX9dn9WAX4MzqPDpEk5ljaEV3pugBV27p6TaIGYr70Q6axnbL/xNm4MNEDJfBQXCOXODPujTAqGpWL2mHTEnlD2o6dwPdogrcJ72a34uvBvq0TIDN4OVInd4vZwqjUqbQtvVHLE/3rmg7PY7V2VvZTBallWEb4PJfSGhNAjt0E/aLchU6B9EFqX8m5vEt+NNsV/4qekVINRuje2yUwwL6PvvbO9/SBNf6XnBFvKzYifiRbJ/+xM1jalPBA6R9b4LrBrteeNZP9hFMoe4M47r5B6/IMxrPRxbrUpUoIvCH/ShyJNOAV8GWV6R7xbjIOw3k4QsB2jq73VfLPQRcL+aWjsjys5pF+H18S7IKkdm0Hkchr2J6ALYAVuRu+QBFXXavkE1BcdE7bqo8KuzCxGNl7HpliXfjzbAxvo623z49XcHLDaaeqdqlU5lfAr9RE0z0pVB5klxlExRFxSrvE0PK/NBcNCHqimLyh5+p1YBaowt7CX2KHYq3rbrzLV6zioZfeU0Rqz0H/GHrcRfJnUBa6ys8FWdLDbA45xtehLU1bCLVB3wQect9PcwqXYJOtIxt/gNPAxfZp0e2tSx8lMQDrmw8nWk1ZG/GaUJ/nhudp5ZVZgofQ1M4f28/d7JTsn/hPM1UStg35LdsgPS8XamHyGbfRPj8yUd2TtFdaCZdzjwnaUTobpYuYx3Ip/g3PcBTElc1nPgFLDebXj+ll9TabLOY6/Rp8In6GZhtN+VxvVu81EIVHc6ZwAIedu7w0YaIF4idIatyDj3xMOKhW4C50mh9hJ1uyMxeykX942cCb/hR6WNxg89xy/3T/I3Yu9nz44fTNIjTZIlYQQCZSx1+irKBzZPMUymjJu81XshJ4Xr1TjWg2SQan+IeT3hcAIs4f7e8zDLkVDWk16ubFSSUA/6uVcLf5UaxI+1hbtT41eMLTeU+JCLdUJiSvIAEqWymnY7Ebbo1MkV/gAF9QPoSRpfJ+i5QvzwCJvqpKbttfY5A8Ks5CmVZm5Hs51r6OVeKRHpVy7NhY0ruCk4NmOaWaO8wn+F5/On8a/5m7jD6z1vr5wfWAQ1GXtRMBqCVQp64kQrdPenT4ecpuf6hzoNsp8DUwS2xPAYGnnw+Sqv5MmWlBZKCS74ta4L4TKOII8+DPYpo/GJ4xoZAxUoyKoS28wZ7QmOEGPcPvsxWa5c8X2+zJjS3A+hla7+1vjtJWoNJp+uaKnNrGl7TKX59phJovXONObwRWZM9Rnmf957rfmClNhPmLEOR1D4S75JrfcPqiG4F/5ZY6bc5kwe0y7yfHkRSNLzyEfyd/Jk6VS8Z3dT+ISa3d4Yy8j3gkEwT/slw3kvdjaJwflfqWG7qDnwuv9DwlL4Z/lAV6wNqtqlsd3UdumlAS+J7P0NfxDsVX0lvnE/jT5c/klTCwEJqQRdQF4k46BbHxAK6K/NwaY6tg5cLhrVFG0XWaiObutxDzItmZVKq/Rnepu8ZAzgrzx6Vox/R1409ol3qXv4VPCHxxMPsd3uB+sYmBII8jQtwWXBx14hSnWTlrN6Lo5Yd8w8vRq3zeZtnrSt6ArH/LuEVpIB33EiCpboitJNODClfBW7BuzuvuEuJFPJqXkwc51McYDnDtmo74sflRdbhem3ULl/LgxRk8jw/dEdC5JEjsZj/ZbzEs/GpP5LyInfAXUD9td//dOUlvoV6YbJ3Be92ukzmgzF8lVsJ82c9lcJLIqeokehYtiedw9oyPSaq41p1lLxHXWVaMxVkwlQ8EucTW9zAxbLWinFtYL8RRvj5gf+k+gQWiKXISHWdvsUE/RhdzPGxKUdQ=="}, {"__id__": "chunk-e09e5cbc189817f4a3231c9d9bfbcc12", "__created_at__": 1760496885, "content": "# Block Structure and Identification\n\nA block is a container data structure that aggregates transactions for inclusion in the blockchain. It consists of a header (80 bytes) containing metadata, followed by the transactions themselves that make up the bulk of its size. A full 32MB Bitcoin Cash block could contain nearly 128,000 transactions.\n\nThe block structure includes:\n\n| Size               | Field               | Description                                                  |\n| :----------------- | :------------------ | :----------------------------------------------------------- |\n| 4 bytes            | Block Size          | The size of the block, in bytes, following this field        |\n| 80 bytes           | BlockHeader         | Several fields form the block header                         |\n| 1-9 bytes (VarInt) | Transaction Counter | How many transactions follow                                 |\n| Variable           | Transactions        | The transactions recorded in this block                      |\n| 4 bytes            | Sequence Number     | Currently disabled Tx-replacement feature, set to 0xFFFFFFFF |\n\nThe block header contains three sets of metadata:\n1. A reference to the previous block hash\n2. Mining competition data (difficulty, timestamp, nonce)\n3. The merkle tree root, which efficiently summarizes all transactions in the block\n\nBlocks have two primary identifiers:\n1. Block hash - a unique cryptographic fingerprint derived from the header\n2. Block height - the position in the blockchain (not unique, as competing blocks can exist at the same height)\n\nA block hash always identifies a single block uniquely, while multiple blocks might share the same block height during forks.", "full_doc_id": "doc-e09e5cbc189817f4a3231c9d9bfbcc12", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_2.md", "vector": "eJwN0otXFWUCAHANK0MTUd7cx7y+me+bmQvrIyXNY0gGmZKU9IDsKGqsDxRwd/XkORsKp/LB0SCJx33MzP1m5vvmzsVKEWxt0dIlXdCy9KipWblGa3skPIunxWr7F37ntwSFcye9f5Ykqts618E0lI1nWGcop36vJJmPwE/cp505zjSlWQFGIXvLWBwagQVNJ2CqE8b/EZ/iW8011nsdN8g2e5b6qfAKSDfzpe1of6zRuW75lS71lv+mOpWMSxm3v0o2JVu5Bxd6lsFKVOfMVfOVteYBpULZrf9EfWqYWa6ND7h4s2iAJLaEvYqnh2XpitKM5ulz0Tv8t+gLsaWzM3wm8nzgv2aFXosS1eZYvrpQm4MKyZTMJ6KWfV084nkDhNGLpMHTlq1N3e3m80fwTf2iyfsWBpqssdEiIQEjegzkgM3cB95f7E34lFRqb2SSmGlBGUfkEvQcWYFXg7VS3ztHpG/aHOPL0NT4BHW1O5uM6lt9ffJ9dI3wEntVP4/mxhBYqa4BB9Ia7FoUdLsPNEKOv6be44eMarvW+kocFOv1l9VifRhdlBbwLFXUIinDGu8pVB4hzwk9zhljOJxiopbV0SEyUWa1cvCMk4HrvS7l5U7cj9aRecpx67awWrb0u/QgPhRkdneL/8haxH7vcbxb6Mr0rZ5kWTCR8U9vuflWJOK+R/vEVXRVy1T/MPuY/Hg4oXVYu6B0Opx5CO/U17Z851Qxp9U/0QrrddTmjcj77KWkUuO0aWG/uIZ7QkL2JFrvzrcUdrLnMDNJuMQ0Snvg5dCH+pvBPIfGe4TSqIKryA8d57Vl6hWttFXg/+i9HRnyFFnJoMBolxLRKDj/rkUq+FpIUUysD88OamyTVUc2ZiMb4ohVA8fEy1EPjMOFcFCfB3pxXaYHx9VyMOrUovHOIJ4Zejg8EXbirHg/s0H4m5GX9UvWoFwQLYUn3Hf17om3aCH5COyGpwzDe6C1mP88OSn1NDgR/gIP4r/wT+pjAx5a6R3HnkUvkAbgM7PYgdT7gkvhENxrpsZZkzDPSL8KAeeYOEvfBFrI38FXxuUI6z1NdwGWVoY3MX/AR+ED4rPmAjU3c3P8jsHaN9h9ComUup/IY63/eQLwAsmglcAJ3w4c4rLFOvw0KFB+bJwdDaGTzALYyU3x59rz2gfgQ0wR3knzzYu+Ga3TNZ96B43Gtuk72lPQSWUvZMwPyG21izkslKEupkvZS5Z4h6zrcp//G3A/TKDbxcboKJkoTe74My/lDMaKo4uYuyRTrEbl0eb7L3FLfNPBYQ475aQQlKl7hPUEMnlcPCNfXiEthiucm26vUeL1Cw9yZWgOmmEE8XHwKhmj5TkToo/ZRe4Vb6ldwifyb9A9woZQL7mafc6Rfxc5m7HWnM/nhn4ya+R+oxTtAluoG1nOJ7F+ex06DXXYAx9kE6J52lal17nm4+CrfIPbxM2imiDSf8EJpDjyQ/oIXod99l1lIzopVIgJ8Wv7Z2gz0b/Zy8JOWtZ2QS+Cv/LDwu9nzHNaD3tKXM4Kwkp/ndFim2RAXxRV+C0C4n4kx/0loVHDQ45ZjZ1h+6A+EwjWLu8c5aHWxc2YGOIrSKNFzgCugwE3QRqjf66l0UDEJomsFduS/XM7Md93FuARTz856st1i61LbhVY70xRPzXj8lj1Q/c3HOHrxVQnSRwKJCun6An1tRxNqooeah91usUv6aOxHKeBnuQP0p0mz1zGMSMbnCGPun5tHPtaZI9fYiejGlQtKHad+6InXXlbLLPc4Nv2voc/w/dwuvvXjiA9yj9Fb0S75MN8Cl3vdsMmqyw0En5cXNYxgu+IPvUcrUkt8GwS7uAB1p/Wz0u0xkoxk6RRsDR5s73BuUI4IoOtHa/zfZ4d5DNrmZMmbm87zvXqP+/62s1x0uyYkunOZ/ux4HxLfpPqpIvmDnDDrGYC+kdmVsC2quV+dWVGhpJi5CsPeOfiVUQiH7f/Hx8Wm7g="}, {"__id__": "chunk-c67c4c4ceb1c35c6e8f547cc750d0f35", "__created_at__": 1760496886, "content": "# The Genesis Block and Block Linking\n\nThe genesis block, created in 2009, is the first block in the blockchain and serves as the common ancestor of all blocks. Every Bitcoin Cash node includes this block statically encoded in its software, establishing a secure foundation for the entire blockchain. The genesis block's hash is:\n\n```\n000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n```\n\nThe genesis block contains a hidden message in its coinbase transaction input: \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.\" This message serves both as proof of the block's creation date and as a commentary on the financial crisis occurring at Bitcoin's launch.\n\nBitcoin Cash nodes maintain their local copy of the blockchain by validating and linking incoming blocks. When a node receives a new block, it examines the \"previous block hash\" field in the header to link it to the existing chain. For example, if a node's local chain ends with block 277,314 (hash: 00000000000000027e7ba6fe7bad39faf3b5a83daed765f05f7d1b71a1632249), and it receives a new block containing this hash in its \"previousblockhash\" field, the node recognizes this as a valid extension of the chain and adds it at height 277,315.\n\nThis linking process creates the continuous chain of blocks that forms the authoritative transaction history in Bitcoin Cash.", "full_doc_id": "doc-c67c4c4ceb1c35c6e8f547cc750d0f35", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_3.md", "vector": "eJwN0otXFWUCAHAL18oDAh6gey9z7507dx7ffDMXESXXJW1NMgvtoafkeMykgmI1M9Ny1XyDlgXyksd9z/2+mW++maukdgQhMSPosa2PQrITbs81k6ROQpvmcfv9Db/dsi9vzlvX7RZlG90U8ii/JuaZi+l01cev8xYo62gY3xALxBKYpS2xH9GrvL8HNiaOAUgeMO4Q1qpTEgwpITX0KhmQOsIr+ARpUH6V2umYOVbXDg8GKFACneb/UI3UpUxkVyvH4Yi0UMgTUkk6uBeWg9uUPfI4Uhy6GKj1fsp6YIbW5p8NsFgeq+MvYM65BzyodDD10i/afXLU32GXmx+jtwOnwQ7marwLlNESeThcIe1CbdFX9Z1UBZt8QfYu4R/GR2k/sI3cTbuqVdFK9frEZ55oYEMkLFVG3iUiucgskE7xZ4V9ZLVRLz5M55q58Efhl2ip+rVCSYuRKx0VSoNFaD5XhlMRplnSLdbntLVxQtxm/q6rYJIcwox8LdTDufIYUOVsohPE5faSA08Ky3OfUhzKQOJviRyzRPyZn8gWgzJ9vfypUczPoi+rK5Xt0RPMZv49lIkK7TF9aaTQHkTIHG+ulHzGG/KDpDbyDtduSPIqdBpOdl8H7Xou0wW6wmtoWXwOKsM+qAQv8fOC7xifOFbwLH5fSYvOZDPxdXI09wrdaWczbtTZUiJOARtgc8tsfnpwOnyb8EZJbId53A/M1KYhgFyH6CL/LGEZ4MgjeyrCZtYibYKLJZa4jaSQhckivQ9TFyRhdFyqELYL+dpi/Lv7EKm2N4M36T/3P4AKXfuQK+DUbvEm+XOo2vcQ8Puf5lLS0sGIokivMpPoEOgSRsUtYiq7l9SCIvYPsYif1ZYSvBK6wD5F75Y55RVYCUb1ytb58TG8Tf8QqMpWMwwuWzudhe6B2DyhH1+0wj7FU1eD0Ah8HdZEdV6jxcy34SB9IrJv363CQjzUeB6/xx1xLGVdfBNuRpe8V6Rifr7ybYLFL8A+6XvtIX5YP+IccI761sDKLLc+Ptmr38+tA5t3z6CrpXzws6i3/AQWIEv6V9uwbnnS63uDjHgkYshFjvJ4Plyon0pu1NzxLc5pYD3yWQfU0fgBte7PTU9bLbKfG1DPMsv4btLdcg5kkQuew/CaNBV34SWSI9LNfgy283N0K1HhPuwJcEv5bnhZXUtH0Df4sGwopTAbZ8UXSD/xfZF28AZ/CHbRd7UCtlhq/vPOkDxsjohe8Vkjz7fT2SjWBv5LWgmY/CVebwyzy5zl/jTptDBRvNL0PM0zF3Gp8BM+n0T4NC4TpkgdsC7mzmqgOskjHjnIh+RlgfL937FueAqvJI1GCbXwmN2R4GOXXZvkzfQtXycVkmloEDdre1ufMRgdst38CVImo9ipRI3nM/xvbxW3lk83PHLCcU9OD6zJ7t7fm93oG8p6Dk2VH/Xssks9z1q3uo6ZI1I6+oCE45L5I/c66pf71Yj3PFhlvcDLxk1wUhqTT9rFdmu0QtxaN58kOR/93LHOTKAm2QGcsd7Ql9ad5C9S1LkbZcfWi0dxP/4Pbor/1Z6Mjxx4E/2AotCbfGLvbOWM8Jg4DeVkbFQLtHtipqGAC/g0/INMNO41njd/C510TLFu1y61zdAP062Rm+I4Wu0clxw0dtAMIRPNlDtNt+oFvL3BWCE9J4nmIDgmHxTPo6kBW10DqvAxhtP75AYrZl2iYbIqdhFN0r9yad4b0m9MK2k1O5zj0KbIBu9cu4LNB8vl+8VBOjn8ovJyLCPxuLsAVfBV8as0g5yLTjOP4xNkl1QqTg2/ZlRbCvuBsdU7CXWrmeFOeh98EfbRUT6Fy9FWmj1Kdcuo+L7vBunVq0EDHGH66QJ7sd3TfIdwjSTdUxI5dwYSL+FyCLGHX0UT+gzrRvQu8yBYQ09G5/KPGWeMmXIDf1bT4Id2ILol+oq+DXzRfMZfq9ajL9SecL+0F4837qaVqDD0f+IspvU="}, {"__id__": "chunk-91b5011227d6db3d0ce4d706eda7d101", "__created_at__": 1760496910, "content": "# Merkle Trees Fundamentals\n\nMerkle trees (binary hash trees) are data structures used in Bitcoin Cash to efficiently summarize and verify large sets of data. Each block contains a merkle tree that summarizes all its transactions, providing a compact digital fingerprint of the entire transaction set.\n\nA merkle tree is constructed bottom-up by recursively hashing pairs of nodes until only a single hash remains - the merkle root. Bitcoin Cash uses double-SHA256 (SHA256 applied twice) as its hashing algorithm. This structure allows for extremely efficient verification: to check if a transaction is included in a block with N transactions, only 2*log₂(N) calculations are needed.\n\nThe construction process works as follows:\n1. Each transaction is hashed with double-SHA256 to create leaf nodes (HA, HB, HC, etc.)\n2. Pairs of leaf nodes are concatenated and hashed together to form parent nodes (HAB = SHA256(SHA256(HA + HB)))\n3. This pairing and hashing continues up the tree until reaching the single merkle root\n4. The 32-byte merkle root is stored in the block header, effectively summarizing all transactions\n\nIf there's an odd number of transactions to hash, the last transaction hash is duplicated to create an even number of leaf nodes, ensuring a balanced binary tree.", "full_doc_id": "doc-91b5011227d6db3d0ce4d706eda7d101", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_4.md", "vector": "eJwN0otXFWUCAHDCRQlrBYTkcR9z5873zffNDKAVW3LcTdq1h6/wZAhqi6QeVHZz0xCitViFEFILfODlvmbuvL5vZq5Y0qqZHkx8lI8tC3YxPGyeIx42C5Oyzslw/f0Nv/vEo9Lr739mdaOW/QRUo7MkgTHpLGmKdILpkgVuO+3NMcEkfMN0gGr0mVBqjl71wM5C5UFQiFmydOoPYXH/YbUHf6SVgxUUckuMR51bJDOsexvyp/L/5gUzAa0CBULSnsPcn1CNayCEwSrqksrFQfMdaXPGuV1V2kKUE81SM/JT7X6h379DocSxZ5Ja2Co8DxODa1CxPxn0+ptJtbXaJwoz4Bfu36JrYr99go29/ZW70uqJPU5azUzQzxfxpb7KrBIjz/gR1pEGZkxPpEOpP8JdOI38nevnLyPH2au+D54INoseUhNZ3HZc61fE8M3A7wIX0Sn0G/Ix4+DD3CdcU+gvej9XxCU75+EISaPz5eWRKP/XwHQwmnlTi2M3DfH/y2sFpa532x8QNhgP2fPxaaxKA/xxOs8keoneCseitcKkfQ9I6TCNe07rEw7hMvM4g3GN8xh4hBxiNqJT9qi+LiuNbBSKVV6oJ3fcCzqa6Bz/dWJK4WnzxZ9IMXNUGFQmBTV9uTyscH5IO0IZzBpfkTbC3fXPEabp14JXfHXKEVe2w9r/xfWke/t6AFFOXhu3DCXAX8Ray8gaJBM7V0QetF/gykUSQHIF34RARDRrVRe5n3s4VAauxspQtzPBgnaLekZ7Knd5OFntmDqOo5AzRmNJQtC7wTkqbLcSndfsJ8FiM1/aBk9xVfCP/Dy9Qx8OjuClhr6zRFD8jfjPpBia6DZqA3nc1EB+Zh/t8bTHFmSHIsuUNex0cwnY3aHyj4ubyBm52Kz3eCLfojfZcW1MnBsvIN1cOdgCU/SkeBKt8A3pS+S5+AewQC+SNcujlOhX4nm5ayHinmZFunnfhVgpGnLVuQddi+Bx5Vns5oCwIfCM/ohcjd6KrscwNkUuMm5wnXirxsq8NY/4YFMe9XHOv3Cg4yWjyv0qrtQGoIZeM06bh5S08E6Qomxib8cmkAZhq741Pq6tpZ8YW3A76aNvSo43zbUOO9yl+Bjwa6MSdr/FHKSLUDXnMq+Qc9wdUWcno/sjSRSIX8BruE5nQxW+6pjVsZN8LY4IUeuyfDP2uRRGLWDIaVe68Ag40h5EtfB6nstcz+423OKXMJFJEC7QZ/2Fvt7oLJ9fA4Imva5dBxisk8/kblPGSa/+s/scWiasJC77Oqn0rpYa2WM64xsAA7zC/Uc4kX7bXOPcnZbtrePKmMsgHb6Q3bV3KSogZ9AMhyGZk36/f4cxSxiEs5Fmv40+UIYd2DlTvqCaKlAL9ozyjVonfRmv0vr8E40B0st86CUuJjIbp8CzmEipnl2+DPCiJ91OyJ3MQvlpZ74SM7e336KX+Rn2G1aAfGn8k70SOYIahBKhXqi3TsrpXIbvH/yn7BGtKHIWyPjYvjizGHyrO7QFtO9JyU6WEtjV4Ttkm/ZplmzsDxThPd5XlBW5bebCcI8ybGyMr9Mq6KNSBf3MAOjgPsObbJTmVKJSGlK+IYWc5IywZ80J3ErzD9oEe8e9dzm41HgjFrNOd8zhZ1IDbbYuGbOMDf40Z1zostvQ13yz9Yo+hnbjl7QyMUday1+kWWKudECoNa4CwcAo2HjSabeyyBhuNBLNo4gN/qpN9q62isiL7nK0UKlR5075ih/yB8Uqs9+qVqvASnWXuaxzi33QkwIYb41z7KHzdqf3Pf0n5RqarnWZH5NUcaJ5X+hh5mXhpCqGm/gUoYq0ci64KOeEVSo0ewtDB0gL2Us/4D+HxyKXjL/RKXGZ3qLPy+vlFWyp/yPrQz1VaFUaYNSenHPROn9v5hPMXdpj3tg9TJPNTfj7ezdNfsjq1pN80+UDkuTzSXsLGn3fodn68sgpmK/PszPpYu7/LhidMw=="}, {"__id__": "chunk-f54397c82170c40bbbe08706074edec6", "__created_at__": 1760496917, "content": "# Merkle Tree Efficiency and Validation Paths\n\nThe efficiency of merkle trees becomes increasingly significant as the number of transactions grows. With a merkle tree, proving that a specific transaction is included in a block requires only log₂(N) 32-byte hashes, forming what's called a merkle path or authentication path.\n\n| Number of Transactions | Approx. block size | Path size (hashes) | Path size (bytes) |\n| :--------------------- | :----------------- | :----------------- | :---------------- |\n| 16 Tx                  | 4 Kilobytes        | 4 hashes           | 128 bytes         |\n| 512 Tx                 | 128 Kilobytes      | 9 hashes           | 288 bytes         |\n| 2048 Tx                | 512 Kilobytes      | 11 hashes          | 352 bytes         |\n| 65,535 Tx              | 16 megabytes       | 16 hashes          | 512 bytes         |\n\nAs shown in the table, while block size increases linearly with the number of transactions, the merkle path grows logarithmically. This means that even with 65,535 transactions in a 16MB block, the merkle path needed to verify a single transaction is only 512 bytes.\n\nTo verify transaction inclusion with a merkle path, a node only needs:\n1. The transaction hash\n2. The merkle path (a sequence of hashes to combine with the transaction hash)\n3. The block header containing the merkle root\n\nThe node then recalculates the merkle root using the provided path and verifies it matches the merkle root in the block header.", "full_doc_id": "doc-f54397c82170c40bbbe08706074edec6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_5.md", "vector": "eJwN0Y1TFNcBAPAYA0wy0TOIwYM7br/3vd1FJxFGDfiRRE0NJE5CrILWnLYqYsSZqLWpmlhFrAkitQLeeR+7e+/tvre71/gRBJWKxSi2GcCOOgbamNioEcVMOmKGfmWaP+E3v0x1ZMqxY+dpCwx+XAK6tV+nynibfg8XqT55iXk7b/nTq50/SKY8BvvlClplu9plvgacw9utq/y/lVnuuOAwHZvmyVbVRX8HD+hOuVn/1r2PH5JCvmwqYZ8CJ536WC5TJGY3RcA19V1dH7+NW+zc0JaCQTqktBzxJrTTB7BUXGPRwlrvjLQv/yyftrLcRtQv39b68rpYKL2FVrAHIaSrHBS7rsxgdxldsE+Z72lgJPRxvN1OmfvipWgBk1YugkFjnp40V6biYoIeKChGG/RlaE9su7rMGsf3wGXSchfi1XJ2aDK8YUNrHrMBfYPWGR3xV/wxUCG/hINiL/NuoII9JfSHNgg7CsZ6L8Mi6llDh3Yl78gl+l3QG2ike5TP6Vp5VPueH2fUBvvgR7TP/Y+yAHyq+OID9pO0w6jJH028iZ/XvrUeyeXyq0qO9ZnKgGxnaeAgGEyvzItTn9EurHIsfO5ApzVXe9xukF6mUyfsDzaQArAO5QMdT1f7Tdw6Q6vUG60h/YrZbE6UnkHHD6mRpLTfjgtDEge3FMyIdjK/twKheveR+ys5gxwytiUw64NNcgmIghe1Hc7W/LXO0dSHiZneaa6y8M3ICHdGWcjOSp4wnqBTjaXyeHa5FLaK5a+d6yTgbsNVqFRsioVjzwuLAFDGR2P+Immd/JqzTxvjfUHi9JfAMxrhZrCau8WcgXnPTMP1zhV4yRrHPg76rZjEuyfkoLIeVsojoe8miyTttE8qE32HjgtpUj1hAG9jLsTvwXvqEpIZAw6JnUvVKC9YzeYJJcd7idiCALuZi9h1W2kGn2mNcMvEFjCVrjpcRo6nfoGG0qw5DVZwX/K39Dr9YnwxPGXMYwvYNv5D4wOlKzRX3WstiZ2W6qHIjlHX6nNwK91irFA+k5rZXPuquUM6q+YLtd6A3G9P0zm2XEqa54WAssJ80HQfX0bX5El6k/Bzoc6+qc2iZ9I/Q18nfWQF2EPDxNPeFuuCj/Hhw/Xpdybzzp+1gnhxspoWw1Le1Pkf7aK6X9okm8ZRt1LuAsdgDflrzquylpdiB8x6uB0g0r3H3yKqFuyUyt2fWl8p1cJXkdmaJ4ULw9YaJjPao+zm1OQ/1Tr8KXvXDKDvuFWtnygzCx9FeqS9zMqkX7jvf4WezO+LtQXXwHb7PXcjcsQRrVl+mPpBGpauKTeFsXA1x+PfedS8aFwS1Ygn+PkLBxakPvBVkQrgcxfSKtLhDNIs+Q0pCDqdCMcdnugC7vSzleIUHCWNJAfusji6Q3nN2gmiqTC5DErBU9bZZCt3ENQK0yUZLQ59I8xNnHTOS+XSb5DjdZk/IV3cO15PaIJ7FNWSYv0f/B0zID2mVggXuLfTTVYk1n1kPsxjOGt3cj3wwYcFc/gMscpe7sw2t7I5ucWQSQzgS+QeIcZNxOpZk274V1oR0XFUI886mnqDTkGVgbmFn9M2zIBuVCT0JHJikpJrPwoG8V0pM/2e6Mevc6OoN3rLHeVzvb/JDU4GmeVeaa5nFhEbdNBeq5QekTgvR7lCKTgMbtANaKHwQBzEmzVXi0qbqaFkF7bBdrJF/oGMtgyK//MaSCheo3SiYTNLQbjPfp+POGV4C0Mh0Z/kfjwH98W7YKZd7ZxLZbDj0RfIFSLpNqYm9WWiwLuK57hI4uwQjmkBbrrLoiqo0hM7d7MNanM0mRib6gAa2WgUMX3CGG9Y+SNfHuuzX0zNt/8UzAIZ0TCZSA56p9w7xl68KFWWvV74yPPw++AveJNwneTEe72H6F+4JPicVyLU6bNxGL8A14Ej0RlKKb1nbZYOkMbC3wY2KdEpG+X/Kl2oWnpaDKVuO8PkEvN/NzOnsQ=="}, {"__id__": "chunk-d7ab99acf26cbe1b187067ec313363e7", "__created_at__": 1760496971, "content": "# Simplified Payment Verification (SPV)\n\nMerkle trees enable Simplified Payment Verification (SPV), which allows nodes to validate transactions without downloading full blocks. SPV nodes are lightweight clients that store only block headers (80 bytes each) rather than complete blocks.\n\nWhen an SPV node needs to verify that a transaction is included in the blockchain, it follows this process:\n\n1. The SPV node establishes a bloom filter on its connections to peers, specifying addresses of interest\n2. When a peer finds a transaction matching the filter, it sends a \"merkleblock\" message\n3. This message contains the block header and a merkle path that links the transaction to the merkle root\n4. The SPV node uses the merkle path to verify the transaction is included in the block\n5. The node then uses the block header to confirm the block is part of the blockchain\n\nThis approach is extremely efficient - an SPV node needs less than a kilobyte of data (block header and merkle path) to verify a transaction, compared to a full block that might be 1MB or larger. This efficiency makes it possible to run Bitcoin Cash wallets on devices with limited storage and bandwidth, such as mobile phones.", "full_doc_id": "doc-d7ab99acf26cbe1b187067ec313363e7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch06-the-blockchain/mastering-bitcoin-cash_chapter-6-the-blockchain_6.md", "vector": "eJwN1IlTFWUAAPC0cBLl8nhc7/H27fnt8TywUjFMFBmzUstopIYUTfOII2lQw4NSI7UUfBCP4/H2+Hb3+3YXLEKxpgmF1MiDMoQ0a7RyNNFx1NIOwPoffvMrFAek2JYwjhGLDpSBNaJZe9UXjd+QWO5XZlCPIHrll+2xDKafQL3wH1vEy/3fh5+jJ8M18IReBNahcp+B8nAVvC0tlieAQrWTrlG34Shjq+cOUTKxQV4OZjhn6Pd1mJTG32f/IO6Oz07scs9S9kkzxfVJ06Wi2Dwj3RzhtgnJFxTv4ABH6bO56+i084lZWWGxJCiVI9gOr4ffS6Qh1lonJwsG9YX+A/cqyHHepQ6Rx0GO0QoP4GWo27jLtnOPs39CVd3INitNSBv3uzqJWBK2wwH/Bfgwexgcgi1wN0uJGxpqpFvGLb2Mfd1MGFesrbc/hTf4f/l2bYdGggb1HKUxFXDIM1RX4FxJykAPzI3wI6MCzAqeY75Igni42K1vljTpBWZ2sEs7T52A+U4r2AJmgVPkx8ZBVUPH6CbqQ/U+naifFlaTbhCDSQmALNQLIimv3eYrw2cbp4OvnXuKDefgoyLdeGbUEmeebylpmdnMX/AS34oyuJNaS7It9cMSfR7mCTI8hR+C71RVwlT+S3SOGkp5ESSHFho5RI/6HezCP+N490rT6+6qnkZf5xPIFfReMFEoQZmyhqJQHHOqaWYiIe6Vd8u9Usf+aeOHKQfVz7VIbi7ZwV7VH4hxVoUnuumCcS6USghyDf2pq9M3n8jVyxk3WEvNw+1igVWDY7EkvGYA0E91ykvJQfIuMyO8x07lLpsVxFrQz7oYy6gVKF8uu4DbzQyv+9rzgtnG+5Rnw4cZRl9Cvum8DWJCb/JZfBqOUVbqO+BospeX6eX1U8SRTTNhV0oBOMuUohI01aiklo6OqYvlpgubEBWdbhXCMmPIeYYOgg64vDHkzgAE5LkK423iqLoQzIbx/mRKET5TMimV9bCG+xJ7St9HrcN+6Ae/sAV105BasZCcIF0AbU68OFe5+cFJZZg333PE28PeIy5REfjvhgnSUa5a2GM8iDksltmBptXuTVYrDHIkbjZd/lI1EFoJNPYrJ64sTwHSAtf38a/gi2x3cqavG+9kjkqF3E1mrZ5vufjfxPXCc/BlTWVi1GVwvJ7v/5kfhvKVffZWabzUz07CxbKfK/dSIJ2NFCxJkFeDy9Y6cDgUSfcJWbBEhmA42Uzlq0+KfWI1dGCY7ms8pk1UHsK/1U+FL9Gv8ItCi5wcuZTY7e/hvjFdgRPsBf4nspKZBYrQL7jdqK1dTN4CBFfOxoNqdQJXo7+ljLETzYuJAacUP5LQArLBYieXWmQoznAqLeET7zV9hHnSdIE7erSlSAL6B0xmjqBYt8uzWj/emMCRfBLIB1Fjcj3HwEXqaczwmUI0Hmy+ofqDe+AogxcG7Sn6w7C5urK2zkcmrOQHa5YBZLdWkOQuNTJpSjgLHg9mwQPUj9o+3xo2w5LhZmUBG03tkHaSm81HoQcNJMSbGzw58hXydm1v7Xn9enAynq83wxXaTXmsONfONv7gHxjfCk+Gw+ogdxuVqMcMFoj4GSpOi6e3O4X6dnsjn+QOS1vQtcA0J15LBaXhLDHLOo/KjP0sMOuFZ/UtdD23ocHjo/gb1Hy0QrjvbwOj7B4pQvpKrEJcSot1m9nvzncG0Fj4LT3j/9cGQJq+1skIPe4sxMX1M8A2LZ2NIFclPyW+xyfjkY5QddX3ENMJf2UCToug0dkMgQ7BTDyS2UXv8nZxB+XLdo71F1/jRGopcBVfbkz/38XzfIKTW5nGp/tOO0XSETLaW2hVyvOMOEIB5+kb1hzLZY1AfbBdPs0UapDNs3rQKuEzQ3SdUs+gISfXkm0y9IhTSq8fk2Us028R7eAxhISncTOqSgkklknRhA6ixO3gGvd7cBzjB8XmzqZJeCzzH3yrnbY="}, {"__id__": "chunk-36941f9873583d2f8d8776ef9ec10c13", "__created_at__": 1760496977, "content": "# Bitcoin Cash Security\n\n## Unique Nature of Bitcoin Cash Security\nBitcoin Cash functions as digital cash rather than an abstract value reference. Possession of keys equals full ownership, with no recourse for loss or theft. Unlike physical assets, Bitcoin Cash wallets can be backed up in multiple copies, even printed on paper. This unique combination of cash-like properties with digital capabilities requires novel approaches to security.\n\nThe core security principle in Bitcoin Cash is decentralization. Traditional payment systems use access control and encryption to secure networks, while Bitcoin Cash pushes responsibility to users through proof of work. This fundamental difference means Bitcoin Cash transactions don't require network encryption—they authorize only specific values to specific recipients and cannot be forged or modified.", "full_doc_id": "doc-36941f9873583d2f8d8776ef9ec10c13", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_1.md", "vector": "eJwN0otTFGUAAPBCUvAFJ54K3MG+9/t29zA1U1ErEkVNZQjRsprIBMmcMYqxhKY0s1EHQZ4hd9zt3r6+b3ePxkokCUszHzUOVjoqVnoDZRppCUEaav3+hl+KmJLxwP5uY67vstkGUol5Xg9a7EwEjfRGo5hfpN3TWlgsXJLOqFn4lDFsfQ0E+3duvjkVLaEPwUVqGd0HGCfGngs+Y+KazjR96X1BOqvc1Gv5naImJrnG+wqMBexy/RthEhcVKzyDTBY8gers/RkTfEsbWuEA3BJ8migQlvtFHAIBpYW5G9xL20G5ZhrqJ0qYOPZTPUPKolb7brL9lfPQu+z2DIOu0I57x0kP2zy1gt0szDFTrTy0xu5m5jLj0uP4fvwyuKJu5N5RZ7Aus59IgAmwEEDUl/ovn4eTTKGpBcT7/wZu6pyuUGVKR7gd/ogPoLHCNG4yeg2VqCupAf6TpFH2av9ORLbaTSOD7ahRv07Fgzy2xz3YkKPtAa20jxZ9ZXwvMVJ/mF+oLI100l+wxaBCikFnyGqMGv6VDhsD4LDsh4ciI3E+XsV9Dg6CjUS97yQzLtjmzKd3M2n2CPWOft5KYd6kCvk9drlRSm/WLutRXZKGjXKu2Nsqz5Q6jcecP5UZ/DBax5bqK5TjIcB7mgvBdGY6czq4NUKQSQm95Ksmsr8CVz1WzTFuPeOSfgF1Ld7wb6RLG2Dz8VQ6F6+xzk6qCmyWe/CFus/VxkQBZTJrrXvhqvQoF1LcsE07YVTigD0blnKdaX/wo4UcLio8I5tOLp+Km61ttNe8ovrMnDRcu0Ckk4/QD/gTtFf4WVS23EXIQZOhfEPsAehHL0keSMO/hdjkhfpyfnvwivCWnud6jtyOI4lRZz7XDm5MLgVfynv0DvnTcAbqlrbA7MhOPtYqtW5N6YFt7Ot4yFnFdHkzFRWsh7EZBfgQciKTdA9/H3WYUYAAaQhISc4ia+Q4tm23S4jo70w+AivZEzATX6x/n+kW15nf6SUNr4Y/8rCwRNsGHJTrjAh9o00hZhPpWnSvrCYGSvw7QrfrC9ge6oJy3YhDS6lyeLQ6LjTeeZEdk0Khvc5xdQOubSgSpody7BzxLB6EH1I75DnBf6gyeFGMqgVStrkO/MSVJB/3avtq4AZ+lvi9zBkxwg9sFtT8Xu9qbRv5nqmH9vsmiqeMfr3bHoJrpa3cXBTRnuTKNZ5bU9+m5gB3c6U6jB3gTg9Sm7hLjkwX8imGzF0if4OO9IZ5Gswmnlcj3F30FdMbFtIegReYiV674eK+x6of4T9W47Vd+EVVhENMLbjq/hkz1gfBp+AVcj/YKYwB57RKtlhKscpqJkQW4yQyZLe31E/Qmrbwo/E02o8y9WNpbtQTQKYcjkFFZgdyRbJBAhHLidJ585y+yohH8dZd8VjwLdgtXdO2pI+VMogaHMPm8Z1IbD3KlIy/av3lmeqj0CjrKNn5/2aBaRUqhHzyBqh1yrUiLTLlHtc7EQXyUbYcrz1O9KEWsxmft0ZRP4e2w4VUkeEyThrbtE2co87UQ+wIVsMUOUx/26zjR8OrWzfWLf4wX4uaM9BWLg620b+OuhoOsZjcYC7Rd7EXAreFzWgZeUe/bQ/KUfK7YBm7FlzG1cnn1Zt0IsoVN6Fow492Z8saM1G4j0QjEyyxT/B9wPRsCq1jJvmKRR3NzxDhWL7LsxLs0McIuc4r+FZrF8oFByzbusbNImfSf+k/6Ru0HmoR/4nwmtqIB0kJLCESvbvCglLP9MLdxtdkLd9EpKWMRtNtowVEQv9fP0Ucc+8I70tX8ENwt16V5ub66DvqdeMJuF5Yag3W3WKOIMqo4N42isjTut9qRwZTKC0zF6Auuxp57KEpNBpDHvQ6DVXh+xpHPagE4A3DYjqsfCMJP06exNeC1QGXWYBGw3nkm0pVcqwzEo9XP2PngHOph9NeFg6ydXCF50z1gPKs7bdG4EblP0vsp8Q="}, {"__id__": "chunk-241e4f25170ff5a3ecc07ee20a371a40", "__created_at__": 1760497219, "content": "## Inheritance and Continuity Planning\nAn often overlooked but critical security consideration is fund availability in case of the keyholder's incapacity or death. The standard practice of using complex passwords and keeping keys private can inadvertently make funds inaccessible to family members, who may not even be aware of the cryptocurrency holdings.\n\nUsers with significant Bitcoin Cash holdings should consider sharing access details with trusted relatives or specialized lawyers. More sophisticated continuity plans can implement multi-signature arrangements with designated \"digital asset executors\" who can help recover funds when needed. This balanced approach ensures both security during the user's lifetime and appropriate access for heirs afterward.", "full_doc_id": "doc-241e4f25170ff5a3ecc07ee20a371a40", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_10.md", "vector": "eJwFwQtQVWUCAOAGU5EkQSIvXO695/Gf//znwQU0zVA2IBNIsxyLGUvYHkKwOmm5YSAKkk3ko0RAuJf7Pv855z+PG2kp2Ji1mVGko0KFkrbmmqyrliZRjZOz35eISsQN+xrMXO4/7C7gQQQ1ATr+M14L56mnwQIwnJXnvOj5Ab4eWRur1P4nVGaP0+/C9ThTHw/ycsWsuSAzJFkOe5NQIfhcg2QX96KoqjeMMkFCijwdT/Vutw5xmzg/54O9ci+HmWJ4J7rdBjlHpBW+jO2PolZ1ldYmrc/aa95CZxmJ+6xnlfskv0F9g1SnzYYP+jbMoL1PIAXtZp4Jria/8fdmc9RQ9FJmobjNbpU2BzfBSfa95kmz2yqhYuEtkXyUrUwVTmct4ATDC7qik+npwYGOIXYhTuYSxHX2WPtsrpG7sc0j7bea6IPSbaXM+BWdwWujhdLfPPeYSbEB0MqMinH9G5yqD6VstnL5k7g3nhx1aBfAWfyWuFIoDvwcc5JDaELGsASts75CTi3bzkNhBoKXwXNYY6dp5Uq9PEoeRDesNnTJblDXkHyxCiyNrGNtJgEfCM+N82g6nWIngQr9GeOWWIMng416QBsL9HduZRlyAB3NYKjD7kTqbfm8vspIxY+BF/RaxznDpbd3l8Jjse/hc246tNM9z/5314DaHLygvv/eT2gE1mK3NJlUwBqqAPoDZXRhaICt1b4Wc9XVpIcb48+E5KAf3tYK1IfiX2XtV+YEF3ASfztSKO8hl426WF+kJHMg61jwF+ZLMA5PyUdjQyQh8JbmNbvEusgF8jv5pXuxZwSlczXCSd+T8DVhGpygwuhV31r0PiyjSx0RvVGqFU4Jb0rFsMUsxZ3q21xAKYLX1X7DSXaSfGgKtWkOcEhbkfKF+2lumJzlm4QlccjnWH1ad8wFbSFXa4iPUReZSm6Im8uk5vSZ16BipludO6rNvNhh4TfuhJWsp2v7u7cgEV2lPhcbXENdH0mbQSX6THHFFok7pDFch0szHWB3JI8l3XOUj9QJE2Pg/hZ20v+NVRhLwDvqC/eLTOi+O9Qw7GC7SbP+fUqz8KP1FL1MzxfG0WUyz26NTYmmhZrlNPWahYTz5l+iC+0O+XUHqg8dgme1I2iJUiz6QWLkARAIHeS8UFf2sUlmJeORZ8jP63dRT6lKRp3CKi5vv1xvJEYfUJbDQekDOIl0MmmwfJZ3VqW4UO2jLxt79UlqtdQHHxPeRJ/qj/bks4+TmdGwMpv3SUX2KvcddIP0ki3mFs9Wqo2vznbq/+L3Oo8HAf6EXwn/MB7hD6I6+T7kli36J2WHOdiThpbwbe5l2fnCNuVZ9QcpjBs7j5vDTPEejx0KzGdi1Cu8V+8koyTZ/mbXhLrex+hnjBmYUibwPtIoXoKa0MIfsKvxwziuHbWmoGkBPzPOu2CpOijDrDZj4UyFjaV3x5HwsVFlHKPekxZro5mlaIdZzsXpBGaFdLf6KfSSJC7ZKiJ7+HpwlVQbE+r1ziecRcYt0kRarRFVDxvZ7eiKFg1rWIjXi87wUnJRQPyrPuf9XWKL/h1eriXFi9SA5yb/hXmObBDKgxK/FKST8Yx3I3M0f7SGm6/fDI1RDZHetheN67rREsfTOwqnloeeNK+QQTHTrBZOWa9YAc/j7Hkzkc2PX99TKr2mPeJYijaKqeo28WV5PvencTOnStqvLZo54DsS4uDVeIJ9Tm/WWVjFMMZDeC71kjjVarA/ZEd97f7FcIrxz54SbRcS2BF6ZUaLLoMeX4e1OpLm2Ora3rHG+lLLNNcYG9FytQNUIZo6Ciq1fvQwDvJ93D9S3/AU6LngsONCwA2XCRdxnlEsxLmcmZuo05Y/4KX/Li4iMfUerVpNwSNsDzmBZW6++gFbQEadUiroKrDylGt2O/naLONA6CVQA6rIlfBdgR/RgGdnVr/5usly2UIENCJBPe4dBmH+d+eJ4Pl2QWkyK1UB/x+vEpof"}, {"__id__": "chunk-8008fe5966ec550adec9d069dcb0f859", "__created_at__": 1760497219, "content": "## Decentralized vs. Centralized Security Models\nTraditional payment networks like credit cards use open-ended payments containing user identifiers that can be reused for multiple charges. This necessitates end-to-end encryption to prevent compromise of both current transactions and payment tokens. When breached, users face identity theft risks and must take protective actions.\n\nBitcoin Cash transactions, in contrast, authorize only specific values to specific recipients without revealing private information. These transactions cannot be reused or modified, eliminating the need for encrypted transmission. You can safely broadcast Bitcoin Cash transactions over open channels like unsecured WiFi with no security loss. However, this decentralized model requires users to securely manage their private keys—a task many find challenging on general-purpose computing devices.", "full_doc_id": "doc-8008fe5966ec550adec9d069dcb0f859", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_2.md", "vector": "eJwN1PtTFdcBAGCQgJg4Kg953Xth9+7rnN17GVSIxUIlxAcxIwkZk8ij0VbIGDQGq6kWlfoCTKwhIY1wuQ929+45e87uXhPzGi2O1bbWRDOJgSik4lQLFXRiaW3GomJs/oPvp28ueCN/4dGT6GH+Qvu6+F/2Pr8mWuX8TFkGMPJ4+9RTxmKpj4lToN1if03qzecgJTWwDnPWdO98OIkvSTVGp7PDWi2+I6YYK0PXpAllDI9a9fwn3q0+PbIgfzbhQTFZwJ2ECfAZ/k/hJtBuzHL25Lf5C1xJApTGowJSlUdyNlnbvGPvFQsTapE0xryFS+0f+En3FLsj3Kaw2iv+PinO7COLu3/wr8lKpo+C2Qq1q8CLwm3YgF8wM+mg9alnULV7YxIm2z1J/DyQiz4TAuRv0qRQwN9VdmetEuqESfoPNJT1UJTdqXBE/SZb6DkZfRNXq2XkYO4gnJIMq4ro08ve2giecic5h4Ir8J7YXFhPDrgk9Tl+EBZ7l4hTqFErB+vxcrDNr7Mp0THjpphDZ7yfzK+XLsm35GJrM9NMD4q/yG9mBM8QeuFHYYJRTwvlbDAA/phxF2xiRsREp0b8kvvCPmwm2TeNNN8l/jrYbpdqF9BZZra6w5TkXearUjyXpk1TntT6rJ/mVoT+YsdxMDra876+TKu13pUbjHtcjflYTNE3kmSuK1BGE0G2tj/9Y1DqHpb3gjJcbYzkldJENc4+zh/DV+xthqfrJaMkUJ4Vs05l36V/Zs7oekjgrnBx2jRYQVzsBCnEtd7psJMNgjj/fva2QvOW0Edz+vHKWIAPqlfJ3NBW5OJS5bXGx+Iwszf0kZwk5nXuFNchLLX6nmY4WE63SC5QJTu+eUyj+ohYot2C/9TGVZd3krSwwzSRTZPKxXSuOnofzZRycmS6GnLKLud1oDgFzuZIk/C5b9B+zVms5bMVnrkwEV5Udlt+NHTkjvFy+BxdSeN9lTyhu9g5PQ3cN70loSVoCLreSRXTlX5+DqxDX3krxdX+QmeTvgEXsUv5a97WaIrSQX5r3+X2HxgFJDO997KWGb3DPWvcyBrQmtFaMciMGwuj+FCy7wO1y1hhfQlmzD4a/KszoH5kLZJ4sMp22Zfl5egorGDT8O8CHuULV46Pah/AmYRKp7zV6at0Ix0pfXIHmIheI8dApTQLHEDr2l/D49z16INon//Xynbkityju/N7fN/BJPyt9jqzWW2S98kNPTky416rrsTN8lLjitYJ6mOTwf+BfgzzRtwjYqFyL9Iq/tu9rDdTb9RP5/qzn44cgPuExwP/0tICx4VS5YSQap02j2qfgkGhQyoSi6yzeJHR5v7V4dvcS+APvndD81UvWENaVT0WxMSNrVPm8d5aMMTXWorxgPwe32EPWyvCYwgGFJMjl5FBV8Fzaj/klTOkuLOD8+XutqZ8Epskt8k79S0wHqwTjlldsE1OtOOOdPFXI21kXN3qP2ttiZ5Qp8z9IcpViDvlzeJn8DxNNqp1S8rwPuSz0Nd0xsz7OINzUB15me6gqfoubIFu0OyJ1zsJIXngfM8CtU1zS3/XNqnLxfXuKWMYR2Ib1Bv6t1orPdjdCS/Ak95mfgAd4ib4NjNEXwE/UZ+X2sMLgo3BefgGSeU/RBv4J9JuGSUGEp5QluBOJd7RkU2rjCJS6m1E1JimFKBB+TToVrPQA/GO7+fKNTzqy/JVqrOMM3yJHQEPTZUk2JHuBPA5+aW5B75NTrDL3q4imh3v6ZfDP051zhwOceKlvAEzDbUzjNuvzCDUvVQqh9W9L1qKvca4akfBYaYl8j1oIp8wBbQGbMOVfIqImCAKowveUfHx3Bz8PDdfW4ha+Ff1dsTSszjD/P6xpcrNqJ9ga8zYZzbw/8EZzH01Vc1EW8MJwleBBum4+aHW4nQ49Ue+Y847ZVo9auKPmLXsIn5v9CKY48jkmOuQd76oc3Xhi/A3fAzsTfEwhewA2WgXGILr/85Cnt4="}, {"__id__": "chunk-fa3c6fe2558aa9c91f350e35b2b8a231", "__created_at__": 1760497191, "content": "## Developing Secure Bitcoin Cash Systems\nWhen building Bitcoin Cash applications, maintaining decentralization is crucial. Many developers familiar with centralized security models mistakenly apply these to Bitcoin Cash, undermining its security advantages. Bitcoin Cash security relies on decentralized key control and independent transaction validation by miners.\n\nCommon mistakes include centralizing user funds in single \"hot\" wallets or moving transactions \"off blockchain.\" Exchanges that concentrate funds in centralized wallets create single points of failure that have been repeatedly compromised. Similarly, systems that record transactions on internal ledgers instead of the blockchain substitute Bitcoin Cash's decentralized security with proprietary centralized approaches vulnerable to falsification and fund diversion.\n\nUnless you're prepared to invest heavily in operational security with multiple access control layers and regular audits, avoid taking funds outside Bitcoin Cash's decentralized security context. Even with such investment, centralized architectures merely replicate traditional financial networks' vulnerabilities to identity theft and embezzlement.", "full_doc_id": "doc-fa3c6fe2558aa9c91f350e35b2b8a231", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_3.md", "vector": "eJwNzI9XFHUCAPAUzXuEJLAHu7A/Zne++53vd2YWO+UqfxAHp+Ep5fNpderLxFQ8vPWpJaHBM7IgIX+QYMDusDOzM/P9zuywyaFiFJeWP0Kg9Eq5U1NPsme+7tRS++nr7vMHfH7Faii/O64szj9Hv+BHUD0YZ7faB9FFtjQ6j7vq/lVzo1HWKUyhMxMV2hrrG7GOcMG7xgF6gJ2GJ0Vk56Bvtb03sQmNYZtVw7g/a61QpL9plTL3+MZQamx7qNl8mn9dmYpkNB2t3/vd2/3ghip0zZ28UyxquQe+8k2DY6MDaFi6RhrxQedauLC9uk0A4Y4Um5MJWxtc7riL70q2WM6/RHrJcsWZfzWQplf6NoQybQs2BsYJNqmlCbPAfkO/Kc+Jpgo1dCrw7q7i/0QF9lmjJLMFfcszwo5IIvsI00ObSYYy1/8vsI5/jS6g+wIrtA/iJ11xgvRGcQy/g1JyXFFbbuDrdTvNpklArnhnIhh1DJMS5514On85WvXgm84MtRCk5P6Z7xPHw0vMFGUOeDn2XBJxn+CN+C+hh+gVOEB65X3ia+Dv3GX5PlxJ84lmFsMoRtwpZ5twNs0BFtrHuOvBnyxI++hVukyokS/BtXZYPqHqtFN36gUYmLNBr8SrN4VaaWPisP80qjU/4CWtRlIdq2Iz5FSGqgxfRtK6bmcvIvO8t/SCRDfbrQa9Ddwhf4+Qgrf7/fEY10y+ZAWz1JOqRKxv4rOVkj1jwUo4MbFCyyS3pN+Z5fHWpslgRHMIg8bv1RcSB8wVkWeC5a7tXJ+wDNcIz7cnramgQV1gj8OPWQ///1jnyXmrB29Kf1IqQ5PNbnQ+3bVjAhrp7HNn8emBS5xsPstvDr2EyvnlGWfIQrCtsw3PpJl7O7z79DMZI2YouAblwgiyyEf6+wGoDhi8MMDhBAk2WT/RQnbU38fp1tauHzQXzM69zEjwPWEufVR5IWmR3YEbpmXMEEtwpV5A8uQjrnNqSay4bQJ/lg56GP4eO5kriDdoHHg1tNK6Qq4bCWW8/4fAkJrL/2hm2H8DK4O1YHNwm1qug+hqZatnUJohuUESvPz2ba0sku2/ho/LS3IBibIqqDNau8LgGr215wqUzIT5R/8tsjj0of+OckerQpIXC9+mzUa1ho6cgOge9/3gKfxXwKIc5nMToxCyUI2WEYH0afSgWmdsCRWhLv2UxSVKxfXicnGpekFvCPYoPq4DNbjfEn5xPq7UUoyw2gfnw+rkOpXD/yCrUGVOAT4pfkbbYUPLF7SRM4zCQE6qGtwvzAOpsdHAx3vS1aNoqaONZpNLUj/8HGUGn8tbbHVTl/wztx9shsf4QmEaWeLoFRhzIljftUVfx5YlDkmtYGUsDpfaH4EL2jA9FztMt8izNBg/qjJGQ6zYfoJrV79CSJxljPVz/kLpU+NhsVoZFHrFTZ2PMHE8MxqiX6M04axxIhnmvR6JNinZYrnp0//p/TQRUW3tDeYx8Xn4G3zYyqP4lSw0Dx4KuuR6O5w3IesMe5P265XUb51wn9cW8liu0Dpjl0kuOYKfof3yBt+j6KB23RNghshUtcpUkqeNfJU13iUp5jh8EEU9ZTkb9mahOW1FJF9/B9W3X+Pr1du+CcYSc5c+BIZiLwYwN6yX0gr/PVitpYgtifPaFrvOAxx9wbP0tP4Iete8Af7N/xiYRN6bdCH0vthAWbEXdYBqS+L9ej0Km630KftuvIlzkA7tE94J+lnGVSw/QRXXAH5le4txit7JvYIh3Jr3pG5GmjvCQpG507sIreFS5LB50hov91uD6WH3xPhppj4Go0m6AS0gLewu33QupkzpHMYATyfz4zbcRX6rbfNs1Gq8zcYDtIKO7lkgrNYeN8eYAh0yMQa0Rfmvtohc1L7XRuAqpsfjNOqVPyTm2xe79rcvszQt7Pe6Q8qXbDF3wLcZZlnHtKPtu3OSwTPMcbJKKIdV8DP3f6IbO4uspfYsY6f2Pxlco4A="}, {"__id__": "chunk-2eaa06c6db7af903ebd85ed718c954ba", "__created_at__": 1760497229, "content": "## Root of Trust Architecture\nTraditional security architecture builds upon a \"root of trust\"—a trusted core that serves as the foundation for the overall system. Security extends outward in concentric circles from this core, with each layer building upon more trusted inner layers through controls, signatures, and encryption. This approach places most trust in the least complex parts of the system, which are theoretically less vulnerable.\n\nBitcoin Cash fundamentally changes this model. Its decentralized consensus system creates a trusted public ledger using the genesis block as the root of trust, extending up to the current block. Bitcoin Cash applications should use the blockchain as their root of trust rather than any other component. When designing complex applications, carefully examine where trust is being placed—ultimately, only a fully validated blockchain should be explicitly trusted.\n\nTo evaluate security architecture, consider how your application would function if individual components were compromised by malicious actors. A properly designed Bitcoin Cash application should only be vulnerable to compromises of the Bitcoin Cash consensus mechanism itself, with its root of trust firmly based on the blockchain.", "full_doc_id": "doc-2eaa06c6db7af903ebd85ed718c954ba", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_4.md", "vector": "eJwN0YtXFOUCAHAfwSlBRQhZHrs7M/vNzPd9swuoZeWJ7OEri5J8EKgp10yEMpJ8cRMVergo4hESdpd9zfP7Zma1tNTMU2rFTTq+I9PMzGOkGQb33KOWN6v/4HfO7xZuya97/zWi+t6x5uLX8WCwV63Ul0nL+b2BWWIyO18RpQfR//g7pCax2lhN8nyFkYAyT2kif+hnsK7cThkRP2g22r+CodJ98LzRxW5GVeZC+j5kRd6Xw5fnF9Nx/sPBVzzjwTyYAcNclfCWvN5WvLekZP2Atx5287mBVljBjiKNqCkWz17Fl3CH5W9HFZvdXJaQ7e3VB/C/uRJI4T4zZB7gXvS9K17Ub4ba8FUrSzQ2d3reJS3Rj+h1Wr59p4JyJ4Bz5ANQLF/GwJwEjuiX5Ro+6DglRdRn+VaXZQyzX2D2IT9ohuuse/Qd3E1thbxIfMOojL2JWZ+fhM3ZeV8w15w54sVYfvNjrqzEA2D9P7qfmXXkeWG+Wgu+H3RUS3O93W7hyvxX8G/ibXVieJny3I6N/AtijXeaVC63gBTjKcdp7JDPw2XxNV5I1sS3mAvEWiSOWgIieLF+LtKU6I9N4l606pUr5jfGQrQir9GbRLZ3HGYPk2HieFKLHzY58DUB6h1pNak2x7jXBdvpGXGI4Zc1/iM2IX/n+sqQ+Sf1acau6KdMVvgCOWD/xzmi8xiXA37m3oaPiQI8xwyWasmP7lJyMnJN3WWnuWuEH5SlcZf0EGHVVUay6jIb+YlqNSwiPdAvq9oI+1sytr0gXdrUzbR6L/wzsNf1k3WjhdMbdkxHg8yVm34hNc6ee5vRk9F9zl74W3wqPOEYSjayXdGSDdVoRXY6v7+jUcyF/XgeGhaYQEZ7MiN+lBq931wXmxp+jSbZ5cAvLOOXo5PqIe2dcCqdQY4J9aCNjvM+RxX9bmaYR8IL8nISl+Jfusc4Z7L3oGTstss6GuxtxtPcXHpWvgNruCwtha6nDfHboeWeruyj+FP9LNOHjuofoEXa1+pu0YF1/VJ0Z9wvd7j5kRXQCzfEDtoPOopBVJwSO6H1tA327JQvBCezBTST/xz59BCDaSEUYZtelXMlmhqeg8pIk70YTCddzA3huFpvrsY+JYhLIYitMX+HfdkuSQ3H4HajFXQ5o/q4KGRPoh4mH0TBHuOUx4GOss+of8YnyyfY/zsH0U1eF95PdtJxJIC9PoorjSxaAUMponOG5AVOqV8Z0jGNlMLa4E2QI9YlAIzAs+on4KC7CE/1zVaezv0jelwbzfSzEyKPcwNgjrQ1kMnsoYomqHOEmsxFal/nKdd1/A2cCYtCl9WZapL2CDgF18LjcBYeS9L5EvEamSyuTDTSpY7h1nBPAXwPQDjFGsTdra2yZrlfJhfb51CPXaoXuQ+hh+21+Kq2G1biB+j3wqVIDV2iLcDNreOx4Z0H7uND8CqfpNFNaXiLfsPKEdzKX+ZB9Qwu01ppi5JGvhxluWqFA1IWuwQFrOlauqsIcXA3fJkgM8OTHx+ad8Sytc3yfFoXraPHUO3W6R0rzThN0YeIvyb3ysXAyb6q7omlMp+Hr5BUY7It6encLeYIzXSL+BPPSx6nMjzSKS0NtsulxA9/cfWhsPZ72yHtXhrWAuyz5Ee5QczR1uuVgdPSxzQLR6xdZqoJwCMRC6+li/laXEWa1F7JAAvNUuYZnw+9EcsouN+3FZbTFraKjhUzjKCWnqhs3sxXs91GLFDGqwIDkolEC3kIJoV7O8+b10E7+gz0CLx6jU0FhWgi3RgsySZ4PphpxWkeeTVRAP6rFAT2g5AxVE2z+vlc2pd9jh2LuuM2XcltE98zMtQK52C92oih2foI53l1rvYoiQiF0gA5be4xZ5vPR97qbLK/0sQ40+mwZskjvXdpH6IntLrO/Va9GbI2sC9ZW1J/8vxLVEfeQmXQ7mgQJ6qO+MhAkj4aV8ilwOsdEHvwMXlAGEOmmTNshznQ8Te5Kpej"}, {"__id__": "chunk-3c8359c5fcc070311d141cf834569695", "__created_at__": 1760497234, "content": "## Computer Security Challenges\nGeneral-purpose operating systems present significant security challenges for Bitcoin Cash users. Modern computers maintain constant internet connections and run thousands of software components from hundreds of authors, each potentially having access to user files. A single malicious program can compromise keyboards and files, potentially stealing Bitcoin Cash from wallet applications.\n\nDespite decades of information security advancements, digital assets remain vulnerable to determined adversaries. Bitcoin Cash creates digital assets with intrinsic value that can be stolen and transferred instantly and irrevocably, creating massive incentives for hackers. Unlike traditional financial theft requiring conversion of stolen credentials to value, Bitcoin Cash represents immediate value, eliminating the need for fencing or laundering.\n\nThis increased risk has fortunately accelerated innovation in security solutions. Direct response to cryptocurrency adoption has produced advances in hardware encryption, secure key storage, hardware wallets, multi-signature technology, and digital escrow systems—all creating more robust protection options for users.", "full_doc_id": "doc-3c8359c5fcc070311d141cf834569695", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_5.md", "vector": "eJwN0I1XFVUCAHBk9UQEBtKpx9vHezPz7ty5d948NVvN1lXXPLYIrlbrV5ri0TJQI0ozZNUO5kdBgnzJe/jgvXlzZ+bemXm0eWzNr1hXLTpBtm4CgcVqtWsqCvmxGHXc/f0JvxtID5a93+VaHSyIhFEfKteaY5ztC8zJXhz9BX3ty9VTwGW+QOnO/sRZQy+aJ2WfcUKaGHmbfImexYPGfKPRf9EJ20cA5japDDb5B+Sidyyio/sC47Fbyxu/zdmFi9V/QZFrR42ucnXQW0PDTuGE8uCXsTRuhb+U7pGcQKv6nQWVkoY/QNkjRIa1VtVt9ftGwcXIo51DG5tTlKtCC10qJMQ5QUW8kfMe9zXkrGxxnvS4LFh1dD8ps4+JW/j2lLXiumgRFMhcpYJMln6M/a6xDD+J0z0B6wjhcL/VQ5PCyfgAHAdG9JAxVjof/yS+RLppzaVZwVXob2aPMW3v4IHkQLt7m9kvrjePJqaq64TX7VwjX2+WLwtTH3kc7NZO/DrO363bHMyAQeECOSMPkjecV/zFMFd+VbnEJG/m/6/SAxPJm2iHOUe2nDXmusQh/DPsAQ2hB5AP2MIAfb2Z+OdakE1gl+iA/LLbkfPoawbwKNYOcsYoU7r0HtfB6FVzq7LXqqQ/x1ak3Weq3HgDP3QUVIqjuVNgX3wzgmp96zK+OF7FJZkz7XL0QlRrrEUdzRvwHtjuyzmQhiaw5OYlLFtcSDnznNaXk6YXGqa43FcLDpoTs2bQHeoIKAK5dCyuV1eENtKltFT8ifsls0BKxaNBihIG7zkDMMUAVpVYm9hm9+of+/5ae0dexE9DB/kxjKJ235PRrd4bJOE15Fb+Jfwnu1E+g7fgK/g/9THKoNx8FF+g18kaXxsrHZvPlnm78ELxC/92rYNcUJOoZs3G19BCdl2aaBtku+e2NFOaQQVHADXoCDiL9wA+0G1F9BmJu2RnrJvudn2M6/w/aUHtq1BD49rwdF81OxQ4Ef/c5cJITCjHI0/s75BOB1fRFPMd/UF/AYjgYmMLDKklrcfNaimINjc0sSWk1Hgruphs8r1vZPivcXnkA8OOVaPF4iLmJ0XWavcIBCQ1sUh4JTxfj6FR8TYrhDL0S7jroWtaDXs1XATGKxe5q3KE5IvnfZeMf8MHjQXSLHgVHYJ7zVvSPuiCS7lV0gZwVqzVC9UngmXK07FvmceYEXgx2IEHWUC9jisi/43UoHe5fLmEVmlD9hE41VMNRqT1dozvl2YbWfCt8AgeDrRRDjVIXo33XIkejf+xsR72KgvgevKr6MKWu8SBbeo/XVOoQZ6V0wM/+EVgaDnqN2YFuszf9v822IJwdqawTD7JAtGyxFekhKtLvJT2d2F3Xar7GTYd1Jv5ehJLVYujHezD5gKqR3huv31B+iheJjfhU/YmDWgr1SnsDfxZqEX+SNkaGh1JyOfE7WwvBPimfSeRJj9GV9NrLZOCn5J/kOk5txigh0EX7FaWC/PwXGbXZeiv8ePkPjCJjDF+QwRxpu4lSJ1sSfa39Jg5Bh3m76iJWBW9v+V0oI0J8cLGz/hJlCdF6Vp8qtVJuMT37tMg20+0v9g2J0mZwhXfRToMn4reCvcZSDobzwjy1tPCbDKTLVIdYT7ZI6bDUXRYvR7aiMeQtYFkp4V+w773f6Ab0k6nM+dl5V7iXgMCK7l+bh96QaHKD/rt4HMoE+fGayWFHJdGOy/SKa1p1A1yzR7qkYb8Kvej+aZ5jBT6F6AW0EdlEoCV4Dx3MJZn3o0NNeWgevIUXwF7wSxYaZSYyfWd9k11q3costwzzzklHtc/l2fZlTAA7okn9eneXbgXykYCdIAB7VEryg37dL6rZoFVytzgcDCVzrK/sx9ja9kG/l2WJWbru6LPsz/HE2hIT0In2HMuy1lunWZf+HbZnfUPgwdiO8tno17/PTgNdTEvq47m5XSCpoez9KpAH/o9cjxh2D2ugn5orzQnZ/8PMsetJA=="}, {"__id__": "chunk-9dcfcabe511c653408c0e7a5db4a3f37", "__created_at__": 1760497276, "content": "## Cold Storage Solutions\nPhysical security solutions often provide the most effective protection for Bitcoin Cash. Since Bitcoin Cash keys are simply long numbers, they can be stored in physical form as paper wallets or metal engravings. This converts digital security into physical security, which most users find more intuitive to manage.\n\nKeeping Bitcoin Cash offline, known as \"cold storage,\" provides strong security by generating keys on systems never connected to the internet. These keys can then be stored offline on paper or digital media like USB drives. This approach dramatically reduces the attack surface by eliminating network-based threats entirely.", "full_doc_id": "doc-9dcfcabe511c653408c0e7a5db4a3f37", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_6.md", "vector": "eJwN0flzFFUCAGAS2GwSEnKIOSbTme6ePt573cOxBFg5KkgOlIqFKGqCKISVEOVSZCFZWCRIsqDFERNCjpnM9HS/fu91dwJUUUaF6FoVXAoJLFUs3othi0u3wlY2hkRXa/0Hvl++NP0NvfH02+yWdgw/H0sGw7iJ3nESJLnwIrsZTFWn0WyuHaxGnfEET2XD5ENlKNyNkuVm+gSMoq9oMZ0qz/bGvFNgyYnWln/jpUoIDvAPsRZUA+bA7WxIK6T5vyofw+ucoleQVrlWPIX7cPHMSaFVpk8JKmnW5+0/obv+YbdRb8grFX5Of5TfFyii9RTw5bBWqcEGms640DPwYmQVXheoCq2gUe6SehguIsX643ouvOeKboHpudB8cGIxv00tp0N8aduodoGukg/HieDXMfoL+M4OgUp0n+zJVwo3tK8Dq2SHhY1pYCvbFpVBKt1hT8C92gjLpkfFyUKaNrl1q/O1L4IneR5db2axG0IKfhGWSQuOv6FmkXowszlVu6bvhPo7D9hleCh2qAep/wHvoBWa3zkdqGJ1QNaLzTWoGf8O9Ho/p4+zRWi+9rzUG+1Q01U/V+dltiaLqldqzXM+df4M98gbwRUy3LnGGueX2h8QE52L3vKT3Jv5r+rNZjHDZpvyKDPEq/Z5EpGzlNkdQt4M8SXwY9dmr/Owa/XnzKfVTgW4HT5IvpMK7VT9vNgWTJF28Z1MiS5z5oGNJkfmRRqmlhWoRii/iwyphO483mGn4WwnQ5lr/gSPkonoJMt225QlsElpAOPKs4E++K/gXZyMEq1BWgFeszi2gJ3tiMcatP/GzooLFUxPoJXCb6Rx/gJZDarRM9G1cJnzbOiAxml/gi2/fdcsDd61ysCEvb0tAVyNX5aPudnSELxfALQA3hQYkDOMkJsNVbnEeUQuYffs9an94I/aiFvVWynn8m56DM5Qf68fd/ZaDW4FHVXG3MD0C/zn4i7WiL+xk4Vz5D4/G48qXGO2iKADB1A1/ezABtXV64lj/mLz5tPhN5XPzKBwID699xJ9XeoXsiNfuKHuv8aOxY5Z4Ycr+XKek2dFD1KJbIR+5ZaSELnBtqgZRmZsY09W23v0ha42eCszw70CspznwCyjiOyhVO7ni/RcqQp9YgFUC87TRr45vgy1i1fV5IJROwp7FUvdJZhgxIjx56yF3Q+F3oJPsnVGiC7mp8wcV2ezXL8w5X9yD39ebuJrdV9si9llGFo12Cfu0+b0nI77xeR4kV5u9wZX6qW0CX4vjJCj4rf8W1Ff4avRv6Mk7oa4O5KA+6waOBj7qHOMLLGw1gE/hXnKHFbvNuIvxcHYOF+pl4H7BpD/gH6gGXi7V4QfzyvvqVP+mTNVOgmTWIm8mMwlme1x/AgOW7vjKYxagxbxZCUQfkXthivoNfo3NmE+5o2hbfww8sPvjWVCPnIKf3Gu8xfAIof2lEMjnGffxM36FmfAma8cpZd8vHJFR1of2Iw20PRpw2ZFy8fB2q6bdjXNzOsw06KJON3mnA5nPx4w14MU8V1rr7kJJ9Iudbc7HFtgfdXB2L2CZPlQdL23mD3wyvEDMDOwhp1xPgEfcCQ4KqymT8u3O1+mt639aAOfo1vmR+IEaXXb3Z0giZagFs7rzLJe4U+CbTSMLLKWvuxelEa5M0BjdUIKSPCelOYo9wQj9ppagL6BTW6OngT+kbvDttUW3A0kj3fW9lTSA3m9dj+brK5U64yF5o/OPnrGtxzlyJfJS+QHlYPzZTU/kb6N6ycnKa32QbFLnSJck312O/tC2ezNky4GynxVAcFd7i9hJ8ETdJN8WR1Cd4jffko+As5a78u18evdt4OnxPciR3xjeMTJp1/LR9CIscN5kaaRGuqXf32RvvXH49lWjT1Fm2TNCta4u62n2GDBIu/1GOfciS3lUo2gPRdsheVtfcFE5wV3fzwiPAa+9FfZ7+sz4CjojUyVWpSHyZueDy/H/wf/0Y43"}, {"__id__": "chunk-505664ff5e9c66281c87e35ec2c59072", "__created_at__": 1760497277, "content": "## Hardware Wallets\nPurpose-built hardware wallets represent the future of Bitcoin Cash security for most users. Unlike general-purpose computers, these devices have a single function—secure cryptocurrency storage. Their limited interfaces and specialized software significantly reduce potential attack vectors.\n\nHardware wallets like Trezor provide near-foolproof security even for non-technical users. By physically separating the signing process from potentially compromised computers, these devices ensure private keys never leave the secure environment, even when conducting transactions. As the technology matures, hardware wallets are likely to become the predominant method of Bitcoin Cash storage for security-conscious users.", "full_doc_id": "doc-505664ff5e9c66281c87e35ec2c59072", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_7.md", "vector": "eJwFwQtQFGUAAOCSQscHZaB2cI/dvd1///1vjzRqUJNQUNHAwWTIjKx8pBmoGRT5KjXBHGGEwgTiuL19/Pv/u3uKYKUWigmSWImFzxlGR3opZtgLK4f6Pp+365EtB7LwQvkYDUrpMIV01bZZliiHoKnCL5jsUDsoko6Lr5OTpNMpUePRUs8scSF4Hnj5FnmBFVWW8Cvs9dGR6OPYjcpNdRujwsv6GEJQLMwLtuGbyTusVfAhfSjuLrcquDLynFIp5ijA+ieYkrzB/BO2wulqHzMKLvGcMN8OxAhjAWZfFA77nqpJsf6tKxUTxcm0LLB/5CEpTug3e/EIPjc5ygeT2vknpElOprQS5rDrGt434xp77GFsvmsCLGNlaw24rhdIH9EqEKtMCbtgVWA9eN06A71oBrmP9LD5oFw8jwZxK5kmvoEHuOtCLTlqHJLPBTJxrTZaXO05j5aTU3Rmw5BSHt3tXRppUvJxE+5EYxLT/UNcr9KEXsP90mBgg/CEcEVtRkeUligSb3oXygPSFrOAHbCHMaflNL00PoZ8D4ZHe3GejeRtcHu4Yvsz0rd60vha6vJF4SvOdFxiXVFzoR2eLD9r3SR/mYXEo82jq1A2WdZwQxlSRqA2fchMY8rBXesSN8uIZ0t974i2No3D3jSp2eizlrPl+NvwXW2KHQz0Rwobkn1/JhaJTTCGyZI2wOPkJTNkMTVn8VX6YXy9WO1uILf8lzwZjZzxRUKb1dGgkpNCs1Up/WB8xX+i5OB+sRPUs1PEF5ig+BG6zHdTryvdeBJTKc5pNfeRavUlcyfcCrIRBHFqrOSDxeqn+o+J88BqqYhvEVNoJigWCLolLfLNIE0JF/FpsC/yvJonvKJ2+ZOjvWCbtJY9y1caGb5B7yYt3flNSoC1+KSAyMuEciMDsWgzHnQ+U/PENfy/8BdmCSoyzcZL9JpVwm6hG8cdAF/yFUZOTefuOyGsL+aWkxw4VZplyMgN+6UD1qf6HBAMPGqsNj4xUrVwZAD69sz1z9VrnMeJIZwQNmkJVrM6XnkzNJtU8mkk873RQrbRo0RUxrOy7gFjmFjs3KiuEO6QadFiz2KzzH2b8yfNp/fLK/BPYr4/L1RqVcNc8BaaqhdKsbQD5vLX2I3+apwhymCiBwmjrZB4kFsmtGhrIEeGQodxdXhicJdcao5zOske4EruAzyxJ5znzyi3uHgkMkuDF5QUY7YxSX5DHG3u4y84vfxWYcneiXCs64aUJ1+jRfHt4Utms37c3MzkjBtSD8g7uCZ29964kB25KH1Tty7URrrFerRSzIKae7uxhz5X3+Haxc+QgEyFf5Qu/g/UYFWxtxxIF9TNtFOFHvUUeDcJ2fngEZJOH3QfabxufBdOp+ud6MiZgSO2C/UYfyNv4Bwur7rKpo6vpMOCR9kHEA50hB8XXwWT36+hbR8mowwrdv+L3Jc4RAcSeuRTdL3ajcv02WQBykSFqIqZHrhC/tAGcB/figYFn84Yo/SvPe07p5LPjWKrm8JILj0XWMwv0rtMpbZMP5x4mfaYu1wFUhedX39CTFKvUzd9zDmvL9B/4jeYa+x7/T0eP5/lD5ECfn7j1pgMWiJ1KwfRbNLg/z502zhBx/jeVueD7L1lpEhr8fskh/yH0rTJ9ANSwi7EFyN3KKsOl1vpPd77QDzo44L8WXlCYJ3VJT8JCt0T9bX+3zAnvGdfoL86McYZ8RjOtsaMvZ9P185pc6N3tHfdj0pb2W/0AnKaPY1emPCV+qDTjxs9mkDNh91ZYizs0BdZV+mgcCg6V/s5UhF5hr1iufRf7VTptr0fzJMeki823qsl8B5pkvqd3+dbanjNEv4Y2BEBccDJwAqjynHaYzTRPEj2RDYLCl62c93ebaYR4ZRMmdMgHEWMpMNWkpJgeSMr6Byc49mvDuERzNPC79VvSu3WZuOo6g69hQC3NlwpvyYXS83MJiGVGWWfsupwBfM/P/CoBQ=="}, {"__id__": "chunk-15b90b39c83136c11d212530d35676b3", "__created_at__": 1760497292, "content": "## Balancing Security and Accessibility\nWhile theft prevention is a legitimate concern, users must balance security with accessibility. Overzealous security measures can lead to permanent loss of funds. A notable example occurred in July 2011, when a bitcoin education project lost approximately 7,000 bitcoin after implementing complex encrypted backups but subsequently losing the encryption keys.\n\nRisk diversification provides a more balanced approach to security. Rather than storing all Bitcoin Cash in a single wallet, users should distribute holdings across multiple security solutions. A prudent strategy might keep only 5% of funds in online or mobile wallets for daily use, with the remainder split between desktop wallets and offline cold storage solutions.", "full_doc_id": "doc-15b90b39c83136c11d212530d35676b3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_8.md", "vector": "eJwN1I1XFVUCAPBjEq5oqyu4KLzHmzdzZ+bemXmo6MbmYrkQLUaYkaZGHTNdaD20W8cP2oDV/Kj8NgR9wHu8mTf3ztw7Mzz8IEtaQ0jcNDy0YStmW7jrSe1sQUfTykV2f3/Er0ztD9HDr9D6GfMis7SZcj4KkHV2X3Q+F2raBL9By2N2dHTqANpHmXuNFejrkQ8WgHv1scyCb4EWdr99h1/szmAuelwsw0+TreL7aCS+hVXD++T20MZ4TfYp511pffCYuASWhp7T++jXk6OW5U6dWaUK9CHoSh3G5ZZSdXKEdwfRUn0SDIiuWSm0NubYmoFRvVAVzlLn8H/WkvlTzaNmH/lr9vz6X5M2lIr63evSXH4tvOX8jp62tjod8bsZyWB68IhRLuNYvwLo95lp1ptmGlqADPWDWAB+rHxK70ZI3XZ+BzgDDtE0Xy6qjKXZ4/wb7D5zgmKq75D5JJlMEu5DXZzAauKhlpVeKBwwX3M303RSjCqjCNaIYacbvCyXokwtW+QDUbcPhsyw8w1IyAGwS8Es/5cX4ysyj6i1DQCtYTIYpn9oDNLP1f/KXWIpWYGAMFt8gwHIxFTvLfa+2027QvGpFTDNvEN+aqm0Z1npdJd60RyRp0dO23u0Ivq2k4Qhd4Do4sMtJf6z/nTue7srUm4cla6FpcRxdhRjY3BawpkPB8HizPOwU69QL8lL4pfgHGWIPhapYUwqpnNckZ8S3ETM+ChYFcnxD5Plxj9oNZSFLLSPDMM77BOTo7vJGV+ucHlvLXpWGZBeCv0iUugluDh70PuVdoVttl+0Hs5s8/PKdfT3hp9zNxtNWOf7zr8GvjpxIbdNXWEsFd70Lkg/aCeV9VpF8Iq9UT4X2Abzs2qs4mmd5GuuhH2c9Sc1NZYNu2ldUzZHySU6F+ZqHzkH0QB9EH/Fq/INeJ09nQiJpdormKq9fJKS6sb08tZ2O5re7iwiB7R8YQyrjbTrtzkJ74Cr6AvaSuuC2KJc1gW0yPpLuE3Yoa1lZTiP3OT/SB9tTrFSIGftdePNQ5Hz/DjYYxXTgP2eP5ecFbst0PCq1GaupzlmAdqp/GhstiroY/pTyn/oRvZa1pcYcN9ySeZcZsJau0S5yP/eUdg5cbX/Be0YOal2WXfhj2JRbBl/e38PWCZtmF4u57PD8LCQEIdiz8uiVQT7Do63PbUDZdjlbJ65XTmhebCXjgbTwWq+c3+OWkTapLVWKt2m36MCbiKny/9yelpuCm/gmZK/aSkIqkneJDkdb6G3Jq6x6zOiwR5gqjsav9DHcP3YpHkwp2mn85N9DQ+q09FG+dPmdf4N9Dx2+cLggRZf6CV1AjndNE0pc0vCZd6oNcWo9mrt1RKDrhilmf4ZbAM7cWAldqfNct4m56wUuw3/mzagI9ZV1KwsYsfJb8d/HgfeoPoOf1U9BPdxJfwSrUOY5y420qQFTnPrgNZolFvD9WlqPv0QPxvd4ywgFdIkeZVaJX0m3Us/E1Lt++2ZqLdhHlnBrhidwYJ64vTSPHe2l2wMRY+jHnmEXTDqyCPet2KQPRl8nE/JsOzC6O5Aa+wLt8rZ5o2tH5u1kEumI2a76oYXxkSQ7KTzr+NC/BUehJmRLchPhmLYeMB5gl4Pdho30HeSFa9hIfyQMs66pn5iBexTTJPOskfE8W5lPBWdc3TwnkT4M/VQ7FCwkkv7steqH+J1+FbANtvEhBOzE57IZoC8jEJ7i/BD5GDkRsMJT6LF8V6oGFvNIosDw+ptMFl6yiyN7m9ODrwbbxXmwmqQJ0l0t/U3yjwKPopX4STQa9wGPusYt44tByPobvAK3hU8BE/6lkX2CAFlb/R5+psJKeJO/LMG0fGRili/+qX+T3cK6yZJuE+57JwGYwIdts94VN/Oz5ZHxQIjRY8mjpL/L8NVOy+Hh3ApftLSAgTGaaWks514f2omegJUwEvOJu0BpVN8hlzkXiQDpM67ah3X/wexlbRQ"}, {"__id__": "chunk-14d4f56d3dfb1db7e669851530759ccf", "__created_at__": 1760497309, "content": "---\nsidebar_position: 3\nslug: /buy-and-sell-tokens\n---\n\n# Buy & Sell Tokens\n\nThe [Permissionless Software Foundation](https://psfoundation.info) has developed decentralized exchange (DEX) software for buying and selling SLP tokens. Documentation for DEX software can be found at [dex-docs.psfoundation.info](https://dex-docs.psfoundation.info).\n\nThe DEX is very different from decentralized exchanges such as on ETH and other EVM chains. There is no liquidity pool. Tokens are offered by a seller, and taken by a buyer. There are only two parties involved. The protocol is *trustless* and *atomic*\n\nIn order to sell or purchase tokens, you will need some BCH and a web wallet. There are two versions of the web wallet: one for buyers, and one for sellers.\n\n## Buying Tokens\n\nAnyone can purchase tokens without any account or permission. All you need is some BCH. Buyers are known as *takers*, because they are taking an Offer. The DEX listings can be viewed and purchased by the Taker web wallet:\n\n- [dex.psfoundation.info](https://dex.psfoundation.info)\n\n## Selling Tokens\n\nSelling tokens is a little more complex the buying them. The Seller's software needs to be online in order to finalize a sale. For this reason you will need an account to sell tokens, or you'll need to run your own copy of bch-dex.\n\nWatch the video below for instructions on how to sell tokens on the DEX, and how to request an account for selling tokens on this site:\n- [dex-seller.psfoundation.info](https://dex-seller.psfoundation.info/)\n\n<iframe width=\"639\" height=\"359\" src=\"https://www.youtube.com/embed/0ewHPlb57KM\" title=\"Selling NFTs (simple)\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" allowfullscreen></iframe>", "full_doc_id": "doc-14d4f56d3dfb1db7e669851530759ccf", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/buy-sell-tokens.md", "vector": "eJwFwQtQFGUAAGDLE3KyokTicbe3e/v6/709kFIrChTNRzoGpSZJU6JFmj10KAUnIBNppBQwXvfgbndvH///7x5aoUUppQYlRWSSqTVNUTSlo6MWjYqTfV+D/KO0tuuA2kQfdR7iz6IK7rRdAurket9hbyPJ8MaCNXEv66IfgzwXIiq3M7AwcF2qYGejh/gYPaJM09YjF6L0ITgsjklFZJ07SW+2vEJJgKc0sMB/ksvXXzfHrDKhyvHJW/2Pcrnck7CSzfZMbF0Z/wwW8m50yEmGN8JzXRtgC/waH4Xjpg9y7CJ1QDoFl2UXSM3+7Pi/kgw/AC7bGyfmjd0DbMhdyrfH90U24neEhPYuKpBs+wm2Fo3Tq9kGaYb6It6NA1kvoIi23znC5zN5Qqk+H/7L3a1uIyPyRLicPW9O0F4Wnu7oM+YTF1PgrwYbqOuRIeOouY5PYZOoOXRteEjtshqMQ2K/WSSs1OtjafBewIl3gD/il+RBIWTZxixpCSjVx9wP40LnuBCDuf4cfTL5ImMqn4WjgRrUEW6E56QkscXahU/Rvaqizow2sx8pFaZgbiTjke3mZmONKaONcBNTDg33gPuoUKNfkb/Cl8BocDkY87msG6CIL8Rl8CDoUSrT5qMLeABVC9/BVWyj0R+YSWZFH+gcJdniAJPn3Cs3kc3tbnELbgOVFvb9Gs01SmIBvce+yG8P1qH94YU5JfB5z6d+l1yur7CK7R72S/oLtVf83ZiTfoAVNRY/569mKX8tnwpBpuYz4e18mbEMdE97SZkt9u1Jc97HG6DkTKb3N4cjjpSf2owuhk81j4aPK0lmDnPEyMOX1TJjlGkACXBZXxdvp+eSRjdJ3x6/zbrqVIh/khqQHDvGH4ZPGwVowVsR60Da/WKW7ksZD5/LGA6eNHcxA01H1G76NCmi/J6DYj7slrOZbcple5i5h/1AbDAPmWcEJdRrbu0cUCYZ5/ShgBdUy1MyzglZkXbnWmIxXix+yLfI6WxxZotwLbSGN7l+pGgn7I2xsN5D0eJZ4ydPUvQ2axFfw9wgvZ0Q9qGdRpI9FcbEk1kQ7IAfcm+E2lkOr7CmiUvpIfSL4XGYgAzTpQVMmXs5ruTOcKWgiLsJDwbr9QsSl/gBkMD33BlxOL7eV4d77XnyiPF87D38rQnxGW43fad+XLhuPkKlUBeMiYHVcFxvA395z+vHJR9Op/OlQ7E2Dfla+RVMq3+Z+jY/iVycIitv6QGnn3IBK3MtlYoW4wJTokvtl9GbvnLuNSU9ODM63e4TdDBBdbWNwR6kBfIyNymD4HPrE/JfeJ/3VnOQ/9Wdh+daG9ifU6+rb6ff6X40Uwal0lr2qlYo5KF64mdrnVvwc+A+nGeHuROmQor5NnzKOcjNsbx0K19F9hpzfBn21fRa0CS8EkuYW9xudlFnpTQbp9kn254Fl3Z9E3oNzeVG8D5wOj4j0h9XtPv8bGcd+SM6SUoWX9GSqN8YBx4wZsCvkEIyxEF1VOJaquRuYxdOzkrY/uylYLs5P/yI9qrVK7qceVwdVSDOAwlhKr+GaB0PCBGngX7cP2H6atMTVphlUDLKtRziES6IxfRC0s1+l7gCE2gHGkt8w+1JNOkru2Twn16sbjOfElrgCRQmMinvKnUe5h4zIzJK7GZmqV0Ngr05uto7yIT82QLLfozOdvZlq9HKyQ76E20RnupItVNIA37BF3Tu8YraVeEOaq+6BHmEHKteGG6cohRKAAxLKdxyYQa91eoyron5Zkdwp/F36Gv7mbQVzpJWAY1azern+p7oYbUADJLJvu877jJ+Ux4UktEPqKTlb2OT+IQzC9TyVNoVea9RIfJGFT4hZdFV3Hm7WOtWwk0VHgtWG5vAFeonsB5PbFeiq+Jjxv2RuPKPfuuEv5R98nTyKhVk11lLYy/RBRyGH3G55HGxQzvWOUrnOj+K7f4xJSK9zq3y3dx5zCDiSEZH4n9vY6X0"}, {"__id__": "chunk-c59f057849c03d16ece338c5d0870140", "__created_at__": 1760497309, "content": "## Multi-signature Security\nFor individuals and organizations storing large amounts of Bitcoin Cash, multi-signature addresses provide robust protection. These addresses require multiple private keys to authorize transactions, distributing security responsibility across different people and locations.\n\nIn corporate environments, keys should be generated independently and held by several executives to prevent compromise by any single individual. This approach can also provide redundancy, where individual keyholders maintain multiple keys stored in different locations. Multi-signature setups allow flexible security policies, such as requiring any 3 signatures from a group of 5 authorized signers.", "full_doc_id": "doc-c59f057849c03d16ece338c5d0870140", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/mastering-bitcoin-cash/ch08-bitcoin-cash-security/mastering-bitcoin-cash_chapter-8-bitcoin-cash-security_9.md", "vector": "eJwFwQtUVGUCAGBFQchCM2YAG2fmzvz3f9x7eZQxCKv4SjMfFa4Gakghuj0QJ7A4evagZQ8lTZFFZphh5s59/vcBsqbnbKc6PawoIEtDJTeiWNdsy1eZp5MK+31rE0W5n/2zXbvKi/YL2SU4NTornNY15pzQ1kL3uQJao2/U+xXXQdpoNU0YHxsr+SFA+HT1OE3Tmtk3tNrYVn2Gdc3+Ex5moerNGMJOIaB6jN9RKTtTSIo05HxrrkRltBx+indx+wnsEJhUui4h5eZxPrEKT0YbxIAq4yGwxuZIOmuQjOgptsXTRM/R/f6ZfAkuCO3N+2/kFHG6WaWYxrQlwjScq/zdu4z/yea4e8nn4KxVayC7zlyQHYSDoYRzkB5AJ8BZ/J45G15yrAA7Q6+6F5JSc2uoDv9Hn2e/ymzOjiQ8jKG6teX4hqZ4V7IBGvbqeDHjtCvkvINiqwD2wBBN10o94a5zioN+YeaBy2274QSfDnPiF6M/OL5WJkQG8rbDgOaj24QC5Ta18aDQxQb536Q3E/ebc9VdXI+aD1ON38hJqzd6h/kem4T/B8bjIFS0ILjTWIVuZj5gI4+idOp342a1FT+o9ktX5NliCtOrlQmXpDK03tOgfM8N6wvt84n5zF+NbrBUHos+7c9gksNTfc/s35AdQAP2YTqRpojfG9m0mLwsHqSbcEX4HDssO1gMi8CLeo3XTX/llslQA0wER3Wn8aGvQq3L5OlqPC/2Zfxhh4sct57n22izq0i/ETrgdaBkptkxA9dPvy2UqaW0TBxT37KIIJlOGjEX0TXTXXw1uBd6pOWtMXIh+mVHOtqkPhS3APX/gX82xvAitIDs5T2w0rXFeTlew56VJjGDnse0M+5xpsj+wu/EdeyoVi2n7J0KZ5t9BAlFRgYbsV6njaJFtmNIT9nb0GtcKNyITuLJefdZ5YmnO5/XF7raEmd8S8h6VGjNlf6tTAMv+yfL34aiZKPY3DKFS0JlXJb0qP8Jbl9uEr3K5ka+y9gqtc/wy93ogBqw36V/Y1/BDvlmvEZK1oppptfdUQVfRKPomHFLXWC2o0I+W6n011iVqJxUaH90Pgh6aa3aQKTdq+Q9pEe7Ab1Zc0B2XGKXeLaQfm0Hu9Bzgq/kmlwXfLfic9wxtJgbuXMHfQfuI9WoS873jDdG0T16H+Ply7jxtFC+S20i6wQV82Z94gR7qSPIHEdH/G8K9VKJd7XckBNkCmc8LHxu/8CmgSH9R9+Avx1X5YzISQi3PySm4UXWk9JVse7uTPY6WiF+rCkaUoP4gm+j8VELhnP5Ee4ytz9+2CrX39aPep9xWfos4RG8y52qzcRf0WsxR+cv4u4IY19K1NGjdBFIN2vGHVWChiSejh0yrtMc5YPYFf8R5U8zn+9n7oN9/kMUgt3oJ73G/ISsB29xU/gMeht+IDzOrLYPAY7tNq/QY7hOkWhrvDSnRGnR1rg/1Y95nwI8L3MedBdaa7XSy9rvoaXEAVeKE3U1Wp1ZyZ2PL5bG0bXmMpF154MBX9X02mg0ftTsQq+bF+XT0ibmhFKvjqGbzKiWR2W779AoicBhS1R40iiPiL3O+ZqGc/QRrUmciZMTXk6XomC79riKaY+Uoc4Pp4Qz2zeZfmkKbqQ93BZ6jzXc6WM2qnP8Absb/Ii/tveSKricyxI3o4PCX4Q+NSCEJ1UY8/AwmKYlkyHzJfu04aQQTVXajWLQkPEJ/odZZN5Bz0v3czvg9dhag2b34H48se19/xl2nLcJ9xuDHcvxzyQVP6o9ZVJXZ+cRhOjoznp+V2yi66JxiyfGCugBhaQgkq/tgd1wKagSs9RrVNZXcW/H+sVavVzZGk9TEbcuMdXKN16adC3ahgpU01+AW7UJRonRBR+TnoRBYyCebjabm42TkRfsb8CzcYY+QQ+AzWCj8Rn8l9mrRrKeC33jmwPyvMU5v/o6UAfakLVNmkX3mI/IKdr/ASOxl2g="}, {"__id__": "chunk-d7a4dfd4f00c44c762bbbabcf2a129f9", "__created_at__": 1760497341, "content": "---\nsidebar_position: 4\n---\n\n# Data\n\nThe ability to attaching data to a token is what makes the technology really valuable. To start, we have to define a few important terms:\n\n- **Mutable Data** - Data that can change over time.\n- **Immutable Data** - Data that is fixed at the time of token creation. It can never be changed once set.\n- **Genesis Data** - Data written directly to the blockchain to create the token.\n\nOf the three, mutable data is the most interesting. Because a token can track data that changes over time, the token can represent items that also change over time. Some use-cases could be a video game character, a product as it travels through a supply chain, websites or social media content. Anything that needs to be tracked and changed over time. The mutable data can even contain software code that interacts with other software.\n\nEven after the token leaves the possession of the token creator, the creator can retain the ability to update the mutable data. This allows artists to obtain royalties and enforce purchase contracts.\n\n[Here is an example](https://slp-token.fullstack.cash/?tokenid=c9a6ed5c0cdef4f1ea8b71442fb75645cec3078e740db555320a16d5bbe94d74) of a token with all three data types defined above.\n\n## Specifications\n\nMutable data is defined by the following specifications:\n\n- **[PS002](https://github.com/Permissionless-Software-Foundation/specifications/blob/master/ps002-slp-mutable-data.md)** - Core specification for attaching data to a token.\n- **[PS007](https://github.com/Permissionless-Software-Foundation/specifications/blob/master/ps007-token-data-schema.md)** - Defines a common schema for reading token data\n\nThe following JavaScript libraries are used for working with token data:\n\n- [slp-mutable-data](https://www.npmjs.com/package/slp-mutable-data) - Core library for working with token data\n- [minimal-slp-wallet](https://www.npmjs.com/package/minimal-slp-wallet) - Contains high-level functions for reading token data.\n\n## Data Hosting\n\nThe *Genesis Data* is the only data written to the blockchain. Because only a minimal amount of data is written to the blockchain, it prevents blockchain bloat and will scale well into the future.\n\nThe *Mutable* and *Immutable* data can be hosted anywhere, but is generally hosted on [IPFS](https://ipfs.io), a decentralized network for distributing data. The [PSF File Pinning Protocol](https://psffpp.com/docs/intro/) was specifically developed for hosting this data. It allows token data to be redundently hosted by decentralized network of computers. Hosting costs are very low.\n\n## Mutable Data\n\nMutable data is tracked by a *Mutable Data Address* (**MDA**), which is a standard Bitcoin Cash address. The transaction history of that address is used to track the data as it changes over time. This creates an immutable record of updates. Every change to the data is tracked on the blockchain. The address acts as a *pointer* to the latest data, and all the historical updates are recorded to the blockchain and can not be deleted.\n\nThe holder of the private key for that address is the only one who can update the data. This allows token creators to retain the ability to update data after the token leaves their possession. They can also pass on the private key to allow new parties to update the mutable data.", "full_doc_id": "doc-d7a4dfd4f00c44c762bbbabcf2a129f9", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/data.md", "vector": "eJwN0Y1TFNcBAPBGhEwV0Cgcd8Dd7d293X1vb8+CI8pEUqkzaEqCJgGJiQY/KLU1flbTilGLgpQ2NSZFjuO4O/Z733u7h0RU/MAkNmDi92icxkxEx0mKcUaliTW1FUr7+xd+S/llocs9k+00caI9x1XET1ST5DC54dsYPKnmdSikFm8ARdAl7oGf6oXyCBU5t3QeFkvZrW3cF2i98TDrQ87BbMRhMJio4SOREe59zxq72WbgXXheTMML0D3aDhb7qvifCoXBBt8CMBY5xaXaS38ioXJPu7hNnM0c3q/7p+Ecug7NFO9numERMxrvY19Ui/Qy97DkxqdFip8TDqCh7KvKCbY1lOD7nT1oQpyxng7+Vj/HFdkfuM9YO+1/cw/gFLhJeMUVc/a+85L/Dbshvj/vibdSLoh9GsolAuNHONGobmVbphieZHwuHSBDsEI7Rl/jwmQQRJEiXlVyDlwCR3NccLWGldvMV8ZFcgn04GzcjB6jDVBWlsNxcMxku+5qDGoUr4IkHJYz46X8txRwL/H/hMeEm7lrzDq9V5jsV8EwfFXvCb5pOMQGq4Y/xd3pugx2gVNWpb7C/ptcHN9vuXhLq8QF6Dm1H45ZBVqqZ5/2rngfb2N34VvuBVonmyfeNz04kyuNre4w2TbqBje1uf5yoynxjURgFdxLRzDQ9oAneJiMc8yB/yYaRHNqXXC1kCJ+7KqEDVo/DmMXvcksor9G17njPhlHgiu0C0wnXubfrZWoDs2PDtLz7Bw8npiMq6zpzlvMrMTOzvvoMcsIP+Qd+f/VQwLIh0xGYoR+bYjkGv4FGlBf0DV9KFolrPUtlHN9JzvOgtf4zWih/ghvQt/C1lBqsJEVvLp3GnjEbwffe654PyMrHfOSlRCjVZAgnhazurYksMzaK24M1Tp/zJfa7QFebIVDgZfNh8nTXCJaEfvIK4T+EZpo7PWdJSlaWXs3vqCXcNvZj2Nn8FowNbxensSOe+qMeVgOtADW/17or2QGrmaJMJ++kvtWoMz/QJeEp9hoUxbd381Nvx5Jh7/h/HRJPjelz33MOA6WM6/DmezvJzG4JH1xbKu4u+NzttcxH/ajlXgQz+C/Mx6BPGGpVENvoGvkRCAojhpBUgwquZZgHT7N1+vV4jw+VRsxVsH30QB7Jf/L7Bnkj2gQjgpnUY0xrKRzO4wNbTnC60Gr+yP1l/ZWf02oSxtS59jn+ELwg2+uUMC/HUyTM+JHW98ShvhCZS64bV3IXwCfDTyrTYg5oCwI6mNJc/5IuidzsUy1N2qy3wQGwvX4Mn7bKJW6spvbs8hF7aYe5o9AKtZzWyyTHEmSLta9SIkHB0Nfy5v1UY7S2eaXpBe7pGazet9pKwcyXJ0tdNV2rsLpvv/QDHIbrsX/MkuDi6U79LogsUqgWNjSrhpeso/NxP18J1+DKroyjBVsk24zgm37fNzM+Kxkma9RJmCPgeE0vQx3T5VwOV0XvogKQ4s8UFCxoqwmKWB27ER8G56gNeqfxNPBRGNJxG1fN/o6AsxRYZq0Xv+dfxNVzINM3Kow/do5bo1RIQ04L8jTyVn9THeE3tKW8ONGU3Q7evOZGmMCt14/ym9wRKyd+Zvb/v4XBjTrtYlrxklaaTiUSs2tdyZOGfUajUTdVfq7vkN0R9YUKzb1Hb0buY2mXA2W2PfaEugqmGSg6KzQIXgDPy2+KMz0rzTGwl+4VsX+RMutP8v1psPbomZKc4T54Ak87B/AH+jVvqfCm3A3+IRcM4JCGvROL5deAH0gAn5mdfuKPC5mK5uWXEQ7zRV2E9yl6GQ3/7xm4RTy84BXjxslYD7bmf9Qu4QOu+/QX3l2Jq7kjOFB2I5rOYlUm03aXbcTBpwcHsWMWiz/QR0hh2AFON7xnTKan+rPUFzsMomnO8gbVgEZz3qefuXrMz+TnuDPxTG4kM4DUVKht7Gv4hRYLnzPbRF74Dq0XDqIHOg9K57sb3ng/B84dqQQ"}, {"__id__": "chunk-e5e1eed94f3b79ea5a0f778f5074608c", "__created_at__": 1760497355, "content": "---\nsidebar_position: 2\nslug: /fungible-with-data\n---\n\n# Fungible Tokens with Data\n\nThis page extends the chapter on simple fungible tokens, to create fungible tokens with rich data, including token icons.\n\n<iframe width=\"639\" height=\"359\" src=\"https://www.youtube.com/embed/v3mr084nZpI\" title=\"The Easiest Way to Make NFTs\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" allowfullscreen></iframe>\n\nCreating Simple Ledger Protocol (SLP) tokens with rich, dynamic data can unlock a wide range of use cases, from tracking video game characters to supply chain products. The `psf-slp-wallet` is a command-line interface (CLI) application that allows you to create and manage these SLP tokens. While creating a basic fungible token is straightforward, attaching and managing **mutable data**, such as a token icon, involves a few more steps that empower tokens with significant functionality.\n\nThis blog post summarizes the process described in a tutorial video on creating fungible tokens with mutable data using `psf-slp-wallet`.\n\n### Understanding Key Concepts\n\nBefore diving into the steps, it's helpful to understand some core concepts related to SLP token data:\n\n*   **Genesis Data**: This is a small amount of data actually written to the blockchain when a token is created. It's fundamental to the token's existence.\n*   **Mutable Data**: This refers to data associated with a token that **can change over time**. A common use case for mutable data is adding a **token icon** for visual identification. It also allows for tracking dynamic information, like a character's stats or a product's location.\n*   **Immutable Data**: In contrast, immutable data is associated with a token but **cannot be changed** once it's set. This is often used for permanent records, such as initial creator information or design intent.\n*   **Mutable Data Address (MDA)**: This is a crucial concept. The MDA is a specific address that **controls the mutable data** for a token. Even if the token itself is sent to someone else, the creator (or anyone holding the private key for the MDA) can retain the ability to edit the token's associated mutable data. This flexibility allows for scenarios like artists enforcing royalty agreements or updating owner information for digital art. The MDA acts like a pointer, and by updating it, you can direct the token to a new version of its mutable data.\n\n### Step-by-Step Guide to Creating a Fungible Token with Rich Data\n\nTo create a fungible token with a token icon and other mutable data using `psf-slp-wallet`, follow these detailed steps:\n\n#### 1. Prepare and Fund Your Mutable Data Address (MDA) Wallet\n\nIt is considered **best practice** to use a separate wallet specifically for controlling the mutable data of each token, distinct from the wallet that will hold the tokens themselves.\n\n*   **Create a new wallet** for your MDA. For example, you can name it `MDA1`.\n    *   Command: `wallet create MDA1`\n*   **Get the address** of your newly created MDA wallet.\n    *   Command: `wallet addrs`\n*   **Fund this MDA wallet** with a small amount of Bitcoin Cash (BCH) to cover transaction fees. Even 10 cents BCH is typically more than enough.\n\n#### 2. Initialize the MDA\n\nThis step creates an initial transaction on the blockchain, setting up your MDA.\n\n*   **Command**: `node psf-slp-wallet.js token-mda-tx -n <MDA_Wallet_Name> -a <MDA_Address>`\n    *   Example: `node psf-slp-wallet.js token-mda-tx -n MDA1 -a bitcoincash:qr2u4f2dmva6yvf3npkd5lquryp09qk7gs5vxl423h`\n*   **Record the transaction ID** of this initialization, as it will be needed later to link your token to the mutable data.\n\n#### 3. Create and Upload Your Token Icon\n\nYour token icon needs to be hosted on a network accessible by the SLP protocol, such as IPFS. The video demonstrates using [explorer.psffpp.com](https://explorer.psffpp.com) to upload and pin files.\n\n*   **Upload your token icon file** (e.g., an image) to the network. This process will provide you with an **IPFS Content ID (CID)** for your file.\n*   **Pin the file** to ensure it remains available on the network.\n*   Once pinned and accepted by the network, you'll be able to **get a URL** for your token icon. **Record this URL**.\n\n#### 4. Edit and Upload the Mutable Data File\n\nMutable data is typically stored in a **JSON file**. The video suggests [using templates available on a GitHub gist](https://gist.github.com/christroutner/d7a9b8875925ea656f512f6ba4d0084d) to simplify this process.\n\n*   **Edit the mutable data JSON template**. The most important fields for a token icon are `tokenIcon` and `fullSizedUrl`.\n    *   The `tokenIcon` is for a smaller thumbnail, while `fullSizedUrl` is for a larger image. If using the same image for both, populate both fields with the same URL.\n    *   You can also include a `about`, specify `mediaType` (e.g., image, video, music), and add any arbitrary user data in the `userData` field.\n*   **Save your edited mutable data JSON", "full_doc_id": "doc-f2d6d1d97d0bfd986018771092e4bc4f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/fungible-with-data.md", "vector": "eJwNzwtTFVUAAGAmcURTXnIvXOQ+9nF2z+7diybKmINaNkVAUkM2vpUspUTFKRWtLCMdKcFIEblwn7vn7J59YIRi+chRURE1LcVRSgdFxbQhTTPSnKjvH3zNaNbokm9esSSp2ura2s2mD6Mt1ZpWWyWBrUX4IumhbRZTNdm1EJbjI/Jj48XUpe797CSYahHmFtdsAjMcGkC1xhZnvHoYfCatoLfW19W0G+VcknkG3tfbuOeCX8DHzhpqUliUjpH5/AH6MNenPScNkY5Trdw+LpcfqZVxDmMdXkPXiF2R2IwHwZ/4qY0lSoPSLdDOYpILl7oPsLnOPLiOKuA+yqwCC+Ait8MzSp9NHa0fJxaZn4dMdTXZBHygWZ2eeZ+/gGbCee5BuAcMCEfgjcZbON/bi7fw13xZoXn6NPdc7lvhXsNmvFH/hPaSdm1XoMmyezL4sxIll6AK9vvIIAjZGSSZFKkdUVnrMG7gQk7mwrDfmSvcdCRZu90H6bmiJeQJl5TZcrLSD/5S07nzcDlIp3ZGQ+yB6NviR0p1XQXforXW+404n1s7ESrDsjyFDVDQXJU2Rv1Hk5jkpqHpYTWGqGJq4M62wca6xh2RnmiueNkYyc7VLwp3R7R4UsQA6iNpKd6IKOiOtcZVrYyU+S6kj6fvo/m8ZHxvFaMtWpSpIDP0YQLNpUdD3jhC+1bV51AX3dmwUj7kuWKNlq+CtVYJlSVm2wvZT6RYnAmyyFS+l2kL9+glcKz+Z3SoKpC8cJ8+R67xHGSXOd4E51EDuwN97OOBk43oT6giZZqRoH+Hdkb2cF9x3+IsdFuvk9rZVn003qyi+gneMD3MFEiZN5mtzKSkm/xW/cWGmcl2djv7GtoGqnSdn6SlgV/gE+j3XtPT6A58EsfZY4TjXou/LPaFp8oviymCoJRqmjYIqoHlbDW7XCwTViZ2IUrvwZNTYsyC0L6Rh6g29zngAqeQDSUTGj7JWBsYm3JWWiHWSa8aE9HDGsV7CduV7WwnV4uyuTPCBnwt0mOtozelvc3NcC0gp+EKrZeaSn4QXMMviY1SszPHylMeawlSnVzIOKKNsBH4DRI9JD5PMthejykfwxVSu9YCgMD43yLjcDzdDz9U3qPKSKnQJvhwg4ZArrhYmgj6lbKmgrRZ8Lh3mf8xisVBrkt7RvgZnoIVTcBz0jqZsd33AlqAJlsPhcJgYWOroMC5Pns40dNnewjvslOCLulT/bqWyPzirgqMMAJCgTAjYybJCXYJ+0GWJ9uVT/WKexPf53OtAH5k3mOa+cUKdjsi05U2KtHjA618jTFnRyq241Ico+VKBVJXxi5SSidYI5U0eaE1zk0rNnSQJIGF0G8+JG3sXXo/9wf9r7XGtUYf3DR2tNvYg2f7xKHx4UkwP/q1fya+LobJp0w2eEkYq+5hy+l58sfMGetvaSWrkeQmBtarS6iB6C3xuDkl+EhdUZtP3ohk8R3ivdAT1wOmkh6H0hsSU/62a2QCWKJ2kiFsC7fYm28mmR9oLdxvtMulkLjgQj0bnxWGND2NN2g2/x7nWbE4/Vf0yExUY/XdpoO9xlxKdqNq75xAyD+d26tDTzku1gcipaBXq3b5bHFcXKjW8Bj9/Bljv9KpLg0fQ4vwemdJ6KLcZaawe613xKJAEjPAUKBHbNO3gDiwDD5Fx+GV4KhQgG+KnWKnbbO6DBWB+cwJizFWc6J+By1G61GA60ZX0M/gttllG8GOB3Pch6HoeoOcl2xiFcpJe5oKwiNUvfYKlWDE4JOeHEsG5WR9fLbjLgyrL3Hl6I7RTh54b+LPmQPhDWoIf+EpCRKtUs8zZvODcAIuZmjeKfL4RyVW40LDxe3+U0aHfxR/D5we9btZKmxkP7O/HvYJMVoTsusMuWA4/7/GKyfkDr1WPqd3w/H6s5m3HIUG5BPc74Zi4OFQAUyletijUvG2DxM24AmQ83XjL80x6qrAf81UnQ4="}, {"__id__": "chunk-82ee7b658d0851b8e290295165f4a2d1", "__created_at__": 1760497355, "content": "tokenIcon` and `fullSizedUrl`.\n    *   The `tokenIcon` is for a smaller thumbnail, while `fullSizedUrl` is for a larger image. If using the same image for both, populate both fields with the same URL.\n    *   You can also include a `about`, specify `mediaType` (e.g., image, video, music), and add any arbitrary user data in the `userData` field.\n*   **Save your edited mutable data JSON file**.\n*   **Upload this JSON file** to the network (e.g., via [explorer.psffpp.com](https://explorer.psffpp.com)) just like you did with the token icon. This will give you a new **IPFS CID** for your mutable data file.\n*   **Pin the mutable data file** and **record its IPFS CID**.\n\n#### 5. Point the MDA to the New Mutable Data\n\nThis step links your MDA to the mutable data file you just uploaded.\n\n*   **Command**: `node psf-slp-wallet.js token-update -n <MDA_Wallet_Name> -c ipfs://<Mutable_Data_IPFS_CID>`\n    *   Example: `node psf-slp-wallet.js token-update -n MDA1 -c ipfs://bafkreifhtcnmf577q2s5lfr46ax5qf2jnk7oy3azu5x7ceab6xajcccl3u`\n*   The `ipfs://` prefix is crucial as it tells the application that the file is on the IPFS network.\n*   This command creates a transaction on the blockchain that updates the MDA's pointer to the new mutable data. **Record this transaction ID** as your \"first mutable data update\".\n\n#### 6. (Optional but Recommended) Edit and Upload the Immutable Data File\n\nWhile optional, uploading immutable data is good practice for keeping a permanent record of your initial intentions for the token.\n\n*   **Edit an immutable data JSON template**.\n    *   You can include a timestamp, `userData`, `jsonLd` (JSON Linked Data).\n    *   It's useful to record the MDA and the initialization transaction ID from Step 2, and the first mutable data update transaction ID from Step 5 here.\n*   **Save your edited immutable data JSON file**.\n*   **Upload this JSON file** to the network and **record its IPFS CID**. You generally won't need the URL for this file directly, as it's often referenced by its CID.\n\n#### 7. Create the Fungible Token\n\nNow you can create the actual SLP token, linking it to the mutable and immutable data you prepared. It's recommended to create the token in a **separate wallet** from your MDA wallet.\n\n*   **Command**: `node psf-slp-wallet.js token-create-fungible -n <Token_Wallet_Name> -m \"Token Name\" -t Ticker -d <Decimals> -q <Quantity> -u ipfs://<Immutable_Data_IPFS_CID> -h <MDA_Initialization_TxID>`\n    *   `-n`: Name of the wallet to hold the tokens.\n    *   `-m`: Full name of your token (required).\n    *   `-t`: Token ticker (required).\n    *   `-d`: Number of decimals for your token (required). Zero decimals make whole tokens that cannot be subdivided.\n    *   `-q`: Quantity of tokens to create (required).\n    *   `-u`: This flag specifies the **immutable data**. Prefix the IPFS CID of your immutable data file with `ipfs://`.\n    *   `-h`: This flag specifies the **hash that connects the token to its mutable data**. Use the **transaction ID from your MDA initialization** (from Step 2) here. This acts as a \"breadcrumb trail\" that the protocol follows to find the latest mutable data.\n    *   Example: `node psf-slp-wallet.js token-create-fungible -n tokens1 -m \"M test one\" -t MTEST -d 0 -q 1000 -u ipfs://<Immutable_Data_IPFS_CID> -h <MDA_Initialization_TxID>`\n\n#### 8. Verify and Use Your Token\n\nAfter creation, you can check your token balance in the specified wallet. You can also send tokens to a web wallet, such as [wallet.psfoundation.info](https://wallet.psfoundation.info), to observe them. Due to the decentralized nature of the network, it might take a few minutes for the token icon and other information to fully propagate and display.\n\n### Updating Mutable Data After Token Creation\n\nOne of the powerful features of SLP tokens with mutable data is the ability to **update that data even after the token has been created and transferred**. This process is similar to how you initially pointed your MDA to the mutable data.\n\nTo update the mutable data (e.g., changing the token icon):\n\n1.  **Create or modify your new token icon**.\n2.  **Upload the new token icon** to the network and obtain its new IPFS CID and URL.\n3.  **Edit your mutable data JSON file** to reflect the new token icon URL. Remember to save this file.\n4.  **Upload the updated mutable data JSON file** to the network, obtaining its new IPFS CID.\n5.  **Use the `token-update` command again** to point your MDA to this new mutable data file.\n    *   Command: `node psf-slp-wallet.js token-update -n <MDA_Wallet_Name> -c ipfs://<New_Mutable_Data_IPFS_CID>`\n    *   Remember", "full_doc_id": "doc-f2d6d1d97d0bfd986018771092e4bc4f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/fungible-with-data.md", "vector": "eJwFwQlUFGUAAOC8FbEgBBZYduf4Z+b/Z2ZRO7D0qWmHYZ6IWRoGXllJCpoaKaUvwwMKTFCO2d2ZneOff2YJUSvz+TLFxBMLy15GWSqpHZpGipL2fXVcF2xqnOh2wbboCl8lqwsznSK3wt8YuDgokrrGvLnV79YyFluNivFtdUY0Do4G/UEmJ+IE71HRg3uaF7gQXm5ycqZ+Q8jj9sDiARXKNBehl/RwoMjm+LeMMvECe8J3ivmUH89R4EW7k3/X7paz4c9VABVvWRjpo7zNz8CHkmnwmPwJX8BthSspH/9ksJ9RIvjYLCUQ8Bh9aAgVcFBJUgYHGlA/RNS1id/am0GbPlc67Rzwtpop7j6+w/MB/XrGQrAi9DTwG0Pc+cEW8So/VR1iDZMLjb3UNCilT7Lzt8fALTIyqMhGshtVkTfDD6EYO8BWwia5t+dR5ix1wLgOb4b/SnxK+0pt1x+IM52hdgoMbiWxdeUvU5+F9tj5/Oehy3wK34bijcXpfv0kGmt1cZO5ZGig5+pvh9crd+jP+LPwOKCdAq65ugOtcvO4ZdTIQathKZzkfnJ/kUV8s6hm+w1ftVGnp8hzzVZms7OQ/hUsNyuFnm4G6I2XwZ3KFNiO5ttPkIjG1w8VPua7ldPea2YL9GmMEoObwYeh2a4UN8L+wnNU/9eehdrSzqVFxeE4T46APO5WLySMYgdwSvSeJxvdwG+rnsApPnPbUngnEticbi8yapXHg6K9Gq63g/SreJW/UtlnzrAy0580P9B2CiPhZLkVjBV92ijdb0+l4/FTZBRJsErtFi6NL8U0Eazz0ovM026p3q0Xp/cWk8GCaC8SL4fR+Yy/4AX0tbqWWbMtW4p4Vr4XAZTzkDEeD0OOECP3kHU71t8jLJXV2RvFDLQKdsrvR6aBb+BIcVJdCc4mGDxizNcS+NcCZXKOyapBXFY7PXjMSmRumFuSNiQdZr4BxYlNAIRLxMV0nnk2rRhmlaVLKZFcbRhvyW/hM9SX9HHOQ2ayr4MuvT1hhDuPvWquFdvry8gKLt+YqFxSjyjXlDGBTrSafwL/EtqPl8leOEDexP4EG/kst17rgHXYFORw0POsFROQ3BF0I19b5cFHrL81Q242F9XHs154Rcxj+phJUIBL0cXgqmBJw0CqRmyV+gnHyP7ycRBY/ftPQPlypltjZLuF9Cm5xc6xrpH97Ch8D07NaIa8fCt8uP68do8LC3dSz4iD3Vx9GFgTF2VKrV7SFajo31vvmmOSr4cuqTBUk3RX6hSK+CTnKulwYreo4XGp181ydqYxLbUANQkLwDJnPXjW7UNtNv9TJ3Dvy7PBIHsKt8kx7L1GM7mlVNW3e5M0JOZsV905AMGKyO2gabc7ED6PkTtGRvoQMlF6QSmoOY0mbu1On2Lsh7rRSqeFA1yuX6Iv+6ZTD/g5Mj7wJ+iLGbcILvdfjfvVJOgE+Vzv1LPUUtJfOCcMlXtrn36UGyvFndSzhKXmH8wGEtzUZLWQHcwPtXOklc4AUkbOCZP5PKYvadS+wP3MfezPdjw5UN2SsEjxy80CCg4yzmnTnfJovHUA9gwPJIwwDydW/cMfj0TYhW5UfxBMFQZXzALPwY+9yC50YuwzIGo3WIfM14wY9wapACuYas/i6Dy1gMwGOfQ4ODZhFjdEXK8+EyrZ1sSa1pzqKqmBuqstCVSjg8Kumir6I2qdcIWsdP9jRziXjZv4B/0gBGpFhAJj8S96IZsM77P6wt/4CenvBI496FXzgpPYdcpuL+McYYea3yVuE1Tnimc06VR3CSzinCZeqImQvTiKLDzX6lGP1cftfGvGhh+Ni3aLlsgnq90WoK8pPcRL+h4zVx9OxQqx6m5niTF6e0XK3fKTZjvihd+374h9vjZZLdDuo+LUQveWtZZswEfNHDOgd4GSyoGRixkJ6BX8cOpGocW5CRq0bno+7wfrpL/pDq7BSEI7pb5kqYvMNuN/eqKdRw=="}, {"__id__": "chunk-c0b01e53ed5a4c726213d5c698395664", "__created_at__": 1760497355, "content": "icon URL. Remember to save this file.\n4.  **Upload the updated mutable data JSON file** to the network, obtaining its new IPFS CID.\n5.  **Use the `token-update` command again** to point your MDA to this new mutable data file.\n    *   Command: `node psf-slp-wallet.js token-update -n <MDA_Wallet_Name> -c ipfs://<New_Mutable_Data_IPFS_CID>`\n    *   Remember, you **must use the wallet that controls the MDA** (the one holding its private key) for this transaction.\n    *   This action creates a new transaction on the blockchain, updating the pointer to the latest mutable data.\n    *   **Important Caveat**: You can only update the mutable data **once per blockchain block**.\n6.  Once the transaction is confirmed, wallets reading the token's data will automatically display the updated information, such as the new token icon.\n\nA key advantage of this system is that **all past updates remain recorded on the blockchain**, creating an immutable, auditable record of changes to the token's mutable data over time.\n\n### A Simpler Alternative\n\nThe process described above involves several technical steps. If this seems too complex, an alternative exists: [TokenTiger.com](https://tokentiger.com). As of the video's recording, TokenTiger did not support fungible tokens but was working on it. It provides a more user-friendly interface that hides much of the underlying complexity.", "full_doc_id": "doc-f2d6d1d97d0bfd986018771092e4bc4f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/fungible-with-data.md", "vector": "eJwFwQtQFGUAAGCVpCtSeQgecBx7e/+//797e6RRPgaN0qB8QzHQQ0THSsgCzNS0Eh2VNI3RTBHuuNu9ff3/7h6IMEb4qJwhRacUjR6W5mTYaJSJSFRafd8bSpfobP3TTuVrDnRmFqOTbJVZRLuZ62Lt3vzkOtrjnEcz0leiG/g7vTc41X4fVysvwjuwj/aht8S1dLO+kvmDVOlR33gthvmHuYJu4+f1+eYWsD5F8K8lifw+4yV+O7cAh7lCCNDjeIerN6jQav8yRMFnfDpWpGz9JjNBWq4Xwp+EKnQfmiOwYAwzSOtDG703QjfkDv8fUhJegrLgJfa+QKFfxaWup9khpozeQtP0BagsOuhJNn+nIXYEOJGe5X+DmaS+wr2XNJMuc14WWrkLTKOax9eraN98PsOzg16E6b4QWqut1s7T3cJrpptOSy9VXmC/wy/7b4cq0aB3DqkB1Yk/Sx+7kjSJNrl3m4siB1ELaI9vTo0yDvZ1epq7osejRH4kGCMtBo3hXO4/K5Nv5xpgn7cCXAvmKaVgD6oAB+p30SUwxZjp22QmcCO46d4Jwi2uy4oD79EjTYfjJtiVbK7aa3A+n5bjvkiWjV8Pho11/AfWwobhoIP3S3Nhl2ioBfZc4JUnw1pcJx1mnlAGuW+Scjw/aD9yLr2cerVPpF2uE0a8MQWOhdngVWGVGhYBzsCnksr4neE0tdweYgc51XoMW+LzaFRwDjhJivfNJrXSNtnljSEJwm80SZhEVni3kePkkeQ8JjuiKfvTTMAJlmuDuGF/ov6udcr1Fd1IXyM99AXqAD8HKo1OFau8rw4stQdSewgyNqCVqNc0tdFiCz/Zf45v5jfqtOmCe7X4EDaDh5Boj3I/Sbv5h7BT/MXXYzAelBaSHOFi4Xs0zOT6XjE6PAE8Fx8CrcbB6AqQEc7NOMH2i6K4TflSfoqsUfsjJXQPuBd8uH+g6RzTjp6IzOXimmYK/e7HlDT4rRDn6RLj6XPSLZ4RSvSd4znPEdivHcNd8Ly2IzwyKmUmhl3iaPcD1lioNi5kYiNLnax6VewWXuLKARMXUk8JGaCfi0nZAoZwyJpKBRxjdHPT0f1kEYnLOk0Pe71wtzKDhPaE1SFxUF8RyTJq+TyEpDJ1E2pHwzg2eLze0+xgCviVwsPwupmYksDp5F5nM/zCVxtdpZVYA+5jYqxnodphstzlSJXT6b/jq/KnkHHgtHaWL+LawyG/at1xZYGaxNvjzchd8U2fHA7QfP2aexZ405sMz8C3BQtsl6/pe0mRzSsFHnZMKTngbDcmMD28jFohNCrUhaYcOBqpl6/BAP8nqDQuwE57K6lUXOYd+WvyTqRN+xtP9543u0By2pqMI9I6WkB62X9Ikv2r+DDbR//iWtVLXA5c1hDL3Iy08alkAR6Wm3BL5hcM8bTJ2aEye6t4EyTTPdEXhSSSmcoZ94u59EFanLp93N9aW2MyfNbX4jrIjNAnN8yhi9ig+l/DgCoEhkIF5kUuNjTN10CDlLeA5GQcsNooV/PNrcY78vv0U3NU5pRIHZMPKZa1IW1G+oNWefRx9V/BaRylh/B+8ypcg1zyele2yeofM/3QCj3qacQOrUTXzOV0PXPenE8oLQl57DP2cm++cqXhnubj5Kh9APsjp+CTwerM28JJNVdbxHaCGlIXz/hZZ6mckLVEmIf6pGnqlrrfUTPdaac7V9HnDNUq1r7Hil4GY/Cv+rC6ydvAfaTzXA1cN87yO/AudXFjFeLdz/Bnze7gT3rH3otwMZ3quWsUEigEULmB0E41wd5s3kXLLcn9jXYyVKTWS0XA0GbRcnJ45BT5GJ3tyvXkcZ9rV8lEvRONyFytBKMTtV/q3XLq2H7jXfQDNxBwNFU4J0fqpbbwV42LrUKaY0+1z2hF1rgM4ILwL+WSbym/kYzhK7yzSNjbpB/EM5kUPN83A7bwOfIqyOEOsqG5T7sc/B8X8ZZo"}, {"__id__": "chunk-de15b8b1092e52cbe1d3987965be3405", "__created_at__": 1760497400, "content": "---\nsidebar_position: 1\nslug: /simple-fungible-tokens\n---\n\n# Simple Fungible Tokens\n\nIf you can [install node.js on your computer](https://www.youtube.com/watch?v=7pbQ4ZKPBiU), you can clone the psf-slp-wallet command-line interface (CLI). This is the most comprehensive software for creating and managing tokens. You can create all types (Type 1, 65, 128) of SLP tokens, can mint them, can attach data to them, and can manage multiple wallets.\n\n- [psf-slp-wallet GitHub Repository](https://github.com/Permissionless-Software-Foundation/psf-slp-wallet)\n\n<iframe width=\"639\" height=\"359\" src=\"https://www.youtube.com/embed/gjgeUIWekoA\" title=\"The Easiest Way to Make NFTs\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" allowfullscreen></iframe>\n\n---\n\n# Getting Started with PSF SLP Wallet: Create Your First Fungible Token\n\nIf you're looking to create and manage SLP (Simple Ledger Protocol) tokens from the command line, the [PSF SLP Wallet](https://github.com/Permissionless-Software-Foundation/psf-slp-wallet) is a powerful and easy-to-use tool. In this guide, we’ll walk through installing the wallet, creating a fungible token, and sending it to a token-aware wallet—all from scratch on a brand new Ubuntu 20 system. The process also works on Windows and macOS.\n\n\n## Step 1: Set Up Your Environment\n\nYou'll need a terminal environment to run the wallet. This could be:\n\n- Ubuntu (or another Linux distro)\n- Windows PowerShell\n- macOS Terminal\n- VS Code terminal on any platform\n\nBefore you begin:\n\n- **Install Node.js** (v20.9 used in the video, but newer versions should work)\n- **Install npm** (Node Package Manager)\n\nTo verify installation:\n\n```bash\nnode -v\nnpm -v\n```\n\n---\n\n## Step 2: Clone the Wallet Repository\n\nClone the open-source PSF SLP Wallet from GitHub:\n\n```bash\ngit clone https://github.com/Permissionless-Software-Foundation/psf-slp-wallet\ncd psf-slp-wallet\nnpm install\n```\n\nOnce installed, you can check available commands:\n\n```bash\nnode psf-slp-wallet.js --help\n```\n\n---\n\n## Step 3: Create a Wallet\n\nCreate a new wallet using:\n\n```bash\nnode psf-slp-wallet.js wallet-create -n wallet1 -d \"Test Wallet 1\"\n```\n\nYou can list all wallets:\n\n```bash\nnode psf-slp-wallet.js wallet-list\n```\n\nAnd view the addresses:\n\n```bash\nnode psf-slp-wallet.js wallet-addrs -n wallet1\n```\n\nTake note of the **Bitcoin Cash (bitcoincash:)** address. You’ll need it to fund the wallet.\n\n---\n\n## Step 4: Fund the Wallet\n\nTo create tokens, your wallet needs a small amount of Bitcoin Cash (BCH)—a few cents is sufficient.\n\nOne quick way to fund the wallet is by using the [web wallet](https://wallet.psfoundation.info), which will generate a BCH wallet you can use to send funds. Transfer ~$0.10 worth of BCH to your new wallet's address.\n\nAfter funding, check your balance:\n\n```bash\nnode psf-slp-wallet.js wallet-balance -n wallet1\n```\n\n---\n\n## Step 5: Create a Fungible Token\n\nUse this command to create a basic fungible token:\n\n```bash\nnode psf-slp-wallet.js token-create-fungible \\\n  -n wallet1 \\\n  -m test1 \\\n  -t test1 \\\n  -d 2 \\\n  -q 100\n```\n\nThis creates 100 tokens with 2 decimal places, allowing fractional amounts like `1.00`, `0.50`, or `0.01`.\n\nYou can confirm creation by viewing the blockchain record (a link will be printed in the console) or checking your balance again:\n\n```bash\nnode psf-slp-wallet.js wallet-balance -n wallet1\n```\n\nTake note of the **Token ID** from your balance output—it's required to send the token.\n\n---\n\n## Step 6: Send Tokens to Another Wallet\n\nTo send tokens, first get a **Simple Ledger address** from a token-aware wallet like the [PSF Web Wallet](https://wallet.psfoundation.info). Toggle to “SLP mode” to see the correct address.\n\nThen run:\n\n```bash\nnode psf-slp-wallet.js send-tokens \\\n  -n wallet1 \\\n  -t [your-token-id] \\\n  -q 100 \\\n  -a [receiver simpledger: address]\n```\n\nYour tokens should now appear in the recipient's wallet. Always use **token-aware wallets** to avoid accidentally burning tokens.\n\n---\n\n## What’s Next?\n\nThis walkthrough showed how to:\n\n- Install the [PSF SLP Wallet](https://github.com/Permissionless-Software-Foundation/psf-slp-wallet) \n- Create a fungible token  \n- Send it to another wallet\n\nFuture tutorials will cover:\n\n- Attaching **mutable** and **immutable data**\n- Adding **token icons**\n- Creating **NFTs and NFT groups**\n\nStay tuned for more advanced features!", "full_doc_id": "doc-de15b8b1092e52cbe1d3987965be3405", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/simple-fungible-tokens.md", "vector": "eJwN0o1bVeUBAPBBpV4NyQK8cu/lno/3vOc9554LOimNRjI1bva4wAXoIh5r0cPAuVCcNWLKAyagoIKIfHgv95z7nnPe895zvSRzRRqlffB0dYZuDl0uw3RbbjZbc4rm0/obfj8nuyfbO7Tg4DHfKXvDvAa0zRuIjsceEj1oOfjgQC1IoGL6ki+XCegt5Pxgs70U3SF7zUeBnyLnXWTrfzUXwgajFq9Ez9OJ4ApRApsQa0pGklRFNvnrSJ3ySdSly+FjAxMSguUPjMw7RnYDNnrUv0VxiGdRGSdKL/I2WsItMT4VR3w/lBx9O+QKqUC42JujbodPow5rnZRCh8LfhvMiKsnqPpLd0h0QCg+s1k+YneJ8fgKWEttI0a7QYQ8LCJxC18Ewv4kvymy3jpuHwTpsZO0fHEOH07/0ZeR4w7nMGnY9yhc3ahd1O/YmGqPtkZvAJJ3uOP+yUggm9VuoilT2rzOuqIW4RL1uNlpP0jnRS+p5V34QmKXSd0IOeUVKUfOVIdQqfZFZZnbjf4gn7XdFGTWJ1a4Lkfv1y0aN7MmaYnimra+jt0rfLU+PnRd3HnhbqOMXidusR8FX0R+AjRnV9uL+H1vd83jwgposVZCKULt4GLeCGsOtvGslC/NxkjcVJdkLaCtdoS9DybLLPGq14iD6OV/vXoH/I+wCjoNuZr3B6jfJTB0iy/tZ2ntpCfU2+ljtZ+bKBbKPXpUN8m9Xm/O+mNPa40t37hF0aZmWzHdHzmY0m1Zwp76VJ2SRlEc2ayF6mkyCssj8aBJ28LmQoKFuVszn49xWO12eiUfpHHM4NNcs4+q/X3EfHDMc/hPgMyvsTsepqAa9JCo2Qw8qq6XHsx9QVuwTsAGq+D/LXfCpcCV6xBj1EitdnILQP1c5Yx9yn9Y2GGPkW/nv8m/wWrTSmEObkEPZ0mmay2Orgu3cp10jyOk/Iy+jJWFiTrda9n8TcYFRIQ/P0hojp5hKclIoNE6mLc1cLklcj5TSn+pbFbyfS3NCv21Vc8/yHzmn0TPgeWEN9zcctHK5LvhLuZD8yPwFmGnFQSu4E+zEbiUOxtBqUqHd6OtR6jkRTRghdSFK0LCeoclkJhhpbN0/y2jwnSS5kMpt+myrF1+dewUNk5rwW+yF4BbhI9gSDKDTohMVdx5lNkRvg61ylb9Ay8LZ4Vyu1Mjn65Tt/j9Z9xpv2M+BEoXTBkM/MRuZpUwIfidnoUJY7nmy/wZ5CybCqzxxdOlAibkShZgg1DRGwbxu8rhRvWbexYs959gAexkd5lSumkzvuGUluxZI11UXSYEfRFK8T/QWg0+4eutSfxvzvnuGMDAnweg57czrei26RGeEB+hNGteq8MOOx2l3+AJqttLUVeZvzVf5i2RKr3MP05wYleL6Nev3vq88iR6MDC7InBP+5fL1NUMwMBstkRKZqZ53xIR3lCT7P0Zx80X7QbZU+B3YyG5XaqJ19j3Wr2akWrsFhjN8T8EloMEc7HmFtDA+VMCvpcVWgH4RHgotNpqYh02HNW6s8V+VzvHnyU4xYL5Hk0ElvRvpikJxPX4GaPCycoFOka30kN2gxxWPudB+DLWRL5ky6Zq7KFxmDeOzWV/z1wSP/OHeEd+09uN0l12pXdXuxaXpvXqG/hBtgnf6m9wytVRoutls6Q9Z43IxyETZmiWXy9vEYhVqIV/t4C6N+BulHm52/5veG/oRtNmojU56ntGejjwRPUSGGejuJCpYZDUbMkjAEuKSA6FT0YD/EVbou0Xngc9hKj1odIP62S9L59DaWMH21/CyyGjPXumn+G32Z65JOg0P+MaNzeptNTsk8kVmUUuO/nXsj9rnSjmfZGUgLOZJQ2TfvpbQOjFPjMBJ8j5+MPJfT0W6aRd1bGR2DPzaOaGdkWaFmpnXjL7YPdEj1l5cHfqGjmMJ9tFy8qqvQ3TQPHE+ekH/C7uj65/MY+433KOQF058r/s/4bjUEmVjcdJm/B/OVZY0"}, {"__id__": "chunk-bd1aa2fd6d8b3d5b2a69ae8ebe6cefc0", "__created_at__": 1760497400, "content": "Future tutorials will cover:\n\n- Attaching **mutable** and **immutable data**\n- Adding **token icons**\n- Creating **NFTs and NFT groups**\n\nStay tuned for more advanced features!", "full_doc_id": "doc-de15b8b1092e52cbe1d3987965be3405", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/simple-fungible-tokens.md", "vector": "eJwFwQtwFOUBAGBhJCBmhleCd7nc7e7dv7v/Pi6XABWQh1qCGiohDx7GoiBRgsoEG61YOwGDkwkB4pDTeLnca3fv33//fVyUVjDaGFDIKKMBpVHA8GghQWolIUqmUCHt97HOKfnJA5scXe6xekCVfknNMVvIMP9yMCvow2XMcWUcL/V7JYqDiHF5nTvC66lHfKdAr95F84JBniC31DF0yBoSNqDiZDCwVJnEDpKUlQOrI38NzTYHuHPGIU6AHuEx9AH0s1NTFN8srHIK5byC/tQq2S1+megz3NwaZQpuhkB6Qjwmf+/awvwH9OGPjbncKDNXWy4Xqr/z78AH8QXCqXzhgKDmTAsUhleYIN6kdnluowfw12iLOgEE9EX64zAvwGm1QGp1O8909CVH8+frA0aaqTNepGx55ju/pI6IV+Gb7IrYWdKKt3K/WifTZ8jnZB7E4JBUShpRLvt35qY2wpVZbWQhuZZZwc/X6u3ajo1UCfgBVsBm8aYpi89HeViUvZ15mHTi9kAWHHWuSFngFGz0bbW78Z/QMLdAosMTpK+Nu9/Yrz4NPVYwf5yarmXR5qyEea8q4IvUX+glmVYkkt78Bjiyz8f/bN0wO41l9qOAtyrEQ9Nm8cHU68y9wYhelWiki9k4LcFCW2yvYq7AD9HpRHN8cqDG6rDrohPJOHUfOR+dCiq9r4CLXJu2WDqSP8SGhM/EhXye6cmU4HK1wu5n18pQLafLAs+BUq041YW7UFLZRSOpWa83IBqKpK1u+q14efi5mSzZ458AZkr3J2vYXqESZuMvpBV6xmlxCtRBawlcw81ClTOmpDbzl5RcKxK7au3Hd5i7uSfxH8wCMFHMFMTE9fnbrMkdDeRh9l2q3kn6Ks1sT4l5WBwI/Cgf5CfZ17xHdb9rN/aLR4PvMkXey/54R7X0KicrDeQVovofEGLx2sA3wnHxZ1LHb9QXmGMdr/n6qV7/C2I2+m9qHqRxF7T8L4Gn/d/yIlvKuY1h/nMk6immUxzRRuD12c8K2zVNSXFvWGcjy+2awBxm8K5pqSojKh5FhraXPwwalWphJYvRU/5uyqVf5gfsBb5a9TOuRTiH/mlWB05iwjDkpukh38qrzHmAo+oj062f2A3Tp8IL6Ig5FMjhz4tD+ffg3eBZoVtYS42Rcxk9GWdnygOGjJHxPghxO1NoxmUhyxqO5zslgRshLvwWGcmckDfRECznm4RlwT7rmLI6+jJI68ejJ/n9dpsWht/rVbsTqF/aJc7RT6MSto+up9ez62Fv5LDwi4/zjNpRlZCX3MNStL3EJ4CwGg40pVW4EJTaG9RxbMINeCj5Z9gSRMZr5vuC11klvmc32j3gVeP+wCOgX/sk+7byYdIw3baBqPZhczN523gvfUOyuQPOMzLkH2WPiWtiuxKzmM68txNbuB3gTXEnOyr+gxsLx8AOZ5BziQjczkSFMmsiqMBz01dSxU4tCaFW/VfQhBaLbXAddZd+Fq3Gd8BTHjdFrKQ2m5xBWmIvv5hfZJ/BMWOCLtDl7EdkE/zA+BF7IzlWXSZL+Q23KL7Ov46/xztsXUwE7e3WteQBKf4ORpXySnVf3k3wqTmgdOr/S69WQ+I2rpi7pfew4fY15IRznf7K7EnVdMxwNilCrkvc636QFNkr6ZC5RyjSE3KDkBHd2lXSnCzhvME86xL4TtgYHyWPy6uDdK7LdxCHKNuXYx+1T/J37KHEv0khwMKktCSM+fvtB/MOcC2JpdxcnjPXGd9wSKhGVwiIn4gsEz4yLiTLSVHqMlNBnidOfGv7BR8FHqJ3g6Rn3OpTfi/1xkaV7bSH1LR1+wWhiUzBt9BjbLFYaHhAVeA73tC/sE4Zf5T/BvfmhjI7zR7vtmS2V9EHvecDP2nXPb+N1/HFrja4xFflxJR8q4/c5uYzQvoh83zHZtwQnAN+MPco+7wu9C/vWnqyaOgjnqLCMmaJe5BaAAqgSkq1Vv00/j+2faiz"}, {"__id__": "chunk-32581c739ed8db14507e27ba8c4d80f8", "__created_at__": 1760497430, "content": "---\nsidebar_position: 2\nslug: /token-tiger\n---\n\n# Token Tiger\n\n[TokenTiger.com](https://tokentiger.com) is a simple web application for making SLP NFTs.\n\n<iframe width=\"639\" height=\"359\" src=\"https://www.youtube.com/embed/Kv6VzEHLhKI\" title=\"The Easiest Way to Make NFTs\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" allowfullscreen></iframe>\n\nThe video describes the easiest way to create Non-Fungible Tokens (NFTs) using the Simple Ledger Protocol (SLP) on the Bitcoin Cash (BCH) blockchain. The process outlined involves four steps using the website [TokenTiger.com](https://tokentiger.com).\n\nHere are the steps:\n1.  **Create an account at tokentiger.com**. You only need an email and a password to sign up. After signing up and logging in, you will see a gallery page of recently created tokens.\n2.  **Get free credit**. You can do this by clicking on the \"zero credits\" area. There are two methods to get free credit: email verification or Telegram verification using a Telegram bot. Once verified, you can claim your free credit.\n3.  **Go to the \"create\" section**. You can use an image, a zip file, or a PDF file to tokenize. In the example shown, an image created with AI art was used.\n    *   When using an image, the token icon is automatically created as a smaller version of the image, although you have the option to upload a different token icon.\n    *   There is a toggle option: **\"make NFT payload public\"**.\n        *   If left private (off), someone who receives or buys the token and brings it back to tokentiger can burn the token in exchange for a copy of the file (like the image). This is a common use case for selling digital downloads.\n        *   If made public (on), the image itself will be put on IPFS and will be publicly accessible. This use case is more suitable for displaying and sharing artwork.\n4.  **Name the NFT and create it**. You can provide a name for the token. In the example, the document URL was left pointing to tokentiger for demonstration. After setting the details, you click \"create\".\n\nThe process of generating the token takes a couple of minutes. Once created, you can click a link to see the token on a blockchain explorer. The token will then appear in your collection on tokentiger.com. The source notes that the image may take a few minutes to be pinned and show up. Once the token is in your collection, you can interact with it using icons at the bottom.", "full_doc_id": "doc-32581c739ed8db14507e27ba8c4d80f8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/websites/slp-tokens.com/token-tiger.md", "vector": "eJwFwQl4FNUBAGCOxjSVYIM5Nsludmb2vZk31yZgAfmsHwgKHkHREEoNfEJCgGCkUG4PFCExQUQSXTbn7szOmzfvzcxqsVpaimnEAEVRvvBZ+xES8OCwWgUN4IGA/3/V0Mvu2nMtvQ09wmaAmyJtxksMeGNStcpx9D+x3TmBoD9bjit7Exnugl3vuEctzfuYPgSaWFZJATqJO+m7ythwwgEgq1MjDfwMeV1HkfMktsQsIb/sS6sg8DKNmsPC/q580AfeTu3nLlgT+KfpJn1jtEwap+7WV4ZgeJcq6APdm0e0oOPiNfHeoh+lZvEjPN+ardYrPjkPbzcL1X871+hlsyW8obRAelYcYb0odbhToJLcgjbTo5jQM4wQzRwArpYNbkRm8tM4l/43nZ00QdS+Dh8IF9Nj4mL1M7MxdH9bi9AYKWzjnXK2XB6JHzVzGxh+0RG4zGie+I2xJd7bLgpjyRf0ujnIKugzJVP9Rpbg18TKha8SQDyl6+yC8iC+Q9oQWyRNI22ehGoDB/w4CkSY/CjeRvda9ezv4j/FYs9T709W5vW7x8Ut6SYqmD1ZR1uf0Dw/Jj/J8iLr6Ca/TGz3f2fM4y9b9Z1znMfMHj6XDYg6XaDNJ2cknbYQW11BTjqwu4M60g7wV3LDNfiw1mDuc6q6ThVUkkX+3ODUwgP5orOPnOPfQEJonbjZINJs+mUwKJwHjQV8+L50MxvMfZstifTJN8feyqwA41m1sAzPdJJwNfe8fUgcQ2r0ec5cWuyfcHd0zzdycgZJpZGHF0rt9GT8ktopLWGuOrHoNtbhzYp83doPD+AhMtJcbTeBl/hbvJDxjX0MfiXeDMewDFynlpYESzP1zbCCLUSDJSgyOlzl/Es6Sq5IG9w96JAia/XKc2y0vOiVV1JbyQmwQtolzRK/Bw3eZElCHUaxAf1BbqPs7CJ8hjKs1rqc+RN7ir5h9xmaUMuVdRUJW/B0eTbD6Ab3BzMblSfnWKeVO/nxSoyZzsehqJoZelPx4UEhQCoARP8Q3rV7/JqSi/Ac/oBw5qRwje8UJuWF+B13qtIQ1/l5xmpSR94XFsQnyduTC9Gl0EwaN5u5jZwGs/Mfjn3g7NNrDJL6Tr7dOe3owfpAtVyHF5MMrg+sQ0+A8uBULkc+G+mSj5lrjFHdfwNRfahwJ1WdXqNTFKVnUI4asa8WDNCmlnHRWGi7tYQOheqwF0zLS0tmaA/a5dKwWQ7TQBFGaD3u2qCn6HQaKgYJ7TJQaKUV587wbzEidagtxdPRicBW7lrK7fqzm4sy4TQr2nVE6rNlszJ1L3eQv+I85k5oG5B6xfU7fpLD0VIv7v4Mg8zAxM1gX0sv09e47+hN9B65xTyPzzt3pMJiNX6d5torvGpvu/StucrK1v4IHwJbhbu5qtgseFjOpYLcRMIoAnfyM0PTwxnKBdYrZKHmUIpOgQEWQUvCCp9LJ6VXJs/RH+gGeEX6jbYDHgP94Xm37rcOoT3oT8Yq+ns6h8ncpMRcdVlohHcRB/AnUkERKZxI2/h97qD/EY65zXYVORKZk3gBNO0+HO73zxKF7PdH0+tqWZtiJ1CFM1ZMyzVWWWQnt4m2ur8SM1G7Ktuifgm30rnW95FPk9nmen4V3UZGOq+LS5OH2KvpU3Kjy/hfB6v536qT0dPgrNcJ3kM5+lpaJ9+qjU/d432hPaKuyT9srC/Zy9votHckfRdZRlYFr/jPg05pyEkU9kgW7TcVtAAY1jixyk6xz8Enyv/zur2Ak48u0lH2ylAXC7SOhqXOdBrENeSWyOOv1ifetLPkbn8C8aSEfbfygxRgHxoQt0qjkqd8BnejxwPD3sbEyMBVbZQ1njbjFdpqrgg2us/5N9r6hZVwOVmb+EvLwcC30n8MVbyvIA8uD9nuDLvCvYovwl7yQKIcD+Mjqdu0pWgiTsEPYR+oZVOyP4cqHqsu1odQED6VcuUf0WR2kBnsMPsFcKCYGA=="}, {"__id__": "chunk-8e8e91b80a1fe5ffc53fbbf2a7571ce9", "__created_at__": 1760497440, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nHow do I create tokens on minimal-slp-wallet token api?\n\nagent:\nThere are code examples on how to use minimal-slp-wallet here:\nhttps://github.com/Permissionless-Software-Foundation/psf-js-examples/tree/master/minimal-slp-wallet\n\nThose example also include examples on creating fungible tokens as well as NFTs.\n\nHere is the source code for the token-create-fungible command in psf-slp-wallet CLI wallet app. This shows how to use minimal-slp-wallet to create a fungible SLP token.\n\nhttps://github.com/Permissionless-Software-Foundation/psf-slp-wallet/blob/master/src/commands/token-create-fungible.js\n\nHere is the command help, explaining the flags used:\n\nhttps://github.com/Permissionless-Software-Foundation/psf-slp-wallet/tree/master?tab=readme-ov-file#create-a-fungible-token", "full_doc_id": "doc-8e8e91b80a1fe5ffc53fbbf2a7571ce9", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat001.md", "vector": "eJwN1PtXFXUCAHAvHfSYouXq5c298/jOfOd7h0cPLY3KAmxdjSVASYPAzMijeVRae6+omJlad9WLXO9rHt+Z+c53BtgQLbWDHLPylJSJYWVsi/kArdw6qaQt1o+ff+BTx6P8Df8+05ofaKafTpnAn2d4urd1qXgItIJiPCdrCz/izmImiA+lJ9NzQltre+4CoiSOSPc6HvtpCNKfImPgcXM9XRXwcm/ZNyFFSXydmGIPcrcYYm4Qnxe2ulFw0UnL/FUYgCfEU7GrbF3wASstd4M0BrN57VIps8OYAd/gZvo4QRVr4qXkdr4AvUJOkAJtlzTMceSw/4mtlUKXVU7XOpsS/8i7Z1sFn+MbMr51pwfux73hg2aXtt7cH7P5VD5DWCD7jG+5OxVP/D6ti79pZuAvmePWS4FSmIy6AueDM7atA+kwEvBILVYVXgqbHMCKXKa7jFTybmCi0RUfgo3OB/4qJWQdNFeqFc4e7gzONOrhCXM1lDki/Z/9u7ZDXkW8Ypv0PhpIvK+f9XcHRedDdJEtFepElPaFppg/wGHupKDCy3gSIGYxB9uOCZ2x9XoRqIC/uFyo0C5w/mZozlK80t5tTZbyzTB4jQyb3rQ9zrrsTrs8cx1+F1JzodCYV0Fu2Ff0Ocb8aG96Pakmt9lNqBv3pU6Mf+3vsP7q3ok2GD9pDj1Fn/En+Sq1gaxG5Zo8N/ZFRoNYDZvMFLlK7cspNoZJIWnKXWtcYxaifpvlLpAg80rOJaDiZSDNGA8a6Od8g/sVFoHAnADl3nL+y8wyoVQtEe5iD8B92kzYpV6lY+0Xra+NbuF7b3/8M97CqXIJ7qEJ1rIU9WjWN0wBnYZ/FQy+Wn4i0KB7jUXwoHUGnc15kmSgqcYKeMkeLT8GNslz4Wq6R5vmuD6PyUn90hLrVmkAJ1tlckQXJ7bT2/BJc1RExt7YLDQ3MNPcwcw3l9jjoxeMA3oUbuRsvU4JhU/if5r9apG4AjVy/1Iq8s7pb6Ie/LrwNvdTIAUvFSPic+Blkrv9KBjW78YHna2TypSV6JvQIvqJVIa3oXFY0vcrCXQ6Z7v/Z2OL2Q2q5MPgN6RYdUySfC8FZA04ZF6S/qfsxHz2YqQSXVTQcuOyVRtKNQcCwVBQn4yPCvnMCJjeUg8WQQ//qvBoxq62u5g+OA3Fo0PGZPND5m7/Yf/9gXr0gg0yFdovjEMTAq32IA2Ktcw+9B8+xDTlbbdjmmGfFRYzH+G+zH7HNY/BFK0XevQK+bpg2n68gDk0upkuYmvE9+AscY40HzLmLdZyqySRhU6lAVYF47LamRptr7GWr3HXkL9Yi3ddA0fh9HAQDGs9xgUxpbUyFnZ4u4MtVPv91Qxlw3CMmyomyH+dksDrtMbwqY/aVQ6SroOPnGJYEO7HK9GIkKTWszeUyniytNF6EglCn78a74fH/dE/1Ql+xrbrkTWrhR+l9UqAniMfh383ltN5Yu3mT9FV7sfoGuOcMpVGmHGw15DYi+p31gdahwrNQqXbfRzfnrOE3QaG0hncpJSYC53l+uRoMbnaKMKNuAF5ha9ws6vvnETXkJv8CvgA9yytk98iPVKZ8lxoVrRde4q0kBjE2Yfgw/4iMI/cYdfaO2Gcbo1vEfbR4YRGh4QhXyf3svMqSWs9wo6ydmb/OYJULrMtR2CpnIR6YrvUDbmP5YzFM/Jqc6/AQNpmOEKOvTmIL7R5GVO5oXQ4s60iYRn4brcFw+QHBwOZ8WAOxJmL5vPyFUmPznaTpdlcbfYgnQ076Y/wQASQiXiCMkzy+Wyw3RhMPO+vjrD2tNwHcXM8gquzyqAH1/FnQ1PorU6+1IzG0h5+RJqK5sTe9b0GQnwRqvaetsdbNIK5kzmC/bhQGbhu5uMqkowKYs1cmaGRh8laI2htil0yVmftnfSCvtu5IeXjDrrKt4IfTRb7C8WIcka9LLXK8/gd8c1ahX/K7lHuI9Y7+LT9B+0kqyU="}, {"__id__": "chunk-4785de5f4e69ec34cdaac1b60888f325", "__created_at__": 1760497465, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nPS C:\\Users\\Richard\\Desktop> node .\\create-token.js\nnode:internal/modules/cjs/loader:1247\n  throw err;\n  ^\n\nError: Cannot find module 'C:\\Users\\Richard\\Desktop\\create-token.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1244:15)\n    at Function._load (node:internal/modules/cjs/loader:1070:27)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:170:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n\nWhere is  'create-token.js'?\n\nagent:\nI don't know enough about create-token.js to give a good answer. Maybe try posting some code in your question so that I can analyze it.", "full_doc_id": "doc-4785de5f4e69ec34cdaac1b60888f325", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat002.md", "vector": "eJwFwQlUFGUAAGCFvBUQQ45ld+f855/ZWQqtnu+VonmlZKW8UDJDTcFUsjxAyygf4RGJliAIu8yx/8z8/+wOqGlGmoamJkqUhHSIGULa82XaKYna9zGph8THG3D9dn8tOel5Ub1g/RuZHSmBLmmpMJ5UOw11Lhwxx4sb3bTjhRvYRlmRu0CxHMCNaKWUw2Uag5LS7QZ9Gp0CEu0uYYe43BihTycH6dn8W+I5OlscHhaoTfhtbVblPLlTLHdH+45xcfb5hwb4e6jLaVHsv6Ez2kfSQKXbiAE0+HUkzYWpheIQa4aaT7LBBClrzzv09sg82Y2+Dc81O4xX/DHe+Xqv8pU+0jmFsoOZ3GNWXigZa+R54krMRW5/kucZOqTHoiPMBX0/t5DZoL1gt0hXQR6/Ce4bvVjPYa95Nsg3mf4gAT8n5OIYK0J/Ybcay+VosR4fwBuplF2vMz6tlDpu+VOHEZfQ372YfMw5oTJqDrjhtvBveKd6MRQLt0gdUgfrwoPBcm2fncU378lP3Lb1CzOe2MahilzwMLwltFnfwO04DOrrl/BnBdrorD3tbXdyuM043+jURmslZrzViXZoA4npOa5mWZK6wFruiY50MSlojGgZrfzOtDlqJSmvCWktwoCKdahNzwl7+UftK7xhuvh80jd8Bdxql6BtuA+PDAD6SPJMsd11hc1IfZ8vx0G2juqCptpNVamX4t8j6/wWM82bAZ2gDKPsY3AIvcSYbNxy9yilw55AhdaRsFkxgjmiPMt0hNfwJzzTOaP2e74clsIXrUbR0R5IzNSvUqL5WcV6tJY6T0+xDoHCuszIHGkFVahmCzuEaLsgMlU0hRdgA8jSlprNTIJnlDyTzTCvgCkhCi5CxF8cSpMg/w0KkIAZbY7AZfwK4VWjTC5hyquWwlaygG81C+CPVhuD+VRQJv8hjeIvihDHmZjdFDltnoUHgFs/DDn8ZDAhQsglmMVcCqUb1+W95mZfN2lnCuRLUgKKlaYF7oJoZhQzmG+3UsPFDsVNJ/lSTFIhmSXF44+k+UjTStFB3mZOJV6tLtT7CyukHcFmKR3uRg9Kd63v8M+w1/aEhqgbQw9aW3w3zCrxA/9c8VT4TdhG9gotIqXd1opIvsfjreeihQ5IlL/ZK8ljnD/NoUAAb1RlkGU1A+HjKRDlpk0EndZJbhq+6Q6AyfAy+TNcKJ30LuMHoc/QILmXNON0B0MGbMeVeKG1lR4GbmgTfE32Nd9YuBX9kjJB6rC4QIlvp28OjbhVUEo4Zs0PH7aWaKXiQX4v9ze47r4lDiaPBM5V0mwRXm9Vq9ekTpFwHzL7LL7mLF5oUp6LVgueSRKkMepufTKsgLPrvuR7kOwUyHmI8j7NpNhJkblyX+0UpyaowHI8lF4rFRlx4Lz6D1LENjKL7S++TEWRs3sm9tvAgcqpsJErsg/AAZEecCccBfu0++6jzO94tfMUqqbC0hQqO7TeTfCi4V3sWH48YMIpiks3wNHE1VoAjiVVykFxIiqCpcIkPduINx/BE0WtqsVVVP0SfZ2OguOSmoynSYgbgllGF34Q3XQF2+bLUFdyNeZd9S8mUBdSL+i75WL0OaNoJaSE9MZctogUZ8UIGYF+pBtfRf3oPHST+q8Bkly7mDvDT/3wc7iPN3iawPh06AoWOVlUE/8VotVv/ffSsJyn58JU9N4Hd0ljpCekWE36K7YiNEm1OqvsF734U+e29r4wKXWNHgffDVT4ZsN+huRkiTNqFgcZpUMuwAroxdXWrfgOnCG2wZ+M+2gl1yftMd5QPpEV1VBu8xyYIKg6ZTbrOYTDF8sN30j7KGxnX4ZGKApfE+ahMNeGT5Bd7lXmE+gtXwF3XNuf8g+KrUt2TF88uUcccsLE6A6lhMvAU+gcfR61ct14mS9TScTtgSZ+hj2U/p46ZRQKJVKWXLRrXDCDXQaSq7PNr+lk47XI/2eiqIw="}, {"__id__": "chunk-0d2db86fa1e94e88797ef86c00888e64", "__created_at__": 1760497475, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nError in wallet-util.js/instanceWallet()\nError in token-create-fungible.js/run():  Error: ENOENT: no such file or directory, open 'C:\\Users\\Richard\\Desktop\\psf-slp-wallet\\.wallets\\mxnpeso.json'\n    at async open (node:internal/fs/promises:638:25)\n    at async readFile (node:internal/fs/promises:1242:14)\n    at async WalletUtil.instanceWallet (file:///C:/Users/Richard/Desktop/psf-slp-wallet/src/lib/wallet-util.js:48:25)\n    at async TokenCreateFungible.openWallet (file:///C:/Users/Richard/Desktop/psf-slp-wallet/src/commands/token-create-fungible.js:50:20)\n    at async TokenCreateFungible.run (file:///C:/Users/Richard/Desktop/psf-slp-wallet/src/commands/token-create-fungible.js:29:7)\n    at async Command.parseAsync (C:\\Users\\Richard\\Desktop\\psf-slp-wallet\\node_modules\\commander\\lib\\command.js:1092:5) {\n  errno: -4058,\n  code: 'ENOENT',\n  syscall: 'open',\n  path: 'C:\\\\Users\\\\Richard\\\\Desktop\\\\psf-slp-wallet\\\\.wallets\\\\mxnpeso.json'\n}\n\nError in token-create-fungible.js/run():  Error: ENOENT: no such file or directory, open 'C:\\Users\\Richard\\Desktop\\psf-slp-wallet\\.wallets\\mxnpeso.json'\n\nCan I get some help?\n\nagent:\nThe error message seems to indicate that the application can not find the file mxnpeso.json. Are you sure you have the file name correct? Does a file with that name exist in the .wallets directory?\n\nFrom the 'C:' path in the error log, it also looks like you are using a Windows operating system. Be aware that only Linux operating systems are supported by PSF software.", "full_doc_id": "doc-0d2db86fa1e94e88797ef86c00888e64", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat003.md", "vector": "eJwN0otXFOUCAHBNTBEhV5NlYXfYnfnmm28ei966Hl9kesoHoqCdSDpoeZSDdpXUc32g2UONe8kU0BBw2cfM7Dcz38zsgpZiaaRlmq8sTe3llgcxlVAjM7QH3Pv7G35PSwZ07uHdJ2C3uRanSI+QWdY6d6+2M/QJt41kBZfR4+AvYCyJWhejR3AxH8/prjlhZMM8jRI+EIvRkxG3nGPPM/r4Vmd/EJBazYinEvXVdgZ7zMzMrXDCqGaNRucyao0ueJO9YK8UJ8DNskPLGj1BusVTImMed9/0jEYpSj/ra2kIM9TfySyEN7it+lNkCmOFA/ytnbvDj4V2IRsejbQhiIqE98zj3kK+FF6wT3EALRdLjL90h5Uc86tdYAOXLZ0l72V/phWMvJ29V6wQeikZJ+PqRp2MEad6SnEjHk/dF92+AUwB09l8gHNgFhVo10PYjkplMNUT1uazB6Ib5c2B02KPMUyIx4fIV/RX6kTfa+Rtz+p4Mx+gU8z3lRLqJH8dfSNcRKPV4FuJSKTlGXRN2sAQ/CPpVGc0rTQi4PUBudxcXzmTovvBdO0vepOvR4F8ONBs3SNrfI8/Wsb06Tusbb5+oYl4l2soOh3yIhfMt3ZnTrLvcINjN8xUZ7vwp5CwX4oP599wytFpLsROiG3UCKik30JV1hihjZ4Vl7LKsrdUFeIvzCpY6pmbXlVTw4335GXksxHsYM+Tj/lDmiZ0GbO1IjmZ20LNZ/xSPkoSL6t/G132F8F6bbvxIn4eDlTOoFbzpFnuvxnNiefyP9F9eA412e0DZ1G9UGgth04yPF4l/LM+iUw0lzBt7FFqCl3q75B+s2Y/ehbPVA6jVhTUVqrDpB2Rev4YGmXodhH/ZaMGV9Qel3tgXDdRgVoiJGh111FvXexN/XZ0snWHvIaKQEIPING3Lz6Ydqq3R1SSebENIE19Ae1xQ+6u+K3g8aaRQjuD7Le7RDf/HT/KXEE9oM6RTWCmNdExl16rjGCH82PVVvSw1cavoy9IA0JjwHJ9Ls5ilvoNfF4M69e1OVrejhtSCp1nzeMo71VxFZlO2skyvMZvufKsd7VqtoyLq6miXn8gOojrT9LMBL0vuJ4NgGbVMlLwIM8SQUGfyvetdHLC+RPI0DrYmVJqQ5AuJQ94r6vJVcW2CC/L/WIhkORdwN31dhh/Nh6WqZgHjBXr0F3qOavbfNV3j630Y3Yiedr9MKi2D6MUMM6/CVwkf5sl4HDTbKobPEbucyq9MFrEjbT6VX/g9BmDjMvKS4EnZJK5gb0nWeFTfDvzM7M5EibteqWwAv7O/kNjMs7AH4W3cU324DrcpBrr/r92Fvepr5fdjp7w5vEJayerRK5ET2LNCFliqA1UCe2xGOjDQ1M/xN+D95VnlRdIRtzBuYRZ4VrfwWBIDHPFII1dzX1F9stnhGLPQa7DPGIsMCnmvOlE5f5VQjB21t4mDKrfC9bwS0WXmR99nR5C8s220GhOhX/gFLiTnelaC0SyOJhrHnFNMXX9GNqKoTyd+5wssVLxN3ICTeL3kR+Cw+pzyB643twO+lcPjc5TGuu6UUXjCL3dtKxr5BL3uYTJ9/qr9KLovwTMXJUFqoINKMdBGXvVPOda5J3W5A8i0GE6yFZlJDhFWuyupjlgpbpWn67k623xWmWA85C73a4Ai/DH/o3WLfCLNQlUwMVatRIAyUa51CbegnOUY9xS3/ZowFpsh8xyUKw9iCXgm9Fcdwt+Wd5CRqrlciE66KzI/I+gB2cL6fAdaGjr2A7crpvE4f6vnZ7TjPXYMXmKfs0qkJdpP5D+IIldQH7FH7G56m70q17Drw4+zrYY6dp6e4w2P+vf8sWwC5rc6YY7GV0kQXqy0/hm+ZA53nwE/954CSTHO7CtTo1T6vORXlYlA7Wk2EJ7hdZJGkildYn5MtzLjdMLfNO0h5i9cAa3ny1J/5Bt0Ab6DjpoeB8VC9UNJ61X2Bi6oqxqzjYuB/8H7Imt7A=="}, {"__id__": "chunk-eb9403c81c3ff7813e00497423590e3d", "__created_at__": 1760497485, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nCan I send bch to my SLP address?\n\nagent:\nYes. BCH and SLP addresses all resolve to the same address. So you can always send BCH to an SLP address.\n\nWhat to be careful of is sending SLP tokens to a BCH address. If the wallet does not support SLP tokens (most wallets), it will burn your tokens (removing them from circulation).\n\nIt's best practice to use wallet.psfoundation.cash wallet for working with SLP tokens, and only send them to `simpleledger:` addresses.", "full_doc_id": "doc-eb9403c81c3ff7813e00497423590e3d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat004.md", "vector": "eJwFwQtUVGUCAODMiVXTWBTMgZk79/Hfe///PkTzkY89lmJqx0Qj46ioCVqYhxYp3TJcdDmdOohEIi+HmTtzZ+7j/++9gwrmo5DMIjqSaXrKslyyLExad7OzneQQu993FnHq9cNfpl5TbzhztfHoDNillbXfUnYa32kHcH58qRhOFYdfg2/aPfgb5l3Pp14w60Eat8T72doi+4z/5HxxMJwqx5lyReKI1Yp+VcdI0ykf2azcsjVpXGyees15idLcFjJLctE7fAXzYUZLMmjsmnq/MFt/TpkL3pQFc614KRasn6fckLrBFnuQvcmF7S43yYjSGhLEY5HqDIkfohp9k5tvliqTcYe/XfyI7UudUEUw2l9lLcZnnNuJW9ldfC44BbtAWIjpc7O32uFoR+Si/hcqlzmlnAe0AuA4JmCsAH6GoJfgdvu95kzI453JuoM3ic5Pp/KY6UK2N1PRk7+Jj5kpqtd5hDvqfaKVkMPmr8IoK5up1P+GikDpxH8zFckWpVHJhT1kFlltDN9T7C1CR8UA/AmuoPP4FcQNlQs+VDXlIaZA+J10tG3zquF6azP/55ze4H1eGR3wqp2qoOA2Jo6QVXYFPBv8GXH2paQC75jjk6b1A8gwpvGDdlr0PfVlfMIpBGn2ZjNfTA8zbgaeBO/g17k5dltwKV3pPMdeI1PZma6Ka3jILqb2geacemmDdRforIT63RTc/9Yp8a22iPV2zFHWOb+I/egGSZfv2hdggd1HvYEHglV2mTDfI0ant7epVvihbsT6liPichRHhcHdMK/hcILYZXyuswiPJt/FFzLbuLFaDzjNdedUKLVslvmNkAyenfIPWaBv4nT7HfQ4+oqBck70D+YYW2PMVPOjy/SrIjQLxSfIMahBBdHSs0TH1a2Z7C6rgG6AhZFzUo/3pbEl9CSjhXqdeudVYwmTYBY86FMqpRmh11texSPmVrrPekbvBPOD95lSfAhtSvTbr+CRrA389UglfUfpbnkKfarVUaf54+iQOQzz2AnhbZZKTQXPc/9jSx2I64xVUnskhS+EdmYPw/OmcKgzUaSlg59AZ+xkcod0S+2gGOkUnogwqHCqvD5OwLwwGN0TS7MypZP030WfdNSoNneK9YH10iy2JWZYn4MNYCZsbvqcPxBYz7U3llED3ttMVHoRZrFDxkaXjgwkdvir1X64ym3WF3iKdFfcg9LMdfiPyJRQVCiH56iNyi48X+syi8EGLh3c4FfjRtMvPaY3isPmo/BPMOIez36QH2gqxSvjSvMO4UpYkc6wfVapJlsvWmPl4ozTALJzwhbM1z7F5fRC76qzOvYRXyNmSTX0UihGLlsSHHDWmgecbnLVyQiFs77HHBxGxV67WGTl289CiA1jdvKiddOb01rL9jh+IcJezB6nXmg9khii9lmO0Y8cvBgOgaW406iTlxhbW9uCfeAq2ej4lA7znoMJbo5yzjtmfx2aZl1KTtM20Q5aDxpQL14YqrQb/cVsNHEZv+DuxWOadoc/wD8mHJzCtv29wIgbUU6iML43rhEOzbDvn/IZ1uX9gXY6gHIpxs3BRy3ObuKXy/uN7WQJGp88L/wXjEyeC9fgVYmqgAX7ogvA1rY881Cct7aTwUga3mMcobPchxsOkVyZiCUy6y3zRpwK5hf75SzZ6RJuK/OMdrhQSYKiyBWzWQ1RE/2ZuaGp1+L9xgk4jC+zDwRqvRfAjFgJDnt38QTpAzqBi4z33cPeda1I326cZK8wOWSU+iM/ykizf5NnG4Px2cYb8N54UvqnMZlcNl+hd6Si1B72d+orple7F/U5q9WV+kjjWaMe/BX8ixTASajXfghXyKVKgbFcyBV65QnxhshiIFI+eTdfS7r1En2M/RTqIpMCt2HI8tkf21HmePRpYSVZlDzt5iezzFIyzjbErxO0C7x1wS0tJaQqWNTCOtM5ju6ZNEtfAw5Kflhn9JgT4Aqwzy131lplzv8BSAWfZg=="}, {"__id__": "chunk-ba14dc31461ef9f38edd2d150ef1d032", "__created_at__": 1760497500, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nbchn-main   | Warning: This version of Bitcoin Cash Node is old and may fall out of network consensus in 26 day(s). Please upgrade, or add expire=0 to your configuration file if you want to continue running this version. If you do nothing, the software will\n\nHave you hit this error before?\n\nagent:\nYes. BCHN nodes need to be upgraded each year before May 15th.\n\nIf you are running BCHN in a docker container from the `docker-bchn` repository, then you can upgrade your node by following these commands:\n\n- `docker-compose down`\n- `docker-compose build --no-cache`\n- `docker-compose up -d`\n\nThat will upgrade your BCHN full node.", "full_doc_id": "doc-ba14dc31461ef9f38edd2d150ef1d032", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat005.md", "vector": "eJwFwQtQVWUCAGDEZn205I1Xl8t9nHue/3/OucgmxVKKJlsUkqlZKqKN5aO6O2omSowVWYhmK5W87vvc8/r/8wANH6vtms42OEqWIBY2zU4aGxCrsFsCKWV93wMgzIUPFxmRwDh+QVvJHvW/rPebnwbWu0vYXm6TXmGN4Un3IbAIXddfdndKecJ5Op/A/GrzsVhxoCnuUUrBQ+2rcQFYZqjkbvW5vBy/m+ixM3kHcTPwkr5ZnGe3ghpttVRHXAYtYshTQb6OVd2Rd5I9xr04O09cSA8YXYJFXZC7mfXMMD0DHmPq4Jq2cuuq3AuuKWaoC26yOLGVekb7VJurfZn3T8ar7nE52XF5Ad+pXmLXa4ulKfZeOx9pspBsFlagFP+kdvSeFHtIr81sIivjBcRd/FZmNezJfDX0izo1loJDXD3gjbnEbn8tnjSKxCX6VtqEm5kgTpiF944698JBI8I45f+pG6wXZs1SJVQZ6Mc1ygjDa33EDW3M9zq+W7zDZ3FRb1Eb4jZIh60nyB9cI8Rh8X6jTTtu3PJ+TP3Ju4Bb7wpSM5GoPm+K4nXmEC5n/4xL8TFWsGZYLoK1ZqkRZq1N8Rsz6mGu3oMX6mUJLx1FJwmKqIT3Kic9OwJz/P9HfpyR0Zks8XSRYtb70b3kP4wG2G3M41dh1HKBbg71MytiCftRyZW5Te7gIrATdngfZgtVHY6gg/6RljvsRe20cjy0UFgE5mk/8evCX3Kl2nLinSwi1Gj0crvNL+gutSzqtGPGWLbPsTBrGrG3tS2zgi/Ci+DtxB1mv7YCDFpR8/HkMPgQlfOK48XGHfxEJI2ud6xVp4leX/C+BdALgkoBFmiSNOga0EhukG8lDyk5whj+HlVHyq1i9hROF6fCVFjMp+HPUMD7bFg3qtjh0KD/ipBizCDecr9l1oNNxq/IrW8E59gsyhto513MksRXyhutl+QMw439H26kKbQjvgxMcHX2Iyjo//fBUXw3UyuUeD7is+ka3CC2w2F5i7A4o4jchoekO+HjSruUMN+0O6Lp3H10Ld5OdDmKOVNdmcg3T4TXgfdb/uU0uduMTH12sBpwTB/1PVNmN9mprdXhT+gTnmpjCCvgAJ4vbuE35+pGCB41Fgf2aC85Zuo7GxHZZ0SIdhAkvqAacvuoTvPme1OEBu6JD5bjdOJrojzqSb4rfsc34R1UWtsu3oAzhIAtxM4xu8iHQS7f4/9JHLAq9UajNDnAlFDbpowm93uq3NXSA3wV/kbcKWy3p0VHhaoEYaSw0/kzoDZ2TvjR/7Rapo2gfbiZugiqGJhpyVVwQ0zwneL2oULDafY4t8HZoMx3ln07/hxKpRhUhAvtx/DlZFn8PJ4rzRSbhEeQl8/Rb9uX+a+IH/zzUZv5LW7g5qipdj5dIZX4qsDGljrFoz0Pu9Fv8JZK8Dx3I37As0ta7gkylWa1CPA15BFN8y/qbLxGGLQe9Z3JTtMG5RqtU14Z6CWnczWJSnOQueJaybrRt6jO/NyXl6BwNvqb0m7+1Si2vzGfYr4GEznrcgUjD6/llyaD8UhsJzP7j7WeNfx2M80cSJ4yhs3inH2+J5VL0hHhqipxvekOM5ufZrRyUx33i3OIRbA0N8++mRxv6taXCqL6S2iZnLAK7GFF5bKdbjjUfgVVY12ZQk4mCkw3FeFGjSUaAa/DDus4fQBO+gvc/aISyAcp+BUa6f3kz/rHdjDeJselRjzfeEM4HXowusX3o17fttX1ILk9/htOJUqZI+wJkGDcmVtBvXJAKDCz4FD8PDkRm0nvIbpjT+O3488kzoUbhEL3Jm1A9jEV6D8AqzdCQN8vjSR/Bkf0a1qMOyheQOO+w0w6dxassVcpn7AFzH9dF3GGsdRYZb3i9Ck9+muO6XgcnTGfZE+RHR/47VfZsFmEiq0l5Lj7KvF3uZkdxX+AV9hbyRFiDHvxPc22soc4S0N4Qpgr9TlsTy+E+kPqd42n8YT+Oyt+pXc="}, {"__id__": "chunk-18dcd9d19647081504770f8f1fe52190", "__created_at__": 1760497515, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nI get this error:\n\nC:\\Users\\Richard> curl https://freshmintrecords.com/v5/electrumx/balance/bitcoincash:qqzcnxsxn0tgdh85vd9t9au7cxl4a9sgayd527v2cu\n{\"success\":false,\"error\":\"read ECONNRESET\"}\nC:\\Users\\Richard> curl https://freshmintrecords.com/v5/electrumx/balance/bitcoincash:qqzcnxsxn0tgdh85vd9t9au7cxl4a9sgayd527v2cu\n{\"success\":false,\"error\":\"Network error: Could not communicate with full node or other external service.\"}\n\nagent:\nThat error indicates that the Fulcrum indexer can not communicate with the full node.\n\nThe /v5/electrumx/balance indicates that you're making a call to the Fulcrum Indexer. The Fulcrum indexer runs the Electrumx protocol.", "full_doc_id": "doc-18dcd9d19647081504770f8f1fe52190", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat006.md", "vector": "eJwNzH9UVFUCwPE9pYiQwurww4E382befe/d+37QD4rwR5GKrHQiVFzY2lMqKmuCRzRbkkhbwdJCwEYHgplh3rx737vvzRuRXTzWWidPZmHm2u62LLoQHtpTSYZp9sPMY/79PZ/vKnm6ckd/snPr7hILRWcxyfCb0IZ4gbollk62g/nRgZnX7EryN/EY/g91pX/raVU4UA9+QQ0JhnbyuncXzhI39n1Bx9mUvWk4TR2ThnGxMWatE6Zp3eh9frtcG3+HJ/Eq/V8iL59CncLDyiAapadVztPuT6j3KytAinNRwUJaNE0u9abOuSEcwQlx0m6032YDuQW5mw1v5mJiS7P5Ceey3WBNKH1gt7GPK4F7aQdyUQQipIE+S8e0bjMrpbWtVw2Ren+/5mLWHXgfrMwOWZU+W7uhTOXn8HX+z5hynAKKSJj/M5zy2mY+z++yRq2vNJP+IHyMdoJDxg3nv/wyLQ47/YvZJIqZw84OWBqrItuEV3Cz+D37oejrzTDfZLeQVjiJWqSTOZsS19CmtHpHF8tgjVgJM+1k7wNONbtZWiutQhWhR4Us8kL3svhx34HsBF7JVHRVUwb+YH1sD+zZS13Wdl65fdAMDS4xm2kv32J8qk1a49069fL/9BX5pub9PnKSqv6bGVS7FpoR2x77DM/kNlqvg5PWFX7SXoW/4igtdI0aYXveTCV3jDzn96KgwpM13mB0KWScVN8JKwAumvcEXrRcshrJE3R5IrdMbDTy+HFujhDGw9GAeUsG8WZyIrHF8xtuvq+CrwNuuIhN4rOykoIe0NK9lE0Lb3Bq8XzSzxeDCtYEKj8EH8E1iMUL6S7uGSrhYeka4Ohc82luBvOL/ydBMt3hv7RWkSPKeWMwuqD9AzLOjlgLVQ+0hQ7hEkl3zsbqvX/Vv4ztCF7OzVMarLPsvXppvEE84HxN7zVrZq1BxTkRlIz63Gdpvn0CB2N7HMnSvBIK2yN8vvd5od/pS1jwA+ClReAnNZW/DAQjTySoTixiPgedMEdcqG0Ive7/NNyiNzvVtMR6S7qLn20eRUtICjzMnPJ30mT7TXFe5rfhntANdI77LQ4iXZzWtQPut15zBuTF2u/g8nBB/MLLZ8R1WgKtVbeSJ83Vcm7rPqlGPMMNWXcd9HJu807yidwePKJt8zHGP+wnsB/dGdXBgFXVEQAr2GnBZDUfVphVZlm8TF6A2pU1xiH7QTTffRMvZi60vy0/EH+KqzEQGtNHD9zji1nloBSddV1EOWSGNIFedQpApfINXx56jMvIWoTmmq1ydfYV2hI+g6daW4Tl3AC8GjjdmyqNMMP2vzOOWC8ZGdSNp6OFcD34e2+ucyrKsjeNKbTEAbdLF75KHxJPw+tCtfEQ5E2UuKw6vsY3JNzj1Dn5oAaUW1b4btbmFXVcnBabfZC1OvCD3sPkZ2lJ9s/CYOyceFWcAivN9+DTYI/xnHrd/lovp03iEP2DhsUGKxK1Y41kv3zFXxgI64N0Pxpk/qRdMltwoZ3P3Er2idmkqnNSj8Su4/8Z52GVOtb+f30kvjH7ktSqd+raLNufaZ0jvPhuvCv+fKyNzTNy+H2+dG0H64Uj/qM5urGAfAnrw9+JbnNAaorsBhzZlGiLd+ArZDVqsle6fEaTVWa1hfvFkezNgtu5I77RHvWM4aPdH3Xdh3bKz0TewQCu9rVpD/tLlALzIyGS96NSJRdFU2E1rSO7QIMzEfTMeOqNAEli75dfJktZWX/Lbkw0u5+N+SO7b+ur5HE+U1knHDK9cJf5hdRO+6Qh+kd2Dl7BLBPSsxvM6RLUk0nCp/oI/MRiUVjnItXcK/znfjUW761D3d1t+DgolC8QCI5xtii12BHC72SL0VqaZITIXKvQbJLmhReIxFMbXe/uofOEUt3Ts5yuxEx8mNQ6j+HTxlrYE73POG4NycV0EX4xsM2M4fXiu9xW1h07KJ1Xc6QBPIa3ipnRWuqDx+g+/CvGGZkW"}, {"__id__": "chunk-76cae68e3b55486c7cb5d5850bdc79f7", "__created_at__": 1760497535, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nAre there any video games that use SLP tokens?\n\nagent:\nWhen SLP first came out, a developer modified the old arcade game 'Load Runner' to use SLP tokens.\n\nHere is the news article about it:\nhttps://news.bitcoin.com/this-version-of-lode-runner-is-fueled-by-bch-powered-slp-tokens/", "full_doc_id": "doc-76cae68e3b55486c7cb5d5850bdc79f7", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat007.md", "vector": "eJwN0YtXFXUCwPEUMVdcREi8wH3N3PnN/H4zc1lMdjPAV6LgqzC1LBeWVcvgrOZRi6XcwDxkIgHqPV7hvub1m/nN45oP0C09pbmFqJuta5Eursux1MV0pT22yW66/gnfz7cdNeS/dKAwmRI8orknhrQU31VfUxLkj/U+C1Jij5qL1bZkwvw5W6JvSf7F86n1ZHCO61mlin3f7sRFYgNZhhvoH03gzBWmcTeMBehvIsvPoFOsW4KL/J29o65BY5xBUGsNaWrOVm4dOOO54znhjuLuYJZ4NbNI/BZ9LP0mdIqPGavxv1AeJUdadpdrPwM9zjl9O87lhx7rIJvp5Z4qxDJho4Jc0D8Xp1B7YG1gwL87+T8+Ve7Qbd9k6SMiaafTb9PF8LxYZd6XRhiq767rBO3Vt5J4rESeIB7wvuFvAzMVIH+Be/MOCwr6hVPqypWnmiuM0/Q4szQRjZznK3Cf1QL7cxnuuPEIPq6+kjmH1ATKpBpTZLJJNVwI56J3Ax/qk3MvyTe4HiFdrMEP7FUwGXnXmiKOZCuY3Sg1Nim60N7I3g6MoQaZN6Vi+gFp5nYkr8HZ0q5IrtofDdlL4UXSnqwP7XGmO5cIbxQI9/AVupH0kxpqnvWJ/gNenkjrbIKz9Lfo1IKvO36lFUuLyBU5GT25M0aqjYNCI/7EW6Ll5JUYU+zZsN6qZ+rNV+35cDPjcT/NIm2dOBVugTmgH94lh9A+ZUWnO75GrdcKg++YeTCEhnGSj5LP/X0AMo3yASjhldTTznlltP02vt4+HtawWa7jDLXnDijb0cN+BbbtXSQdCz9hribnrIsBHB4hvI7yNRSoj1Xwo+LLyHT3Zs93ko4KE6OMQTwNclSYOyseU9ulSdTz6gXxSLxQX4NEfAicN8PQRrQAYZ+ZS5bY/WwlSdfH8//0boMfkAvGC2y7sYRrtG9EllD/zhKou6oGCgQv0ys/kG903FPd2kC0BJwB1WY6c8gDmIn6AmMFklAjKEt8K7bFB5lhuautG80RhieOYvMy9u6caE5WvOAYNQ2wyctEJ/dBZWwvifqrme2CqPu1FxXof8qTFX6GDemVD9VsbPOH9Pf57ztC5uukim82xqD1mmSEzZswqt0K5IgN4ZF6VvQFNpt/mVtnfqmtArOYXVQfXcnMUNKhwF3RFuyP+Mu5ftTp3hRdRB5h10sHYEbwR26lPTLiTlbyXbyIbkmOVYKKpT9RJjPEbgnedEqzffrFzt3MxwE6kWmNM2dw87UNwmWZFYoQ5QxkVDJPgs3Wd/LC7PvsS2iC8D37uPaplmqmkbfg9dh89oJi+4dHb9fLcaf3ljOAx6sn6T/wTUJ2y18DG5SF5hlmwOKUIod33sSVoBoMxX+L+vhq6yC/Vr9sFwQ/e9hbJo/Fv9v3JRdmcywSmOsrVibwac2hWLqc15xrFIPxaiGaF3+tRcdPoY1shetwrJz7vflrJ1NMscrYm7gDHrd/SlBgulmH18rPk1pekJXAq0qrtlZfypSBJuULLc16Wd8UOSczeqpU6/Th/2ilxjVqHlcnt/kQRvI9f4fW27KB1LHZZCZoZVzmT2Y6fcrqx6eAyfqMxdIOthQvhVXMNPOX7OJE14QdiXahFxyF3+xKNf6o+RWBYJC0NG/xzi7niHKQTBcH2XqYYb5oCtYmn5C5j3rb6ODqH759wq/yXoSocqYoeJYtkCcFu/ObAcjZiArJajjV85xzxHvSOKyetf+LIRrReR2PfmzYrLPmwZ6A5OqlZ3oms/8QZqOtrdfUV6CHOQfeI8HAa/oI33Kim4eV/HjIvCtrFOJGZjTH5yDH7hZ/MFYEVFII6+j9RiN/CQzhr2M9jMlXxHZy/cwpvjtwFh8F+5mxQW/8z1arvlIqUqr5bVY5l8bXau+oDXoXWoWvsp/ZPqbcamrr0djIMtrFvuFu10+YNegb/JFhBhj/abtVLQYUyHpvgWgFr9Fr6KNkE5yFx1m3ldvq+l3/Bw4Tnt4="}, {"__id__": "chunk-a775feecb55fa12d46497cc95064af41", "__created_at__": 1760497555, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nIs it possible to create multiple slp addresses using minimal-slp-wallet?\n\nagent:\nYes, with the getKeyPair() function. Here is a code example:\n\n```javascript\n/*\n  Example to generate multiple simpleledger: addresses from a single mnemonic.\n*/\n\nimport BchWallet from 'minimal-slp-wallet'\n\n// Create a new wallet with the given mnemonic\nasync function getSimpleledgerAddresses(mnemonic) {\n  const bchWallet = new BchWallet(mnemonic);\n\n  // Initialize the wallet\n  await bchWallet.walletInfoPromise;\n\n  // Use the getKeyPair function to generate multiple simpleledger addresses\n  for (let i = 0; i < 10; i++) { // Generate 10 addresses\n    const keyPair = await bchWallet.getKeyPair(i);\n\n    const slpAddress = keyPair.slpAddress\n\n    console.log(`Simple Ledger Address ${i}: ${slpAddress}`);\n  }\n}\n\n// Replace with your mnemonic\nconst myMnemonic = 'minor bench until split suffer shine series bag avoid cruel orient aunt';\ngetSimpleledgerAddresses(myMnemonic);\n\n```", "full_doc_id": "doc-a775feecb55fa12d46497cc95064af41", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat008.md", "vector": "eJwFwQtQFdcBANAIxlghKgYEHg/Yz7279+7uI5oaUKPEIZVkiCaihEBMiDSO2hJ04mdkYigfm1isleCH7+O9ffu9d3efJAR1ikYraBtCxdagIda2alvLII2aTFQiM/acSGpV4L1Pzh65g+94y4S9IkDPAV/XHm4V7oF1Rob5dXqKV+fTMhZFppIuZrW3OxA0FsAuFHek/kkPZbevDs2yG7wJ+yaOJw3uNhCjvAgD6BXwtpRPnlOyQvOVLnel0OvNEGoBCUyTBpLY9jhxSN2mNEl1xoasSWGvVOQ04mUZYe0G3IL+xsfahdiSltKXrDdSLDnPOEx2sK4zKDCWq5VaMbaozCOZcLr4iL3tPSv9hPtYX2mmkDKaYK9NqRIWC2fwhtCzYTe1gJluV3B/bsszvzb+oscoCFXAn3GXg4lObNod0Bj4FC83EFTQCvo/m42fQ//FLRLeF2+YRzuPoQ+D54RyM9Up8vR0k9YEH+kVxMEPzO2tb4LN4lmxP7wTLNSXywXSGG4lJYaKr1ucLQUm/Y9Nq0PPwE7rEv11ywKhGpZL3eakmKhx7D2vCjWqC8WpeNxKNp5ip0bXmLyBnVPmDbKJJKG/0mv4Y/MtOw7+l+z1F7p5KMS3o6Pam0xJFqtn0ynMhP2t9tuDHxgltIHIyoCeA7PZa/z54FUzwTfXOwAGvKvOCRg0auKvYxueki9aMngb5SFd34XSyBTfl6rfarIKlXXeR7AN+kzFT0hY+blWy39oFcBytbi1knxJyqNPpGeru/mdwVXWEnACjAtDbTuFVKac6+Jr4RNkMc31cq27nZtRN8gDxcLTxkbwTvCG2c2OtnUbaZn7jeeDuY4mXhLnKDlomvFvfUJYRe9Kl4EQPAL6rRPo96RT3gUbUYc0bi/oqKZV/qukBk+Re+nvwFYSbclPKGON8Eqy2XqRLJ+TrxVyWbgXV0b+FJyI7HKmoB3GPXIL3U+/RV5j7/DDbetIHKmHpThG7Y58GhgOZSCBYlSA7ss6E4VJalfoVVpqPQRlmbHqYYdzfkE+h1cy2y0FTdPWiWMZJbPP+Dm2VnhBLJv5jm7jx7PW89tRs1V96ILso6XOH/AI3QpX2Mngu0wfeppUw/9I3zTfpUNiDtigHGBG1W/ICPMVWgOyhHm4Q3wMOh/1s51dY3CGfB5LQCSzyL20JLaYH5ZzULP7LvzE/ZV0Qdwjrae7SR9XY36FecHxrQksJk+qmDD8dX4/GGR6aaHWjsaoHx0yl8gvCSVmRVpT83Ej93CstZodFdrT5+It4Sv0nDHkpJoz0XSw1dyR2MhdQGHzeOvBlgduwLmrUvw8PCoW6FfEvtbpJmD3OTvsfHeAfpf+MH4RG7E0Zr5c6bagV9R/0DfkWclyuxGZbSdGe8RyMcf7ESxLOh05hQaMS+Qk3EMKtAa8xXoZWuIPTUvYjfIIy1gN2vWMVP2i4+A8e0bmHPMZnOwVkYB6z/c5vc08hPnKUu6P4JcOo46SweQHonHQoen2We17sxeo6memRt+y5+7v8R9AOho6dJg7nbE9ci30Ar/dWRr0S8fIJqDgIXXcfS18kzZog9JFnB+pdr9Qcr1+/7u1rkGaXzYhOd3xCFcJn4l/n9shlJLX3RzSB4pphDmHTpLl1k1zhfRjpAgsjp4kldF6sUKtA7f0H4T9AZ2sbkkM/AafdeSUvqyWlGGtPjCphGBy+DyaICp/2bjiDcFNusZUOpy3EctstXE7OeTGRsdne7zqK8b7uLGEf0q7sWHG0ffxaESF71HKzzd64ExjlvNTl+XK3VHocGcMjAszrdT5JC9gmjP5pvA1MIlY0s/kp9yP7DNrOuYFBunrqIHPlX1qPjginn9qCBvGVneY3WbXtBMc4y5sG5GO6z1atlukLAySljJvvb7WZvwdxDa4DslOSJtnfRFdIz5+qJJ+kPSt5Tgjnd/jzeKxZgZ5Sp/waigNxWeKZNCpt9aaCe7/AfjUnwY="}, {"__id__": "chunk-9a59219bcd2791bb10d98855a1738561", "__created_at__": 1760497586, "content": "# Chat Dialog Example\n\nIn the chat example below, you are the 'agent'.\n\nuser:\n\nCan I store a smart contract in a slp NFT?\n\nagent:\n\nSLP tokens are represented as individual UTXOs in the mempool. So, yes, any SLP UTXO can also be a Script Bitcoin contract. The only requirement is that the Script output an OP_RETURN with valid SLP encoding in the transactions first output. In practice, this is pretty cumbersome and bugs can lead to tokens being burned.\n\nA different way to create a 'smart contract' would be to drop some high-level code into the tokens Mutable Data. Then the user can use the token like a program, by interacting with an app that looks for those kinds of SLP tokens. It's a much higher-level approach and is not dependent on Bitcoin Script in any way.", "full_doc_id": "doc-9a59219bcd2791bb10d98855a1738561", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat009.md", "vector": "eJwNz41bVtUBAHBTWk6ZYH4A8vJyv+85994XLIymibq1knI0t5gloNuDszFHJYmLmONRo1Knxae8wPtxP84595z3XlBrm6bzAxiplTqfsU1NQ1JrT+a0AjGt2H7/we+GcD2nZHdD13F9j/8EMblp4pi9yeeNTpDilttfOQI47R/M3qU9H3zQE4JL/VlGAt9vn5E/TZynh7RqtwQtzZrUNew5xuvmXf4+JaaVgWuRZ50xY4Qc09e4z8NXumrVNawsQsFC47oyN66BN5qv4GuhrVq3+bU+X0oGHaRZew7dci+I+YZgFuIGMiQO07doh/sfYwZ9j11Rb0T/Dc7hYfduf6/VkPOu+Zo4P3hT7PCzYRa3xKqiv3Yj9FZktfVTcUNGqhZxFwrN9gj+eeOr3C+dm2RvOMluM/rkT3CZ9gB9mJZIFaBZv6ZtpUXxEanVU6O75E5vpvr7cLnxIE1OLFOXmG3gRFhhFc1udq1fHhlsn2dWa7NoQEqT76hn5NXhMrWdisIl/SGwgZ3xmoNnSZr/rDEHitmHhCR7KLACbRLXwi2ghyfohJpESgMpPsnqJorpZmTLKWxYCSQmsRy82fsWe3hX4l34QzQTFDopdHv0TW+AlJIU8UPTAYe9OvHxnDPotrvD+hldxY4IuWSAJcc3wj9YPUAk6ztO4kX+x1rCncafY5sp5JuEUS6DT2szQkXRODgB0+QqL18ZRZXiVVyN+5zLoTr2rXoHJvs7pbUdvHBuVjf3ohmXVsZzuTc9UxxKHHedMBGisJfX5ALekJalP6p8B6TGMt3jQiorpraf5UxFhdLXZqFQL30fV4ROto/9/7KC9OBB4ZL0FA6hQnhMbdP3hAZacpzWyCqca/yTNJIVcJ1bs73K/wJWGWXaRDjdy6OFiT+1VJJevA5upzvhS4m8jnEwj5tkjLI8sh+VyjdnXOQfAfu16c6olEI/Dw/EhvFTsSNyizAX/xaXyJdafmGv4FVVUkVzcUaxcQClGhvJWv4G+BsMpT+untWu2yvtA9Hlyn/dODrvt7GZ8gg4Kv2G9AE9rQAexo9sezSYL/cGkszK2F5cJs00avCTusZStIWtMdrvz1c2sj3yXJKROBDbpKUxLJWBTPJH+/3g29nd8LFgf8BGU/kNoFJDLcngkxgvLIaXUXtXdTTbmK2Nj8vkCWuHlCk0mMyYrZz1a4I93QVgq5YMauxt/mfwlF0vj0od1uJQDavlZ5N/cBeylnHtYsSfYJXqy808cFeLC07qV1lR4D3179ztaK/SIZZLFwIV8HTQtC6hazgrfhYy2zML+IdiSzSBTCbhsNadTyk+IuxTi7Rt8mbhHjbZLAAvey+j3kSmvy3aJzzXWixA6S14KhHXhlO/8S/Dz9FYMBy/Su72TiofSP2sGexS64N/1r6IXLby+JXj1rM69YV0XamAA/Biewu8l/+S/UpaqK5BtGuV8XFilE43t2ir2flEAJwzw1Yq6EPV+pAcDdx25gUPukXSATjALXByyanAbfywm4sqwBz2ovuatRg9KU+B9zlH6E33BlbxR1Yx4tgCPUV8J7oTRlC29xX60p1H1sh/gSWoH1Vpn9mHQtM69zr1fJm1KjEheAX+QFkODgcr3GfwRFTovqACdCeTSSN0QfR3dKpeGPuuUe5VJYbZO6AkcWhGOfpAu6g34aBlwRJJ58aHv2fsdnaYcu6cnImBfHmn/CkZTO9rivnvB4/iQdrEttBc40N5nj05OI59409Xb0lPWxP5Ben3so+MYU1FQ6gRuHipup9y8n10o5TGJbHT5qJZd5w6ebycLDVEu+wG+QHWrh+ddRBg521hk/Rjs04dE/fROBtTntYC9K/ST+Q9Sq0ygXaiVjFf3S0OktP1pbH7SY+8PX5CGlDjrzfa09weUNk5AR5jxVbIV62tLk9eQlMC65w8nN9Vq6yWm+iirEY8xavI/JHAqc9wuvEvw8x6I6PffZVDaIp31Amz9fH/AQucseA="}, {"__id__": "chunk-193a49118fcc85e9bf0507951b244c9c", "__created_at__": 1760497601, "content": "# Pin Content using minimal-slp-wallet\n\nIn the chat example below, you are the 'agent'.\n\nuser:\nCan I pin content onto IPFS using minimal-slp-wallet?\n\nagent:\nminimal-slp-wallet does not have an API for pinning content onto the PSF File Pinning Protocol that runs on IPFS. However, the interactive web app at explorer.psffpp.com can be used to upload content to the IPFS network.\n\nYou can also do it algorithmically, using the `file-stage` and `file-pin` commands in the [psf-msg-wallet](https://github.com/Permissionless-Software-Foundation/psf-msg-wallet) command line app. That app leverages the [psffpp](https://www.npmjs.com/package/psffpp) JavaScript library. The JavaScript source code for psf-msg-wallet provides a good example of how to integrate the functionality into your own application.", "full_doc_id": "doc-193a49118fcc85e9bf0507951b244c9c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat010.md", "vector": "eJwFwQtQVNcBANAIYyRUIuKCsMDu232fe+/bt0bb2gwMtEZHTC2oKGogFq2DGIQabBMdY5JqsBobiImEhWV32X2f+969d98aIXGIw6BJA7bgL8UfED+dqqOok2aajB90Jj1nQjo056sjCxMT6LC9L6LAedaXNBFXg1isJJY3Fa4JyfS8cIUc8kh2jTVsVvp+1LLh+2Y0vli+MeUGO0b/amF8zj7Ky9EtrNtf2wFa1vNO9TE3bF1AH8x+gubZQXgQ78e9UrlSr6nhuk9+JTHjqtIlPw6O+yu8VmZafC2/PPpf7UOwDPTBTPN5qRXsNlfbq40i8EtwkarwqGMF3EWve6aGG9vblFx8DSbBpk5H/CXfQemK+G18CL9L85wQxsTnYn+SC7xrYAZ05KTgNjkLvyj+QX1ofOPfIGbI92TRaLEWwI+VW8KP8HXSR7qFTsbhV3A7MWNJ6Av0MlWsA+ghmWZI6mrK0Qp1vtFApMgP+AX0FTcuNhovgh5pgqXKT8kFpQa1SA9cg/iBlEqftabLLl+HZ1Ttz/yOb8fPwa0oXdgBjmlvhwLkCXDT/8C3hLvGC6gKptNTxsmY056NLrFq419mtsV8p62rqC3eYwa8ZZH+/JrEhDBBtwsDHRe8T33pVE9cikw+O7e1SO0n0fhNq1A5430zr5wOw9t4P70rXGF7oGKX2NXeAbHKuA/O5ASUkFactdGzCircUjmVzBeJ8ZTVWoeVLFSnTvE/0/kupNp8Ma8rVVvWeRxs5BaB/7ERtZDNZNOln2bHwsWgCgGux9PneqT0i4In3VrovsgK6bdaEQsRaI5IsY5a3hB/63M0lxqfaKqnO3uFkm7W0VL1fVmT2nxHYbkos7OSrZv8PniOiKCCN3y8nSY3+5Avksfb454T6j5C9SXydDlTbxV7cCGvofUgN6fJ3ksiIAnXOSdjFbKgGHwhN8jmWk86w6wssg4F4O54PUzmR0hx289pIPtz9Gnn644G/3HoVQbJXHk6dqMCNS3cke/2mCQXtqE56sPcn7FU9WuzXC7gP7CHQEfe56gRL4YnhUHpeyVZ2khfiyfxS1Ej9Lq8sVJ5v9hCFpBeVzFeh8pdO8mQegCmsghsFUZoTeymdjlnoZxu9OdW0xao8AXqVbzN3Qsuw0p0TxhIKIEOuMV/LjZVT7G6xB1WlbdOeW/OWfYkdtme5Gb4d4HJ0F5LAC5wV3ssbM9E/t6uKdF/mne87vwvwGm0i9SSHLFIusBXJ2rAQT4lcocuF3+amRz7e/Yb8DdwdcTB88I1o4VcJ4f1Yf5LvUeIsSPcouDzUI+8KpcRhz6Lq8x/JRTUJmUfGpJinj2gJP6WprID1m1+lbHSvI+HuA1oQbxWyMC/MDfLm/Ub+WvEg1aT/Q+5DD8y/iiu0GfMvA92Gx+aWeDX0lqrUSyQTDGDDKvvxJrFquiovUl5LG2LjyZOyuO4V7worPLtS8CuSrx8hoeGpFAwJrPoDeB2rkd9ZAsZzVfJv/ESsdVqN28azwSqcQO7aIwZVPgGatxKFzB/x3Q2C+2PVpmNzpfl78S7Uq/sDh5nf/7oDHV2NcinfM24xE5X3tZ+7zhhNOhp4aLQO/ZA9B7aoz+CBXhpXpp9km5g4/JmArPPzq7X6sX71iY0Tx/wMnsmHUu8Kpbqi5rXCX7X9/5at0fYDcvALe8ac54w5r2ZvdM/SykNPHUOC5WW7i1hHycycjbhte0DJmMPUhwdzGzizpMjJMl5XUghK71L5FsE+EcjI+qbRhZwRsc6d+KMrno7DQ66rrPm1lSjnnTDbmlx+JpUEr5DLrFyNBGeqm3Dx8Qg53GcNkMtO+wxvEnbKmy1dsIgfA9utPZqP+gRTwW889EyWhM8ob8knuIO2a/JXUJh/ggeVJNRsiXSAXKeHaYa7jN95I343/hAXqZYzD4D7fwVoRj+JawGB8E0dDvvkpoCOWV78zEO0l68wxeMNtlfG9P4/wMaSqX9"}, {"__id__": "chunk-76912daf7b8789fad8781e91d0bffbaa", "__created_at__": 1760497621, "content": "# QR scanner\n\nIn the chat example below, you are the 'agent'.\n\nuser:\n\nHow do I add a QR scanner to my application?\n\nagent:\n\nThe PSF created a demo web app with a QR scanner. It is available at [qr.fullstack.cash](https://qr.fullstack.cash).\n\nThe source code for the app is available here:\nhttps://github.com/christroutner/qr-scanner\n\nIt uses the [react-qr-reader](https://www.npmjs.com/package/react-qr-reader) library. It interacts with the devices web cam to give it the ability to scan a QR code.", "full_doc_id": "doc-76912daf7b8789fad8781e91d0bffbaa", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat011.md", "vector": "eJwN1ItTVWUCAHCNZ4q8BLxwX+d9vu88jEgU3VCxUozwUVjhI0tH3HUUbdF2aVq01BpGSRIMvHDvPefe833nOw9uZpZmZkUGKbuMUxrmoNnoMNnQji1sjWmvv+E38zsCd8OTb8+y21TZnQkudc1gKtxL2uzAJ3CNt9pYiCvgHmuog6XGjUz3myhEbeoqkmG0y0l2KJiVXyKdIAPhy14hsTlYJyQlSuTZ8P/6dVq1G5VKrkyeC2+r71tO/A56/eA6vVqdKr+BeoW/wRNWUCmHHn+ZAqVirkp/UtxqRNmSlg7Pl23b5fmxddwdcl/MxffAzdKvZpOQKv4EaowVeIL+rlEgvcNvfOOQPEPd7G6Lqty9XTxqiWOyIu7LGvC82K1IhcTLDBUe7KbRtViWlhTIBX3aY/J/i6YLreCxGC+mGrVgKTdIXyQ9+gT/Mn0E094beEcwRF9TVuoNXXuZZl+/OAIOHl6HX4zT7lfsE2FCreho4xn/7zTh/q1csTNiU0RB6geOkjJ1rYOVfqOa6FIPMyj0izXRhfQxvMzw2T94q+Qn0ETRjyL8W3Y2VPUyMkadpb5D7d6XcZ3eThh3DjatA2g1KIuvB7nUaWc0UGQ9KJwzc9Bt/5Ot2w54AsWKg2f6L3B/BfuYh6ldlqsZzC7p73QHzCKThAivO/n5pe58+DX+p1Xg4cWZ1OOgVk9X5rQtYO7SnezlWK7UZo1E4iQtXo1y1SN5deEt0njOK0KZkxkTI/fzV6xy/Gh4glhhvaWnOX0GC/YzD+G++AJF8NdTewtPammwnDTppbG012e45dYLwVPacakBjvnOMKr7kfAyfsCUwkXuF/xaWGbsFBZGGxk/51d2yVNDp+2z1By8W5wnLOnZED9nZ8K79hfAJYJySNhQ9JLZ6GRyVU4TlwEmZ/s6v9NL3FGwRZ4knHInC4vQZTPCuPrz/unyBLPTl9czXee9KmriU5gxMd1ZI6WREbaen4GWsJvEmC5op+VxdhP40NwQSqKWy3OSurjiwxvNcrLPOyz1dJXnX+1Jdsa7M/TwNNdoBmcj9ZKMCryv2Qk2AkeFYqvS+lTM4TSyX/gXQvFMpa+nxjwj7m1O1t8kVmyrkS89GFgkbOIuhVfaVdwe2AKlLtO+QFhqFjgFNsID/p15t4RzcgrIT1TAW9yQkmSMm7OzAsZWNAp4rpcp1t62DjntvhElIu3TipwSXvUNsO9Fm+nP1VS3kJ5oJQsV8HdEwSZyr3iWHzR2iIvRn4LwuR4SL5Uaogw5xh+VPgvVa/vFXE3hpsSSyHBnsz9LHmLmkYWBVqhRNXjYmEwc9HMwRl+AM6FfSgr+xzwDMZ1vHbD2uOnOLd7rKfWv567xy6Ul5Bn2ZMfcBC1vFwrxQDBkJh9ZDT6gNHMQxo0CzpH6ESD1/EX8LlY4L9wMDzODgd/YDk8VXI5cvhIyh7+1ypT57sF22loNF+tZOS9pUeQ6C3iPFVaWknOxYDzV/tK3g/uYv4I/tlrx3VA1UFuw4KDr7j/wNm6DZvuv7+kF5p/jUP474lK8yv4ttqxwLvnRkKAbmGbMIqvs3Z1/CV1QWrn96Gu2KD+DT+R8b61pDwc3oYFYrXzUaVFeJT8WPWvfJH3kvLzIoQHRTzqZzGWhIpwgQc9OO8OudDB90bgnuJyplKbJCWMVqgTHmMW0IrZLj2gp/A01rNZ0Nhh98KYodiXMd9x0sp05jxtwY3erPBY+bmeyj9prHJ6jxXhzndUrPBPQ5GngKleWt0ITiMk+h7VggX00mGPMtcasGifPLmHpyAlYGngq+JH5AAlJyfwQn809DG6CYZQtXHUa4hNJnVGqbM++wo/4gvI1QwvcEXZbteBi5BenHo2i9VNLpZ9IP/Cgb+g2eordpJ63bxdtcYdRulPbvdJyM1OiT4dvoP9ZHxIi9XKz8SlhGGehxkCV77jRTr0ApqhruUkgldobSzaOWVvJNlckfwD0roC3"}, {"__id__": "chunk-a274451aac716ba61715e7aa7a24159a", "__created_at__": 1760497811, "content": "# Sign a transaction with bch-js\n\nIn the chat example below, you are the 'agent'.\n\nuser:\n\nGive a JavaScript example for extracting bchjs from minimal-slp-wallet. Then use the bchjs library to sign a transaction.\n\nagent:\n\nHere is a simple example to extract bch-js from minimal-slp-wallet:\n\n```javascript\nimport SlpWallet from 'minimal-slp-wallet'\n\nconst slpWallet = new SlpWallet()\n\nconst bchjs = slpWallet.bchjs\n```\n\nSigning transactions with bch-js is done using the `TransactionBuilder` class. Here is an example from the [psf-js-examples](https://github.com/Permissionless-Software-Foundation/psf-js-examples) JavaScript examples repository for sending BCH. Note the `transactionBuilder.sign()` function that does the actual transaction signing.\n\n```javascript\n/*\n  Send 1000 satoshis to RECV_ADDR.\n*/\n\n// Replace the address below with the address you want to send the BCH to.\nlet RECV_ADDR = ''\n\n// set satoshi amount to send\nconst SATOSHIS_TO_SEND = 1000\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\nasync function sendBch () {\n  try {\n    // Get the balance of the sending address.\n    const balance = await getBCHBalance(SEND_ADDR, false)\n    console.log(`balance: ${JSON.stringify(balance, null, 2)}`)\n    console.log(`Balance of sending address ${SEND_ADDR} is ${balance} BCH.`)\n\n    // Exit if the balance is zero.\n    if (balance <= 0.0) {\n      console.log('Balance of sending address is zero. Exiting.')\n      process.exit(0)\n    }\n\n    // If the user fails to specify a reciever address, just send the BCH back\n    // to the origination address, so the example doesn't fail.\n    if (RECV_ADDR === '') RECV_ADDR = SEND_ADDR\n\n    // Convert to a legacy address (needed to build transactions).\n    const SEND_ADDR_LEGACY = bchjs.Address.toLegacyAddress(SEND_ADDR)\n    const RECV_ADDR_LEGACY = bchjs.Address.toLegacyAddress(RECV_ADDR)\n    console.log(`Sender Legacy Address: ${SEND_ADDR_LEGACY}`)\n    console.log(`Receiver Legacy Address: ${RECV_ADDR_LEGACY}`)\n\n    // Get UTXOs held by the address.\n    // https://developer.bitcoin.com/mastering-bitcoin-cash/4-transactions/\n    const utxos = await bchjs.Electrumx.utxo(SEND_ADDR)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`);\n\n    if (utxos.utxos.length === 0) throw new Error('No UTXOs found.')\n\n    // console.log(`u: ${JSON.stringify(u, null, 2)}`\n    const utxo = await findBiggestUtxo(utxos.utxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`);\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Essential variables of a transaction.\n    const satoshisToSend = SATOSHIS_TO_SEND\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount({ P2PKH: 1 }, { P2PKH: 2 })\n    console.log(`Transaction byte count: ${byteCount}`)\n    const satoshisPerByte = 1.2\n    const txFee = Math.floor(satoshisPerByte * byteCount)\n    console.log(`Transaction fee: ${txFee}`)\n\n    // amount to send back to the sending address.\n    // It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - satoshisToSend - txFee\n\n    if (remainder < 0) {\n      throw new Error('Not enough BCH to complete transaction!')\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(RECV_ADDR, satoshisToSend)\n    transactionBuilder.addOutput(SEND_ADDR, remainder)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount", "full_doc_id": "doc-6119e447592cee6445ecec48b6ae53ae", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat012.md", "vector": "eJwFwQtUFWUCAGDNUsw1Lg8RgcvMnZl/5v9n5nJQVnCxFS2tiyiRim5CIJmxpHtET+VuZhgckHyX+LgXuHfe/z+PS1nHJQRN7WX5KKKDx/WkG2itx7WtLLGs2O/LkdKDW+Pp8VNwQ5wDRcEQuGJUdJ0UH5YegGNQT1Kx5bHfA0m4zZTYW6M7iaf26ztMDXU76yP7UaF2HFJgkzfC99Et5o3YWHYi19dxxd1LDsPPjOHcT4Ff2mKH6ERn4/aaYK3YIiP1EXIUzLLWSt8KN1B1sFmuhQ0GkX7Ez7WdYb8SY9pu4Tot4vkmsjq0UrCcXMWJXKV9GU6dkoIj5Cr5r/QOESLfJr+HtpEDaJ6BM/6p/Z0dcBfat+EGq4EZyxfEWO4k/xG9mXzpLbVq8YBWTzXLpWkD+k2uiMzFf+wo1/PNuFSoriJSex45HdtFN4A4P8z3An/HYnwFYWMAtToJTD6lCT5ynvod/wRyzRIlbD3W0Zj9iTHHqKXbnNXCPjERSdmXrSCYoBa6OeCaNF3sBAW24y40hzpzxX7uPNwoNMFqe3os072KJHmCcNto9LfrK9UlZLqIUy/Zzdqv7tNuKsrkNXTNuBAYkcagmXC2MRld08/xt7zxzFg5rFdbmbxOZod58WXCOMf4Yb3C9km99ADaDGcz0P4+Ot5cSlYrVeZeY5BtFV6Hleg50A/fteokqKhUkRpkh3G3O5+8CLtxfZMo9zLH+RVKO/cPs8BPkRye0Y/BZ2N/cxe6llNqbG4X2rPDZVJDxxL+GmwhNdx0mOFNSu8nPtJrD4FUksVFiJr9qlnX+T/zDe6IfwJ6IvAZ50MHONu/0XszIdWfyNmo1szJTlKrjcX+6oBinDHHkYvKg94meBQuhrPQz+Rh46BdeegIfgoBVKRlRR53VlmaeDari8khmV7EXaW0+kPghrw4M8E+Y4yJ/yG6ORpUWLZX/Mrdo+4PvMAsoL/Ac81+8wmy3nmdDglk/HnhB/Ftu5RIwVCkkUq2+pxWJYH+GGyAQy5NutSXgQOXgXz3Hnk3mSyErJzOIvNS1kTppuUz50I//lBK5D4yquxx2l0ujnO9E7EY1S4S/l3+zpTDzDY6RwzzLDfG+pd5bhoOxg6tRluce6hNIA0O63XBPrSFKpsWQSes/M478N9okfK7VheuVRekHVT8CEjv4zxLdw7K9VlJ+GvvsvBXYwZXJuxG39AZ4o7ARqoZ349W8kvFAXTLSwKaMDNSKI9LK5YnoLg9K+U78Y522v8rPHKgJ7knkCef6nzImq/OcZeRZfCI/o7Syk3CBqyUDlhT8HaSZBc5a2kfPTNwVNGDj0Y56zc44l1w/uLcS75gWoiuj5IUoZwT9DpmuVVvf8A9y8eVArjeWeY9xtZ1svFTGe8z69T6aSdVCdZs7WZP4wpmjtUkCOIlUEO+BudAPw5ak1Ax43OPchH+Kf06KZeL3SfjK8hI9mv2xegrdBNzkzF5yrmgHaYA3Sf9ma/qijm3nHK0li5oK/ea3UryPB4XfIRxhTDeZcreHPsg5+hRGwVkoY2sZHKVmX5euW6ucMR4SHlN6N2zn+yDL6lT0U7uhKAEevTTRht3HvzCnQ1GmVZxj72ECHYBV7WzxfeMEIoxgc9jhfCOlS+XdPnS71oXYErERAOE5ZNQsn0vSORmWD43WRqUu2EK2RNcEyyTc0mPOc0pEAfNQb1PqRSKuXV2MXcbnYXPq6msZBV6IsgTl+MZUn1gvn5W7JcD6i7yCqigiyhKGATbKF7pAfsCQ6Qdp9k1/Pa9KcJe+T/wh0Nrwuvhp2aTWYbua3spfMw5Q9VSVXidOY+Npw/iRWIhnojy9BJrjfZl9vWp0dhxrd4uJsPuKBaJ31vQ3mRfwTtIvbDIejzQQOaRi94wCVmjzAYryo4aD5BS709CglxNkjpCZNA41PkWyQQVkRFxstxoPph1N308GnJG9RK7MYMi/wez55ej"}, {"__id__": "chunk-2aa064e33598187152b3f5eb4b73c4ce", "__created_at__": 1760497811, "content": "a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`);\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendBch()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}\n\n// Get the balance in BCH of a BCH address.\nasync function getBCHBalance (addr, verbose) {\n  try {\n    const result = await bchjs.Electrumx.balance(addr)\n\n    if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ', err)\n    console.log(`addr: ${addr}`)\n    throw err\n  }\n}\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(\n      thisUtxo.tx_hash,\n      thisUtxo.tx_pos\n    )\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}\n```", "full_doc_id": "doc-6119e447592cee6445ecec48b6ae53ae", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat012.md", "vector": "eJwN0wt3FNUBAGAMRFFCCXmYx252Z2bnce/s7MaKOSmPgxIrhGZBEm1BAyiREgqphWpoLBU9Hk2gwkkayGaz7G5mdu6duXdmdiEgqDxEQCoaxUA0UBR7ohELNloNhIIE2+8/fPmBpoAr9RWd7RecdnUUDvvDGrX6QYViJ7cJM2kZbEEeuTAv1lVkdrpq+DfQ7zxnzFeU1WREa3avivaDlPvn9ik4Kubk38c7ao04wtTRe6WoeNQOlS5QyhUxvSPrMh9kB4WrECiTjd+Si0KxcSPwCjwsLAy45TI9y+6DMjmB6uSD8Q52A7iaSsu1aBOjkttAWsqPaf4biAH/js/CMf26mRMoAy6SKR+CPXQjXD6un30vpUz6u306GTf/aF3hCmC+q5TpoA95t5AqXKvus2apZ8E5+A2zlnDyX+ludRs9U3StpFNclj3E16Ne/KnZ7g0BQWzwrxUet1ejfm5M/RrmGmzySdfbsMAY4nv1Wm1/V4v7XxEB3EaWJI9hy/0RPzPBd3b5FFhprpTrJv+YXuxq59cIo7AiNcFpgG79S7AYBpV+7wv+g6TBv8h6WC5VGmOt9JZ8U8oQc/TtQjh+vfsk5a1VdD04S56A4/A+NqSHwS7uSSeHbcbtQLA+6vjOdw13hv8iqMZVthrM1dd3z/e3s91kTHhNOKoc5U+ixqLrxnKzB1diHkwHy1EKpP0m2MLcIe9FZ0CIxNSnKUr8ExHtfrNHWaCfLchUnmLyfetxaxGrtZEusk4uNv/r3xXrdbrtF/EaZ4XTaMaMNH970ens4thFQ5afVd8xXyqxLAiuWK8CL3NQYshn+JivCFUnfeAY/0tR6G6F78IuBJKLyH26Y7wlj/kGyG7u+y1L0DnwHKpC/8DLmOJCmYxTvge3mGql3LqmF5JH8bvmnxDVJ0b/JrxIs6UH4DO8oYwZvY5j7ZAe235Ame4b1Zq4CjViN+Byg0EzyWX/BLLHswDsN0+aH5eMYo6Zpa/DSzw3vfN8IX8HGja/1INywJgvLKQxuskTES+B59V667i9GQ8IrWaWcqQkFkjE5iRmUq+Qa11KJLhY9za6XxqPepkDaIE9mc9Qf2K+ICtoqCvL1QIfhH38NH0z3INc/PyAFZ+Dq1iv8FiA9fbImt0EBoqb8+elxmBtpIrOYDbCJ7y7kxWRCraZPa6FQKm4unAtEZRLgDXOxz/U5nJzofuOUOL3+H7yUvje5BTwrEnd6e469RD/I/ux1AO+o3mmBefxauI99wbutc1AaUjf5A8pcrQR3MP3kS3gSGTQf8GehFpNnu7Wfi3djZvwMs+pnadhOtCuf0u3ug+YNeR9jyBkcg8Kor8NpzoywMvoMNbNU901TKn6mdaDFisG6CU/8w/yayzOm8HvxZIw3tpo35jquCbYjDij/R2pktzumYM2kI1gs10v+hN1Ugt3Akz0/oLOlo/Ti9YgvFPuI0JhgTIFv2qUwAr7D86AmZnchWPRSF5JpDEHg5VUtlbBuTAn2OcOpBA+CB4ShgSJe9u9yejCn6MZYJp0iVtRtNT9IXlAG5Zm0B3iUTPqe46eSqTIhWTSjDlvouFUOI8P3zAPRD8Xc9V6T5Z+Qv2pZCE3Slawn/Lt2j3BuJGIlZgDdJG5jqvvel38MwmRVv1rbaJ0rGNIeYps1dukEPcDfhwg67T8AXMYZZtPw2q70jeFnxrMFnOt88HfBFz+H8id+PXu+co3qctMOboAJ9FrOAoYWXbnU6/3euKu9ErxQvQZZ3ZsBNQlV07dy3UmI/iczkueyRn8IZAZG++Uh3eaQfyIw/qG5SznSHyCdII2o7D8CPuBsYf9Dxhxj+zIVe8iLySmkSHxirBcynWm+/Lgvp3v/39EG96Qu51tIp9ke+gVe5tTu/W8r4rGjU9IHY4Zz4vZ2hcFX+Fas8xpM5rRt1MjJGyc8S0Veoyl/CAss38ltJBlfDU4jEbEIhEzlcFawCYFfBLUJNcabqppt4z/Afz+q9s="}, {"__id__": "chunk-8a140633bb388307dce2feec42bb7c82", "__created_at__": 1760499466, "content": "# Block height from a TXID\n\nIn the chat example below, you are the 'agent'.\n\nuser:\n\nUsing minimal-slp-wallet, how can I determine the time when a transaction was broadcasted?\n\nagent:\n\nThis is the get-tx-data.js example from [psf-js-examples](https://github.com/Permissionless-Software-Foundation/psf-js-examples) JavaScript examples repository:\n\n```javascript\n/*\n  This example retrieves verbose details about a transaction, given the\n  transaction ID (TXID).\n*/\n\n// CUSTOMIZE THESE GLOBAL VARIABLES FOR YOUR USE\nconst TXID = 'b4ad5678644f889d4ae6145e1f56a0a1abde3efbafc800c445656a4508642754'\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\n// const walletData = require('../create-wallet/wallet.json')\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(undefined, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.walletInfoPromise\n\n    const txData = await wallet.getTxData([TXID])\n    console.log(`transaction details: ${JSON.stringify(txData, null, 2)}`)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()\n```\n\nThis program will output the following TX data:\n\n```\ntransaction details: [\n  {\n    \"txid\": \"b4ad5678644f889d4ae6145e1f56a0a1abde3efbafc800c445656a4508642754\",\n    \"hash\": \"b4ad5678644f889d4ae6145e1f56a0a1abde3efbafc800c445656a4508642754\",\n    \"version\": 2,\n    \"size\": 300,\n    \"locktime\": 0,\n    \"vin\": [\n      {\n        \"txid\": \"bb90777831711a9c364246825a33888ae1a65f5659c318c3b581a3ed5916c7f2\",\n        \"vout\": 2,\n        \"scriptSig\": {\n          \"asm\": \"304402205e83902327740b3c1c4f721ec88b658716363cef5f58dfdb876a2dd69d5b3c88022060e5f3488d5d4b080476f59abb5d2d1aa1333431bdbc9ae4e61fecd1db2a0b8e[ALL|FORKID] 02103affa00344d72880ea30db0c7e0b5f2104972d0119dab7dca7e7581d472a32\",\n          \"hex\": \"47304402205e83902327740b3c1c4f721ec88b658716363cef5f58dfdb876a2dd69d5b3c88022060e5f3488d5d4b080476f59abb5d2d1aa1333431bdbc9ae4e61fecd1db2a0b8e412102103affa00344d72880ea30db0c7e0b5f2104972d0119dab7dca7e7581d472a32\"\n        },\n        \"sequence\": 4294967295,\n        \"address\": \"bitcoincash:qpcuphgf32sur7xca5y95thkl7g776380v88pk9lhv\",\n        \"value\": 0.0030073\n      }\n    ],\n    \"vout\": [\n      {\n        \"value\": 0,\n        \"n\": 0,\n        \"scriptPubKey\": {\n          \"asm\": \"OP_RETURN 7b226d6461223a22626974636f696e636173683a717a6363643563686a336b7175786a67396172663761676c77616d6b7a7a733573796632743576683038227d\",\n          \"hex\": \"6a407b226d6461223a22626974636f696e636173683a717a6363643563686a336b7175786a67396172663761676c77616d6b7a7a733573796632743576683038227d\",\n          \"type\": \"nulldata\"\n        }\n      },\n      {\n        \"value\": 0.00000546,\n        \"n\": 1,\n        \"scriptPubKey\": {\n          \"asm\": \"OP_DUP OP_HASH160 b186d317946c0e1a482f469f751f7777610a1481 OP_EQUALVERIFY OP_CHECKSIG\",\n          \"hex\": \"76a914b186d317946c0e1a482f469f751f7777610a148188ac\",\n          \"reqSigs\": 1,\n          \"type\": \"pubkeyhash\",\n          \"addresses\": [\n            \"bitcoincash:qzccd5chj3kquxjg9arf7aglwamkzzs5syf2t5vh08\"\n          ]\n        }\n      },\n      {\n        \"value", "full_doc_id": "doc-45b0f67b282c1a20ccd83ad49b7d4466", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat013.md", "vector": "eJwN1AtXFFUAAGAzBSxUEgjc98zcuffO7CykmBxEUlFQMcn3OdKSB7NSw4MkgRwytKSMJFRAIdZ9zuPe2VkqhKNm+UDFwh5mWGpmpqZ18kFpVpRQP+L76tE28U/i1Yak9tNS8wXkFLLpLP0T1zrp8UAtiiNRZEOYd5XYJsBygoRZmkV1631MlDNgbEh+GdwUT6D8WBge7iui19nVptPosYBI7mAkutVX5XI1R7yLM0m109aWDeO9k6W+uArdjQONA6ZTqADeab2I6539Qpp/CR/W/kw+LA0d29J8Ex5oexjX88f1bslDF5BY9T7owA1anreaNik3yC0pkfUK00iDHhOAtrZRP+Ln5DouNlwsnyUXyNv4qFTF9sAK/Jg60VibdEVxGRWOdi61pUbuVLYnxSSL6rfa6vo+mEPakInPgfG29+Tf5LnkCr4mmDy3uHyjnd3UIsGkwCTdxj0pzQjXwcXQA4vxLBcr3TOPwKu0WjBNyGtZZ/ZJ40CRmKx+Dna3SsYuftD3tDfCj9KDO2dSH3kf7nGcAZewxRNPB2ChWhgs52v9/XS0y40WKrnGVss3shqY3LxJmU37BDdsEOSEH/ilbIkwXUg01sD1MpPAhY9ZFzv2xjF6l33H7hpllSesdD6Si48hh1ZNLtpW4B7ndGOn6uQq8ecEGUH0oGWflo4H2Xt4M10Fm+g88XZ4qz0rtCLAhpcTEf5hmsaMlOpgtKfcUamblJuO23JOcJ2ywT8EJwUf0H9Vvm5DXHJj4NH78izpEqvAn5gy4yuQkHLw3bPORyNp1hijwzyGnRNcyd8lZ+SscDfMEqL0CmGif4rtqjAUDoo9bBYpA8N3bxXySDLoViv8hv6INDWuL3mjOiPQvM2NU0NN/i4yyVitFSsnlUw+X+zHk9iHgDt003IIXm58HYueQX1Ao/GF1s2wX3CKtU1Zwii92YbAK7rN2BIoUqrofVxv6aEn4ErSro83X1RsAvB1gttidbBGOobH+db7f9a2MsvUYapFOuzzaNfUzeEttM37OuyG8aROyYxs5PaBPDFKH4+k8Bq+Rn4IO4QvwWT6gdLWKupjgt10I6mFe3CVeJebjmdwZ4HX0GzD4S4txfECRq5m1wLfO2isMtH0XGIlSqSjpXRSHNqBx6M0mKqNEO6CEud+vt1+DmNxCowSDzLDlE5vvn8Yk86McG3hz3tj4BNymF8L3JGLOyoThrOvCaOllexXQFFiSDQ7N3huzE6ULhaIZbvzDDe/s7kK1lmAEO0/gtKA2TlPP00LAi3Ncy17wXyyjC7irwNJPABVlGDZRr4hQ5QCcDVkRTfUN6QOPUvu5YrwxohNH5Aj2rf0TjjEfyY3gFiSTIj1ee0aU+fPMTIdxZFq4/7Yq9yzejwXYgrsh0GSL9X3d2BJ8/eRQtwhzpYWkhNyOfllV6fcG3yRF6VsSIzltuzW+ZEN8ncSQw0yEZYGOwi1nkfXmVNJqi+TvKNX6v18EV7lXaaNoEKwRTsGfORLxsf00mjypn2/lIGeUPdra8houka8YCuEcwgXl+J/ABXBTWK2Pk7+mAT0hfx2MlVIIS/JMdxv/2+T6y3DpVK8/vf/Ajps+c5cshRlgj2oxH9e3hV4xr4o/K82D48H/4QytAOOBf55jiyjjjEZGXyV2gs2S1O0VJDiKNWfhqfkcucmtpF0OctSJsAqOl/YYzSYLikPW5/32YWh5JkIdpxwVbdmqL9rv4ManbUPOpZ54pvM0jC5n/8IFDNLGCtvtR98Nyk4GZ6Uk7xWtoc28FQMeOeiAWWvdpQc0c6EqC/FEoudwnL+uNiqHLJ+intAL+kS9uJD6kLDg8/ZupV0NcJ+aL6BGqWZWhc6qixVn5LL5WjHKWWosSD4hRknZkjPaqtRifI1eMuYpB32vgGzSTs325+m/xVpcOHWRUof7zZyuSKUoFxgx9FS/2VR9h/gR5KpeNBxMDiHnqYJ3v8AZ2aRnw=="}, {"__id__": "chunk-3dfd731aca43f78c3c8abab946e89299", "__created_at__": 1760499466, "content": "\"hex\": \"76a914b186d317946c0e1a482f469f751f7777610a148188ac\",\n          \"reqSigs\": 1,\n          \"type\": \"pubkeyhash\",\n          \"addresses\": [\n            \"bitcoincash:qzccd5chj3kquxjg9arf7aglwamkzzs5syf2t5vh08\"\n          ]\n        }\n      },\n      {\n        \"value\": 0.00299634,\n        \"n\": 2,\n        \"scriptPubKey\": {\n          \"asm\": \"OP_DUP OP_HASH160 71c0dd098aa1c1f8d8ed085a2ef6ff91ef6a277b OP_EQUALVERIFY OP_CHECKSIG\",\n          \"hex\": \"76a91471c0dd098aa1c1f8d8ed085a2ef6ff91ef6a277b88ac\",\n          \"reqSigs\": 1,\n          \"type\": \"pubkeyhash\",\n          \"addresses\": [\n            \"bitcoincash:qpcuphgf32sur7xca5y95thkl7g776380v88pk9lhv\"\n          ]\n        }\n      }\n    ],\n    \"hex\": \"0200000001f2c71659eda381b5c318c359565fa6e18a88335a824642369c1a7131787790bb020000006a47304402205e83902327740b3c1c4f721ec88b658716363cef5f58dfdb876a2dd69d5b3c88022060e5f3488d5d4b080476f59abb5d2d1aa1333431bdbc9ae4e61fecd1db2a0b8e412102103affa00344d72880ea30db0c7e0b5f2104972d0119dab7dca7e7581d472a32ffffffff030000000000000000426a407b226d6461223a22626974636f696e636173683a717a6363643563686a336b7175786a67396172663761676c77616d6b7a7a733573796632743576683038227d22020000000000001976a914b186d317946c0e1a482f469f751f7777610a148188ac72920400000000001976a91471c0dd098aa1c1f8d8ed085a2ef6ff91ef6a277b88ac00000000\",\n    \"blockhash\": \"000000000000000002566f353a7c6832f429955d6285c8e5cbdb1c4713714734\",\n    \"confirmations\": 129525,\n    \"time\": 1675532168,\n    \"blocktime\": 1675532168,\n    \"height\": 778454,\n    \"isValidSlp\": false\n  }\n]\n```\n\nThe transaction was confirmed in bock `778454`.\n\nNote the following properties:\n- `blocktime`: The timestamp from the **block header** in which the transaction was included. This is **always present for confirmed transactions**.\n- `time`: When using RPC methods like `getrawtransaction` with `verbose=true`, this typically refers to **the same block time** as blocktime for confirmed transactions. However, if a transaction is still in the mempool (i.e., not yet mined), `time` refers to **when it entered the mempool**, and blocktime will be absent or null.\n\nKeep in mind, that Bitcoin is a decentralized network, so the nodes on the network can not be synced perfectly with time. Block height is used as a replacement for time in the Bitcoin system. \n\n```javascript\nconst timestamp = new Date(1675532168 * 1000)\nconsole.log('timestamp: ', timestamp)\n// timestamp:  2023-02-04T17:36:08.000Z\n```", "full_doc_id": "doc-45b0f67b282c1a20ccd83ad49b7d4466", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/chat-logs/chat013.md", "vector": "eJwFwQ9QFOUCAPDXPMxUrKRTuOPudm9vv2+/b3cPKfHPvHnmX8JXmYIYJl2GYFnUoKWJ+nqhklq88aaOAznuYG9v/3zf3p5g0GhWZlqSGpaDlBOSjqZZYUK9RjN13u93BtT59ncW2jlgLLmNnbQVricue1necbk4MZd7iDqR3DSYawSGxcdTHalGs7dtMfiZH4/DJJuriQ5LvyeN1otZ+Ua3dsY8qu+xhuWQ989JwcRpocH9oHQY9Ynb7QlKl3ts/ABXmdchn/DfBBhnwV2T5wEO1ckOuSHJEY80zXhNeZOPev/W1iZ8ol1kjzR79bnGdLyuboALc0P6gNSnbzd8PibGTz6rrm1bKZbxC6zrcDkIwtNOh3+m1UOPaxtArxqf8AL12Cv0jtRV8iV73P+imdEQxcuka+8+ZqnJJYZmfD3xJ/k82Zb0eLtjWeFb+ln6tnBTkUXgf1m8wWWrX3O7wAyQ1hD9TH+BXLO2WvVadeOs7HrvO0o/dGnPxNPR7vioti0wIB1gVrdHqaCPmJr9gHJR6HeGWjeRp9Quawl1eufl9LC3taP8CXIfyNrzqcCI2DeKzEJ3Wn/y1lqCo954znK651hP0LVSBFoCULa2hNRV7qrWoDZNXt6+DZ2ksz134WH0T1vUrpNuNj8xlQmxNLDTL5JzaLk2LBdRhtL2SrOweZw5XWumq7wLgCdvMfeFnA86eAzHi8XOtdxjao0abFpIb9HPsR1lEneSb8F7uY16cZaLKaFd2irYkx2UNutDyqn0NnMk3sQMxvaiO9m5qBrdb13XRvg/zA5qCEGSl3o6nCMeish4UEknW8SpVNNfgfeQErkjMYUJS93CG3x5eiV4Ft0X+EBcm/ORDoUL7TtRmX6RK8P/oDewbDkaS4WXpWY4Xj/ifKl9a+pe37eZJ/jH1f967rZ7xO9aTuXOBLV0hjE7EUIl2uXY29LYSVN29vv66WH3RjVqZmbNhEOo0FoIc2i1I4P/Deeyc8RnzFOGwN0vXQ3MV74wRke2cD/AKsmVON1c6p4PdrBhcdD4LnXH+LFRgIXSQX2c71fjDOqxHfi5tiv8RnsJ6sUIb4TrpN1yBNfxl/W5+sLEZkP2NuijXVn4Q91hfYwnmnPEGJpFztFHUaZYGpgIqvgi/bKnRjrqnEcWgS9jj3geis0i5WRl+H1QGujL4ckRcA0f9v2FDkol+N+p37gDeoEwhAPwDz2j8YZvAzs/toZzeHhQZO/0V0dDXCmoMfrFZSmG/pAQzSCqJYVoh/w8dY15UeiMd7IhfCiySaiV9vPQUUH+Q1bQSZ7nQTGooApOJ3ohNF8Vozm7TNPcoxn8m+5LyS6/W7wS6dIn67cTxem5Vq+1WrhJnc6fjQ/R0/6T1nhZal9jO9glistvw1QkRM7wKmHs332vm3tNm83MLicVaiU/SIPSBTCbGXJcQU56NunGPvt/dIyYBUdb42TFKG6tVL7iYaKMTGfnWEt90/zzxTr0JGriF9lhI81/kLjCzRQK0kH3mJxHzUXxtIly15A6tpa0spfMgPSJVkAHlA3qg0qZvyu1QQPZ67kivTP2eeozopjFVoQUGq9Dg3ZuYSSX/hJYICTNqeg8LLWu4pZmd6pI5tlj5sOkwoyCpfh77ZarXnMAXh2V/iu5nlTxTEefbzrNFC7wVVikb0EiWjS5exOzIIFIRJoc+Beb2zaQ9xF6GPXjX8RD6ohanniHBvh+cpg5SgLKPtji32HUObBRkh7QymGmsNg4AerFKer36Lz5SnQ2LIKrfcesCUJESGrLmXf1TvtPTxXYR6z4JMkZavQpVoVloEFtPf47OqZNVM9RUX8EbE6bvtK2NNjb9B5Q4bf4kglpvv6jb5E2otbSzD0n9Qx6EFdOaHCv07fj0cy52BuB/lgNnmGGlW9SBdrN1D5w1VrJPmv0pfaTfLFLe4AcYKYm3kv9Erf9K5DCZbCn5KHkbrkAx/lqkqcvpS2kNvZ/AmKhkg=="}, {"__id__": "chunk-aaa9dd008d1ae08483ecbcf8975feaa1", "__created_at__": 1760497883, "content": "**Addresses in bch-js**\n\n`bch-js` provides tools for handling Bitcoin Cash addresses, which are essential for receiving and sending funds.\n\n**Key Functions**\n\n* **`detectAddressType(address)`**:  This function analyzes an address and determines its type (e.g., legacy, Cash Address).\n\n    ```javascript\n    // cashaddr with prefix\n    bchjs.Address.detectAddressType('bitcoincash:qqfx3wcg8ts09mt5l3zey06wenapyfqq2qrcyj5x0s');\n\n    // cashaddr no prefix\n    bchjs.Address.detectAddressType('qqfx3wcg8ts09mt5l3zey06wenapyfqq2qrcyj5x0s');\n\n    // legacy\n    bchjs.Address.detectAddressType('1NoYQso5UF6XqC4NbjKAp2EnjJ59yLNn74');\n\n    // cashaddr testnet\n    bchjs.Address.detectAddressType('bchtest:qph2v4mkxjgdqgmlyjx6njmey0ftrxlnggt9t0a6zy');\n\n    // cashaddr testnet w/ no prefix\n    bchjs.Address.detectAddressType('qph2v4mkxjgdqgmlyjx6njmey0ftrxlnggt9t0a6zy');\n\n    // legacy testnet\n    bchjs.Address.detectAddressType('mqc1tmwY2368LLGktnePzEyPAsgADxbksi');\n    ```\n* **`fromXPub(xpub, path = '0/0')`**:  For working with HD (Hierarchical Deterministic) wallets, this function generates addresses from an extended public key (xpub) and derivation path.\n\n    ```javascript\n    let xpub = 'xpub6DF8uhdarytz3mWprhTwu569b3u1XL56ZWV52sAYrDWKxqx7wb2D8RjFKvCo9jn4VtTzuJZaunCuuk2SR5eTVn2h4hB5YGhk3sY7KUF5fzL';\n    let address = bchjs.Address.fromXPub(xpub, \"0/1\");\n    console.log(address)\n    ```\n* **`fromOutputScript(scriptPubKey, network = 'mainnet')`**:  This function derives a Bitcoin Cash address from a scriptPubKey.\n\n    ```javascript\n    let scriptPubKey = \"76a91412ab496c949766e92621a3611b8644c77df2547588ac\"\n    let address = bchjs.Address.fromOutputScript(scriptPubKey)\n    console.log(address)\n    ```\n\n**Address Formats**\n\n`bch-js` handles both the older \"legacy\" address format and the newer Cash Address format, which is the preferred format for Bitcoin Cash.", "full_doc_id": "doc-aaa9dd008d1ae08483ecbcf8975feaa1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/address-formats.md", "vector": "eJwNzAt3FNUBAGANAY2m1EAeu2Q3u7N75869M5M9FqSS1wGJD4hoqBgbIIoIYrEECQ9PQgOHpueER0xCEoHd7Gt2587MvTOziRzUQFHgFE+IhWB4gzy0oaYHrEBVbJFQ2u8HfPuE5Tumprp62riG1HRQh3WcmXrBHi/PLbytbkKNdoqOJJZLITnke8Lc7qin83CWmQDr0eu6Ej2MID8DhkEfzabjdrxoHDKve+WCb1zDxtPBD3CR/kthEfogMEw3JiZbXe7nUBSfF0bJSuG0c6z2VuAFORc2yXXyWVihDoKZ5kesBg6DX3sC4IBRTC6RKbqfX4YW6LPoPmFCan5hC7+5+z8koEyWVXUDWc3nid32EfT49k/QgP71ritWi72aL9ccNIJq4w5/ytOlTmJjvElxK9es1k0qEv8Al+ph4RW1iHXCZrdEXuf/SWazRukZMpRw+mNQBg/Kvf5/0+l2EP+JrxGP6WlsCT2aUWF/rd0JjvPew5X5s/U2/ofkYHJNMN3LeXtxR+ApvDWxMRLEWxKu3sz3Z6L9KgeW663GLCvTOIIa9O+xSzyIA/pi51BqE38cjcPdHhmtcre7nrczyKg7ree5+FtmjXXQ8bOPK1yh9Pu6hU43QOfYh94NxI8yaXRXqWTkTLUbYH8yTz0M9gZHrTAozpqunRN18qH4Ni7VjqC78VLuQfsl+h4xvJXOx+S93hypATq4dTSKxiXvwCGlPr6C3jJ3GruFb5MqucR/RXoL+nWEziZXs9mhpngh2SmeISe0aVY33R1TgLzjs5xtuEP5xr0TFBst+IDnjv4b8Sd60ShlVaDdmO4W6WnfSPdEKww/whJdLNVH3uBy0VUkBL3mo3ABfxv2o7sFTClT6jQFDdKljqX+6v9PRywN1YjdQoP8iPIY+UJfyB0m49GPfCp0jrtFvyAnwTS+BhVqIXZB30c+9h8DSXlNwJ1Vl8dZi+KNBa/G9moX/D/FvjTKyBj0jr9cOau8QaPpLqUajYCXvS3So8aA8m78OymjoC1+n660Xo0GcIk3gBEtty77znv6hVOcZmTxJ8mB7C72fWJNciM6ChuYSiwUTmZhga8Ba2lIfwXXs0arCwQ6q+R/oG2gmL0ndJtXpDyhI3ydjIgPCypi4lLcadTDvyFR2Kxki3HU0nID3xMGSL37Jfy8NAqeoHd9uWYj+wxdEivkfawpNp+WwJtwAOUaTyvzHOm+KvU7sC56Wwx5ekMnaZWUTKTDMdw1VgGahGvRsbIz+a2YIzrZVRgpzNTO85/jY2osPKwO4VErqq2KjZjUKAK5+lCiFrjjGfJD+JH4IDirbbDnsr/7MsEJlIrMwK1sj/A2mKrPsJBRwUr4Lawp8gv2AF8pF7G/8v+FGfYpiP0tpldcSxfa7TgvwXpSsMvVrN4FtfCP3qO6t3O9PVYuIfvRXriZS4+V+aLwTfMA18ffT5SbU5APtVrt28ol3jxmj/E8oL7Zdi30pFAHXxN+kGxrgfLjrv1+iA4Ju3vWs9x4PoZczBjrvBG5pxn6Oumyeyd615gfa0w0OLxCNe2hlu8yqmSVxm/RaTis7iFGT7XeFx3ffsbxqbFs4pIuId/lO22scE3OdVvHPQPgKdIpfhUJw4XWk6lBvVrNplXJl0mbtgVujZWhqDlHnNlby963g/7OnHYkmJNgrfSpvcl/U+QjotEXKi3szQbaisAl1AGb2X3xE30xukdlsk7vA3O162yl5ypGqIu0BJeTVmuBcdFZHPyLY5oQSSR5TVxkFkc38+cmyb4bLN8HPNnankRbPmPhCVPUGcLv1VbpkLdYvR88QSYUXkieEorQLbgEdLDJ6ipBsudH+aQ2sVGfIwvcVKlV+9hwO4qcZeAm10wqtBL9d1YKLtLnWbf0Z1mlckH7Ei/UjgbTrAx6yJqlp1lp4p/VOdzP8FdawHoGYdTpX4Zd5lr6ji+f/ct5Jbrdcxwvphc90zwHcVkyZo3Yj7Mz6v8AL96i/g=="}, {"__id__": "chunk-2024b3c3abcbf2b719317d3c258fbf1a", "__created_at__": 1760499466, "content": "**Blockchain Interactions with bch-js**\n\nThe `Blockchain` module in `bch-js` provides functions to interact with the Bitcoin Cash blockchain, allowing you to retrieve information about blocks, transactions, and UTXOs.\n\n**Accessing Blockchain Data**\n\nBeing able to query the blockchain programmatically is crucial for building applications that need to verify transactions, check balances, or explore the history of the chain.\n\n**Key Functions**\n\n* **`getBlockchainInfo()`**: Retrieves general information about the blockchain, such as the current block height, difficulty, and chain.\n* **`getBestBlockHash()`**: Gets the hash of the current highest block (the tip of the chain).\n* **`getBlock(hash, verbosity = 1)`**: Retrieves information about a specific block, given its hash. The `verbosity` level controls how much detail is returned.\n* **`getBlockCount()`**: Gets the total number of blocks in the chain.\n* **`getBlockHash(blockHeight)`**: Gets the hash of a block at a specific height.\n* **`getChainTips()`**: Provides information about the current chain tips.\n* **`getMempoolInfo()`**: Retrieves statistics about the transactions currently in the memory pool.\n* **`getMempoolContents()`**: Lists the transaction IDs of transactions in the memory pool.\n* **`getRawMempool(verbose = false)`**: Gets the raw transaction IDs from the memory pool. If `verbose` is true, returns complete transaction data.\n* **`getTxOut(txid, vout, include_mempool = true)`**: Retrieves information about a specific transaction output (UTXO).\n* **`getTxOutProof(txids, blockhash)`**: Generates a Merkle proof that a transaction is included in a block.\n* **`verifyTxOutProof(proof)`**: Verifies a Merkle proof.\n\n**Example Use Cases**\n\n* A wallet application might use `getBlockchainInfo()` to display the current block height and network status.\n* A block explorer would use many of these functions to provide users with detailed information about blocks and transactions.", "full_doc_id": "doc-2024b3c3abcbf2b719317d3c258fbf1a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/blockchain.md", "vector": "eJwNxn1UFVUCAHAisBRhAx/w4H3Nm5k7c+/MPFYlUyOl3fTongq1UlA4iXhc2SVF0do17Vgulr6TRwkFHu/xePPmzsydOwMqmbrRp3k8unpEUtv1My3DvpRjROjSuru/v34WmBFq2LeGupTvnUY4k/uakXEPaRMGFTe4DWtopSE7bmGa1tR+Rh1gymGPZ5O4TOilBWaOlGrURxUyL/knanEVwrfBBnc00YdmFb7Y1U4hOBBIkX8SR5QR5yShgWZlhfL3ULU/hHZ6qqUDdhiVSLJUI7LSPtBkfiw+ErygbkSjWjG4Jc/lbH6P/BYJMxeVTnTez8GqYBUsFnXrtL0arlEmClHlvIzQha4x8g3XRx0rDA5+SmbbfeIKoRLWRPYnb7UsNevU68aoD7lPwAd9R1VJLsOXvXPlozhV/wVmB0dRS47PGqNzsZXOiDkepnYe9mnKQNE2u5uZx0/y5qB70ZgRBmWBLOtzMJXsbynR+miquIRIeYvRDOOF/LF6MyziBfGB5G+7GoV/Oae6F4gH2Q7Uh7eT+sKv+IDwN96OlSvLwRshRP7te88aUB5C9+PDdBAKzoB6xLZbn42sJzsbR3HIWsa3eI6hzbjcWu5bGfwOVlvpiHScFDf6t+r56C3q1npiZeYVWJ2LWkLWnmAxCDuH/BbfL39JP6OfaAtov7+FHLIq4EWkqg3CUjYTpQGDf8BMFRX9/zGfs84ldllD8alKnuXsrpfqhAr+NX1nRzh6BrbSnS3/tHhYaYT5N5w08rtIdds9dQPznXoWDnM3zWG8HH+Z8Uf9NXDHmBEB5BZvt18WnmF+ABCMN3rVHI8dGPCVGtd8v0rn+GlgrL3XX+XmQn2SRqZHa8UCsrtwPXxam8Nspze5Lc462SXPlMfx87UJYBYmJGa6pPzIRlzKB7VocnWyAcvgaa3ROo2mi+XC4bjGXJFZo4nodFN8PHnUYdsm+S4lz5Hb0c2Ri+wi5NV1pQAXx5d4vohN5gV0mZhkCFUJG8B+z1cEK58k3hR58USuwWZ2P2Y9rI/l3ha34HWhHWpjQKNdiVLMcQl4Vjvlnk8uJXPwXe8k9kXgbc9DH9hrnLD2c+dZ39wdw2y20y/QjpLgIITGoFXR3ox+Vt7VNgmmOhK/7HNpteYNbzfHsE/yZZ5TTKc1E9XAV+gT5iD5r+dNsYadJ4ebA8bz2iSjNbkIGoUz+BLaj1IyZmv94EPwBbph30dZ5ipUApcCHH+e9hrV1kLmoLil8x4DQq7uyfg2zPF1JV4X9zJr0axoJHc5/ij2BzLfytSWwb36r+aWvHe5FHgMiYwneIlWdAPD9/b1YHj3NjldqtEO41d9kzvXOtnONXyJ1pmp+EFnunAEbrX/E6kG260UAEiBYIq5ZC1eBb5hl0S+gadI5fY7fJ+5i6Shp8DdjmYhO/gPye1/VXyOFOMqcYqTosdhKyq3lslz6GLI6CfaTlt3WrKBoWO9SJwgVMD58AehkpbiLnmxnCV9Sxxnlzfd3AZ/b2QkzzQFwfVEhjUnsFmugZ9yfeZnbffNK7jfSuentG3wTcd2xw58jzyOs8hEkpL/I8kVnqVb4RilXnwS9fp7aHpiNpqHz6kx1GDtVdZrhmnSCUJtYqwYtQfYId9isc7uMQ2pIZmhLNRfIePoM2x9ck/gL56P0QH/EacpwXEnxC7nOOgNZQevgnFFX0sViQLrKfMJuw5epIfsHj1Dy0yMt5J8Lcb0faapgFiN+vmmm8TtjbPT9EXBhX6Vuep6x+rIGuIN9Ff/zchEa8TIIfvo5+q05BjjqpjWfS22StkNN9E+usq1kmzjZycyDcPzMj4OloivU82fh/4MPlRfgvdVIB1v3eWseXid9IF6LLjSHLJ30Ef4o+ghdgpmMScm+DJmAdds/hRfrZL8k3atdsHMVIL2sNDGjeo3wG/AZumYvdablnhfPqgVkjPKO7wLR4smKmXKRrNMSMGl5C6dSuKB/wF/Ip0Q"}, {"__id__": "chunk-c81e7d16eea079614fbec9baa24ae23b", "__created_at__": 1760498429, "content": "**Blog Post 7: Exploring the Crypto Module in bch-js**\n\nThe `Crypto` module in `bch-js` provides cryptographic functions for working with Bitcoin Cash.\n\n**Cryptography in Bitcoin Cash**\n\nCryptography is the backbone of Bitcoin Cash, ensuring security through digital signatures, hashing, and random number generation.\n\n**Key Functions**\n\n* **`hash160(buffer)`**: Calculates the RIPEMD160 hash of the SHA256 hash of a buffer. This is used extensively in Bitcoin Cash addresses.\n* **`randomBytes(size)`**: Generates cryptographically strong pseudo-random data.\n\n**Importance**\n\nThe `Crypto` module provides the building blocks for secure key generation, address creation, and transaction signing.", "full_doc_id": "doc-c81e7d16eea079614fbec9baa24ae23b", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/crypto.md", "vector": "eJwN0v9XFVUCAHBLT+spVOiA4nvwZt7M3Jl7Z+ahS+GakHiINVYhjTy52maBuIBWWhl+WWnTkowv7qLAewHvvZl5d2bufOGBBpy0hDU5aenRwm9bbQtruaF1KpETpob1D3x++pRyxfKJrodcr5zYAREFkpsdl44PyoNoZ+TltKukTt/Kf809g7LwBF5NXFIpsziV28s0adltjzFxEvMC5p7Oy2anIPhumPmRJL5Wvhipw7R3DOlyEaNLa53R2UH2XqlQmC/noR14jH4Fb7WfmMtnzGmbkKbym5WctAi3kFDmcvSR/wXOG7lDwnyhMEQeZnO5bnoX+VSebI9KW1r2OItIr9YQKKO/Nfa31qBt9nfi8eig+pzOk3bnEqln1uBhswrsjASDZWotm6gM62v8/fg9egDsAUm4S6mXPieZVoffS4NgG1wavmw9C3pIQ3g7Ok12R78SC9DhlhDp4nerL6OimQ34yVg7/ZT7f22RssHM5PYqNLD54vAVfELh4CxjBS0EPhRaWB+1SKptT4uvRQkoH+bL8yxV7dY/sPrFSdoI8CgUf96uB/nORdZBU3h/uELOM0+nL4iXqwHhiOuQ+82jOAEu1sbls8YSvd9/NHyZWWGUiJfDP4F1xkncKufEFpoRfil7jqrjKHyc7k4dQUv0hMgxVUb73q62NnHzSC8ucC+QQMNh7Rxeh5b6HpZLxSPcIWUriuM73FXzGD9in/5Nq0RTk3JJX9P/GgMctA6B9eRCTAU/i2P4Z1RWm2+ft3dat9KXRd/Wd9AqOCCMC9foHGscFIUfdP/ArbQKHI+eExXJLrjR6mjm2W9SlgiT0+ekp4jdsS/5tfL3XBo327oI94AwSBS34D34CjOX3GLngrK239OZ5GnGQ5ahLjZFfEUq13bhU2Sq9qhViv4LM0gte0qnrJ+EUd4rstbnHatiF7hX+VUwBg4GXjQXMDdt2VzsG7cmGzP4i3wNtZi5q+mmlh0qTRhiT/ia/InsZ7AfVaFvQll6R/RZKdtOSd5gNJDBvYtREt/SPltf1dHte5Lz8wnGiO1Dv0teNf0d3RSe4pqpOU29JKreZ6c3vybeZeh8lfaY6WXrnML4pfBtbTLwiEHFJLnSbesWzAUvYI+yXVT9CJaG74GbiCMsg9uMAu/M2Fo+i00Xq+F5SxDfoM9AzlxOh+jobNEcwN4Mn9xiKcp10iPnyEVcqzPQ/B2aKhT+86ZwiJqQm8ijeh7uE8v51TETPh8/6a8GQbxRelEJodxAqfULdV14w9nCF1FeWOmZUCbEV/ndzN3KyeiFEIVW6pV4jZWpLZCO+R9BzxiqSez/8BWsJ3kIdqJFoY+1S6k9YoY7g7vq7COPkx+tFcIVWMsNwXX2xtAmI9WdH56ilZBC9AOGZg1dlZIdf0AsiRTMOMqVTKoEshnAb9kH5BFtO5qW8Zb/uH8L0wVHnT+3JME6vCDe2vpm9Hl9eeR9dEAbt7eFjt5brE8EN9M9KFGOIdWsInl6PXUFYoDdOue28hztMP0K9nxAuu0ffUeoXn4/SKAOMnmWiothj/kn3Jk+DVSkdql57HX2nFKtX3Nf08p8EtpqDxkbhPnB0Vk19Tta5nD1+gAeC5egaQ4r/739jD+BFJAKPDfWaK1ut5Q6433jX9Ez4Kq9Wap2/5b6kusF581OOK7/APukP7qzftuGuCwyBqNytjw/2RsYkAZBBe1wK01KmtcxaPzVTWn+cubrpmmF0N3sA+ZfxEJMWdMV2z+q3lKm43fNTFjDrbfe03tTP6Zej5UbjQDj7cq3howHTMSUO4KyGt8HoxIK0+SR9DMZXUYDo8MH4SR/QDP3d8FPyUIioGF8zSX8P9R9YmPkE3eYZDM3eGj06UHdJVP0d1tI46TY0/gh83vyid6PPGqxuDl2lr5h3WH6nHe4U+b6GHs/tpYQwO8A//bP4ndaGyJZxhHMc7WeZnA2IIbnwcOJw2kHFa/9hfOVmt/2K6lIqtQ="}, {"__id__": "chunk-7ae296588e4d186e81a20fe943794a30", "__created_at__": 1760500677, "content": "**DSProof with bch-js**\n\nThe `DSProof` module in `bch-js` deals with Double Spend Proofs, a mechanism to help prevent double-spending of Bitcoin Cash.\n\n**Preventing Double Spending**\n\nDouble spending occurs when someone tries to spend the same coins twice. Double Spend Proofs help detect and prevent this.\n\n**Key Concepts**\n\n* Double Spend Proof: Evidence that a double spend has occurred.\n\nThe `DSProof` module helps in the creation and validation of these proofs.", "full_doc_id": "doc-7ae296588e4d186e81a20fe943794a30", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/ds-proof.md", "vector": "eJwN0otbFVUCAPBlVSpR0zS5el/zOGfmzAMEWVMsdttUWjJ3y1SsJLNQMtss7LG72aZCqAlKxBZw7+XO88w5M/eipGEPs88M8bWiZmmLIp8PRFA/rTaFT3P39zf8eLVAvbDlAm2Q1CQj5TDLuLKNN5pOqUg6In4jLGNSSJ99H1oDFpHJeL/TSfYrtO48eFaqJz5uHViorYNfGIp3qy5PedKRnB1GFp+vfjjmMrWVQbAx43F2nvKWt1BIi7QKPwUWS1vD0ykJjSY76ILMerUiOFUdBs6ZwKxEY9FhizLNYi9MWJtqFjNZDTPQPOcl+CJ/3lotd9N/ZK5tTIXFbqFbiGLWaboQblULnHz0Al8zaJjbP3KVF7M/ZxcI47AntnArwQKjVvvATRdWWRtTzsBcIUcsxX/hAiFDw84pZp3YgOej9xIa9500h2zVFstruAJ2l/gfOAskDcv6NdYmPorKQiWwQ5ycvEXa9X2JKVoxk4f0iDks5pfxO1qfdVF4Xt2kVoM6UgQL7U8djY1IVvqDqkb/6gvSM46rHNAzUJ9TxMW8b82dXjdqzswH1wJHpD3669YeMgUZ2n7rTpriZdN7hJ/rh2dsdHrwiKiPStwlMktdSvuFmWZn8LHMCNxqTcXn5aRlh19zys2J1vdcICYgnz1bmiHObXyzIdeT9SipSV5M7zC2i3PVX8ecRY2yqb3PbkMysUO9d++VlhCGFpn/VLC+16q0arTz6CT20AjcFXmX6VLWm+fQbZqD5zQNgdvpMTEYnwNWozXwBiwNpFfWsAfoIVtF4+nvtWxaIKWwN+Q364TxHYJfbAt+BupwQN7jHEKegjUh2pXI5Q6KxWiZ+GJ8G9uJnovXwE6SZ83QA1a50OtchxFlBx9Tw94ISRPmg4+MK+AmqCVzmSGJacxuOU26zlTTABkFtwhXR2UDrFZIYwIvgDJvtvWu9Dfcor+t/hjsGpcdHsJP4u9Mvx5tQWncwXC95ZN09iE3qz4tUs+myhG6RNhJks7a6pfj68UBfmhot7fBHmD6xWZwgVaIu2Hppt8508Us+wpUhF0gFL5krgVnlZPwDDfT9IKnGvPcHxJLjVMe660Anxhj3etKB54G28KX7CN4OJ8KytR2+CTqw8eYTAXoOdYzG94CK0BSHgpWJJqE0yzDxZkmazAj2tvCeS7KWCmHyD32IXJYfkU5IOUkjo6aOfK4waPjwe+VdFmuBWTpmHOSIPwZ9un9DpKnwzX4aFhIDEXxjKn0Kw5U2bQIue54cizcECpWa8FVNs3/nJ2PH5YvgnYS5XqdfrEK/QHdjGNjc+CT2M+yX+vhdglHoSjKAlJP01fH7U18R6bEehLpwUX+1eAndRIhzB3u4+5M8q/YfIKtz3ytUc2eZJUkW4R51mipOvZaYHFgFddnJ8hydkJ1qRKT5+FWdO3edreKMuQ3H5QZI5umwgv+4VomHVAaNYHebQ/Wm3nZTBF8kqJo8mbnTyynDULt7BMsZxfi2fZ7FQtZnkS8fJqW2Mj5UbWSC8uNXiHXDpETqM191ZhISoKl9G1QxW7HwxLX6LRkC/Hp2dJlr8M8KVfwa6N/5Ivu7W54hbaxAig3cmizUIVLtM/1Y4ZD34DFWJRHNxzUttBFcKg6OHE/WtE04D7iPaZ9TT/MWG4rYkHjx9EJYu34brjTypF75Vy0z9yjboYPoNT4BG4f/VaZTJA3i4hx3u33unVeeilYiqeb65wu8oN/ObiFHyG6sQQXSvuEf0duez7xv+YM3038TjDbucoUh2/4m93yaKZbBH+LMQrKJdIDWphbrl6mPeAEOKlAXddLQLt0INHpTGwY61/gnUB3MV/iAap63wR+YSqlVvsQvYn7//9wDrNEe7DWkIcTZG5wuqWs4NPaWXrFZppS9bNuT+UTjh93G6epgQdJ65UI6ZR/pMdpHzaYYv6w1epbmfG09PeQbLr6mdqkc9t7xn7K+h9g0q54"}, {"__id__": "chunk-f3d780f16216510135e44e16fe6bee19", "__created_at__": 1760500677, "content": "**Understanding ECPair in bch-js**\n\n`bch-js` uses the `ECPair` class to handle Elliptic Curve key pairs, which are fundamental to Bitcoin Cash transactions.\n\n**What is an ECPair?**\n\nAn ECPair represents a public and private key pair. These keys are used to sign and verify transactions, ensuring that only the owner of the funds can spend them.\n\n**Key Functions**\n\n* **`fromWIF(privateKeyWIF)`**:  This function creates an ECPair from a private key in Wallet Import Format (WIF). WIF is a standard way to represent a private key.\n\n    ```javascript\n    // mainnet WIF\n    let wif = 'L4vmKsStbQaCvaKPnCzdRArZgdAxTqVx8vjMGLW5nHtWdRguiRi1';\n    let ecpair = bchjs.ECPair.fromWIF(wif);\n\n    // testnet WIF\n    wif = 'cSNLj6xeg3Yg2rfcgKoWNx4MiAgn9ugCUUro37UDEhn6CzeYqjWW'\n    ecpair = bchjs.ECPair.fromWIF(wif);\n    ```\n* **`toWIF(ecpair)`**:  Given an ECPair, this function retrieves the private key in WIF format.\n\n    ```javascript\n    // mainnet wif\n    let wif = 'L4vmKsStbQaCvaKPnCzdRArZgdAxTqVx8vjMGLW5nHtWdRguiRi1';\n    // ecpair from wif\n    let ecpair = bchjs.ECPair.fromWIF(wif);\n    // wif from ecpair\n    let wifFromECPair = bchjs.ECPair.toWIF(ecpair);\n    console.log(wifFromECPair); // Output: L4vmKsStbQaCvaKPnCzdRArZgdAxTqVx8vjMGLW5nHtWdRguiRi1\n    ```\n* **`fromPublicKey(pubkeyBuffer)`**:  You can create an ECPair directly from a public key (represented as a Buffer).\n\n    ```javascript\n    // create ECPair from mainnet pubkeyBuffer\n    let pubkeyBuffer = Buffer.from(\"02fb721b92025e775b1b84774e65d568d24645cb633275f5c26f5c3101b214a8fb\", 'hex');\n    let ecpair = bchjs.ECPair.fromPublicKey(pubkeyBuffer);\n    ```\n* **`toPublicKey(ecpair)`**:  This function extracts the public key (as a Buffer) from an ECPair.\n\n    ```javascript\n    // create ecpair from mainnet public key buffer\n    let ecpair = bchjs.ECPair.fromPublicKey(Buffer.from('02d305772e0873fba6c1c7ff353ce374233316eb5820acd7ff3d7d9b82d514126b', 'hex'));\n    // create public key buffer\n    let publicKeyBuffer = bchjs.ECPair.toPublicKey(ecpair);\n    console.log(publicKeyBuffer);\n    ```\n* **`toLegacyAddress(ecpair)`**:  ECPair can provide the older \"legacy\" Bitcoin Cash address format.\n\n    ```javascript\n    // mainnet wif\n    let wif = 'L5GPEGxCmojgzFoBLUUqT2GegLGqobiYhTZzfLtpkLTfTb9E9NRn';\n    // ecpair from wif\n    let ecpair = bchjs.ECPair.fromWIF(wif);\n    // to legacy address\n    let legacyAddress = bchjs.ECPair.toLegacyAddress(ecpair);\n    console.log(legacyAddress); // Output: 1DgxdA5bbMcCNWg3yB2MgKqFazV92BXgxK\n    ```\n* **`toCashAddress(ecpair, regtest = false)`**:  ECPair generates the modern Cash Address format, which is the standard for Bitcoin Cash.\n\n    ```javascript\n    // mainnet wif\n    let wif = 'L5GPEGxCmojgzFoBLUUqT2GegLGqobiYhTZzfLtpkLTfTb9E9NRn';\n    // ecpair from wif\n    let ecpair = bchjs.ECPair.fromWIF(wif);\n    // to cash address\n    let cashAddress = bchjs.ECPair.toCashAddress(ecpair);\n    console.log(cashAddress); // Output: bitcoincash:qz9nq206kteyv2t7trhdr4vzzkej60kqtytn7sxkxm\n    ```\n\n**Why is this important?**\n\nECPairs are essential for managing Bitcoin Cash wallets and making transactions.  `bch-js` simplifies the process of creating, storing, and using these key pairs.", "full_doc_id": "doc-f3d780f16216510135e44e16fe6bee19", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/ecpair.md", "vector": "eJwN04tXFOUCAPDEME3g6Ekey84+5vHNfN83u764h+pmIJKvOpWohWhlZZKAGqT4gJuFpWn5QoFc2GV3dr6Z+eaxYh0rNI4ZZaFJXa/XoDRLybxmJoTmtaM9fv/DbzJTiFFbciI1WO28j6pkHEu2VtrHhc+CYwQC67UohWJJIB9GdZ9dEV5IXPLH5n1oWPhLa6E3RZ4p5QUuKv9yeqw1sC20jvaSu9Eq8WbrqVAdqOPOAw2ckoeZ2bDDnuB6W7ojuH9nk9tG07kH6abAB3jijmvBDnEYScoe4hnCng+/EZ/prxa6key3dov+bZFL7GI4N9ys/0giTsnYFFAFMuhytQ19rVxSToDBQI6zmesVayLXSQwW0iuO7AWtNi3F7TFTusS1G98aQ6UgU90K2dtwr7Scf90Yj/aYzdZjXB8jkhbNlXF5d4MshS7QKPMOvxucD9ZJz9Em+ojkC+YKr4F7I0+ZC0zZQt7J6riUYn9h9mpdQnvDS42h2pNwqO8hSIIbZTfzaXQR6tXbnZ3wZNwVKpM7lcvg/5Ya+gTfzPDIc8KpgTzbNrPsLvSzeCX8ILhLuOlPsbrt5aAj/YbTGS4zz5mYX8x/Bwd35JNx/kJCvO7EA9xYowf16X+EId6k7bPLfKVaMl3rVzWf0yX1+1jzhnwrdg+3xf+D+RX5OD7A3qJTVS3kcOuNmiAXeFq+BsZ4l0ZuuQiHIiX0tHhMX5fITETFNL2xJb+pgfLiZO0BdJWWxiPi/FilPg6/qg83MTWceewL6AXKpJ3D75oGJ0TfMbvY4miz7hMPGYutoLWSP61WoCr9QzQblpvpsAgdox6JR5vUkFTpG6m77ElgjHwaD0gL2SmR8eJU8zOmP5SvrCDf0GJxJT0CJsDfhcpgeey/5FC8PnyQFuAQWtJc6SqnB9WNmRfhIZxlNDrJXAG411MvfC/bwa/4UOwZ+463JpLlIUfvEQGtstT4YXQyttF53s2DNcbPjXvZkeh2sVXwk2rmC+GweLmlM72CbrH2BZ5jh8FS2KKVWYc93tYk1wC8Gjse2U9XiS7zf61HRgzh+/nr2lGSzKZGx8I+TNWXtFmNFVi2Yol0/rwSxXu5dqFDbxLXOL34a/SoL07vRBiNhAPgWXjRXC08izyCEJ4T2I9/k+q9FaiapuPHA0Vwo/GP5i4RG5heEBaNnRc8RXPIUbMMrGrMAg+TaTSp6RHsEf4DZmtb0efKGVWzauU/hQPGTTA6USuck3dpv0jV+ny0CE3RvOKr0r7YPWINlJobtM3kc3jFetH8KFIUO5AxgdvfdJ1OI0c92wLfS9O5oeyn7iLH0J7xu9k32XqlA5XFV4Op7FWSp2+wT6qzhXV0c5yhK9wzgtj5iZtlhK2JvrnwjPYuX2ctcwrF25inEp3sEl8NMx9s8K8AaxtnWBVOVQB7ZoK5QvGWeWoc16ESa71/tHZCSbW7pPXC/Vqe0Y1Ec5JdIh2MZ+mP+7+Ay9DTMDN4nNby76FJzHa8QBjhbFArhR0ii8/SZdFXrGlWO93kPwHXg7uyspoHlSNkAdqluO0L4CoopnO0HIEypZ4UfXzbTua0UML1pB+0p6ECsZjPZbZGpuz+SVHM4bEy1wj1V7DEH2IynMOJfro9S9s2ldlqALOWm6U0iOvstMCoNlsfafdp2/QCNkGrQLrUTVfCUSiVjEud25KEAckdMUUul98QeZsGeHMAzlOLyYD+jXcw+20zDr2B+WS0mSr2KLfMCqKDbv1J6gCreQOOcE8Yc2ITwD7XTPie8Tp7H8yhQ2iOsZa6/cAugq9xZ7Aln1VMtUEtl5+P7YkPxzd4XZxtJuEPIO9ksldieW+5+WV4VuYlkOQUGGl216g0dJbsMXJNjrz597NaKkeodtm65uon3+FBerHBMr9VLtiY1Dudt+/SPxT6smv1GVQR/unbw9zJLTWBlUsejf4AX24d03S3XCMlwGPCv73HSJF9wM63zsb/ArVCmXI="}, {"__id__": "chunk-d4428d64d0c31ba6e4b19d73a96d90a3", "__created_at__": 1760500677, "content": ", storing, and using these key pairs.", "full_doc_id": "doc-f3d780f16216510135e44e16fe6bee19", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/ecpair.md", "vector": "eJwNzwtzFdUBAGCCgvGBmVyTGG6Se3fvnrN7zmYviSnJ8DRQJVCgychDo0RTLY+2qUlBAtjijDioQSCPCuSxN/fu4+zuObubUGOLUMaEVwciHcQERRuJNFcZYhmE0gCGybT9/sG33F2IFnwQZ0vQN1019ELHYuuIofln+a38SMbvc8+iArwRXBGFRJVdQyfITKNIuQt34R/QZjfEX0JvG3fEmP+cu8X/UnqKnguvoBXi7+RdoFR7mfutnpRuezFlq9YQrXFkZaNLld3SHPRi7ClwTX9R/rytVq3NL4HT0NlEJi5De73zaEPbWqTzvbaAutV2NIaq8SfikNGnNNEw6g/WWzucdnsHuhEBrR+CU9G9zrn8yVyJcjPyOknTNft8/F1anVsd7oksRGW0FY35z0Qv2y87Qa+Fjznz3RrzEBq3Z0urxC+4GsWQVPd5SjJvuBvVFdYZJw9o0hoYYXtxj3iXX0xPB0edA/QdrjBnobXIk30l3AUOowLyqVz4/2tK1Bek3KeVAFwa2SHuzP/SWNadGl0qzoP18gCb727wqOS3JIVZymL2LVzgRuU0koWX4NNeitghn7dMPxE4Qs7kbXeL4g+yo06RxWfcrx7M7XdXswkzR4jRAG480BdpT39NDMi57R7dDgD6i3cpa5O3bfqKsKzc/3gl/7Ue1u6B2zYFMe2Xhu6/wbKU9DaFvtC5XZ8VPcoQ2izNlusjH0hRZuGK1p8xAhvkf7a8FTptkewe0XWezJ5KXtOOs6fNaqLztczjAGVckv8GNuCCtil4C9yJ5+yfoV8EhaFXvLt8nS1ZD9rNwiFul3KhYxJuFf9EeqEpl8Pu9kqzJFuDKTZCXyUG5BG0NboIpGXd4uqyt2WMds5HVeSVfTfZs2KT1ReZQOPWZdzkHoaWszKo+BfQzOgeveCRn9jlbhA8ouSK8xL3+QPoonGL/C2e5K3oFHYtMk7vE9/TiHNIfx2vTxzuelS7Ab+yh+PtcBGuI82RY8IWfANm8ml+PGM1N6z2WyPglH5X309mwvfNzehj7bo3xvJAitBql9Dy8EnQGAmTYjmJ6/AbSlXHHjLI7gmlXB1MZs9Dtt0BA12/9nyyzRshAP5LW2+KaDb7MxiCP1UDTiagER/tmm5wc3MaQyewysqkCrlUCMErqFUR3INyM8hRlmvX0WfuaTPu5gTeQfuEkL3JTeU+bK0sWC00Oi8EnyGG9JH4I45EHijYLRaYD4nv5of5jzpOoqu00bpNhq1jQooO8HK8NfF3exSs4fOEucYZfQz28U9EH1M3CavIPXJAOw7b0EomSTPhBvwj+ofiyVMdju2lmWiSf51hZTifmPfyuuQAjXVOtb52F3W+STH7LyyDE7gnkUVvNlewPQzvKxZnGxncGu+EdA4pCRNtzG0w+1tU6ztnD9rMSv3S9mnWq2iKpZqYeeJkf5D+KtZjr4l9HHvLmdb8nlHryfgP3gqyjswi80gx9nA9mouTqJmVJHqdy2pC7k9d7jfQAFJok1jhHMXlTjN73/mrPRp6VMw0TKEJLKNDfCW7qc+ZfhyecGC0A4fzBtgG+6q3UO9FVfJuttYt4tINjbuYtYMlNMcqpI2kXppiqDM+j18T2mi5/pw/rH7vl0aMzCF3sr6O/ze/1Fnv7Hckr5VNEpay4+iUu1sawsj4ozWAfwBXyfPyJwdylAb2BDySv9J8OFYHktqn4qD/hT8WOga+fajbUd3VaDDj6sPFLvOWJG6J38MGaTJNuutQWf4d8FniSTZBO61VnSNOFgfiB8UMWhW+wK48ttL3ssvUFqcGXLcytaC/Twj7r4Kd8lG50h1lP8ffRQ5p1eABPZXcThzG3XKqHeUQvUP64Ut8OnOdoH6J/SKUBsf1x8UAoHQJXeuni7PkScEF/gyhzypGgltEMHkTeEg1R+mzXAWqte7kD3rt7snYOvsl1MTdyukqPIjGYYkkOr3gN9x/6DK9gf4P6d2mow=="}, {"__id__": "chunk-f71b69d1be9789773861c21f82624fd6", "__created_at__": 1760498619, "content": "**ElectrumX Client in bch-js**\n\nThe `ElectrumX` module in `bch-js` provides functionality to connect to ElectrumX servers. ElectrumX is an indexing server that makes it faster and easier to query the Bitcoin Cash blockchain.\n\n**Faster Blockchain Queries**\n\nElectrumX servers maintain an index of the blockchain, allowing for quick retrieval of information like transaction history and UTXO sets.\n\n**Benefits of Using ElectrumX**\n\n* Speed: Faster than querying a full node directly.\n* Efficiency: Reduces the load on your own node.\n\n`bch-js` can use ElectrumX to speed up blockchain operations.", "full_doc_id": "doc-f71b69d1be9789773861c21f82624fd6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/electrumx.md", "vector": "eJwN0vtzFPUBAHCiMRQNkGAIeWzu9vHd3e8+LjxqA6FCfFBjnfLqYHklMomnVdBMpcGgaDNQJspITEI4yOUud7e33+/u97u7ByGGh21KB8bEACqPBIpWgw1CEcjEyYBW5FH/gs8vn0r+00DRPpharx/cE4xPgmPCRXTdXjHDkXrQNuFc4o+snrgGKsWV5lV7Bh6OLw18Yy7Peq2jwWaM7Uo9vi3/RdjivW0+q3XH77MztW3ScZw15T23VGUkTj/Uvk4/kbpmB+nXRUNiCYDCUb4q8DR4yb5/+sdTHxO+0NOk/Oj46L+1dfzB6CctQ/LHgEFnjC6GkpNoWSLlz4E5sFd4xzuu35FX4MXmOnujNk4roav8keIUjag/xH5kMsUjdMRd3rY3XokyjFw1ZW5mp4Qm8geMmBXcvhXFtRxtjf4iRvZKJce517pFvMGUJBcqI/R1f5rve+yRn8xhO0d+TFsJf29Bt8hHecS9GB1AS5vzrD1egJ2DLbRWbTDZtgSA4Ek0gQzwm+2W7Fq1Ut0KDLRM10FtZ7daKu8TNysbzAt0rVWKgX5wxyqloqNJlZyZedJehs3WNO7QbiJeNt6OO+5cuQ5FvD3girPf+XUghj6HT9P30WL1HNMgdSYmKkG0HvT7q42K4gnRHPoFezYcIGnGfxDDiaoDDtI6aSUJyS1EsOtAqX2bm+1Uk6NGRqQx3KOVya36Q21+hQU0ORPNaV/ufMAP0Anul3SOMgqO4f1MmdAHP3UKxetFaSDdiMoLMNG/s0Kky3vL6TTutTwOKvgHY8fy5qQP+MrtFn/vzimo2652m1M9zl0xzC2CbyQC4l14k/seDiXuNDWIYWsYXNZPWWHzebpRnGQlxCrtQysc7YotEUPKI8514SLN7livht39UFGKxF3qhdg83NayIb+c3BEPINUaVJ6ir4NVuEfcKF6ip53XzAekW/ws3yF1tdjsL2g96z5DJKK6dR1lIhR7aLZQLpHCf1m894rSF00rXKJ8KU2ATwj3rE6SYMcpD9toSix+GC1rXyT1wm+FhWhBKk8s5F8GTbLPIwHKXMVDpBUM+M28yahe6IKr7fN59YldQgPHWJv8qjLOGfNGre9CM7krHTXOCfqAfsxKKv1KMLrYNOQlShZ01ZvwM5KvvgmHcQ05ypwBE+Eb6oPoK7uI9eRnxYt2QfsPbIA9Gz+FM4uPqO/juWQjreAb9W5wGE0n89te9v0i5oMD8ePa9qZL8jB3QS+BTxnLFD3VB+fJOhuRRnG/PK94OT2VHKd0Wr2iL5HBLQi/RLr1GdN+i+eak9xNCQ3FItNDuaSK+1Ee0m+Z1QWLE+HYb+IcMH2/kl1d999FcbZEyscZcsTpR/dbOc58JDK7uAFxtfc1P2gpyXvyIq6c/E+c7phOMXMeW7gVRBKvKuPZRhCVg+Sok5FylK6Hz4BP2EFUI2nmfCWE+62PdpyLDjnjlU73BWmhkR1twNP8+6TiuMr/N/qW8S7cDD9Qe13OytQrwZWpTaEy73yycuompZyt4HK501Qkll1gn4f98HfwOTRCT+ATgWdSkJyNPaJepn9zI1qNnQ3WoBE7TtZaecqruCmiyracJqxBu6cNyp/HWGfEOA1u0atqDa62O/BDbhz3hZ8jfwdVTrr3Z1Jrzv55xuOysecn66S1lHPtRt6xHK0C7P1Z98G/8jeFbeoVbUh5lJkXqFWz4Uk0It8gU9XPUCbmQ8X+d9A39vz8JLgr/MkbBMFoFh2Nz0qecmbTHeIWs1d8Ragihr2VQR1l0h/YdPkj+5dkm1XLr6XtxqPuPxgLH1HfFHDyhj25Qys+YI1nr4FaNaPojl3ivw8epqWGZwR3Bkm9MlYYkm6zO0m+/U9F0L7lzUSY3HDG7HxlKAs2Ssyl3VvIDtost1v1xmSyImfE+yqvzhu2It6HqsONFbmxUdinBCaNyjNoChfyG1AugNL13HR9f1t986zwNH5TAVvwBAriWvH/SwioZQ=="}, {"__id__": "chunk-956375e180a62f4b378e95259cf81209", "__created_at__": 1760498624, "content": "**HD Wallets and Key Derivation in bch-js**\n\nHierarchical Deterministic (HD) wallets provide a way to manage multiple Bitcoin Cash addresses from a single seed. `bch-js` has utilities to work with HD nodes. [cite: 1589, 1590]\n\n**Key Concepts**\n\n* **HD Node**: A node in a tree-like structure where each node can derive child nodes. Each node corresponds to a private key and public key. [cite: 1590, 1591]\n* **Seed**: The starting point for generating all the keys in an HD wallet. It's crucial to keep this seed safe! [cite: 1592, 1593]\n* **Derivation Path**: A sequence of numbers used to derive specific keys within the HD wallet structure. [cite: 1593]\n\n**Key Functions**\n\n* **`fromSeed(rootSeedBuffer, network = 'mainnet')`**: Creates an HD node from a seed.\n\n    ```javascript\n    // create seed buffer from mnemonic\n    let seedBuffer = await bchjs.Mnemonic.toSeed(mnemonic);\n    // create HDNode from seed buffer\n    let hdNode = bchjs.HDNode.fromSeed(seedBuffer);\n    ```\n\n* **`toLegacyAddress(hdNode)`**: Gets the legacy address from an HD node.\n\n    ```javascript\n    // create mnemonic\n    let mnemonic = bchjs.Mnemonic.generate(128);\n    // create seed buffer from mnemonic\n    let seedBuffer = await bchjs.Mnemonic.toSeed(mnemonic);\n    // create HDNode from seed buffer\n    let hdNode = bchjs.HDNode.fromSeed(seedBuffer);\n    // to cash address\n    bchjs.HDNode.toCashAddress(hdNode);\n    // bitcoincash:qq549jxsjv66kw0smdju4es2axnk7hhe9cquhjg4gt\n    ```\n\n* **`toCashAddress(hdNode, regtest = false)`**: Gets the Cash Address from an HD node.\n\n    ```javascript\n    // create mnemonic\n    let mnemonic = bchjs.Mnemonic.generate(128);\n    // create seed buffer from mnemonic\n    let seedBuffer = await bchjs.Mnemonic.toSeed(mnemonic);\n    // create HDNode from seed buffer\n    let hdNode = bchjs.HDNode.fromSeed(seedBuffer);\n    // to cash address\n    bchjs.HDNode.toCashAddress(hdNode);\n    // bitcoincash:qq549jxsjv66kw0smdju4es2axnk7hhe9cquhjg4gt\n    ```\n\n\n**Benefits of HD Wallets**\n\nHD wallets make it easy to back up your wallet (you only need the seed), and they enhance privacy by allowing you to generate new addresses for each transaction. [cite: 1593]", "full_doc_id": "doc-956375e180a62f4b378e95259cf81209", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/hd-wallets.md", "vector": "eJwNyn1YFGUCAHAVJD9AUWNddHeZ2fl652PpNEMUkkdNSQEvy6uryzSvHkTxrtQr0AM/8iGQM64UkmVnZ2fnnXfeeWdWUbhHyKvjLEWOO6xL7UJNfUATNNM8zx5P7+P39y/FH8z+8cCUg/8Vh3A52Bby8sTZbe8TP5Ft/qdiE3vFcbiJ7Kzwl04g0YWS4281nYIF5mr9O4s2Jio73NvcOqEDV8Su8mfUhe5LRjfobRmga+Eh4Xu2ITSOjT2Wlrgm7DZdEFHaQyVsOrhpoVqVsEpT6EeGljplwXsdT5fKrNLgJlDpoawroI8dDQbZCZFT08NiSXCztgRg55KyTpodWIpcz2JljvnzyCA4pHSgTUITf3mviOYwHrfGvQO6dD9IiDnmAn4RNZ/xWtvwfq3PvMZmg3DoPlVoPgxpeBwHYpPQa+x8/hAea9/gbpCQfpjtFFKkKrlcqdKq4NNgP1Ut3Z3WjxaiIuZ7d/e4baQhfj39QqMHz2bONc729RqLW8ZzH4Hz2f+QrvNbjDQxl9XJCqlG2MxC5ajViyfieVQzn4Sf59pgPdDgdS6UUKUzYr9wg11MTfbcx8VkU/iix7U59ZY9L1EqX/vdUemcvge+wlUJ5c0j7Pekt3bMEDjYYbWL9YEVeIS3OfZwag78SfyufTX+pyzX0vh3ojOkUrUPvUp2QZURUB55T3zBap6G5JAyQzzw4QaQzL9MfRldaI+x96Krpu6eRbKwK1hMd8tPkl7+r1YuyME1LTepK+ARu4R70rwLi5Frz7TzfKPMyawkrWxMFvaSUtMjXQI7UbLIIKT+zL037dvYJqXCquOfk+bvb420giH9aXGjUMJ+JVeoU2N5idvoCaVSWatkkyUUx69VB7ln4p2BPDJkLp/6q9iw0CZDNl/+xjpIL0Mz7NfJv8BLnBQ9FXyD3LGP+G+wxfJGvePAKGzx7fFnwU6xFAyq76AJpI6kU780L8dO8sXs+05SsC08KXrUSvYO497gD+HTHA5MAD1ggTXa6wt+JvbHe2rX41p0NjiS6uHrwL+ND5wn9MeZR+kz/hxjKzcq+gV1yjwdZCxKGIBfZy3j7rG9BAh0wNSGcQks4MvI2+6SvZ8GN9KtvjJRMbpl7NwHjHSXmWlvECqZk6GOeBd4Lv1IfDmYGzgvFMq7pKlimtGvPmM9Jp9mjsgZ0WZ1CTOefMUm7HOCT05CczNT3KvcMvlzXyFepWl6M8+3jJS88DW5rnmpfcH+o/QddxjeEl516sPvCsu09VIuLJLTQi/jSeKv2ZCdHatW23gU3AJTZdYcjo5pLLBTYhWBr3HEWYAFXMOt5uIR1DgWTSF56d8wqXoxN0KYL2V7NXyMj9Dr9G6ywuylW90FRgDlS8dFDdPS75umO1vEApBjPhSX45WOj9bUKW6l8jablrUI+EG19oDOR5/+/1RyIkgLjA/0aRCMYhgnCmHwt7AVzmrqDs4TFod38sfJA3wi8B8o4CSrQSni85VMdoMVpVZlzWLbOQ84Sy54y3UIDut/bxlpXiJBEnaeD25VGtjbxlZYFCmIjGXfdKKBlug+6V1SyxQaHi6DdCf+fJCPLM10tXrzWXsOqMcvRgMZm9UN096E58k2pocu48vl+3sqAPHHndVZQ9xn+gl+dbQTP4I+b/lCLiK9wskDa6nbKD+SJRyju+yymEpvtjW6ix/2PzD9EhKLqKdIrjJZ5IRCyIHtZB/9Bg5bOfgVjgq/bq8xCyGI/MboAEk2k5HErhL7yD4rZboTj4n3/F4rg0yAP2TtYR7Fc31rwv/U/hZbiB+31thT3Bx88f0Gvka8k/ShdwCv9A0kLhqDIgBnMwXcD37BHXf6jcvBc9BjqlwPSjWS7Cge8h5jq7kB+AfSbpyA1WRH1nYr1WltWGS6TTN96+iPdaK32R80ue5NfTdZnzlsLMXf0i/YXWiH2MnnRgfBdqfOm+aMaTzCjQbdvgz5FuUKw76ZShVMRX9JGOgS+h/ugaKZ"}, {"__id__": "chunk-10d0e63a075c5bf5c9c220686bfd84d5", "__created_at__": 1760498643, "content": "**Mnemonic Phrase Generation and Management with bch-js**\n\nThe `Mnemonic` module in `bch-js` allows you to work with mnemonic phrases, which are human-readable representations of a seed for an HD wallet. [cite: 325, 326]\n\n**Wallet Backup and Recovery**\n\nMnemonic phrases are crucial for backing up and restoring Bitcoin Cash wallets. [cite: 326]\n\n**Key Functions**\n\n* `generate(strength = 128, wordlist = null)`: Generates a mnemonic phrase.\n\n    ```javascript\n    // generate 12 word mnemonic\n    bchjs.Mnemonic.generate(128);\n    // boil lonely casino manage habit where total glory muffin name limit mansion\n\n    // generate 15 word mnemonic\n    bchjs.Mnemonic.generate(160);\n    // virus inform minute clever traffic more mobile pet finger invest mobile indicate twist\n    ```\n\n* `toSeed(mnemonic, passphrase = null)`: Converts a mnemonic phrase to a seed.\n\n    ```javascript\n    await bchjs.Mnemonic.toSeed('boil lonely casino manage habit where total glory muffin name limit mansion', '');\n    // <Buffer 7c b3 9e 9e 3d 79 31 2e a8 48 59 12 bd f0 f1 8d e4 ... >\n\n    await bchjs.Mnemonic.toSeed('bus aware census desk orphan zebra fashion host try muscle pig close jealous slice elegant prison reject ship great program trumpet syrup tray remove', '');\n    // <Buffer f4 2c e8 e1 88 d1 5a 66 5c 18 c0 cf ae df 09 3c 75 d2 4c 47 9d 52 87 f4 be c0 6b 13 e7 da 04 01 a3 50 36 87 22 1f ee cf c8 57 e8 6e ae bb 17 4b 83 60 ... >\n\n    await bchjs.Mnemonic.toSeed('frost deliver coin clutch upon round scene wonder various wise luggage country', 'yayayayay');\n    // <Buffer 1d 00 9f a3 a8 86 51 a4 04 d5 03 3d eb 6d b1 01 e2 f1 3b c3 c8 6d 1f b9 93 b4 d1 33 dc 84 21 12 2c 9b 52 10 ba d...\n    ```\n\n* `validate(mnemonic, wordlist = null)`: Checks if a mnemonic phrase is valid.\n\n    ```javascript\n    bchjs.Mnemonic.validate('boil lonely casino manage habit where total glory muffin name limit mansion');\n    // true\n\n    bchjs.Mnemonic.validate('This is not a valid mnemonic');\n    // false\n    ```\n\n\n`bch-js` simplifies the process of creating, using, and validating mnemonic phrases.", "full_doc_id": "doc-10d0e63a075c5bf5c9c220686bfd84d5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/mnemonic.md", "vector": "eJwN0otXFOUCAHBfXMCjeCnEZR8wMzuP75sZQPJkPo6m4THyHSdLMtS0PNoLLR+ZqDcQn6nXWmCX3dmd2flm5vtmh0dPzUwtTQ0t0hAoFEySTNP0qHWV0+3e39/wU5gUf3qT0CiIz9mESxO98jXtx8QSYZUQAmvjyXY40Wnvja7WpkSDKEPz4074Mbpu3uFWJqLULq4wkCHfCmSbLwV7qS+9xUaSdRAsFZug4H4CcoGToswFxU/tTjajfrx8ltkmD5LfBrt9TeQhqy43COfDLElnd2t7GmZI85FPSAYvxsbYuviLNYwmeDe/FW+Fz8R62J/FA85CoS/jbzQk/JPVJ03nc3WaT5O/J4uF8Z51xiZyml3i5IRKvHtJnkKBjVYvx7PNJMXa4a4C+dHpRjW7XMqENGphSj1HkcBeAeOU/eYy2ydcEyqdUVYJl1/3Bz8gNg8qKSe4p6rft1ZR9d5Jw13OXNDfGW28YX3s6oaH1ZuoyX/JGsFmKjONKfRCuFGWpOeYc8Fb4q54qpEi3AYldVfE+6Qw8bkxgxwR37L75XioHe5u4uPTnasgWR6pPcO2cuuUPZFMuy6+3RTsoQ5wpjpvMOXqqPyB5gFwhd9qzhNLyQwwRDnJpTYUs9PkBdzneBlqRyf0/XCQdrb+pkthz9LN9BnUAZaNOEUAyrZ7si+Q1ITmi4ZeYGfJxwXa11/cxi1iF4gLtSTuX1i2y7V2PIBkcdfM4ZSutYRXwOZYqjA2MkpdCoO5WfYhVFO9hrQ2tCZm6xNhrc54bnuLQCmbRR3QG2KifEYbDB+zu1xFlsdfjgy+JzzM38oeVUOZ/2SacAcsxEv8Xrmf8Xp0sl1MZYhDpYPMWLNt6ItcXO2QNqFz5OqI9uwb9GpjWm44YMCEmGcF6Ak4gNsACsbYpHcvB7Psh7lb6gY2HRrxz8L7LMKXWjt4wv0AHqvNl7dGurUR8LSdhFj+3/hPa7GooO+UDOOWfyXbH7TVfMA08VtYrG3Hj6CBkfniZ7lHwFJrvH2e5cxxoIxNdx+yN1BlzOO7ttfcw7VwJtXnLyeunL+0LFgJU1ERf8asMd3wvP/P+CErTHXDPxKLtYHgL6oSjmJ6o93uwfJI32S5l32enkf+y7lzKqSr9FB1c/XLnoPg73fvhlxyRI2KOVyhOMgZwJa6O4XfoxWBMl+SY6h32YrhTXAt6abrY6PhXDHIPK20qR/ppdZmpYhv5rpgHzpJu8AlY7qwAR7KuaD1VN/XpuDZftr2yMXih+ECfzmYZf8Gkvxl4Ze4Sv17sNLOxYus1MQK/lsqxT+TlSJrlVJpGCxWTuDL2W34TfIPuC+Oo6PrXcAtvebpj94yD6pTLGg1+pNj6+lsK5V/PzfFOSXd05bjTDjBV4544TDZ7EgML8cb62Wd+ZqOkB4Sjx32t+JfcFqozfrJ9ZSvBrr1Pn45PZl9lVTx7aFj5GHX0Si20siT3APGPWIYrwUHkiHkgDnG/zzogBPNqXYmtwDdENZRHfUm2qLesS7Hb3Oz2FWohFRbHwgt4CuQhu5Y8cjE2o7sqqzzqCUAmItkDDim71JBYpKhOxfwQjAy4wgqoxrEkfYc+RFjvXKDk/hv9FqwhikwElKcXpSxWk9u+g8isAoX+MrNY+E812lfC7AaeLVfYw3eZ+6hvfAu244c9rB+MX5SmCRPA3NwlzwH9IEy81z+49JGeJPsFNIz35EveB/F+2orpM2411pn5DFp1DTyAgihAfYGPsZ0eYq8lvQg6uAugVDk7cRsrSDxYPydGOI0dJz6NXadjRv30aO4lfEk7v//2ESp0LzOHucbcaOwn9oiTlUVU4l+YSY725xPIyXwPbwJrNjpM6rI66q7blxkiP5h9FnnaOxn0ml/Rc1lLqKdkQqrOdMg6XJB1hZtr9NlLnEGu340q2Gxd7VluJ/G6+1K+TaYp7dFJpgT4CBco57iN5lRrizvIloTGzysRfhEeyUw1j5Bxtf9D1xMp00="}, {"__id__": "chunk-40ea9f431a66eaa76a78a53c647904c6", "__created_at__": 1760498657, "content": "**Working with Raw Transactions in bch-js**\n\n`bch-js` provides tools to interact with the raw data of Bitcoin Cash transactions. This allows for fine-grained control over how transactions are constructed and processed.\n\n**What are Raw Transactions?**\n\nRaw transactions are the fundamental data structures that represent the transfer of Bitcoin Cash. They contain information about the inputs (where the coins are coming from), the outputs (where the coins are going), and other data.\n\n**Key Functions**\n\n* **`decodeRawTransaction(hex)`**:  This function takes a hexadecimal representation of a raw transaction and converts it into a JSON object. It can decode a single transaction or an array of them.\n\n    ```javascript\n    (async () => {\n      try {\n        let decodeRawTransaction = await bchjs.RawTransactions.decodeRawTransaction('01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000');\n        console.log(decodeRawTransaction);\n      } catch(error) {\n        console.error(error);\n      }\n    })();\n    ```\n* **`decodeScript(script)`**:  Bitcoin Cash uses a scripting language. This function decodes a hexadecimal representation of a script.\n\n    ```javascript\n    (async () => {\n      try {\n        let decodeScript = await bchjs.RawTransactions.decodeScript('4830450221009a51e00ec3524a7389592bc27bea4af5104a59510f5f0cfafa64bbd5c164ca2e02206c2a8bbb47eabdeed52f17d7df668d521600286406930426e3a9415fe10ed592012102e6e1423f7abde8b70bca3e78a7d030e5efabd3eb35c19302542b5fe7879c1a16');\n        console.log(decodeScript);\n      } catch(error) {\n        console.error(error);\n      }\n    })();\n    ```\n* **`getRawTransaction(txid, verbose = false, usrObj = null)`**:  This retrieves the raw transaction data given a transaction ID (txid). The `verbose` option controls how much detail is returned.\n\n    ```javascript\n    (async () => {\n      try {\n        let getRawTransaction = await bchjs.RawTransactions.getRawTransaction(\"0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098\");\n        console.log(getRawTransaction);\n      } catch(error) {\n        console.error(error);\n      }\n    })();\n    ```\n\n**Example Use Case**\n\nIf you're building a complex wallet or an application that needs to analyze transactions at a low level, `bch-js`'s raw transaction functions are very useful.", "full_doc_id": "doc-40ea9f431a66eaa76a78a53c647904c6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/raw-transactions.md", "vector": "eJwNlGlwFFUCgCMqcYQ1k4vJJHP1dL/u16/bAIpCRMhAigTYVJCiAoXIGgmHREi2kA0JkpXgtWAgEHKRuXqmr/e6exiiwZjdxTgqRwBdXEuwsEAWJUJYdFOIoAsi/78/34/vuwTXgIOJVusDGE3G4Ahzk9tGuki1GC8sUkqjL5FDeJI+wD+FutAUyYB1rpR/PknhVYLPqgw7XLeYaljHKsSmjcPjpLPGOjVTwpxJfR3rQDuMKlHwbEWmWYMCeJmvBWHhCDVJ6o83hLrI8sJ6IcsfQkQsCd0hr3ArpZLIWnEo0hl16cX4WYxVWnqsYxu/2Rwh/3HXGPWCXZsQ3al87Vxe2AXKItf5U7n3WS2oTn0mf7d6mRHNEySZN0yKYTr33u711KjUlbYMtLiF3I/kM3AHXARc7AuJIZjUer3H9VZ3AJ2hE8GcYD8TSGxUbdwvzBQ4nl+O2uwm1U718CXCDeqUdSnyfKzMrA0PMzK0mEvKBuVL3yZ1rfSE7OMWaxQ1QdgplMNj7k44J3TEmkVPEQf8FeAFEsCLou3aRXiU/x8op9uZNpwriYn9dBr/CT1R/onVmd9YxirxBdRnTFodJpf2N3F/UtKFZ3PWBJ90x9VBZh+x2HzjCXaO1bmzXxykl2rvKy1amgrA2hw/mU8dDm8mE9EfwWr4qydpvh4cL78V3qb/w3DnznCd9FbxBzqyYS97GowhZeiWlgEa8R+UAfW/pFrrZBtxO3TyA1zQ26fx/HbnSPQcrg3NhQ3i+p5pdMx8zTjl/1apj4v6CrBcbnYNsVn4Kp8Bb2mYO02a5MNUgFtJFtFTjcmhVS0/4pN4GI2LDTL9klHQCX5hNgVF67u9Dr4SrHi0yLqoP8iUxSr9ba58ZavmCM/jId7Hl/Er4FRxN3iXPm5UaNk9m/wfxjPVn5VPyax4Brskt1K4ii8QB5kUrsA/8SVsIxSkGrheseNz1ErHcVz1aKnkw0ecD1Md1mRSSxZE0yLTlQ4lG2xkH+KKQ93M+NYxwiHvmEzhHtcNhyjILfBsILmJPKUY/JPPmHjBdRmW7fFTe6xRzxX1ZsF5b1LrsKeh6/b7QQGu8DB6kbWF+rMhJmrym31uOJtJ+hqjTei7eBLZ6WlZcXzXG4fzxdF7LnO6v/B+zk9lZ3oU4b28rXwzTKFBfbKnlp6ObL7fur8B+aCNncym8cvE70kps9TK4BYKs4U7cpOTqH/Vb0en51/Rl6Cj+NXYAHkYrPXXsZ+wqU7CcarX+zo65pkmnhD+bpXzZeI1+ZpzLDOofOZa41gjHldlOT30uWmovWw0moEv7PpC3iEuQCfjByk7rjKvaQeUX7UvUVUkG9zWZOYBV3l4o3lbnWG9g15Wng9XMDZIhIO4FvS6+q1xUkV2K90X6jI465pjUCvFd0mPK+UojsTQV45I3voJuj6Xa41tFnxMA8rUPmJueGPWsOwE94Np+G+o2F+fuEUwd9V0W33qk2qXsU3azs7i64Redos1MzwE+gqmFs5znraqlVSsgfGAv+xSfZX63lj6vTZWcy8Bg1zsGRs51HMQpIwc/ZhzBAaMhZ69xMV1k1eMcvOOMdu7Gt5UPpOWSE7/WRaoTdIo+BjIVgvzjT9LXQeu+5pBUcJu2dRmcF49D933bdHbwWNKNl+IG9Br++eCSsPJhCIp32Z6MXya3yP/y23nMC6VLjNPoQz2RS1ceFfcJRZpm5gcpZ9fp2rGv9XT8DAFrQzwLorxmdZ+GMeDRpM0k90QroAX0OPhkPABzMIiftv/MzgHH+lcGLfJ6dFG9VvjBnkAv0/X5VVLWRwbna616fU9B4QV5O2CU+gd1sGfNWqZK9Ie4uVvKH3ApqXzo37EppQztouugJ9x1wSbcKwT47Fk3r75994Y17brOfz/pSP8LjJCE2OWNjv5nBrQH2TrDTP8FjgR+UF/k52BktIVMA9rLpu8lxyNrHIHYZqYGZGZcrl0X7DgDeu6xZp28Dv8vJc/"}, {"__id__": "chunk-9d9433f8af3f58032e4990b73b435829", "__created_at__": 1760498664, "content": "**Blog Post 9: Script Manipulation with bch-js**\n\nThe `Script` module in `bch-js` allows you to create and manipulate Bitcoin Cash scripts. Scripts are a fundamental part of how Bitcoin Cash transactions are validated.\n\n**What are Scripts?**\n\nBitcoin Cash uses a scripting language called Script to define the conditions that must be met for someone to spend coins. Scripts are embedded in transaction outputs.\n\n**Key Functions**\n\n* **`decode(hex)`**: Decodes a hexadecimal representation of a script.\n* **`encode(asm)`**: Encodes an assembly representation of a script into hexadecimal.\n\n**Why is Script Important?**\n\nScripts enable features like:\n\n* Pay-to-Public-Key-Hash (P2PKH): The most common type of Bitcoin Cash transaction, where coins are locked to a specific address.\n* Multi-signature wallets: Requiring multiple private keys to authorize a transaction.\n* Other complex spending conditions.\n\n`bch-js`'s `Script` module makes it possible to programmatically create and analyze these scripts.", "full_doc_id": "doc-9d9433f8af3f58032e4990b73b435829", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/scripts.md", "vector": "eJwN1PtTVdUCAOAkC9/iIK/Deez3XmvtDTaoFRaapHC5IXVFrgGTpYgpltpUPkoBy7QHiKYC57332a+119miSTdRbyamJXf0YlMzqYVRmkI6g4MGGtPrT/h++S6KT8jRA184eXL9gc1CidjJrCGZTlXWO/LmRh78brjVl8C3IEPW6Tz7aexX52ZfiN9svU716bMjZ5nntashf3hgvxIvlaLUmLjSkubWYHd0OzlKF6u7padjIVjsHAaX7DnsWvCBHBAXhO5xlfp3dvG0B6V17PvZUmq6v9s7kV2jjSe7+PeUcaKL24fXsB16Dd6R9K6wXGfMFDAuXoW+iG3CW3C/8WL2n8wz5uf72tEFy4D30v1q3NVotjgeq2RrgdYbyAOLgw+37IxMygw15+qbXH6zmnmcGxGC1HwyAlvNg7t8VBW3WT/H37ZvGOUgx16mGaCIeY5pkDrBkLbM6Va+mvqk9JpyBh+ntnoCzmF7SLweOUE3RaupEYqKTLAOhlazY5SzqST7Lmh3z9xrIDp2bf8noA/dSCpCv5Dz6mnrLftn9HV4I8r1uGE9qZ24Yv9FJEKem8ikgn4z6G3ffyg4Qjc5afofeITMYv+n/BtVKl2xMmYyUemK6JCcoQ7CSqXGezXrolFj9QunYrtiENTGOqktSh5oxgOc5nexFVwP7mCmG0cMl7PCvmXmsXaqBFcpM7NWycPeRSotIq2CK4mOFSfhm/Fp5Cbo9YyxlrNPhMJgqzEEOqlZ2lK4HonuJPFzI2LmOr14vdrr26AHuVP8f1gX2xk6b5Shn/1XyWDKeNyDT+DlXA7pkUudBXQJmBGsAw8JCbFtvBgPwEQQoJaEGyyNviWFfc9n5xibcC71mDpRWKowRrJahl/nDdKAksR88Xepzlhtjph32bdjO8HX4lTrDVxvv4b38MsEP3yJDOJ5BgJvhO/6GmCa3KbeYRzyoXWG5a1Vqb38q+yg9lTLHfo2Xqoz+hy0JHRxX5CqA/eDl/nZkZTIaXeCvD6ebx5QR5N/eRdzl5lOPh0vIVcnHRfjcId4134VrGOrfUti5ZTpqwXNxg9K3x6f3mRcgV+aj4NKo6v5JDjr3GpbZjalvwnucSeNbdZpmGNvkLs94+iOyR/DIb6ZKwFzucvmmPAopAU6Yg1oKVcY/Qw5wlvOGeiFC1CllQ/qhNrobKGB2ZL1qFxnu8hx3ACXox54zXjQKGdWRoq4BG7Ad0NeYL6uHsKT0VPqH+y9vR3xteA9cETIgJ8G+mFv1n9xMXMMFMTngheYjZmLo3uaQtLijEWRyvThYEBJ5BRukX7dELV2lJOcRtW3THBKyZnwsVCHpwI8KQ5wfaFKJhNuIv9gidNBJPa2WcaW89+LuvyleYE5YBY5Xc1mcJudKAxaKz2/sfU64xSyRd7xYftvp4qGoz9ZP5Lt0gP8SfGclMJnKZO8o/nreLw6mn9WOers5XaHD+Hf9GH6iNWHV/pi4lF7KNbvuQIp+TxcaIWsFJ3s+7/UCHrio5wpdHJzvqdNL1BPOlX4Utos5bzwrO9w62n1EXI5kCE5GJEdxn384Xf+qXD0dGatMtYcaNPxndZ57HQja8opuNDzkPiwLyMl2deodFmjqEKQqJeiKXqrOB+nk153UaQzHmDmxOqxoiVYjPxK/Lawom2jftZipxaTMnhNqQDzoJ/cZG+hEqbUigpVKBXU6auzE9B6EGH+ZDrtE3wi6cCt5JCQzPWa1S2GPAfmki7+nJppe5NX8IVTkWd2Sjc+iErAOisP1zJSiym8rW+g3rdn4Gpto/2TUbDnASyZH/iwnOAqz1T1+7RA9q5YGpcFdkoVfEG0FmgI2QfxZq1fvxSvRTXMTn67Eon32wn0BD5NWWjW6J+RfrtPGAh77F/dLrsMrzRmwq34G+ER54q+1+Fiv2KammuLSXx4hlno5HPb4HfcR8JYM8d0m8dCn4jTXCLXLkP83N+LNdLD9mQ8wxGMqtS/ABmKp5I="}, {"__id__": "chunk-5290c24b7421a97a54cd83e989a3ca9f", "__created_at__": 1760498676, "content": "**Generating and Sending Transactions with bch-js**\n\n`bch-js` not only helps you decode transactions but also provides tools to generate and send them to the Bitcoin Cash network.\n\n**Key Functions**\n\n* **`generateToAddress(blocks, address, maxtries = 1000000)`**:  This function is used for generating blocks (useful in testing/development environments) and sending the block reward to a specified address.\n\n    ```javascript\n    (async () => {\n      try {\n        let generateToAddress = await bchjs.Generating.generateToAddress(1, \"bchtest:qq0zr2wslq6uh6wczt9jzzhx2f69jkw0l6wkwx3j6c\", 10);\n        console.log(generateToAddress);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n    ```\n* **`sendRawTransaction(hexes)`**:  After you've constructed a raw transaction, this function broadcasts it to the Bitcoin Cash network.\n\n    ```javascript\n    (async () => {\n      try {\n        let sendRawTransaction = await bchjs.RawTransactions.sendRawTransaction([\"01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000\"]);\n        console.log(sendRawTransaction);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n    ```\n\n**Important Considerations**\n\n* When sending transactions, especially in bulk, ensure that each transaction uses different UTXOs (Unspent Transaction Outputs) to avoid errors.", "full_doc_id": "doc-5290c24b7421a97a54cd83e989a3ca9f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/sending-transactions.md", "vector": "eJwFwQtUFWUCAGC0Wj0aSZJ4ufdy78zcf2b+f2aA2nztBinJdlzZTve0uoj52C0fnbb1kZSLbB0OtpRryDnEBbnc18ydx///M4ocrc0XgqvVCRTqWD4SU1RCoLZERa+P3e8jQic60HqHFKBuuoO/G97kWoZn0Rp+ee4yncO/wZ25D9mfJm+hZ/zv1M9NjLbUg4KART5Gu+lq85bQFwlix5xptzfVOP12EDezLepsvspsAlshY+c/6RcvSYtIUOScfQ5y/yCuBh10Suwyfxu/n/usvKDxK/GAWM7rtEeZF3u+ZaoSZdcxXzAVsX+Bev20+Q9rnzY99oRzKDrm7RLWuddrZbvKKKe8whyjKShQYB2SHJwlFOOXksFonpn00eQAOhRbw6YrbcluXO0LQTthk4tSn6cMdRqP6BvlOD5ptZE5UgB+wOjwprbGSnMy8K+5/2A+sAANCj+y7aROvk3eQEE+hvuYSnaRtYRXPD65I/6zkeXe4lxWXgK3wqe8C+nRxrRmN9xgPWt28AJRdv0usFQ+DvuMM/adQJ+wInRMSDGHGyq18tA/jTyr3uZ2/i1rlWeqE5TuJ85peWpr8+P4PTqR9OEOXOE9bUyK79EeB9usfjrUcBL3hvP1O8IF/AnWlIXUg4CeJG+Yebmd2rLkF2yVrzVSirAHimdBBxFz4ribvhDPxKe0CUYq1Bg5GXhOegwvD1/m3hJT9pJ4OZZ8DHOexqxBuZi8nNsDrzSrXhTJ0Fu5G4+9izebGvDHevG7IY1cRD3SUeO37A7zBX67fgEt5hcIM/gcNZRYw3yK2/UR5iDoaSk1hr3F4gnjhJrhkeCoVW6UVD3giqT90us5Xidd/zP8I+ySBmiJIepN4VWI4674objArpDb8So4V/oB3XZBq9ScQIrM0UizXQ9dZi0Ynx6Gd9E0X6XcTi85Z/FEeeyjXhSBhdNO6ClhJd0TrQO5bADMyuvwbyM1/tVoxHg+et9ca/8kZphN0RJ4IFDGl2anyzrgpVrqUvYnoOWddkAfZK6JqHYP3atWx9rQLeVXWh3TFrijEs4xLJOxHuFaiUgbWCH5piKSEWaFthncEDLxh06oscvhYBk/xagKdCITHfYehxvJRuNIZDYcr5yXxMRFa67wKiyIlOREUWXWZ+B74Rc/NZrpZ8IgNxbYaT5MHFTFHhdugH2oBD+tXrHHtrmVuXld6mRXnTCMr9v9Aqe5pLvCBWaSMZJzTL/IP1BSOb386z4h0QMyuX/LR1G/MwPNk8YrfZwjLFUrYIu+WPnL9F6yhe3GG9Rgrju2h70pN4BqeTIqpD/6nvFeM7brXyeL8KjwCtzEniPZ8DpfHlpnyabLZIxhZr4zFLkKLpjrTS3mgGynwuciow0P07TYdYfB8/Uj+m71FL8CzkdjDWPVf3piVrJf98Bl7nPiJMEWXyP37LPJc0Q1XWhJSHIqpFJ3gpzBb8t1TpNd62TH3eBlcaGyFj0Fi8X/0nh8nPFO4jCal6g0t9jbk6c9n+PXeFkoxfe52fSMWiDWSQdxAQ7Sq9b3aBxdiuO4SDkvtENgvk/X4nr9IfNL2iVVy1F6FD/HPwo/ANOiO/gC0MZlqt8xX7OFeABcY4fADOcsu9expKbARHFqdpqxCj9phYX8ZiW/ZjfUHVKHHmj7H31TWKt0SW/BmcxsJl8/EaZgGNjset9yuVKZLA8kh2HfzmK5EH1LblqlcGvCsAtgl/J78WkrSA7SrdZtZY7iBZP4DWAQq/I3DRgUglngxfAQHFYmyENCd+b0jxbvKgoRfx6oEbu1zea3/gHSoi9nZvD3zJS0SRJhkTKOzI/sV6do26xi0Qdtc9j9P1Au5oEdrj9YS82cuCIvMrviU5wMwysfpClzpXMkEOFLjHr4nZ7i/46R/qqTbb4XnxOYaQ2BlcxI/FL6TzwJ/JXs9Hyu36M6t7fxbf1qdhr3onLSeyjKa1niGDdmdZIPSa33/4frupw="}, {"__id__": "chunk-5ca02bfdc9728edee2150c64fe78f02d", "__created_at__": 1760500819, "content": "**SLP Tokens with bch-js**\n\n`bch-js` has support for the Simple Ledger Protocol (SLP), which allows for the creation and management of tokens on the Bitcoin Cash blockchain.\n\n**What is SLP?**\n\nSLP is a token standard that enables anyone to create their own tokens with customizable properties on the Bitcoin Cash network.\n\n**Sub-Modules**\n\nThe `slp` module includes several sub-modules:\n\n* `slp.slp`: Core SLP functionality.\n* `slp.utils`: Utility functions for working with SLP.\n* `slp.address`: SLP address manipulation.\n* `slp.ecpair`: ECPair functions specifically for SLP.\n* `slp.tokentype1`: Functions for Token Type 1 (the most common SLP token type).\n* `slp.nft1`: Functions for Non-Fungible Tokens (NFTs) on SLP.\n\n**Key Concepts**\n\n* Genesis: The transaction that creates a new SLP token.\n* Mint: Increasing the supply of an existing SLP token.\n* Send: Transferring SLP tokens between addresses.\n\n`bch-js` makes it possible to build applications that issue, manage, and trade SLP tokens.", "full_doc_id": "doc-5ca02bfdc9728edee2150c64fe78f02d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/slp.md", "vector": "eJwFwQtUFWUCAOA8Yol6WU3gIl7u3Jn5Z+b//xkoF03S0My0BRM8tmUpenwdE0m0NB9g5QNIt1wFBeRy72Xm3pl//n/u46Dmq5DEyM3M3fJx1Mw065ivpfUsa1jr3v2+6TCRp7Uvba/Dwfgf/UeaHwGZzguJ9/My0bCWlSDIPiJ2ZBvs8/QF0tkRYU+8Nve0b2vq041n2Vc0A9+25vKf+55jI+1Luf8hIwwvqEEtsFD6lKaoXfJA1R8MaadjZz15hLq+VDqVx1q7jGLBRSvJsieo1mXcwSf5JcY0cYe0xWu1XJIfwxV60k6NLNfXuQeZx0Lj1YtCip2CaqwJaInvsIVYld6j2vxA7pu2SvhZrFG7Ap40aukY8hbrR1YhvumH4F7Ux93cQ/lJ4QzSZ97xJqhHWsafV8f6ytAP2ksCYqPFDxUX6FRKomeMQrwyWtcyGB10xmYekAvUcuOCNRMNSx+N1oZukRd984a6yb+9V0zbqYbtZM2I6ZwhJtrOWE+BTvKt9JS2DJ4JL3Zui61mWqJQfR9+DL/UesxxrlNWvpSCuqUicW92VHwpmtKyPXG86VqgxHOEK8JF0c3NXfFa7hHrhViczo5PtJ6Gb9o/4+XRPv6AtD98iz9rjUSLzQdwvz1FOaMdt1bRGfZOusHeKIyKDHZ0fR9+xzqf/o/AdBF/kBa7IaWHD2duibmDk0GprxdMQDI/FwsyVixuFFhj+5QG6yt5dHhtlKNztdXOQiPD+yr5HdaQMbCENOiTfffUEmrBBpbbtiGmO70mJz+q/wYniFPAIWjCRsltPWpNcspH/N2msZHRfXtW2a/hGb7Vnl88K3z/w0n/MRtyTb6J7pfxK/7UWIkzHyXBr+ghzhLveH4VyiIfoN/D1yPXhM3+o9DDNqq9+CCqy3WYbvV3trrv03JQjO+2TVPizgJm8D1gEFxKe+x5LeXZBaxFkvBZdWCg3XeZLfDW67rZHe4Fi9pm+Y8F5+AOq9p8oO/GlXwhP0F6Fz7j3Q919Dhrpkm1hmxUMtwbuJPBE+oF+TlpjPlqYjJMD2Ug5j3lNEqz5KRM6VH/Ji4f/TmQJ4esyyxCt2hr4Xa82FmIOuUZdJcjgO+d67BcyA//ga1GITIRLYXd3FHW5Ktu/YtaHtB0b1uWOAgmmoqJwt1QABiOCoA/fgLcVc/h+2QcLPPc3H3VjIfPaeNym2MXjNtsF56KK71/c7ayd0G38FCsyPnOe1KdY83mR4QqlDviMH+ndDnWaG/CU12PS/HIejlf/dwptpu9lTQ/PKRVEovatsn91UVSBy1wdrI3Wmfi2uZJVjaBwd8kno/JNxUve8/c7HsHSrgDpkrf4O/5OuMePOdU1x+gi5y7ZL41NScBFufcUEfFxsMf2Rz7k+xQbAe9htYwDyvTnzd/YpL0sv66oXve5HoainP+aT7p3IeHzH5SEtX7H7ZcAaNDx1lp9kL+Jj0Rj8l+6xm+mjuAtjlrWFKsJoNJljRYaEczwVA8yhmw84a+X34Lr8wqYNedVvMLMsZEZo5VR2dGjwoJOFxep//JBMEvSDOdBNIijfSeHkdeIge3aun1S/QtHBdfaXYYX+N11EXXymOt/8J+YF16LrxGXqFZgSppF9kHJwfbjAZqR/8anW5kkjLrkPEEe9ZXFl2olYb7YRq77+Sx52GVUyU3eC8jVcknl4R9iM9pdLl3FatT4Yqmqrxb2naPkONWljBRe5GW0mT2Clpp741mslS8HkxhNcqP9r/Y2B3z609bb/sGBG9bc1QZfGorTAQb5Wpzg/U6uBJdoLu8HUMempuAztK51qz+6gAwLdsTUe3CvNfcgyhPrkoJ5RKVcrYJ3bGf7LfDn8nvRRRtNj9FG+LqtZfTTbhWewAP29+SWebFPedBGmnmGbwYvhquIBVwGOmSi6wPzUZnvLyaXAx46Dy+JATJBbsL9kIY/kVclX0qkBYpFecJz5r5ynptOMjdPdTernQKSfYxu8UO6v8HqDqhNQ=="}, {"__id__": "chunk-4b3140e27a013d7f33b8e5c232eaaaaa", "__created_at__": 1760499154, "content": "**Transaction Building with bch-js**\n\n`bch-js` simplifies the process of creating Bitcoin Cash transactions using the `TransactionBuilder` class. [cite: 78, 79]\n\n**Transaction Construction**\n\nBuilding a transaction involves specifying inputs (UTXOs you want to spend), outputs (addresses and amounts to send to), and signing the transaction with the appropriate private keys. [cite: 79]\n\n**Key Functions**\n\n* **`addInput(txid, vout, sequence)`**:  \n\n    ```javascript\n    transactionBuilder.addInput(\n        '61e89bfbcbb9699451456104411d1b82d460ce1c79a611b93f3f0562a6581667',\n        0\n      )\n    ```\n\n* **`addOutput(address, value)`**:\n\n    ```javascript\n    transactionBuilder.addOutput(\n        'bitcoincash:qpuax2tar50jgw0ya067r6n6z076l69gkqmpy2za09',\n        1000\n      )\n    ```\n\n* **`sign(vin, keyPair, redeemScript, hashType, value)`**:\n\n    ```javascript\n    // keypair\n    let keyPair = bchjs.HDNode.toKeyPair(hdnode);\n    // empty redeemScript variable\n    let redeemScript;\n    // sign w/ keyPair\n    transactionBuilder.sign(0, keyPair, redeemScript, transactionBuilder.hashTypes.SIGHASH_ALL, originalAmount, transactionBuilder.signatureAlgorithms.SCHNORR);\n    ```\n\n* **`build()`**:\n\n    ```javascript\n    // build tx\n    let tx = bchjs.transactionBuilder.build();\n    ```", "full_doc_id": "doc-4b3140e27a013d7f33b8e5c232eaaaaa", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/transaction-building.md", "vector": "eJwFwQt0FNUBANAgKf9C0PyT3Z3ZeTPz3pvZJBDEGEgjoQVK+BwjmMrHYqw1oaH5iI0nAtYI5tMYgQQCm93szOx83pvZTRCpKCymgKgc1kQtBnNatXrgcEACRgUKNNp7C1hWXtofjIzAgf5xIQlTd50Ti47La+Sy4BEc1z91BgKDYKfcd+A0/af2pb4A1VirzQ522C42OsTN4K7Yzrc4vKqBRn+mtYw2geSsNmXE+RZViULevOkrJEdr2X+IrPIAEeJruFYv51/Tc1//0XdbegH9xleIVhmD5g3EaYv5CPTzC4VRa+LsZJcYeMZU2aeFVHPMmIL99n059ytD9FvLsjPlVpASkrNr8AKaKSSGi8kL5s96QWSMPiB8ZhSZjHdDbyzwBHjSfcbJpd3eMaMJVAqXxSS005oPz5BuKz/g1VZ3rxJjtkLqUYfzalqcucF+zP9a2os/Cn9COJDlXSL+zVVBn2AaMg+YrFs01wcme7r0NVaf6M+u1BKUapFxSrEL/xcPdiboKbBdfbmfwmJ8Bb2DPrFzaan2P2UTOhj+Cd3nmiNupJy5LHpeWI4rQ5oSYhppnfmA/TA8yjxNR/ztzsRIJYztl6QSK7Y3UcjTU5iP9t/FDnkbzrJ/Ft+UqzN95B3zz1oSnQZuBh8Nnwz+nWsjRahOGYbbQL260xvQy5WKSDPbaF0nI3wp/EtIQxlcFQJMDV7GLWJrex5ndyklVrPdJKcZRA3DUT/mp5I/ge3ZCd2zJ7/Hb1enyryRY0yJNNqNZqW4mSvnR/ff018SW+E8cph7SswiPFdHBuwh83OAqQvnWu+apaldwR374uAVsgBNa4+L7dBkO0PhyCrdAnXiWn7E/J05DArMLdz72geaRVv1PIDtE9JEHJV+kIboJDKXLhLY3jE4CiLq+AGLTjZ9rvXgIEo0/CawvcJh/53UZrlaXqk/CRfbk9SfjAajHJRIqv6gtsf1o9Dv6TM+1Ea8BfsWW7HeC1yZ8BWocfeYL87Ikc8ESsQMo4mcA1u4DL4WrzHOkcaDF9iraIKwi8yWL2ctZb4j17XP+fvFm+4SfRRcYivIJji7pxqcI8e1WjE3cjW6Uuu2fOIUMA0u1L9hW2mLlA63sjy5zK1wb5SXcvnot/QXoBgrfK5KpHXcNkiE51CRc6qzSfgQy+T67gy4PeDKdAsnJOBbYhxhWvW1cj5aBy5FK9KC3jh4ETCdJ7n38Fh4yJpOAvhBF8u8hIYi1i9ngcTwN9Kzxh5U5msmV/lkeZd+ke8SamHh9LkBjBM0n5FvdETKU4rQLT5KjzHzw7txLz7K3At9Zx0ibUYOOO+dx3d7k4RBc9Trghfsx6yjVqkxAWTasZaa9CvZ9+C42S+8QjY5x9V1/A51wsF0K8v6AnYETkQ3oEey1iqJnl+hLvH5rnL1bqQDPmII8m50CCEyAOfzLfZyo0Gcqxwht9gkupUWOG+gYVoYOa18pk2lqlv2IOFL8Sbk7dXaa/wiD4uDwml7Hj1mlIBhPk2oIuPkfeNYdpHU5v0jf02FRpUyh57y1Ott5nm4Df2entkTd1eBG72HJ3F9X1Efu5HpNwvMRm5Fxl7J0ePeR8HzJE7/xe8Sv9Zb5dTdH+OLzj663KrxbDVY3qXcsGdaz5EuyNoulH1IC6fbaeiWvh39O7wG3ubXk9fZjSjO99Mr/G34B34f8fm6pTv4r+Q4d4XU4IW01vBmz+L0rodosjtHfgbH7Dm+tzTsvGomS32mCy7lr/esl/LkT60ZkbPK4+FM7nvPBqbJOhvEoZnqWidF1+wflBVmva8ZN6AydTC9JOcfxJ99WSyAD7GxcNqew+zLzln9rLI5VE8LpYxAJ8wLmuFCtQvc1b9Wr+nAPka/pw3Mw9oXkRmZp+zq8BaaL72p/WcmjFTQrdEloRx7lNtpPesdCK60ep0E9JZ0kT/JJBo7wjrpUYu9KzWMy6QO81xWtOcSc8cy9O5IjT099f+yOJ0x"}, {"__id__": "chunk-a6c96f554bcb976aae525ee212e82d4a", "__created_at__": 1760499343, "content": "**Blog Post 20: Utility Functions in bch-js**\n\nThe `Util` module in `bch-js` provides a collection of utility functions that are useful for various tasks when working with Bitcoin Cash. [cite: 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 363, 364]\n\n**Helper Functions**\n\nThese functions perform common operations that don't necessarily belong to a specific module.\n\n**Key Functions**\n\n* `validateAddress(address)`: Validates a Bitcoin Cash address.\n\n    ```javascript\n    (async () => {\n      try {\n        let validateAddress = await bchjs.Util.validateAddress('qrehkt7eh350xt9xa499sgjtvk09ref08dy2vjh63k');\n        console.log(validateAddress);\n      } catch(error) {\n        console.error(error)\n      }\n    })()\n\n    // { isvalid: true,\n    //   address: 'bitcoincash:qrehkt7eh350xt9xa499sgjtvk09ref08dy2vjh63k',\n    //   scriptPubKey: '76a914c791d963c616f73a02047b25ca744741c0b3c67a88ac',\n    //   ismine: false,\n    //   iswatchonly: false,\n    //   isscript: false }\n\n    (async () => {\n      try {\n        let validateAddress = await bchjs.Util.validateAddress([\n          '17fshh33qUze2yifiJ2sXgijSMzJ2KNEwu',\n          'bitcoincash:qrehkt7eh350xt9xa499sgjtvk09ref08dy2vjh63k'\n        ]);\n        console.log(validateAddress);\n      } catch(error) {\n        console.error(error)\n      }\n    })()\n\n    // [ { isvalid: true,\n    //     address: '17fshh33qUze2yifiJ2sXgijSMzJ2KNEwu',\n    //     scriptPubKey: '76a914492ae280d70af33acf0ae7cd329b961e65e9cbd888ac',\n    //     ismine: true,\n    //     iswatchonly: false,\n    //     isscript: false,\n    //     pubkey: '0312eeb9ae5f14c3cf43cece11134af860c2ef7d775060e3a578ceec888acada31',\n    //     iscompressed: true,\n    //     account: 'Test' },\n    //   { isvalid: true,\n    //     address: 'bitcoincash:qrehkt7eh350xt9xa499sgjtvk09ref08dy2vjh63k',\n    //     scriptPubKey: '76a914c791d963c616f73a02047b25ca744741c0b3c67a88ac',\n    //     ismine: false,\n    //     iswatchonly: false,\n    //     isscript: false } ]\n    ```\n\nThese utility functions can save you time and effort when developing Bitcoin Cash applications.", "full_doc_id": "doc-a6c96f554bcb976aae525ee212e82d4a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/bch-js/gemini-blog/utility.md", "vector": "eJwFwQt0FNUBAFBIJQWXZBtCyCb7nZ33Zt6bmSwhQoqahkVojgkRksJBBD9IAAUSUi1BbbXkRPkJBptCkl33N7NvZt58NiFWfooiSAJIlJ4qxUSg9lipTaTgh+MhAu29E/ERPK8nl2aV1trVUhi/jh4x5mSy8TPSO1xs2tF0odxHOko60fzgz+1OvyNQg1Uaotv4Cjufv4DHGA931jNkOa0NhKq1vp8ZdfEG9EbyFGzkZgV3SwvY8fhzuwfcVE4kvivZP53R7oVhVMOtd+0QbXEpXCl9hWYmQHA111XAoMtSDt+Bkuo1TwUeAiNkcWo6Oz7wlJEhIVngnnZVqhqtg8dLHuQ2xOo9tzBnOVMUznI1sk8Fr9Nn5VkxJ50Ov2HXp8rQMvieMift4iL57xb+xRuFy5OVxlYzD35tjTPvp2foAF/E5YCjvjztiuckmRhfZH7R3opWCRvNAjp132/gBZRWW+21AUq9Jq8cTB3WLvnHYg4+C88GHFtii2IkUCo8iJeKOeTTwLdosn+G9WL+l3AOiaCo+VxwodGeOIwdShdLwL8Fv5JUVxmO9ArwidxFV+Zjo5IesllSXPSV4QZVOrJ7u6p1gvoVLf8fsZ98f+Uv0Ga+xXunqJ/OTb8dmu8dlQ/72sm7oJV+bozQz2gvP2Y5cBPG3OMY2lloWG8p/IXxT/ox0pRx/F6pCVxBf5ImQRf9kBXA7/ljxpNwpvkvu46P8yl5jDvp6wWlTKnax5anbsmPwRvpjzRVgsqPidPmErueC8EQW4uDYkNeLrMZjMZbUYFwwPc3dFqbaK41DoL2YD960diGZpCkOQo+FSeklhSd10JWAjSn2smwIcHr4mKwTjqnri9qQ366IkUCW8Q/pAcyB+FIqgSeQwJ7ylsctYz7LGyGU6fRNOokL6mUpl0N6MDUKQiY7fagUp7/50AcH0IVwmsuzhPQ4vYupTXVrP5W3C7Mz9wdWxRYpw2BjL6ZvAkHyDLhA9DEZKN5xkl+nEDkuazLeE3Ojld1LuDisI7fpB7pydMIeBUOoHPaZv8tk41OSG9xS+b3eIJaH+wQ18CH6CA7Kf1mwG2tjOxgwvYhcw13FF0kv0plefcTT+fOTL54VtmeuKEskZv593An0wV8VjX3IQta/yf0oWl8brsFF/gfMbbDLkkvmcNcTDzMHacn/NeVU1ILnkHqEzuN48IBVRTWkCcKVfBHuQ78LhIxJko+GoWb4ftiVrHmnltwmMyHu+HRRAdqoZV4QCJ0dnGYhtENrYreSfxSGnVfLqkwFKUxHenuNSq4Td5yuy13n7ZL6CTDfAG9T3/ACKv13DDdCGfSPYnzdJHeKPS6s4xLpDMdBWfUS/KKPcu5beLt+Nm9fco1u99xmb+qNsHZ5vM917jdRmWmXXoLtr3B40/QlGRtcQS+bEAe84/CTYEyZpV2mr8Jr1o/KJr0UsBpt8DL7LBWTQ4Ix62U1kcfp0mqdw/FbJaBUzwRuwTEvOPpILgaTHhvs//R48w4gZcX8k51yLQYlPiv7x48Wc/htqYW6wX4HdMjOxUiZtN5uFpxM4PmGXlj5mlvXeBRuDS5TdkSXFJ0k7sJDmqGXi2s1gtd9051+J0c8JYDr16j/5o4gRPUMOf2eOBuFEt/lPAbL0ilGUdwmd3pXaf/fW8VPcSvRdMtBXwWDNImt6EsQt3gjnFXKBq6KJ1X6zxXuka4QrvFfs5s5vd7GtRNzE/iM6iIrvGVwW5zl0aw2lGWzgbHPK8H+8E+doXcWAAB5p6MngmU6zuDRdSxP598ka7BR5gy/Wvuy2Bh6pgxWa0Sd5HlsVy8yvcN6NFXo5XSjN7zAZXPkW9bz/M1iRHvK7EfwUMT1stvF4eN27JlPhtw761FWy1inlDb6MuxkKsCd2tb+UHzYY3N1NFJen33BRpOT47ebW0nDeIWnMcPc2NynzmiP0E3iPcH74ntEJdKo+h7ZWdyodxmdNl7TBH8H+Ysi/I="}, {"__id__": "chunk-e1f1eb9b2b600c59bba0d2731d3c726a", "__created_at__": 1760499347, "content": "**Burning Tokens**\n\nIf you want to destroy tokens, the library offers methods for that:\n\n* `burnTokens(qty, tokenId)`: Burns a *specific quantity* of a token.\n* `burnAll(tokenId)`: Burns *all* tokens of a specific ID held by the wallet.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function burnSomeTokens(mnemonic, tokenIdToBurn, qtyToBurn) {\n    const bchWallet = new BchWallet(mnemonic);\n    await bchWallet.walletInfoPromise;\n\n    try {\n        await bchWallet.initialize();\n\n        // Check balances if needed...\n\n        console.log(`Attempting to burn ${qtyToBurn} of token ${tokenIdToBurn}...`);\n\n        // Burn the specified quantity\n        const txid = await bchWallet.burnTokens(qtyToBurn, tokenIdToBurn);\n\n        console.log(`Success! ${qtyToBurn} tokens burned.`);\n        console.log(`Transaction ID: ${txid}`);\n\n    } catch (err) {\n        console.error(\"Error burning tokens:\", err);\n    }\n}\n\nasync function burnAllMyTokens(mnemonic, tokenIdToBurn) {\n    const bchWallet = new BchWallet(mnemonic);\n    await bchWallet.walletInfoPromise;\n\n    try {\n        await bchWallet.initialize();\n\n        // Check balances if needed...\n\n        console.log(`Attempting to burn ALL of token ${tokenIdToBurn}...`);\n\n        // Burn all tokens of this ID\n        const txid = await bchWallet.burnAll(tokenIdToBurn);\n\n        console.log(`Success! All tokens of ID ${tokenIdToBurn} burned.`);\n        console.log(`Transaction ID: ${txid}`);\n\n    } catch (err) {\n        console.error(\"Error burning all tokens:\", err);\n    }\n}\n\n// Replace with your mnemonic and token details\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nconst burnTokenId = '6201f3efe486c577433622817b99645e1d473cd3882378f9a0efc128ab839a82';\nconst burnQty = 0.1;\n\n// Choose one to run:\n// burnSomeTokens(myMnemonic, burnTokenId, burnQty);\n// burnAllMyTokens(myMnemonic, burnTokenId);\n```", "full_doc_id": "doc-e1f1eb9b2b600c59bba0d2731d3c726a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/burning-tokens.md", "vector": "eJwN0ItXFWUCAPBTHk0Rw/ISeLmXO69v5vtm5l6xh6hlaOqqZQGFPbZItMJCywxNSakDrZG7kRoSj/uauTPzffPNnYt29qRRZgIHo8ykkCx77x5FUVpxE48srbu/P+E3W/O7L+39wu1Xr3cqyZFoNV+W6qFwxnfsDMUXrbLDjSvFVnQB6GQgvlWT6TLUmDOO9ooF7iJztrpWCsB+8nDqM3rM8qTednu5S+IHeAOaFn/NP8UelBcojcB01wVznImZarJbDdEe9mdhZ/Zu46A+TljNzPf3BIq1rbhK/pX7Row2vgwtaRK/3hyGadZZ+xGtG31vdiRq0V42Ll1uHUgc8dXjSrmX5DMxWIJO24vs3/d0C2vwltw0JgouBirJ22gEzhNH5E3MeKOdnE6csVbQqmbRqM5Os77M/Fdk2O5yS4wX0FR4Dd+trwHHxXZvnzObex940C3cOfbN6UU0Ijiewy3XrELnB6zA3uRuNN9BGR/Lafw/IpfCN8kbUEFzfPp4IUVKm6vYYb3TfIr3JXe47cphVC6+7t3sjOqu0808PmG9WYhCvgbmE1rF7weaUCEo4Fv+Iukyh8ITGDawzdlP+fBe66LdpP2YFWl93SwTs2i2+Qf8yeVAu16u1rAh06PisCcpk84ETrU3zKLPpLi4Ij2P31F/SW6Ezc1rNRb8Ul8iK87t9lW1i7P8K4O3wz1Clv2g2gxP0CXScySPDhjv2YtBunBbzjk7Aicar0qGNEBrYlmW1zkqrDDdzHHmk5wI/ulyzk34WkQnre5dzFU0yTsBn1FCcrnhB8PS0mTNxFr9emG13igN4TLQw05L3WftgV8RTRZ1j3NV2KJ9isucjWK2GhV8yqi9hJtDlNZVmVGlB96QA/FJ+a/inaifr4VfGXcLW9wXneXufm0rqwg7El1wi+8l7XLsWXjcmIv/Yp2Mdr6b53/AuT+UxHXhL2BBgwynKM9ak4RS9Vz86cShjDprqrBWzLOmMsNWA7s8VAF35eawB5Jd4g3B3WiSsA2mwX3c2URU+sHaBA9Zo+YiY6H5ljReKk0+QS/7SsF7TRvAXDNP7NMPJ3ZZfzcq9FGhkMzwz9UbwCqwI/Gd2alVUkjq7UL3v7FbzSvJudp/5M5wGcmVP2FLxOVqxvQzbB+dDZ+y/8RXQS2wnuuCp1A6mcwZYHKwGj/GVApTSBBWw4agIQboHUbE9yY6K12Rs8m1tlFtKLfQ3o1Hk76Wh+gIL2XHJB94mEyA5xNHmxmYYX2d/Rk7UxxTAqg2yjPzvCOqKPwm7UWzoFd+x/bqP2rF7lF4UjnOvgJ80FXvAXfIgP+N6RBLSBF9EuXEuhIQ1aF8J6N1VaTWKjFD3tWUo+sYYvxud4M75Rrngp7uLHbvtRY0vmI/k5xm8qmDcn7sVeu8/jJ7RfJMH4zvC+RbY7mGcVp08AhK109w+2M3hwusdu2t/+8qADsK+pKOiSwRg080m26x+QfuI5ssCS8LrbHqURJfNjoyz5tnhRXcLW0fcUws3TiU87mzkJ9sHHCqlYXm9miFPybci55GHYkQN8xne9I4kT8SrAJDfJt5Kpmvt9h7UBosDo1Y11mZIIvOBFXaoDYHXKfUeF8wv0bbuBn2QXsQVkfWmWNkJjxlbYcfgkV0DS2NrACv6SiSl7rPGXRy1MNCgRRI/i24U+4jH+JSXg1fiEpSIdfCdoM+pTQ0zGwmJ4xaiSTuwix5TtwX35da4KaLZfI9ngX8/NifAbXvl8ZIReA2XAubUh50SPXAanxh52q7NlhALkq2XY5Usc5+120jEe2Stxd6mKXaraQTH4OFQlz8N8/IReoS8kbTLEXN3eE80tojbcDjmaVikU8UvfYqPMQDMT/a08Iw5fxG2oPfz+0nUfNA+CHzQfqTtZ3thjpdRtNiA8kHONi2WTiNi+Vj8Xp7aWKl+qh8nNwol6SKm75N7Ir1ozprIygK+dFifN54g/4K5pDHrA48j/4PT0qlWw=="}, {"__id__": "chunk-45a4efb80b630a5be4637d9c8013744c", "__created_at__": 1760499359, "content": "**Checking Your Balance**\n\nBefore sending, you usually want to check your balance. Ensure your wallet instance is initialized first (`await bchWallet.initialize();`).\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function checkBalance(mnemonic) {\n  const bchWallet = new BchWallet(mnemonic); // Use your mnemonic or WIF\n  await bchWallet.walletInfoPromise;\n\n  try {\n    // Initialization is required to fetch the current balance\n    await bchWallet.initialize();\n    console.log(\"Wallet Initialized.\");\n\n    const balanceSatoshis = await bchWallet.getBalance();\n    console.log(`Wallet Balance: ${balanceSatoshis} satoshis`);\n    console.log(`Which is ${balanceSatoshis / 100000000} BCH`);\n\n    // You can also check the balance of any BCH address\n    const otherAddress = 'bitcoincash:qp...'; // Replace with a valid address\n    // const otherBalance = await bchWallet.getBalance({ bchAddress: otherAddress });\n    // console.log(`Balance of ${otherAddress}: ${otherBalance} satoshis`);\n\n  } catch (err) {\n    console.error(\"Error checking balance:\", err);\n  }\n}\n\n// Replace with your actual mnemonic\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\ncheckBalance(myMnemonic);\n```", "full_doc_id": "doc-45a4efb80b630a5be4637d9c8013744c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/check-balance.md", "vector": "eJwN04tXFWUCAHDEWDNREUS4cB9z5/l9M3NJRXyE7Oba42AdUwsRXFN7+kI9lT1YkWRTZNUDpB69XC733pn5vvm+mbmAEtmWsVsZlgJhKqup6NkKjVK3OLobltbvf/jlwr+Dha1zW7aoVxxbyZOSlQlIiR+BdWA8f0P0RuvEN+w/Km1uIdpIstHG7BZVFb/BtXCFc1e61WQwKoe1Qmc536au025Zq0OjmD24Nms096k8lq8JvAVWBwip4nRzkdwJ3wy0gQ620EiLHiep97+h7JS6c2RvdbTazpeV6CbxFNi/d5ynjF/EDLKVuKAhNzZKzNB7tdVyhExWYVNN7DA5SE6qfRO698+V8qKis8Tf5++CU+lm/QJpRjNMv35IsJU1+hp9tnGeDOLZmLJV1j9jnfCWehe6veniHHLdNToLqAP8NlbhHGaFstMah79iymMse1ZwyfVaZowXE8yE0AfmeK0UBeBl6z0ugT6gbeLfjWw10iIl6AGRx81imfGTmg2nSh52MUmGcZRo83BxIJ8vlxZbRdTGvXgHrJCviv36IngXvTZppPOMkqw+xeaSm96r7DLmrDUCNDNhq8Y6TSYQn1RuvKrma/MkHzuReVQraAbAg3aInDG8/T110GinPVoBCcAceCd0xnrFWyUX0Ktguf4qO0COOWmhm+RoLGz10H7/s76N0mmoM/vUTcJ2T4nwtPoCPix3Ww5fbMyiw/QzQaZL2FPcerBB/9r8OH2rxaF69G+lSG/mu8xpZlk8kWYQwOej6uxdQpcwRvyRNfGHob0+Q58H7rGm0jrSLrQbhfBfmecjxfJx80p4iHuSlCiFKa+xE+Fi4RoO0rfYg8phtYi5NzgvpVARjazAuHA8vJ8/a14Ah0hm4HVhjpIEV+Jj2ikkoI5wqu8XMS36upTgtOJuoQAmiJWkgnZYPzHvRl+G4+U0aX1jD/eR9Yj5plFE53OVQIwNoRHyCea4eQ/+wqpwXYIu82cxDzwT2i4sw8WRmdFB3s+MVTY3NJOglp4d5LNlSOaaT3g9uILrhMvpdLlF/9g3Rd8mHDJKmQr+uLQQgaq6WDAwABLlWoO4rsAk20deFBvRX2Gvd4J3WLsN/WQbfx1cMqZbk/1jhJTAvSgC1ptt3vtAQ3pDeIz8Az+fvyOmg8nxFdw70kVlIpxmXOQAWBBN3dUqdSqIPm+eN0thVAlH1uAl9cOoz/xk9y2hRiuQJbLE3U3PoyrfQzIj59IiE/jb8F8CB+ke/qDQaRwNTVJ/cAbZzW5ffQlYvn+LbOsB8x3zYZqTdVto593050lvZ74Cc9l/MAw53bgCHcGz5Fb/HgwwEyhrnIuP8afQAVslI8x4eHX0dORbLlWepK6zR6nV6AYd7e+IfKjVaYoVszhpQ+PGeJqQ37RKx6HWSC1q4Um0GieBI54KMMM3TcIoDq6JBh22O7nLaZ/F65XHuI7oWn2+cMb62qkmkOy2XMzuWD+4nw373yeRJkfY4dvZUG0WOAl0jHHUiEp/Jg9q6bGRdk6wUkmU29Xn8M6MRDTWWAqCaA5eJQyDIaPHQ7wx86F4Hsk3n0YLMv4rPGyvpC/Ap/BXQp59u7EJ3Mi+z9okfXBgwGyFU9h+9wIr4PyHlCtXtA5lnTYHX0C9ewJiHm5RdjUvNIOxQdcAOOnjM5LFFFBcNyv9klgbeVZfqlhyr7sLjZ48M2cI/ohaWRmdgHfMVfbnxvf+B7UN9EX6Oe/y37Td+HG6xrGNLaEpZo00Fq6N/Qn+ja1Epb8vO5e1WS/ZOyDMcC2TnidJRqF1NfolMvhScVTDp0K9kIT63SeEmWSLdgaO5/ft+oNz+e2tuhIvc+c3tPrjRi9cCo8Kllaa+b4xO3PI83/xOzpsror3mF9KLzXkoQVsufaSfyURFUvvy0q2BqnkXDTzneu4C/2PXos9ilPouQN97DGzU0izLqRe4x9v/BWwvqB3r3JSquenexiQwA/S78hMUox+A3VxpLo="}, {"__id__": "chunk-e2d03dbc6d126b393bd60d4d3837f6d4", "__created_at__": 1760499375, "content": "### Post 2: Installation and Setup\n\nNow that you know what `minimal-slp-wallet` offers, let's get it set up in your project.\n\n**Installation**\n\nYou can use the library in both browser-based projects and Node.js applications.\n\n* **Browser:**\n    Include the library via a script tag in your HTML:\n    ```html\n    <script src=\"https://unpkg.com/minimal-slp-wallet\"></script>\n    ```\n    This makes the library available under the global `SlpWallet` object.\n\n* **Node.js:**\n    Install it using npm:\n    ```bash\n    npm install minimal-slp-wallet --save\n    ```\n    Then, require or import it in your code:\n    ```javascript\n    // CommonJS\n    const BchWallet = require('minimal-slp-wallet');\n\n    // ESM\n    // import BchWallet from 'minimal-slp-wallet';\n    ```\n\n**Instantiation and Initialization**\n\nTo use the library, you first need to create an instance of the `MinimalBCHWallet` class (or `SlpWallet` if using the browser version). The constructor accepts an optional mnemonic or WIF key and an options object.\n\n```javascript\n// Import the library (Node.js example)\nconst BchWallet = require('minimal-slp-wallet');\n\n// --- Basic Instantiation (Creates a NEW wallet) ---\nconst bchWallet = new BchWallet();\n\n// --- Instantiation with Options ---\n\n// Option 1: Using Web 2 REST API (e.g., FullStack.cash)\nconst walletWithOptionsRest = new BchWallet(undefined, { // 'undefined' creates a new wallet\n  interface: 'rest-api',\n  restURL: 'https://api.fullstack.cash/v5/' // Example API endpoint\n});\n\n// Option 2: Using Web 3 Consumer API (e.g., free-bch.fullstack.cash or local consumer)\nconst walletWithOptionsWeb3 = new BchWallet(undefined, {\n  interface: 'consumer-api',\n  restURL: 'https://free-bch.fullstack.cash' // Example public consumer endpoint\n  // Or connect to your own instance: restURL: 'http://localhost:5005'\n});\n\n// Option 3: Using an existing mnemonic or WIF\nconst existingMnemonic = 'minor bench until split suffer shine series bag avoid cruel orient aunt';\nconst walletFromMnemonic = new BchWallet(existingMnemonic);\n\nconst existingWif = 'L3BUek8oq1iijZTkfdRYo8RDxEe3PpB8MyJnh2FSGWAoCjAffQCp';\nconst walletFromWif = new BchWallet(existingWif);\n```\n\n**Important Initialization Steps**\n\nAfter creating an instance, two asynchronous operations need to complete:\n\n1.  **`walletInfoPromise`:** This promise resolves almost instantly once the basic wallet information (keys, address) is generated or derived. You *must* await this before accessing `walletInfo`.\n2.  **`initialize()`:** This method connects to the network (using the specified interface) to fetch the wallet's UTXOs, balance, and token information. It's essential for wallets with existing history but can be skipped for brand new, empty wallets.\n\n```javascript\nasync function setupWallet() {\n  const bchWallet = new BchWallet(undefined, { // Using default REST API\n      interface: 'rest-api'\n  });\n\n  // 1. Wait for basic wallet info to be generated\n  await bchWallet.walletInfoPromise;\n  console.log(\"Wallet Info Ready:\", bchWallet.walletInfo.cashAddress);\n\n  // 2. Initialize network state (balances, UTXOs, tokens)\n  // This step is crucial for wallets that might have funds or history.\n  try {\n    await bchWallet.initialize();\n    console.log(\"Wallet Initialized Successfully!\");\n  } catch (err) {\n    console.error(\"Initialization failed:\", err);\n    // Handle cases where the wallet is new or network fails\n  }\n\n  // Now the wallet instance is fully ready to use!\n  // Example: Get balance (requires initialization)\n  try {\n     const balance = await bchWallet.getBalance();\n     console.log(`Balance: ${balance} satoshis`);\n  } catch(initErr) {\n     console.error(\"Could not get balance. Was the wallet initialized?\", initErr);\n  }\n}\n\nsetupWallet();\n```\n\nWith installation and initialization covered, we'll dive into creating and managing wallets in the next post.", "full_doc_id": "doc-e2d03dbc6d126b393bd60d4d3837f6d4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/installation-and-setup.md", "vector": "eJwN04tXFlUCAHBsoVaPbwX54HvO3Dtz78x8BJKoZHkSBWR3XUozXM0yw9SDD05YbKghWlB7VrHwwfee970z8wG7rWnBMTuRWUhqxBEwH2VSZqtincwe2/b7H34z4DJpbftN54yYtCvgCXgFXbRWOp941gFO0PgVWplg0XOSodzHp9Escw4cwenwhjkWnM6q5LbEHrW3cC9HpjgHwqvwMXrK7qNjYwfMSpKqXURL2WDuC0JR8HOrBF9RU2L/Ru9JV/kWRtJO/CPu/Eu6ikJwbc5o5aT8bbxOSOXjIJcrZTeh80yNP0Vqc39Gr7BPyB3suHgTu9i8FVwOljDV5k15RfBpWJKdqrUof7ObEu201OdS7LjHzLR3ml1aAS4N1kWOsrtoNU5ayUQFOkOum7eEBeLn6DT6u5RtT+Ca2Xq0m0v1PUkG7Y+kCDnc+lmoUat1r8ZfMKWMaS1jp3sbAJWP6PcybRKyxkdZo8R3GD1CJoZ+lNfweWhE8zOTSWfQNF8SBTDG2cFj/k9OPywWKtlF8CtrQB0g/ZFcfgg9JY42anGO3h8d52wFZUKSe1beg1eq98A1zv14XTRNKVBedWRmgvDnQJ+w1DRbChMJbTrzU9sm4S6zzNvHw8BbUoM9aO2WO9Ue3hCCBOj36QAN2TcSqvIpyJa3OyB+3bykfkJj6sNMXawx47/oLnicG4Q2OieHcLl3RGhO3oxuDRv0OfsgeFG7M9VEN7wVen061L4yG0m+gVGELsEHAlfNsN2VmG28mZhs1MNx7tSDc+EbWZNotYcBT+kn3MN2ml1NX+HWKjWwj8yKnYPPk0Ow2B+33eg7jdEmwXmenc4BS9/LCteCLvUxLc9YJ7zt2yvuan3G1w4/tO/wr9JiSff1oJP8mGSVfofxar3m88IIHjCkeC5ZaPXgwpevBcqi/fYHVhJnZr8kYnEy3kaWwGJ7TdsO9Uu6HW/gx8I66HHvC7TYN0kJyRGH8DdktOcDrg3OFH6hYbiI24uPyxTV+mfoJ9UCV7feJSyi95hL9bHwrNHDlFsxcaNRyM9mOzh2WnViKPADXBmbL44KLxAiuIrbYL2l9AWu0jFGOXd/oD+wkZ/ne8JiAl3GLfgMTtrHjQuezcps6SFrBI3aty/2T3YSyEPt3BGlNVAFvxes5DfcZM+o4P/2ntlfoZ3zrzJK9fWgFh9WL5Pf6AB3Da9HctbteDf9FpS07kQNmpcPxgPkzMFedToYJVnCCXOnNgP8RhUxS6tLaGIZeSVzm6fBeojzZ0wRTuNTeDWfr8lTxpOT+t37bsOOjNpIIvqhHELrJ/a5vmR8crE8njps4etd8XfDndIXShNNhQXWfoWaP8uumOk6y6YZmdJGqciqQj369eY9uhAq0tvMFMeVfJevlGPWr/AgV88vlS4xQxmL0XvRdXSZ+BdvhjjXt5xZSY+5H4cdhNVvS9+7nrb88JARBf+Rt2qbtAetYZrh5BHKFXFviH6+ADTxrbAzzv3hMrpM/kp/JD1aTvZqMJ+0BuaPybf2wHsxH5yGmmJX3EM0pjfAxXQunx5eAptDg9EBPEW5kOylamzYnhPZxZ/SiHoIbPazoXcCCzybcKg1P6qCErA7kYE7YbY4NX6WHKPfCbM8TbCR+OwV5gRvOfpah3ALqSPDZAd3XpwxdR6f5+mWcvVpquP/2H80GgWnuOvcMa0qpxc/Ll7QuvUK/wrmZ2olg0ol48P55LxyNDLTNOjm0A5ySLcbP0bprkVcBgRTZ/Kv7X+Yv0Mm6jUgU3nT7xJ269nh1zO/dh4gw+b7zHb+EVRvblCImNWSwnWwXcbCP14EvZEh5iwt1FL8USf8Gu+ZY6RZ/Xyhu52fpT5Hy0k9U4QCDDYetHOdWq8izLOLjEH9CG0jj2rZUgNZrjxGms2Q00cEZ5eRTo/aALgTM39f+E5YZUvlGv0X+5Krzmzw351wwMKcGrwKAH83f0F5wGol24xu4/8Y2KWu"}, {"__id__": "chunk-a108f2704f89dc8ce980a09805e08b46", "__created_at__": 1760499381, "content": "### Post 1: Introduction to minimal-slp-wallet\n\nWelcome to the first post in our series on `minimal-slp-wallet`, a lightweight JavaScript library designed for front-end web applications that need Bitcoin Cash (BCH) wallet functionality.\n\n**What can it do?**\n\n`minimal-slp-wallet` provides the core features you'd expect from a BCH wallet engine:\n\n* Create new wallets, import existing ones via mnemonic phrases or WIF private keys.\n* Encrypt wallet mnemonics for secure storage.\n* Send and receive BCH.\n* Send, receive, and list SLP (Simple Ledger Protocol) tokens, including NFTs.\n* Check BCH and SLP token balances.\n* Retrieve transaction history and details.\n* Burn unwanted SLP tokens.\n* Get the current BCH price in USD.\n* Write data to the blockchain using OP\\_RETURN.\n* Verify if a UTXO (Unspent Transaction Output) is still spendable.\n* Fetch metadata associated with SLP tokens, like icons.\n\n**Who is it for?**\n\nThis library is ideal for developers building web or mobile applications needing BCH and SLP token support without the overhead of a full node. It powers applications like the `bch-wallet-web3-android` app and the `psf-bch-wallet` command-line tool.\n\n**Infrastructure Flexibility**\n\nOne of the key features is its ability to connect to different backend infrastructures:\n\n1.  **Web 2 (REST API):** Connects to traditional REST APIs like those provided by FullStack.cash.\n2.  **Web 3 (Consumer API):** Interacts with decentralized infrastructure via the `bch-consumer` library, enabling communication with services like the Cash Stack.\n\nIn the next post, we'll cover how to install and set up the library in your project.", "full_doc_id": "doc-a108f2704f89dc8ce980a09805e08b46", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/intro.md", "vector": "eJwNxntQFGUAAHDLnBQfKALewT329vl9u3u+TdS0QAoNRWBQU0sbEBkth0qlSUmixJEsTI8DeZy3t49vv293OdOaTLGiMkVFJxkbobIybawpGQnNsCbq99cPsFF5xHs18SSptO1DuMjf7Vrs/GI9IX7Mi7QZpVJO0bV2Ar0faMY14ymjx+aCcWqKbzI31dqnThaSnbxIRqDDrHdlBq+F+q1cplcY7z8B42ih+Ig2GHT0AfmcvU0YpY0Dr8k+oVw9iuPuHaiwtWfKAvn7tE+D9ShfVSPvT7o6qZ1EwCf8ADcXD9Gq0Ob+FsW9W7wl6l6Uz2Ub60ER/tSsNn7RO6dk13cxw9kc/TNVkM+ARFJtvowNU8EfsemAYXXIGNOpJLUrvYZs0AfcXjKeHeKmBZ/0arBaqsUztGL5tNAorkw77OSQN5gku0y9J+SaL8Uug51iup4VfQ8YE04ESo0NdinPs/+QuUhrDcU2pjYbdiTgHgd/c+0iF0C32QtPSF+Ac62GWi0O44ecGukYexWOkwzdjl1WBphEscU9Csapvvp23EQva7skrATfRL5uvAvm4X2MJ37G6+dS25qNh5xy/xa5n9wQVzqLvXmMqk/VfiCJYGSkK32HbzedDA3cZ81hm9xFepJLdr2EfahEJqREvaOu49/R3nGGKc+Yp/VvrbF6AzVvzBdKXBjpV6RV3GHPGnatOIvLEOajxpafECFftdqwgizUZZiQNjPykJEvfoAHwh/6U+SP1H4/tDu0sOUme4wEejP+DHzsPU4vB8N5T7ND1/pew7vgGPSWEyQz1HyrVS4wCimLF2KzRT81PZYmqArvUqjr+kxrqcOwO6WqoAK/Q6k4gwlhA/RIqd72UK5SSjHkrpQIekQ3DKHPw48TYmRY80GCGNeSPFhbo08UBkEWuOk8bPyrAe6CMparFDLFs2N2B163FmgLUaJ9JTYzmsCIyVVpWXyXmq2v870d7mjJZofFfoOzubvSTU+h3qn2Sy/YbU2LtfnaNPMU9x27ScjU28mx0NLYaKmE/9lqFNu5m5Q7dod7MvUW1W0srVumNKNu5baowufkciePckmU9TbpjE0jPfwo7edIZSDfx1h58AaIKk+h7cJyjywOGbv4DJTgzoP7tSgmVADc59dya+kG5xuxC8TlwUCKUNPSwW5qKjy4DL4ul5HOaBV5GpbL9w8dsd9vvsrUwRpuK0yhSqGOq6mtLdnSPP5feiv/tbPfuCZA42HxeMN57hh4yzqpjOQ3O7dQQc2z4D57dKJPLuSGtKvkc41li/jnAwnWRGcxN0moo/7i31ROkg/oU1yWPIKrES2+WNbStzVXSlV2CRUnP5rbUZ+9isnWVtMV4gWjQZC1m2Slt9bOsZqkV4wDpIrfcPAP57BohAVcJKd7srSNAeBbj23QwIX5A2DQU6dkwjJ3n9MHplGrUW/bDngZ1fnq2JnMGetxq15/VTnsQP48PwGGxD2SyzqiTXQWhFqoXY3L7Tt4P26jaNSZdkE5QyrJPXUVyBGG+H1NzzRElGJ8hcolvVFOvyJfw70NLqFNXGHJ+IqVre72bQLAGoXWg8o0aG5Sb8X6jaMtX1o5SpArR26gsX+LOSTuLCcVnotKu3Ix+YBxUmHIDPkB/ZKwyHhBD9sVgRVa+55il+46Asvwi1yR3EXvQL+zF+VJUMKXJu+R/IG/6tOSQ9avbI61zDqr/pnSz14irVYjswLsdbbCOf+/i9voH6YsAWdrr0cy+fn+F5FIhke3N/uU2Wbuu5et2/6x6ix9vbmEjZJx3gmcm83lqrR8nICmBn/HHahCqYZBbhGaywyCsNOCi7nNzHH7NuTpsJja2qt227dgkpxIq9Y5VBA9PWLL3qXmknSZfhSPNhTTDyh8UHolVokM6wkqiB8zR5qzHjx1aDWSiUxnwp3knvA8LkM+9V1YzCdSQ/4f5AJ2X/TAIY4toF/G450NaA36Dzdynbw="}, {"__id__": "chunk-534b09eeb4c11b45946c53951c75f7a6", "__created_at__": 1760499413, "content": "**4. Other Utilities**\n\n* `getTransactions(bchAddress?, sortingOrder?)`: Fetches the transaction history (array of TXIDs and heights) for an address.\n* `getTxData(txids)`: Retrieves detailed transaction data for an array of up to 20 TXIDs.\n* `getUsd()`: Gets the current spot price of BCH in USD.\n* `getKeyPair(hdIndex?)`: Generates a specific key pair (WIF, public key, addresses) from the mnemonic at a given HD index (defaults to index 0).\n* `getPubKey(addr)`: Attempts to find the public key associated with an address (if it has made an outgoing transaction). Useful for encryption.\n* `broadcast({ hex })`: Broadcasts a raw, hex-encoded transaction to the network.\n* `getPsfWritePrice()`: Gets the cost in PSF tokens to write 1MB of data via the PSFFPP IPFS pinning service.", "full_doc_id": "doc-534b09eeb4c11b45946c53951c75f7a6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/misc-utilities.md", "vector": "eJwN0o1bFGUCAHDu/DgJRdEVEGZnd2beeed9Z2ZX80JPQ/PSPFPp04/uTDMT88mvhz6wErw8fahUlBAWWVx2Z3fmnfednUURS+Xh1BAqog+1B7Q0s8evKyvFs0czs7vf3/BrEkDgVvNNelvz7hkiXELXo8DezXRMlN2JCUKMPsT+xu+Ht4VzfAE9aD0f24Mv5r5Mlyay3Cm5M+Wt7Cd+tTmhCdBHA1NoLbtd1w/uqXuPhcy5GuMq9T+BQ7grWc5fk+f5/g0kXCvhipPyIJRmrQ7M1UvgDL1dC416y5ykdbLrpBl9BNfxz/CpiM7lJ4+6+7j/grrIsahfm8Vm6Hnismja8E35Isqn/fAK5TFtWWpwMB3JicnmALecddgbwQjzOXRdSvkuoQn5vaiSnvbPr7wj3qzfbS4CV62V8Q36UOIxLuxsEz3Kz+p42lU3mByhCv0wFo+sUEPoezydsHiRzEMeHzTjbFo0S+ph93GttNm6AIKhFq+r/K79KL5Ng/po96hyVP9G8yU+YGP0nVnP7L6OWvQuNR3NYZfJpUR9w9cgJqTku9np6LAdkj93y7Ucfd/QE2b1yEHuD+GLZjH3FziliSfMCjg/or5EpsolDnie9kuNG9EiH6e3OF+gYrMw+lTgCJ1hPy9ONbutSTs/TLaQw9UBfra1FZaGp0sL8JfhiWhc/JBQ7N7DtvmB1SukRg0EvfwVKQ3dSJQpo83s0LNsIfrdCSfXyblojudNMEhfHqkTwjSFjm/ZCpqtN0ZV+F8J1BJAjrnZNBO8QetIDkgBkNHBvZs3QLG0s7UepxscsBVHtyyzktbgfbwqLdqlN4zDA8W93FazxHgwcr+SQe8FNc4C6UUxV/sOK1Y5qZCLDQHsqJ4BzptDnDq0jurojv4Lmq2eiLxem2DV9qduJU6J08kW9RyJkTpUKqbhW4kCt9y3xP8LV4A+w9V6HzkkDXcbaEXSH1nI98ePGmcdO3t7vlF/EnbY7XAi6Uu8j/3R98NbQGmE5I8Bm8B58TSpoDuEF6It+By0zFXGsqYDkV9REgbUv7MafR0+DfY7hKUZAese2Oi/w1XaiByWfGSessa65g+J29mSpiK5yGRyOjpjnKEePSejKHczmuMTWbc4u6Zdr6Jt2ky2Rv0eNHGbRn2ndKABcouc5Q/HXxn8Ejymk4iEt1nLrLWRj0lIHRtoMcpoSTJDmK4PUv4Ry6Z98Ge53cqDkjA3+HaiTd0RcwMp4eGIT4PuW2I6ao0c29BmDkSrgp/T9dFGNQzmeMuFBrIcPez86/8XF4sBeiI+ln2FHjT30CfIEDtb+FadBqPG/ckUXW/eBUvqe8BFtT9+hD3FMz3NtYQ3HclJo52N1N9LfhJ+FZaPvAYWmIQuEi/Xn+cXY53kODsjraHa6GofpH/EQOnM48UOIUOpcr6VD0o1uA90id8493FC+vjUGnkY2GzNdk4h0TnuDVI0tMQNJ9tINrliB0F/XIkzUSX62s4FrvLPxlXaB5s51m7Ns6vUMk8rOgVv0HC0hxLv4+p2fDJeTO6au+gp+U5S8k4GGNWSp+Vu5TUxd1c/54wbZE9whbiIFYaL1RYDKQcTA8wN/i/ih2hTLlD2k5e0icZG+IhzlZxKzjJ3WMOxN3rFLGN8bLJW5bmprXfesxNMhbecvfCInank6y59AHwiLkdt5pOxP6j56nw7rtegF9BlOvWd/bREFaxSt78RQd3G0eQGOE4ZKN5L+vheMpaOliega85S+BB04216ntRJj9sjE91iE4z6R8Y+IWtpMlRlpdkeYy9bCsezle+UYehd4Wrul+hVI0fOU1dxa5XxlgOH+QpiPSLvt7gRScVb2pglj8ubT7uMTLhXao1cYJPcQnp1+JKGEdbC8OV4kPyVjrF8Qk/8+LaZjKe8qzfOYot9S9lXWVX1r8WidhZuxgVmFwLmb+RE7EX3AX4q5ODrwf/AG/IBNkwpFDvpn51pyS3sf3kjmnw="}, {"__id__": "chunk-25179757ca076a010f40a07beaeb21c3", "__created_at__": 1760499417, "content": "**1. Sending OP_RETURN Messages**\n\nYou can embed small amounts of data directly onto the Bitcoin Cash blockchain using the `OP_RETURN` opcode. This is used by protocols like memo.cash for on-chain messages or by applications for signaling.\n\nThe `sendOpReturn()` method facilitates this. You provide the message string and optionally a hex prefix (defaults to `6d02` for memo.cash posts) and any additional BCH outputs.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function postMemo(mnemonic, message) {\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n\n  try {\n    await bchWallet.initialize();\n\n    // Check BCH balance for fee...\n    const bchBalance = await bchWallet.getBalance();\n    if (bchBalance < 2000) {\n      console.log(\"Insufficient BCH balance for OP_RETURN tx fee.\");\n      return;\n    }\n\n    console.log(`Sending OP_RETURN with message: \"${message}\"`);\n\n    // Default prefix is '6d02' (memo.cash post)\n    // You can specify other prefixes, e.g., for SLPDB: '534c5000'\n    const txid = await bchWallet.sendOpReturn(message /*, optionalPrefixHex, optionalOutputsArray, optionalFeeRate */);\n\n    console.log(`Success! OP_RETURN transaction sent.`);\n    console.log(`Transaction ID: ${txid}`);\n    console.log(`View on explorer: https://explorer.bitcoin.com/bch/tx/${txid}`);\n\n  } catch (err) {\n    console.error(\"Error sending OP_RETURN:\", err);\n  }\n}\n\n// Replace with your mnemonic and message\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nconst myMessage = \"Testing minimal-slp-wallet OP_RETURN! \" + new Date().toLocaleTimeString();\npostMemo(myMnemonic, myMessage);\n```", "full_doc_id": "doc-25179757ca076a010f40a07beaeb21c3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/op-return.md", "vector": "eJwN0ft3FNUBAGBDgEOEAsE8drOZZHb3zsy9M7OLHKQ0KSRrDkGkCSmIIC9bi/FQiIenQGIkniIgIJhakmySfczs3jtz78xsEuCARSiFCNpWTYUEtLQRQQvSI6RpGkUboP4F3w/fZ7kbnBanKLVOHDBajROxVeZT4x6xVNGUmZpJ3rKnJx5JzfN71K/JiDbeFwS96nVpsvJv1zC2PSv9J+kLcLzpsUPectaT93tjNr6pbPIRcyz4l7QZHPHM9T+V12Bki5X2E/KhgpPBA+Y8ZTpdhz6iSXgLzYkNCkOgnhidddEhbbW8SLgvf8D+60/yDWgRC+N9PIzWe6/wmwJBJz/4gAvxR1LfG+NhGJfBTN9WHHU242umzjeZ28k0DembYD/7C+z2ztROkO1g48QsuoOvjNfGk8Zx54xy2soBB9BVvcI4JmRKTYLbP4b7Qqqj28AXoJF1JnMjaXrIc4/025dgMfsWEr42T7Nn0iTrF9LpYn+XlCZ2oQpjP7kH9iaH+de8U8mpfA7OSvRFOPTuD8bH4CLaF7uP77t/bSwxdGCiN9lSucnJRdvw5xBYVUJacw0rTyxUQyA70kc1VhIuIYzfyVbYPtcfPNPgJ3SSfJXw1vLGt2mJUqx1xoPtffCXUyfpu+hmllFYh6v4oPFs/Em4Ge/GPdqH8Tq5R28VFoHe1A6xNOmxYoFlaCu4pe6RbgiD0dFkFJiiYZFLys5N/EpBjPwZrQTngIe85P+Zd+wPL+ei7cJRViQoSp0zgzydGKDujptkljgkdHrLcYN8W3pJnUnOgomqlZWCIKzT34TjiRpwUUvRJ9w8fB69l8BibfunTgO8ndwlFSkNaj3i6KAvH2HlkusspthP/pNXoWTKs9zLfG72auC2sypwxngxbxreknM/uZG9n7WbfZbIRbu5o/KSg+X2dT3kfz/nDfNsTqF/qrgmMpu+LP8xMFo6CK5Y7fpX8HxsCr2ocPoJ8ltpAH9vQP9iSmS90C38TtzlrrdGSCcdgXfRUH5ILoMZTY2RedEo6dYmaBJZ7zyDGbujfS0PRorZVXmcJBb8yFwjbRcbsz9i34Xvuj7V54t12hL9Nq8oK4VtHjnybWKleCCabjbHW+wj8lcHc/RqsYMKXD87qf1PlgWv5iLnpBeEbeEtaJw4vy1EcrGH8rjITitokmvRQ5GMRL2ZBlqUdLVbOE96wV2zOrAQnfYW8c/brwi9+sfe7Na/4mH53aQRN8S0sCu5QpkhOakIEODl9kp/P/Wp/Sgj8SepQ5hI5sq7hOP6anyd729sJgXYajtmvQffUM6iWHO2X1O3Sm6BozuMUfIevIGUKVl8ceK1wtxAHysTerXPzW5Wxkal1uEMcSCfmc/J81CONV1dblR1BJT0yAU2gEXrOUdSM1wr7LXKJ4lScM97Jr4QQ+tw23e0XnzazNWv0Dn2l2QE1cDVsQ2YgcOwmD5K30x1apeYCZFw2djaUkAr43OFB24blRo3zGPh3Ky/4zj3UOHbwjJnLBqjt1jLXVvAO963rBn0G+R18hSY10om+3tI2LyM5pNfeZ1JnLkWTZB3ov32aTqm9W/yLMXilga6yEG0XFljbFKrknnOYe0BGoouJafUkDlVKzcfNw6B0dYiOlo9wvZA/6g7+BKTEhe4aoMVPO58aXuccP55sBe4QCaaIEbYZOblF6BVxgfRBLThsPGs+otAhTyc7CmsFW+g06xS3+f9KeU6/hlbg2/AFf5SrgvP4dLZq/DHsVP6WvYoe9h8R8pAL3ov0HrW3KqoKa1aOEoHIQTtKT4VYn12je+xyBRuAesBtzy1ui01kGPCA9CkVugLTL5dtDe6ZPB6dIl8De5FEekKWOdkWqX8ev0nRlD4MF6yd6N5U2+TRWGf/nMWFJvxHbLe9WS8PrGsva3wMVpDDiW+cVXtp+oM//ms2SCgXoNDWMXV5sgECx/nu7kuG8ApwcW+l3FJ/Li5s2AD/Ye3gerJ/wP+S6Qk"}, {"__id__": "chunk-7605add0c3feb8310175273785b21eac", "__created_at__": 1760499434, "content": "**Receiving BCH**\n\nReceiving BCH is passive. You simply need to provide your `bchWallet.walletInfo.cashAddress` (or `legacyAddress` or `slpAddress`) to the sender. When they send funds, the transaction will appear on the blockchain. To see the updated balance in your application, you'll need to call `bchWallet.initialize()` again to refresh the UTXO and balance information from the network.\n\n**Sending All BCH**\n\nThe library provides a convenience method `sendAll()` to sweep the entire BCH balance of the wallet to a single address, minus the transaction fee.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function sweepWallet(mnemonic, destinationAddress) {\n    const bchWallet = new BchWallet(mnemonic);\n    await bchWallet.walletInfoPromise;\n\n    try {\n        await bchWallet.initialize();\n        const balance = await bchWallet.getBalance();\n        console.log(`Starting balance: ${balance} satoshis`);\n\n        if (balance <= 546) { // Need more than dust to cover fee\n            console.log(\"Balance too low to sweep.\");\n            return;\n        }\n\n        console.log(`Sweeping all funds to ${destinationAddress}...`);\n        const txid = await bchWallet.sendAll(destinationAddress);\n\n        console.log(`Success! Wallet swept.`);\n        console.log(`Transaction ID: ${txid}`);\n        console.log(`View on explorer: https://explorer.bitcoin.com/bch/tx/${txid}`);\n\n    } catch (err) {\n        console.error(\"Error sweeping wallet:\", err);\n    }\n}\n\n// Replace with your mnemonic and the address to send funds to\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nconst sweepToAddress = 'bitcoincash:q...'; // Your destination address\nsweepWallet(myMnemonic, sweepToAddress);\n```", "full_doc_id": "doc-7605add0c3feb8310175273785b21eac", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/receiving-bch.md", "vector": "eJwN041zFNUBAHCk8mmBSMiRD8jd3u7bfW93mw8CnQApUThIEKcFU8QBGRgKrRmiBpuIFBENLZLYRJMQkst97e2+t/ve3t4BQRKdwKQUzo9IqOAYhIhQooOBClaCQCZK+/sffouUx2DGoSmJKjUtvtzzo1KOVhrX4opaJrfAvwqb8JVgFV0g9XlGQktwP7+QblVKZ1/zfw962W0uV1gfUr2DYrFzVeiStzvM/knYCB4I1VaEUGWueCN3qaAqgViRvpoltE+VD+VCbqR9Ip2iBe3C3DXiRPR8znFpkrjF+gqlkrLmFrkCNgn36Gb3vgOv08usKNQkHCNX7HH8KfKNshCeb0x3frY75DLSQ/aKpeBcbBi9rc8AjfZ/zFY23vzIOytoonXoX+7r0sTZKWCQbXDujh2g2/kywNQe7ousN9QCuzJjrVbtHva0ogmsBsfRc7guukoYJe+Lz8j3uJu4hGSqSf0VeMs+hq+E88UCO+kpoGeifdmfmX2Ydx8xH+e67delv7GHEFZbESZbaUA8SNbGUz3LlDK1D/HWz/RxusA0hSzYIScaUqVicjXgcfzIp84TDtN+LtM/J3DfWQHb2nKd/Ohx+2j0BTgaTlEv26vd58Qh6UvuGzsgjQlVoI30EXehutU8Zb1Hvrf/7d0Gu/H42MrgP7h+e4D36SfQLrCCLteuWymefutb+hg4uXcnvC2FYJPiDWcFffRrRaUzhUorQ/6tNc+erL8glZDvvHMVH5zPNdPDkstWjaXWbpmaeUovTrXCic/NpJ9EP7bexTUQSzPlk033rULwq/puu4CbYh+z86MHpSBeKZ/fb4V2eJOBr4Q3hLWRB+j3ZiV4VX4VfEzaGO+6CX8Dj4sfWg+n1YjzcYEstRbzETzJYmLQ3gcvip9yv1B2Rf/oytHyzLMm8ariR6Ee0B3b6p8mvQVdHjeVnFF6HG/iVblDHuF3WZsOjHGmk+LoF/TZzCVosXVo9njpNOw0drQepdXGWbAMH+bWiAJw8ZeEUfNzPEaOkMlI56ZZGSzXe4YbByPmWLobX5+1S+pFTzAilcNh7YzLR462r3uzA6SBdrMGtuCYPCI0whx2qq4XvciMWB1f3lgkfwu6tO/oSqTrEOzhQ9qztBjIgQfKl8Z4cZQuFOeIm3FRiBPfBM2kQSyHgO2U6uAhJY1T6BatQnfM2uwbyqycJqchlmTLlYXoHdRLLwpz9SdDLlgDKtuG0GjkIJfEQ2BB0A3PyTpLTtsC64QhtQFMRtdQTSwFtav37LrIk+4Z0ZhnXuSUOuh6ipzI7GF/0etgHzdE9rZtNgpAjvyK9ZO233yUDeNO+EsBg5mgSn3XKteS8C160a62l9KE+TIda07V8tAkmOf8Qbhv3LW7hCYyVX+P8zIrVhsOWC/GhoAvYxT/FygpL2XN57qM9OAd4Ar+iHrk6pb6tn8K9eAHdsuMi7ubu2IVKM07e//bzf3wVqzUKaKKXmnvTlGkCvm2sEMZYOtCm6XfZa2D8/cXJhpiz1uvufG+98kEKjo7MG9+IHhkpPgETj/PttFH5QLLwK0HmuUnWG30lnc0UuF00k67ws4P90qL7FIzEw1wG9/5QGzxrpFa+FX2SFtTQ52+BfnS1ssrYiXxXHs6NxRcJnXpq8hps91YpV7gn865G/+zvifS6LkcmseVaR3ogpJKFgdV+WzkGbwaHlE3iH+3MvOoOgc9ZW7QcskEZQ9Omj8YrdEZJBAbMbCsZF+i2zlijnNS/YNtzeym/CfXOVYkvyzuJOnWYum6vzN8IeMIPGme4BZl3zdq2b7sG6wD3nH1eSqUB6CWVE2Ko9P6nTQNrvEcgH572SyfyTu3PfXGc+4SZxzK99QrVdqc4FXrtf8/7oZZpkKXOOtpiT4d9+IaXjUT4Sn2r0F++lTNTx+iifhdRmimke4sdrNwwviMtBufyANmDiyxJ1sHvU9b2+BEGAZM6YNLonnGJTjsecS5YJWyQfw/CSG0hg=="}, {"__id__": "chunk-0ac4c63f6bb2f17fb1142bdac48ff722", "__created_at__": 1760499440, "content": "**Sending BCH**\n\nTo send BCH, you use the `send()` method. It takes an array of output objects, where each object specifies a recipient address and the amount in satoshis (1 BCH = 100,000,000 satoshis).\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function sendBchTransaction(mnemonic) {\n  const SATS_TO_SEND = 1000; // Minimum is dust limit (currently 546 sats) + fee\n  const RECIPIENT_ADDRESS = 'bitcoincash:qp2rmj8heytjrksxm2xrjs0hncnvl08xwgkweawu9h'; // Replace\n\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n\n  try {\n    await bchWallet.initialize(); // Need UTXOs to send\n\n    const balance = await bchWallet.getBalance();\n    console.log(`Current balance: ${balance} satoshis`);\n\n    if (balance < SATS_TO_SEND + 500) { // Rough check for fee\n        console.log(\"Insufficient balance to send.\");\n        return;\n    }\n\n    // Define the output(s)\n    const outputs = [{\n      address: RECIPIENT_ADDRESS,\n      amountSat: SATS_TO_SEND\n    }];\n\n    // You can send to multiple addresses in one transaction\n    // outputs.push({\n    //   address: 'bitcoincash:another_address...',\n    //   amountSat: 2000\n    // });\n\n    console.log(`Sending ${SATS_TO_SEND} satoshis to ${RECIPIENT_ADDRESS}...`);\n\n    // Perform the send operation\n    const txid = await bchWallet.send(outputs);\n\n    console.log(`Success! BCH sent.`);\n    console.log(`Transaction ID: ${txid}`);\n    console.log(`View on explorer: https://explorer.bitcoin.com/bch/tx/${txid}`);\n\n  } catch (err) {\n    console.error(\"Error sending BCH:\", err);\n    // Handle specific errors like insufficient funds\n    if (err.message && err.message.includes('Insufficient balance')) {\n        console.error(\"Not enough BCH to cover the amount and transaction fee.\");\n    }\n  }\n}\n\n// Replace with your actual mnemonic\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nsendBchTransaction(myMnemonic);\n```\n\n**Key Points for Sending:**\n\n* **Fees:** The library automatically calculates and includes the necessary transaction fee (defaulting to ~1 satoshi per byte). You can customize this via the `fee` option in the constructor.\n* **UTXO Selection:** It automatically selects the required UTXOs from your wallet to cover the amount and fee. It prioritizes using smaller UTXOs first to help consolidate them.\n* **Change:** Any remaining BCH after the send amount and fee are deducted is automatically sent back to your wallet address as a change output.\n* **Donation:** By default, a small 2000 satoshi donation is included in each transaction to support the Permissionless Software Foundation (PSF), the creators of `bch-js` which this library relies on.", "full_doc_id": "doc-0ac4c63f6bb2f17fb1142bdac48ff722", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/sending-bch.md", "vector": "eJwN04tXFWUCAHATIXyAckW4IJc7d+7MN983MxcMV2nXVyKmHlPR6NS6HZQkbU+etrDYEtc96vbQYGkF83Kfc+fOfI+5M5x8pJYlqYFCx0ysrchXSBZmreHGyWrX3d//8DuLfOpPHaLzuOxySvmJ6mJQTrZ1hAQfWi/tR//ianyOnslfCswil83K4Fic7b3QfrLtFaSyX+Gv0G8SVOprsEuRB/XjGyRLfleaEHY72cSl+qO9pabmUlL2U8XTWK/+FzUmDYhHyUGyKaInF09LQyIaUq4opnc9OwNztTHCQ+Cw/N34yTAU36ilWQFDba0pMuk/qQmmOtuUwni9+zWWFZ2rFrF/xx9GQX9BfLa8Qh+eMtHwvb7DjtBueHvSCRCTY74cOMXIL5qZarSf1YbxdG7QPCCDhAA1tZTV4Td9Vcb5xAF5L84m7/BbWEHiUbg5Mw5ahCHwY8t2XCJl02X+XrYa+GLnhUrWiBsxEsZ4Z7YaTE9W+XKVIHk3uM5aUmygo7B6j2pJyun2UR0bJF5J97QgHS9gOwoP+vvgGs8QOgsIbGNvib+xw9CWFT5ppsQH2j8oGsAxmKG9nKpzX7RHJa+A3aBH8Y/OlUrgI9xroRFyP1wf+lr80HqPxAO3yXjSx62j02hEitJjqZOC7J2EP5TPME5eKxhmQrOT34YNt8lGwJCQ5bsPNeQvUdKl68LVSDvotKaLFdZy+LN5zqqjq8A/4iujT6Ct3GqUCBXrg7TfXAwekGdrf0YK2WQPd8xi1N9ius0+baEKjOtiDT8z6vIOCyfYwkgz1awu/RA/SJft/pKVeW6KMzEPdNicjEnu1nS1Qj3nWYo9zvux33Eb0V1oMut3J7O3k/3oa+Er8KxZwXrlMqdT/iNK40LAit4yH6N3PJNwCfQo95iTQKWxgFRKJhgDF+IB53NyTOxxn5dPIkU6bMb5ifYImW/+J+lIquwmmcl1wqfBNTRP2k3nGGe4aqpIE+Q7mR6xxA/39hflK+/QUdKL+vP0c/z30HWwXFpGxtHHaLdA/EdcF+1aeUNOKVeP58Qx5eOj5IeNz+hW6DJL1Sf5sckFdjGoBJus0c58/UgiDJ/J+cRbT55QLP45+KTIaQ96a6JpyUvyPr1SLqJlcFuwi9yMNIKn+Jrox3AnDOMt7vuUZrk20in81tOD+yy54Krapn5PG0mdnaG4W25yOaZsXkseF1/3toJF8II4Ofx29OeiDaiNLwMj8h9InzCLv2quCJzm6+V+dR/r8dSiL4kLW8K3senCofiiwA5fE71d9B4d0QvkAm5v4vDEN8hadT/6Pes2YslfWKfVIDXJb74y+v8vLpiPBIOwyybUg89a+4R5tN7a7/Lx/eAGPe6fI35hvSCn4vfqLtRAyp3uliHtv9Y4+DdA9RWRM8FGYVVWW1srOSXm5e5GXUjXKkCIu1u9baqxdLVEm+D8qbhg7zyNE0oDDVaT3SHMN8ZObqfTI9eUDVJKGjYNvkdwUeYro5nOLVqY6hT+6pmRKCS77Lm0iitH68F2UGhsjPVbS1O1cCC1x/jBSEeX8QRfszfdGCCNtMnahavbNBQ2cnheKBd+gTpf5/khtOqlcewzd1VTydSDQleop3Aum+Iste+H/sTa4tbkq5jqMS1YfEcbRGucneEK9jj6auoWsAxnSeUo3+5C3WgGdHH7UL7SAveQQXWnOgRP4XnmPONp9CBbxMooQ0naxFJ5teio2Gx95P0p42l7ProMb1kPiRtDkKbAd5AL57FL4mmyixvhNoscXuK/5t6xZ7Z5Lx5hJaDXO0M6Bc6ian8APQpXk/Gmg87leqXNeIY/I5LmvMXG8APwbRJABRnX1It4l/kNrvI2g2q9W9/KPiAncHsiQvtSi3Md/LIxDmeKd+OVZDu7Qd/o2GSU0OO+I3aeFEs04kPsgFgRGG20eeTUEmMsNxgNcSul5cXHhCvctOxheliGwo+FCeaYR4z/AQkOmlw="}, {"__id__": "chunk-e84796d6aca483a0a61b5b917f3471d1", "__created_at__": 1760500820, "content": "**Sending SLP Tokens**\n\nSending tokens is similar to sending BCH, but uses the `sendTokens()` method. It requires an output object specifying the recipient's SLP address, the `tokenId`, and the `qty` to send.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function sendTokenTransaction(mnemonic) {\n  // --- Customize These ---\n  const TOKEN_ID_TO_SEND = '82e3d97b3cd033e60ffa755450b9075cf44fe1b2f6d5dc13657d8263e716b6a5'; // Replace with actual token ID\n  const QTY_TO_SEND = 1; // Amount of the token to send\n  const RECIPIENT_SLP_ADDR = 'simpleledger:qpeq7xx5x3a2jfa0x0w8cjqp4v9cm842vgsjqwzvfk'; // Replace\n  // ---\n\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n\n  try {\n    await bchWallet.initialize(); // Need UTXOs (both BCH and Token)\n\n    // Optional: Check BCH balance first (needed for transaction fee)\n    const bchBalance = await bchWallet.getBalance();\n    if (bchBalance < 1000) { // Rough fee check\n      console.log(\"Insufficient BCH balance for transaction fee.\");\n      return;\n    }\n\n    // Optional: Check token balance\n    const tokenBalance = await bchWallet.getTokenBalance({ tokenId: TOKEN_ID_TO_SEND });\n    if (tokenBalance < QTY_TO_SEND) {\n      console.log(`Insufficient token balance. Have ${tokenBalance}, need ${QTY_TO_SEND}`);\n      return;\n    }\n\n    // Define the token output\n    // Note: Currently only supports sending one token type to one address per tx\n    const tokenOutput = {\n      address: RECIPIENT_SLP_ADDR,\n      tokenId: TOKEN_ID_TO_SEND,\n      qty: QTY_TO_SEND\n    };\n\n    console.log(`Sending ${QTY_TO_SEND} of token ${TOKEN_ID_TO_SEND} to ${RECIPIENT_SLP_ADDR}...`);\n\n    // Send the token\n    // You can pass a fee rate (sats/byte) as the second arg, defaults to ~1.0\n    const txid = await bchWallet.sendTokens(tokenOutput /*, optionalFeeRate */);\n\n    console.log(`Success! Token sent.`);\n    console.log(`Transaction ID: ${txid}`);\n    console.log(`View on explorer: https://simpleledger.info/tx/${txid}`); // Use SLP explorer\n\n  } catch (err) {\n    console.error(\"Error sending tokens:\", err);\n    // Handle specific errors like insufficient funds (BCH or token)\n  }\n}\n\n// Replace with your mnemonic\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nsendTokenTransaction(myMnemonic);\n```\n\n**Important Considerations for Sending Tokens:**\n\n* **BCH Required:** Sending SLP tokens still requires a small amount of BCH in the sending wallet to pay for the transaction fee.\n* **UTXOs:** The process uses both specific Token UTXOs (matching the `tokenId`) and regular BCH UTXOs (for the fee).\n* **Dust Outputs:** Token transactions involve sending tiny \"dust\" amounts (546 satoshis) of BCH to the recipient address (to carry the token) and potentially back to the sender as token change.\n* **Single Output:** The current implementation primarily supports sending one token type to one recipient address per transaction.", "full_doc_id": "doc-e84796d6aca483a0a61b5b917f3471d1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/sending-tokens.md", "vector": "eJwN0Y1XFVUCAHBaj67Hak1X4BHv8WbezJ25d2bAcC21TDeQDCJbNUzNOooWHPPptkvBJhIZqIEeMeX5Ppj35uvO3Pl4nMLKY6WZaLpimJZopWWwpu0Wq9Ja2oq7v3/hV5M5lJ/7ptypiAe8V9jz3G1ANEd42yVTeF1tiVdoH6JKO4a2opHq2PEFSlanCCYksvRy/j2nwVohLSPT6HZuqvd8/Au4SL2BZ/Hzpfqcy9jGGehnW75Hys6Tbngz2QHHVKtgOrETAPc58ry13zqdfxJi/ml/Fd8MeuVtwjnyrXkSrhOm5DRyNR2nopuVK6Qv8RbkjX/Z7yrR1EoYhKvxZm8UaZam6LcnN9FbQzXeME/lKuzT+PXQOGcUPkoPsF2oRhjdEUUN8U/lbXZtQGWbyLMBrH0kfd7xW25M/uC4JeaSYDETRuu52bjAqkwmrCNGQCjJ/AkcUmegHnmVvgrFyTpYTW6p93eMZQTb98YWstGQrf3Z480m7a/wSsdGbYB7X6/loDQP1uA+rPkaqNL0B6Cf/4b/BbaTQpNKqVwt/TboYprQvdofyGK60nst8sc3brLVbpGw2S5CJfYksEMLuwMy21mlMOg+LcH/w5oK6tHPwZXadaMLTrbL0Rx7IRkWd5tHcS9zgzxotwh86kt3mOSGjpBboBy30o/zG7yH/fV4ULuTJHJLYJnWBvZzC3CEfyAvTZnBY6Ej6TW6RQ5wrXixd5MkpJUkxu9BTyjFcLmfAV/ZTHJ6VjNXpAfRODeib/LKoi/w7Xi18skEiy9hO8ErKM5KySIf7VUoD5FFXsRc5S8ydH6yr5PhtEvJDYChfmPfEYjRn7BbhON8n9PjZYFtnCAYQldugK0zFhvn0Bp5DHwSDTnTUZnrwSQ8JQal1tQd5iVrt27vbKNHg6/yqoHo/TcxW1yPWoHsHPc2Gd/52yJBdF48GziLZb3a+8AY0uPBq/DPaBLZGfobG0AX2fuo5ckFsbH0Z2o6tA/9QIWEIvCihdSfJFfrggnqUXzA1HJm8zniRZzrdYMephAtVRXSQd8dbAE/YttqM2dSeUmOqyPTN7cbh6Xu0Hm4y1PhNdhLJjidgTq5CZ3J5MlgwBNCYAo7K3RQLWwPKhzzPXpM16il5t2hbE7n37P+Dcuoxtsnoqu5md5ZbYkQEfYqo8Als4G2U92sXyqXot73JOxFhPfBy3qftVbXdTV0kSoWUzSCjdGn4Bm9DhXCT4P94v//1V2wmnsBvQTXwmn8iLSW0wJyyTzSxP5gzdKm8U3iMHPQPaYfc07oC6TGTZ9rEJaqBWIfc8Pqyxt0es1uthXMR69mN/qW5D9mdZORYoNz3B4y/Z5jiKGPzb3GlVQ4lk1W+Id3HNZz2MNmidVFlbpCZzE92rnuXAdP+jdaLJqkTA04dJV+KB6O7/FPhqshowKrCET4a2Qs3Qi/0zd4g3At/bCRQ+8XlnovegxpwI/gu0KX2X5UHVOgnB4yuvC3WzOkITgxfYw8o53e0WE0G6dSFS6y91mzpYzxTwkz1e3GLqffVpiwm6HGCSNYyhQO8nPpGOnBSTLohmVG+FobaedD7DepM8JDbeepcuND7xYu4Gv1aeDmzj/xC63lZIsbjtQbleQmPdesiunkNXEO/I/4d+8la5JzKVBB/KC2vVk8AZ9RL6BX2XdS10MPwPkFpfCK1j8RS3V0ffZh6DMfEYaVGW5G5tSOe4ievsrtEXx37bafxefUN90W4VGuBtfCOn2pfU2YhxbqvyYamNvU5mSM+wxNpgSqNu8kuV+dq2eZo7RFQjOVz/K+PLaFlgv24X/qva0r5XvZTLdTGJGcR2YoC5EDf0cKxRXCAemQ0R79SJnDVoExUvT3VHJbbB1e7LvsXMDh5PrIX6xlvp68H8kAWIaPa2vS6vbK1EF2kRvlK6xZ5LSzl50pFJM+NqZDC7YU2DXRsFEGjgql8HHzhPwcMvQLTlj+xrlK/gcmN7FN"}, {"__id__": "chunk-e424ca92bbc00062b51d0fdfa8635b3f", "__created_at__": 1760499850, "content": "**Understanding SLP Addresses**\n\nWhile SLP tokens exist on the Bitcoin Cash blockchain, they use a specific address format, typically starting with `simpleledger:`. The library automatically generates the corresponding SLP address for your wallet (`walletInfo.slpAddress`). You'll often use this address when dealing with tokens.\n\n**Listing Tokens in Your Wallet**\n\nTo see which SLP tokens your wallet holds and their quantities, use the `listTokens()` method. This requires the wallet to be initialized.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function listMyTokens(mnemonic) {\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n  console.log(`Checking tokens for SLP address: ${bchWallet.walletInfo.slpAddress}`);\n\n  try {\n    await bchWallet.initialize(); // Fetches UTXOs, including token UTXOs\n\n    const tokens = await bchWallet.listTokens();\n\n    if (tokens.length === 0) {\n      console.log(\"No SLP tokens found in this wallet.\");\n    } else {\n      console.log(\"SLP Tokens Found:\");\n      console.log(JSON.stringify(tokens, null, 2));\n    }\n\n    // You can also list tokens for any SLP address\n    const otherSlpAddress = 'simpleledger:q...'; // Replace if needed\n    // const otherTokens = await bchWallet.listTokens(otherSlpAddress);\n    // console.log(`\\nTokens for ${otherSlpAddress}:`);\n    // console.log(JSON.stringify(otherTokens, null, 2));\n\n  } catch (err) {\n    console.error(\"Error listing tokens:\", err);\n  }\n}\n\n// Replace with your mnemonic\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nlistMyTokens(myMnemonic);\n```\nThe output is an array of objects, each detailing a token type held by the address, including its `tokenId`, `ticker`, `name`, `decimals`, and total `qty`.", "full_doc_id": "doc-e424ca92bbc00062b51d0fdfa8635b3f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/slp-addresses.md", "vector": "eJwN0IlXFGUAAPAyeXhghrC4sLsw93zf7OwmmZIKhOYFRFipeaDZSaZmYV5ZXk8eHkmCILDsOTPfzDfHaqaI9lBIUKkINEtCq6eplZU+PHqmJtbvT/glojJP/l68m/I26JfZRsvLzdXL9Nfp/bANtfPDrIfIlXqM9yK8yWZQt1FG9FveDJ+Rvqn/1CxRzqNR0hA+iS/HNYFnnf35JcqHSTq4ZS9mi6k2Mj01zjOFCHhk/691pFnOzeFHwkvKMOfjVJbyG/M+rBGNui4qVwywk9VcmkZlxnOQFiFfB20cya+mHAoKu+EOxzHtK/FAUgDsENbhsEbUTxepZA8XSpkgLI2ysM3VX8hU/2GjiohfCd4377FT3Kv0LG6Uf17qRukrbqxk8+8zj9c9D551Pi0XeBKAT76nHOAuSTnGjQjN/YUm4XiyQI3KaVIynSseYnMZPm2DfLSC3sVaMzREb7cWidn1deqW5E3uX7k/bNOk+VUVUqa4QNoc4cSNoCd8PjwzThHWmSn+TJAt9cCttjXomnY/oCkZuAJM8w+uvW59Cb3R58gaYlldIvKCUjwO/OYzpEdQg0JyW4xsfJ8+BWZzx/Ec9H3wiGSDlhKCg/V3+Q60nnN6R2CIV3BVVfHbp9NX6wvwBVRCbjDPEenqOZjDx+F2toy6R/HyMqWWtNtWsduZqXp/uJJdrFZQXWKnWu4ctPsWvxfP0BvZn4WP69u1fmmlaTeG95buDPi0lupyZWPiIWug5wv/OOnLSJb2Jue0F/GPJZxkNG0t6CF/UKuIoHwf9bg3g83aBX0aXM+cgg/Tldxp0ouHUSNdmcpJplgZySVTOUI3O1TPgxLVKpYJLXwBW1LbFwoQNnUfyoCTzcV0koXYDmYNjBWSifzqJnyYc1PNXJvYDfMoTm3W3oA/s42MLCdZbwlbkD8yAPxJ7PIMk7Ncl8x5VrzvigKNrz25eBHOJDkyBhXWFIJYkWIMPJCOF48zcQLWJzHN5BIwNzSR/EA+iJ/gXmTWpu1mMrFrd4tahFTXEaOF8tX+iGMZoDfhDu0EtOFn6CyjTR0thfmpyn4wIshRPibTsNhiGMK5XjsoRZvwq2K+7qbuOkR/acTDdAEEGyNPVp3Sb3ML+IFCNhkDW6qXMCXuX5QfpL/L2umIsJhbxW4210Y6iQD1MjWFn296jfHUGLLYO0l/EYlqDPsGaAwVUefRHZGwzQqPkB+IOVy3WigmmD3cQdCCNV+vWsTEUJT5ZtozdeMU5LBTw/FI6YArhl4qj/E3Rc5phLaSs+Ln1Lazc/29bC++DNvJ8dF+Vg6FU1ZSO9V3qlrEh6onGDv5BkdX5CX9NfMsTrBS1cH6e7hX6kDLQtuIeLsGzmtPWnfpB/q30Q/p/OpWLR2csC8EDfwAeaZazB9zrmZi4Huut8VOPUPeFniKb3VK+lTmCHmUCeA6IV9ZTTYF/bWHjA61kLuNB2iDHAeEK6n9mM6U61az8QAXwMvQ70zQu4MLI7NZhexvNfKjcD+tF1juarw1/Cr+LPyI9Dleri1AUx/NAb1qO/YR2VBkZunr0TTzYHCpM8/dCfYJCrij8fgq7JOP8ESSaK1Bwv/Pq8W+mlJkoTVqub6J+R6/xa4nuvEI/izNOe7is8I6aZR5fI8a7NbqK68GP4ETxShjMQ1KCdiBy5W/vffAHTpbXO6pxBhQ4A+9r3oBjrN+cvmJ9kiFBYjvqO5wLF2mNilAXUE1K4yvWbUzJ7Ul9krhohGyWlOcwrG0u8YAkC+KoEMZp5425gz+V9/Fx7BjtVPkcpzujI3eEGODk/kh7rxwsvK20sdsxIn6Fmer2JVaCecByT0UdhpnjGvkzrR0osZxLDQaXQZn5Zm0Az8mXdNuoidsaqSTaQnd4H/icoxE/TTepp9kPlKugBfwUOt3pU9QgqzByi6qMJQHDusz2aJgmb+G9HAX6SrfIBDL7DEnq7XmYus/U7ehJA=="}, {"__id__": "chunk-d5f0031a0b97e935b12976439f6df91c", "__created_at__": 1760499854, "content": "**Checking the Balance of a Specific Token**\n\nIf you only need the balance for one specific token ID, use `getTokenBalance()`.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function checkSpecificTokenBalance(mnemonic, tokenIdToCheck) {\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n\n  try {\n    await bchWallet.initialize(); // Required\n\n    console.log(`Checking balance for Token ID: ${tokenIdToCheck}`);\n    console.log(`On SLP Address: ${bchWallet.walletInfo.slpAddress}`);\n\n    // Pass an object with tokenId (required) and optionally slpAddress\n    const tokenBalance = await bchWallet.getTokenBalance({ tokenId: tokenIdToCheck });\n\n    console.log(`Balance for token ${tokenIdToCheck}: ${tokenBalance}`);\n\n    // Check balance for another address\n    // const otherSlpAddress = 'simpleledger:q...';\n    // const otherTokenBalance = await bchWallet.getTokenBalance({\n    //     tokenId: tokenIdToCheck,\n    //     slpAddress: otherSlpAddress\n    // });\n    // console.log(`Balance for token ${tokenIdToCheck} on ${otherSlpAddress}: ${otherTokenBalance}`);\n\n\n  } catch (err) {\n    console.error(\"Error checking token balance:\", err);\n  }\n}\n\n// Replace with your mnemonic and the Token ID you want to check\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nconst specificTokenId = 'a4fb5c2da1aa064e25018a43f9165040071d9e984ba190c222a7f59053af84b2'; // Example PSF token\ncheckSpecificTokenBalance(myMnemonic, specificTokenId);\n```", "full_doc_id": "doc-d5f0031a0b97e935b12976439f6df91c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/token-balance.md", "vector": "eJwN1I9XFHUCAPBET0zDFI3fu7Oz853vfL+zs4RpVqYR8XzK4a9CKro8Ra08epVXqKSnx5qK+BRuVRTYZXdm9jsz3+/MbvBULA8Vu5Ky8jqv5++wjBSjHkpepuaP83/4vM82uFDe2jbwfrGSmfgIp3LrZMP6m7NH2agM4i5nn9e6PMnMUS6G34zp4e9jg+gRZaZ03byCJyXWZgZDbzY1ZLVoc50xriS/Lo6mV8Eeqfsf/800wj+iZUZS7vMi8h9ngUxoj8XL+ft9vcA/nLFXYjUM5G6Vy3O6fAPeuKUZ70C/cUbYi3LEDdmrPK3aAj5/U1VWcvMovIIryUnGfQ8Mlo+krzRTjH7WkRsAB8RHMIrmJXJC59BFuZB9kllJm6PddlssIT2p+EkpGKbushfpzfqj3v+xJNIKe2VDHEUOZpTq/e4atcf/NXKP8fGydyE6yhZFfhKDpEY7Kr3ra1T70OzoanpC/yqWSruMD1DcXoz+YiisQ20fWWQd0Uaar8NfjTU4z9OOUzEGvHCfegkOtjba3TBdKQK3QbrTRedtfphE5GT8IVxPgzDX/E2qiZ/wveYbYWTQav4lBvh/s7kARTg613yWdRuXRZFOlSqskHeqcEwf8N6Nm55+WofLDI8xzf80V0vnjBzFJkIDvGZssevMUcodsxge1WqNoCUleqVV2oHQOfvvTOIDnm+k/fisvssXd/VxF9AhOcEmofUOgVXBpfZC62nZxV52d+LHcUpkn13B6+xssEnrgvtJAT5IZmZ5E3V0t/Yz+I5cg4fFpVIADUobDTZ7ioWMlhJ0Xv2QXNISoJNk+Ar0WXZUnkxL04H3pr1UJtlv6etFKPWyKK2ANqqRGZqDPlb34sNGsXIyUmrekTujJSidPeBXYRt+Ec8hPwiE7qRWywRwHLRaGOXHu7Xpvpfl3WCeUUcTlii8IszAK5QQVxX7hSPOYnI3u4D9AVT7OvQ72jX8TdNdmhZaQLdKLryDTEFQGVDnwyI2aezglv/IbjBfDsakjMKmKZH7ZB1uZwadJiU7L3i3yTv1F+TU5mf5f7HlzSPYELlA75I6aAkbam7zJwn18jHDkE76Avb10GdSnjkDnm45mzZgpSnjYusyV+LlIZd9ThvGX/GnN4yGvcaXcALyhN+hG3AyLEwbjadLv8ar3AOoUGmEqpYv/AY/Rc8RgDnwrSOwPiNPfFzJNfvZCuOf0Sr2GCCix1Wh1NFZ8DTdsOVJNF4k4CSdTL3wgHlFzqQX4FrXeJLSeBhNjW9qnkBOhRcg9z1/kMy2m+wye3B2+z0bX9Fq6ZZnCCZZz4BUepN+ST2Rz1E9TJBy927/JKOMTfTOY7edB9kca76+O2qpHdIX4jCUsPfLl+l4uyFrD2lXd+mn4v54mfiLlex8xCWR33e0ktrI18ZtKTu8OnxLCIxUUCV8Cq0y7kfF/Ge03l4OItza93v8p9DNHEt7W7gab2CFDBnlzhOeR8IPSUXvtUX22qpZ6b6QfQmWaTfteeYSM67Wo5VOvnjdancu8uOUqeA4msyq1d4Yx87y75rDDRHuEev1R/ERvU1/NR6kf2a9+uvERp3mNUNW9rF88bS1hJSiidtNu1244r7Ofse9/Ay9wvGw844mFpA+9BKn0nz2BomI+6M+/+TEViuZVgIw5nN+oXTCN3R7i6s26L8333rXQzhX6XbPNP/6cE/uQRhouOTdqA/1vWpXO18MuqvVmp1Oj3HDu4YUsT/aHC10HHc5f6BlDRxAT1kX0GoplX4S74DnpEpviPrFG8IitI/Wu5PspeTM2LfxaWmHOVtc13zIOiMsVjpoaWMh3sBt0QP2dt6wxjv1+g6wDMxi0/EQJU3O0ENqlx4FGS5OaGV9Vnp8M3lGqtIO8kMFbQzJGUFu4JXRPnE467FT4jn0T2wJyaNh2m+dIOPYTriOu0oXo0AoRTwGr5IScQq4RdbIEVzeWJrzBLjhjbFltuwcMv8P7Wuscg=="}, {"__id__": "chunk-b1d823a3fce88a6fa68ede48d97bbe01", "__created_at__": 1760502996, "content": "**2. Getting Token Metadata (Icons, etc.)**\n\nSLP tokens can have associated metadata, like names, tickers, document URLs, and even mutable data like token icons following specifications like PS002 and PS007.\n\n* `getTokenData(tokenId, withTxHistory?, sortOrder?)`: Retrieves both immutable (genesis) and mutable data associated with a token ID. Optionally includes transaction history (useful for tracking NFT ownership).\n* `getTokenData2(tokenId, updateCache?)`: Specifically focuses on fetching token icons and media URLs, potentially looking up data on IPFS. It might be faster or slower than `getTokenData` depending on caching and network conditions.\n* `cid2json({ cid })`: If `getTokenData` returns an IPFS Content Identifier (CID) for metadata, this function (primarily available with the `consumer-api` interface) can retrieve the JSON object stored at that CID.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function fetchTokenMetadata(tokenId) {\n  // Use consumer-api for cid2json functionality if needed\n  const slpWallet = new BchWallet(undefined, { interface: 'consumer-api' });\n  await slpWallet.walletInfoPromise;\n   // No need to initialize if just fetching public token data\n\n  try {\n    console.log(`Workspaceing data for Token ID: ${tokenId}`);\n\n    // --- Method 1: getTokenData ---\n    const tokenData = await slpWallet.getTokenData(tokenId, false); // Set true for TX history\n    console.log(\"\\n--- getTokenData() Result ---\");\n    console.log(JSON.stringify(tokenData, null, 2));\n\n    // If mutable data CID exists, try fetching JSON (consumer-api only)\n    if (tokenData?.mutableData?.metaDataCid && slpWallet.ar.interface === 'consumer-api') {\n        console.log(\"\\nFetching JSON from mutable CID:\", tokenData.mutableData.metaDataCid);\n        const mutableJson = await slpWallet.cid2json({ cid: tokenData.mutableData.metaDataCid });\n        console.log(\"Mutable Metadata JSON:\", JSON.stringify(mutableJson, null, 2));\n    }\n\n\n    // --- Method 2: getTokenData2 ---\n    // const tokenMedia = await slpWallet.getTokenData2(tokenId);\n    // console.log(\"\\n--- getTokenData2() Result ---\");\n    // console.log(JSON.stringify(tokenMedia, null, 2));\n\n\n  } catch (err) {\n    console.error(\"Error fetching token data:\", err);\n  }\n}\n\n// Replace with a token ID known to have metadata\nconst tokenIdWithMeta = '59a62f35b0882b7c0ed80407d9190b460cc566cb6c01ed4817ad64f9d2508702';\nfetchTokenMetadata(tokenIdWithMeta);\n```", "full_doc_id": "doc-b1d823a3fce88a6fa68ede48d97bbe01", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/token-data.md", "vector": "eJwN0ItbVFUCAHCldCQoFAgF5k73cc6959y544PEJHyUWqCh+a0Wmhr4qHzALhbf15cJUVip4WNXSRhn4M59nnPnDj7A3TXIXUyNKE031weZsxutLYWkZWmmWb8/4TeCnQ91dyA2gGeaQVJAWvEtQ4qNE38ITOGfGDrgrKGF5Bt8EeWiL6FfVtxj4YlcsZEaqI1UMjqaymbhL1ARzQttEatAqaXD/6NV0jQ9NZIv7Y9uGP1T0wxURt+QT9MMNE9fi3ziXJ/uLgObaUjZjvdxMzOmKtuMciMP3CBB7Xl8ShZRD9xpqsgvKqDCWIQYtoB4sgYH7x9xEcxxOhoLfVsDeWg8mhc5TDfS02ET9kI9ehJ4NDW6mGbwg6Rboyuya4Tvhas2QzvYu6U57txog1UlXEddbhsHg7NNROJKwH+bcODe+i7aZQbIWeNCZHrolrTC/3fjPtymtRsX0VvZij2SDgYr6B5pX7LX2GSprCDFUbudEioJdsgz0WC2BF/B7xqlYoNdifvho+qRnVPCQC6PPmZH2TN4uTFLPgFtJ6mJixbKj9FergcWmSfoeSnJfE/20JeI5tzw/VU6SITQGe5zEjTynEXwEd92eowfGYuTqF3vL9OeVp+XbNhrdjYUxVZDBb8E04ws6ybyWKVMNh9nrsorwiGx2JxDi6MFZBxKlN/Hz45OjkzJXihFxEHmJfgv7WhzbUs/+NCb4HwOnsU1fBWohnXiCSmBtqH/8QIdbixgd7t9YoJewj2otTvdQrpqhZNjSeoQLh8cR+Wyjc6rZVYSec0sYYu9w6UBaz8a5n5FOiMjnQpo8S+4B6SFsC7cxxcpyfRRkq8lwqu4X76sDY18h5bv/jP8OvuwcZ9s60vYleJQvIzNAiOVeVwnRnaZnQsnCaWgFd7xh4S90thADenRnzIaY0XBehuIPOqQzzWsNT/bmUCqySSmmuRofv+3wgY0QWi0LttPko8hgz2SxzrS+LP8SsMwpcJ9O9zKj1Xa05PRL5k/ipfoNkEEZc1tBMWqfcjazJfjmuYn4GTjn3ixOz7pv5pfXKzvRb3qMPScdQq9qh8hTTgRrHtgYQZR4sofvNfBHXsVOaNWBp7ZtUBPG36/mmCNsVPMC8oShgQP7logfCReYfrUOH/UD7lydTWYQb/mmeAE7mVwMvpHfiyMy/8BT0ukfo+7Sj3rHMryYczlk5u0EV6xB8xKZR4bRZnM2vqOkMGNFj/U1osprpVZLSTazzUdFB5BE+VRLg+ukHwQUFaiq842L1CQdxy91iK4h5w1wVdQuTfEP6k8ZF2Q/sbXCiZ93O007qIbYGf6YauOWRDYrOU43db1yFJ6HGx01mcn4QlurTkTp5rXhGPisIwkfj7aZKr1i0Ipe4J7qlCqsYXOeGBjMAzaIt96P7E/ALulkF0gjiF9ymRxOk8ajrOXUSJt8z+kTPTvI6vlp+RJ5p2teaiVSk7hPV3ktjMkeBJPEI/6/k2n06BzgH0blfirkB0NM0ubl8EhqMxuUXb+vvAXkCqc1iZqy91ucxQZr4vh7e6sZoar01YGz0o8qTda9Q5rLP2T000qRlE4Qjyn5br9Vid+3BL0LjvH9XOVWR6uH67LSjBzjRw6mNyWa6LtxKEfUA+zg3wG07zPcKb1vvgpOckvEVpQ2LtdHOKdq7NWkf4RKbb+oXYpp/gHSW5gSyATN0Ct+TTo1LlY3K6Uf6HjHId8xWI42/XS78xrwGPOl2NwqdTmPSevt38GJegno9oczkXhCqmF9OG6DTe8aSA91hsR1DQmGyehh2kBk0AXqxZ4AdcYL5pv4mnmr+QdbZP8uvUDncbc65vEXncmo3vAXGEVezP9bm5tKE6+EFszK41DdBvZmr3evtQwSPq0kUg7xHY+U8+BmnPHetWxInvV2pTeVEXF9EXkOj1jClHAXUd2hYtpt7+e7gUh/E3TsoACvwQXI6WgR3wvOsicTXaD3wBzspg4"}, {"__id__": "chunk-d3373e1dd5586cedd60c65b355c6e85f", "__created_at__": 1760502996, "content": "**3. UTXO Management**\n\n* `getUtxos(bchAddress?)`: Retrieves all UTXOs (BCH and SLP) for the wallet's address or a specified address. The wallet instance must be initialized first to populate the internal `utxoStore`.\n* `utxoIsValid(utxo)`: Checks if a specific UTXO (given as `{ txid: '...', vout: 0 }`) is still unspent and valid on the network.\n* `optimize()`: This powerful function consolidates UTXOs in your wallet. Having many small UTXOs can slow down operations (as each might require network checks). Optimization sends your BCH and tokens back to yourself in fewer, larger UTXOs, improving performance and user experience.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function manageUtxos(mnemonic) {\n  const bchWallet = new BchWallet(mnemonic);\n  await bchWallet.walletInfoPromise;\n\n  try {\n    await bchWallet.initialize();\n\n    // Get UTXOs\n    const utxos = await bchWallet.getUtxos(); // Gets UTXOs for the wallet's address\n    console.log(`Wallet has ${utxos.bchUtxos.length} BCH UTXOs.`);\n    console.log(`Wallet has ${utxos.slpUtxos.type1.tokens.length} Type1 Token UTXOs.`);\n    // console.log(JSON.stringify(utxos, null, 2)); // View all UTXOs\n\n    // Validate a UTXO (Example)\n    if (utxos.bchUtxos.length > 0) {\n        const utxoToValidate = {\n            txid: utxos.bchUtxos[0].tx_hash,\n            vout: utxos.bchUtxos[0].tx_pos\n        };\n        const isValid = await bchWallet.utxoIsValid(utxoToValidate);\n        console.log(`Is UTXO ${utxoToValidate.txid}:${utxoToValidate.vout} valid? ${isValid}`);\n    }\n\n    // Optimize Wallet UTXOs\n    console.log(\"\\nOptimizing wallet UTXOs...\");\n    // Set dryRun: true to see what *would* happen without broadcasting transactions\n    const optimizationResult = await bchWallet.optimize({ dryRun: false });\n    console.log(\"Optimization attempt result:\", optimizationResult);\n    // Note: Optimization broadcasts transactions and costs fees.\n    // After optimizing, you might need to initialize() again to see the changes.\n\n\n  } catch (err) {\n    console.error(\"Error managing UTXOs:\", err);\n  }\n}\n\n// Replace with your mnemonic\nconst myMnemonic = 'essence appear intact casino neck scatter search post cube fit door margin';\nmanageUtxos(myMnemonic);\n```", "full_doc_id": "doc-d3373e1dd5586cedd60c65b355c6e85f", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/utxo-management.md", "vector": "eJwNzotzFOUBAHAwbVTSgHAhyV3usXv7+L5vdy8kYrA1yKPRCcpIqSUqyjSFFMXGjtgJGEN5jwVNAgkGyHF7l319u9+3u5e00lGMsYxAwzQjAoECIiQtMupA7INnSMBpf3/B7yZwlP4elt6Bth8FdfBxuNzJde+WfK2cZOvo69H75aQqcgKoF2XvvlA56EMHhb/6f5S2uO1MP3pAzWUK0EX/JWsmqoyf9xj2aDwnc8yYGFvELnBrylrEDWhJ9xJQFJ2nIn2ZfCPq61L0cmzY25PoL64Q/i0FwNZ0t3EswVEz2i79Xup0ypVw8kx8tXXKZulsaFrloS/5UlrMn9Fr2bCn/CintMhunHgY9THH3YSwBv8OBfnG3YBewJPZLdGzqE55gTkFbKfXCJGODPfQ39waPWkMSOvZbmtQPq6/Zc9WHbQOlaNPtGvOEDPkMKmg2Gul4kfgRDlAN2ofwjanOHzCmG1dbH1F7c82whyKY28yZ+xa71tjAOaK0Y7RcCapcK9AHqn642aLfIMks1goQqulJwru8y+RP8Uh+BzdC19T1nM+iTI8WEEmgCqk8u/5efAvkbtCtb0MyuYs53Va7su0QPkeV4En+auRc3SDW20c8BZEaSzFnMUSWqGss0e6HjG3WCV4iTRQUujcxouxT+ajd/mI9BROe4fRFDuQfJk57/1UTqgnYwH5oDBH3pEuRlslGcjeDf66P5lpbR/BQd9DTV3LlRbYhL34Li3l7mJ4e67xs/ZL/IVYG7kSeMcv0y/HxvVzoQK+F9wKQUGOPVZ8MtzAD2Q0MI8yfhv9GnqkgXmMmMwb+14kd+Jr4SBp6lpnBOxSeSPaS4dJMz2MHkFrpYvmeFdDcMSxEcjkRa6IvWQQ7iZNCjv5eWkKD0mJFk1+QRitljkfrtwno9eE6dyfpSPCQniFYPJ3M6awYhLtSm0SQ1g0IxTQZ/Q29y12a+lH0di0HEGkNXiNcM3YzpyWSl0t0swfVSv5BeQrYQIqmbFt8v3cvXAAby7Q7G/BVPvH4ttZpr0CpeK81OA1iqvNRuEPOLg3lPXh6v/fanCL8EvyBKiyl8e70v9Sd8Kwc9u9afXgZ8U5+Gqkn/28s1KTJZEvcF7SvqQbijkpx1L4T9ND8W5xosaqHaC6pBC3QZN93jtF+u31Sl+sI7M50ofynF+wJlfT2UV2kDepb6TQsPQDYZVbIoTxSvIfZNpzpTdod/r74k3iwdZjbBIW4WXi8XjAqEHNHQeEFVK718OXQkBUaY32WSwkPiheSnxnquTXWpP/E4+D5c5RGoJfpOdIdVKqZKd9Vhi1viE2l8vewT2igjfTZnJF+Mwdoq7bSg/uzSl8Lja9a5HATn85uxYVZZ6mz3IDfGt43M1389zReAViXJb/FfiO+60QcFXwHJmJZtqJTHDaIaCJ21t6zSF9lfCwP4G4iYrIze4clKAvWLf0JVJLV7N/iO7Q55N74Ol0h3KYy4fz7dN8vWCmTyjbMmu6x7T60DT9SfOAOlUU3CMucV4kN+FSNJX2CCtps7leKvMbUpO0Kg4y14VZVsyZYUX8tfg3/v7MZf4f2g9xtTIm+vK4NTdYqYFgAZZiN1ima27nf7n3wUx9Kn7VO4ZGg45xgS5IQv9q/AGh1sqXB9xHnZxsJ2wjGD5Mtyc2Kxu1O9bw7nx8yJyFZoNGVKW3JtqU07Ju7gdbULvO+YV0k8fji/ge1aQypRLnG8udAvJgdili0G33/fCnaA9uQK+hdxk4ZQxOtzBfr05hHwqPuuN7Fmbn0aDxT21M2CcUutdBdarQOgpv64tpFn4IGpRv7AoShQe4XHyCqtw2Y4f+zLRBWB95VXyKLLPOgRmxpVYe/xUB9GNSBnvIKvecXW+sNBZx70g1k/re3u1dchZ7Y8lyOszs9FJMLX+XGeEfRT8XQlrIEvw60hdXHRt/EN33Xs2MCLcfDmYWopHIrfAkvEoA4f8BBBeU5g=="}, {"__id__": "chunk-7ca86adf9c923e27e26c6457f91604f7", "__created_at__": 1760501023, "content": "### Creating and Managing Wallets\n\nThis post focuses on creating new wallets, importing existing ones, and securely managing your wallet keys using `minimal-slp-wallet`.\n\n**Creating a New Wallet**\n\nCreating a new wallet is straightforward. Simply instantiate the `BchWallet` class without providing a mnemonic or WIF key.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function createNewWallet() {\n  const bchWallet = new BchWallet();\n\n  // Wait for the wallet details to be generated\n  await bchWallet.walletInfoPromise;\n\n  console.log(\"New Wallet Created!\");\n  console.log(\"Mnemonic:\", bchWallet.walletInfo.mnemonic); // Keep this safe!\n  console.log(\"Cash Address:\", bchWallet.walletInfo.cashAddress);\n  console.log(\"SLP Address:\", bchWallet.walletInfo.slpAddress);\n  console.log(\"Private Key (WIF):\", bchWallet.walletInfo.privateKey); // Keep this safe!\n  console.log(\"Derivation Path:\", bchWallet.walletInfo.hdPath); // Default: m/44'/245'/0'/0/0\n}\n\ncreateNewWallet();\n```\nThe `walletInfo` object holds all the critical details. **Remember to securely back up the mnemonic phrase!**\n\n**Importing Existing Wallets**\n\nYou can initialize the wallet from an existing 12-word mnemonic phrase or a WIF (Wallet Import Format) private key.\n\n* **From Mnemonic:**\n    ```javascript\n    const BchWallet = require('minimal-slp-wallet');\n\n    async function importFromMnemonic() {\n      const mnemonic = 'minor bench until split suffer shine series bag avoid cruel orient aunt'; // Replace with your mnemonic\n      const bchWallet = new BchWallet(mnemonic);\n\n      await bchWallet.walletInfoPromise;\n\n      console.log(\"Wallet Imported from Mnemonic:\");\n      console.log(\"Cash Address:\", bchWallet.walletInfo.cashAddress);\n      console.log(\"Private Key (WIF):\", bchWallet.walletInfo.privateKey);\n    }\n\n    importFromMnemonic();\n    ```\n\n* **From WIF:** WIF keys typically start with 'K' or 'L'.\n    ```javascript\n    const BchWallet = require('minimal-slp-wallet');\n\n    async function importFromWif() {\n      const wif = 'L3BUek8oq1iijZTkfdRYo8RDxEe3PpB8MyJnh2FSGWAoCjAffQCp'; // Replace with your WIF\n      const bchWallet = new BchWallet(wif);\n\n      await bchWallet.walletInfoPromise;\n\n      console.log(\"Wallet Imported from WIF:\");\n      console.log(\"Cash Address:\", bchWallet.walletInfo.cashAddress);\n      console.log(\"Private Key (WIF):\", bchWallet.walletInfo.privateKey); // Same as input WIF\n      console.log(\"Mnemonic:\", bchWallet.walletInfo.mnemonic); // Will be null when importing from WIF\n    }\n\n    importFromWif();\n    ```\n\n**Changing the Derivation Path**\n\nBy default, the library uses the standard SLP path `m/44'/245'/0'/0/0`. You can specify a different HD (Hierarchical Deterministic) path during instantiation if needed.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function useDifferentPath() {\n    const mnemonic = 'minor bench until split suffer shine series bag avoid cruel orient aunt';\n    const customPath = \"m/44'/245'/0'/1'\"; // Example: First derived address on second account\n\n    const bchWallet = new BchWallet(mnemonic, {\n        hdPath: customPath\n    });\n\n    await bchWallet.walletInfoPromise;\n\n    console.log(`Wallet using path ${bchWallet.walletInfo.hdPath}:`);\n    console.log(\"Cash Address:\", bchWallet.walletInfo.cashAddress);\n}\n\nuseDifferentPath();\n```\n\n**Encrypting and Decrypting Mnemonics**\n\nFor added security, especially when storing mnemonics (e.g., in browser `localStorage`), you can encrypt them with a password.\n\n```javascript\nconst BchWallet = require('minimal-slp-wallet');\n\nasync function manageEncryptedWallet() {\n  const password = 'yourStrongPassword!'; // Use a strong, unique password\n\n  // 1. Create a new wallet with encryption enabled\n  const bchWalletEncrypt = new BchWallet(null, { // 'null' or 'undefined' creates a new wallet\n    password: password\n  });\n  await bchWalletEncrypt.walletInfoPromise;\n\n  console.log(\"Original Mnemonic:\", bchWalletEncrypt.walletInfo.mnemonic);\n  console.log(\"Encrypted Mnemonic:\", bchWalletEncrypt.walletInfo.mnemonicEncrypted); // Store this encrypted version\n\n  // --- Later, when retrieving the wallet ---\n\n  // 2. Instantiate the wallet using the encrypted mnemonic and password\n  const encryptedMnemonicFromStorage = bchWalletEncrypt.walletInfo.mnemonicEncrypted; // Retrieve this\n  const bchWalletDecrypt = new BchWallet(encryptedMnemonicFromStorage, {\n    password: password\n  });\n  await bchWalletDecrypt.walletInfoPromise;\n\n  console.log(\"Decrypted Mnemonic:\", bchWalletDecrypt.walletInfo.mnemonic);\n  console.log(\"Cash Address:\", bchWalletDecrypt.walletInfo.cashAddress);\n\n  // Trying with the wrong password will throw an error during instantiation\n  try {\n      const wrongPasswordWallet = new BchWallet(encryptedMnemonicFromStorage, {\n          password: 'wrongPassword'\n      });\n      await wrongPasswordWallet.walletInfoPromise;\n  } catch (err) {\n      console.error(\"Decryption failed (expected):\", err.message); // Should say 'Wrong password'\n  }\n}\n\nmanageEncrypted", "full_doc_id": "doc-c4882e80c22718d33f17e51650bf722a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/wallets.md", "vector": "eJwFwQlwFeUBAGADCRFsBnO9vIT33l7/7v7/HnlFA5OmGaygoWBQEat2xCCMVZCkGEIz2BqRRB2TQGpjyMG7dvft8e/xoklDQMSDHFpSiAO0QUaGOhK5nEAppKAl2O8bEQP0Ta9IXxruDs4ujIApzkikOVF6nL2FrkECHEE/LxgUl9qTsVLrUTOPvUteYs4o5UKjrkgaMxbtpEucFd4fHFf7c88ye6M9wz2oxOL+ECU8yeyUayVNNq1ReNzy5FMLAvJcuIz29aJoEG+W5jEn9nyAtjLDqM/VpGyFdGKwz72hamBj1/3sLrDVKeGm+V36tPa1tTxSzT4RC3sfhab1FUKuGcakaSXKe7dQ/8CbuEG8RdwUK+stTa4108hl0BYqsq/i+dybRbfgXGqfekctY4+J28grzN3SytysSFV8jNgPtzM9tm78RqhIDuWe4i9EGyPr+LXgYjJTr+cy/A30noJNcLHeptSkNL5SuWGWMytxJtsX+oKu5BPGAXSbnS01S6fFv8MZjyietUt2H1Yuys7el2CzfT6wmmqn2/k6yU6y1u/hkPcvoiBWRpwMNOv9716gwl2PdZ/wiI5FqqH7zceDw8Y6XxA/IzYaG3tOgTF+GBjv1zIZqT8iH1WiDcDD0QXuJ3q23mRkoCtFr9v+7J4kH7lMRPUzbB1kU7Mp2XrKflVL2DXMP4Gh70M7YTX/Ip2vPUJdQIu8bK7Fywz+Tu/wChKLpYjyfcACU1pMvaO3qv36v+k0/bZ22vwLeE1fmPeS865eLC3S+aKbnTzqYP9LhKk85y3r+vy3OITfSNXO+QkBeAWsSh6zGf5P3I3E5ygjctjA6Eu20WGlPnGnkmlcDl5C/dZRMG5uww1SDfuxiPFZJVzUFjzJPOtKaCEvkYAf90bU9+iBxNmic8I46qJ0+L1L2iVifeFpst48aJUmVbE9+DJ7jRuSS9VReoebZXSqR1xAXZTniCNWBeqmjltfaYXuPexBKOJLMClOEOs7e9zVhYPCarnPiHJXkzabHj/BDXUs9hd5Le6o2aocVt6n9rhLwL32X+HDZhWbrr6Cv+UarBxTMecJGxgxcVPJsEJ4qHA7xvSBrhg3R0oEfL6ntUGBIs8zO5SK1DaTxXjPgNTSDWJlhatQOjqgVe1dKVTkL4JhMQte632Aehu0W99pz4R240n4obWBLxYG2Idwjoesk7BAnC9NaKT+XH4XXu4sEVrZH9lhmGYn9raqE2g9+gb8wqtjZ+hhtEZaqLYmf0sOeXmgQ51lVMNJcIHxFWHuSTiN7zbqlOW6pr7Az9IfYfK5ecmlcgv97dssvh4PGUm8CnI5D9gzfDMQvGn/Wn7Ky3bTMOHE3Vb1U+8wngxFxevuBM73zquVkdnsi/EB/bneerfcKoUl9sva/hgQzrZfDlQqh9Dz/ifsKpBmboYOvBLS7C/Br6gm36iRkhcQv7Qz4WNzl+BhaxxUJb9R07R2+1Mziy/QovIcfj84G8u0K811yXVii5Puz3UInMOmk7uDW5RVyVNuIyEjE8XJ++xA4AcrhguEo0Q98R7dyV1lD1oVYIgxUiYGxr3WWKcKLgW/06r5dHOSvIepA7XsfeohcqlSk7ye/LEN0bf1ft/P3A3eQbHQvT8xqsWzoRNglkEyHuG32RP4C7tXndf5Dvgb28YeFVZEd7gjPV/jz/QjRh7MhLv3NhRb4howpT9O/8AL8BquNnKJEXafcMYsg7nMr00DB/EZpzylkU1goPshbR+zOfIs/MoQc/v1BVpxNIX8hf/RP+9cw9cKQ96DeCMeM3zSFutp5xB7gOlQMnuOZTWQ/xPepNZKg8Z6tYnKQbPwa+rHomyN4AbOZu6iDeINvDVxPs4Ix2EYC7jNHjOf4jISH8QejZ8zXw1s0u9A3qkmfF5DqDlVhmfMBvZ14ydrBIXt3Raka7pNc7sZNm5pHyLZnoo1oXruE7kLlSLNTiOb7FecfO2cQlD/BwWmn08="}, {"__id__": "chunk-58eb8648704e435a889e73d1e9f50868", "__created_at__": 1760501023, "content": ".log(\"Cash Address:\", bchWalletDecrypt.walletInfo.cashAddress);\n\n  // Trying with the wrong password will throw an error during instantiation\n  try {\n      const wrongPasswordWallet = new BchWallet(encryptedMnemonicFromStorage, {\n          password: 'wrongPassword'\n      });\n      await wrongPasswordWallet.walletInfoPromise;\n  } catch (err) {\n      console.error(\"Decryption failed (expected):\", err.message); // Should say 'Wrong password'\n  }\n}\n\nmanageEncryptedWallet();\n```\n**Security Note:** Never send unencrypted private keys or mnemonics to your server. Manage keys client-side and use encryption when storing them.", "full_doc_id": "doc-c4882e80c22718d33f17e51650bf722a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/minimal-slp-wallet/gemini-blog/wallets.md", "vector": "eJwN0Y1XFVUCAHB11WotXQ0yeO/x5s3nvTPvAaltWuR3ehbiYwON7CAgu4omutoet2RRFzNEU1BJifc1b+beuffODMLBFhXlYFuhuWTpeiiFzYxj7mabLp0V14/T7u9f+BVr18DWtnP2wtCIPWWqAqMCI/fcHDU9UPlEjnjS26DdF/YoW20BvWC9Rv6Ga0IprNPkQQdbqS2TB/DoyGKSf3h+a7JO6S9oBpoZvMt1J+qMCvHjgJZepk4JjWfHoel0hSTvzVA9cJQ6+xbuJA9nLgD5SmX6U1IR2O9uC27Ss2PTVA7l8N96uwDPXzGL2WV5jJyRuBplqIaWaFWBjVY/OpL4DL7EMvAbka8F5H4KpqEP4GY7x59L61on04cjpeFUSMVnPcvN9MBV8hPYIZ5LVOmPaR3wGesB2Avj5neYkzvkU6BeeQhv0lfDbGe63s9TPKFpHKxKNrlKqxc+LV5LnYEeVxhazZe1tYpjSSvlpcusBw0+2SAd8X4Qmwrv+4Xg1RCA6VMryNaQHn3Z9QuVGXOkQn4XruPeQsfNPnBUvWDMNU3tiFMlZ2JXOCAt0BfGPI/VWYq3rPUl/1pdcb9HeaTQes2/Ne1H9Qe0xvxSLBVK5CutpVIb45UejufGBf8VP+HcFt2DO6JxsCXmsfOQK641ctS9yX8AO5NMt4JLI2eIa69w2wMr47uf7IN3YQJUJz/Hb+B+o0WdO3ATKxVfZgXux9x0dTT3OX/RQ8ynxquI51RncjRg7Zgy1/q5vMRaGhuy/6S/EXzTT32Lfc2gTc6UZ4lv0xB+hewyfmuMOzzX2sV/EbjEeaKEFcAL8ADNAL9U3mOl2iixlhxUr4Pt4RkkiT+jitGg/IOVQ26pwynZqmbNJDf9j7RcNiSWBXOEi3KmdhoPsDVcN2pCn6g/wr/r7wOfu4ylg0IB7btBf0VzWRX4ll/evE27qw6af0ZrrYfYKOOys8RoCw5pjfT3cpE0EVVb3bTYx8FV8Y9gWB0bmRQ+ZA+SdfB1mIc4OGi8ibrxStAu1YcrmeZeJ78WkuLHwD1bFOrQ9EAKaRBfJHMSBUpWtMublditVAe/T5QmhY3nExeEmfSGddMnKbWgFGQl95kBpYJ/4NvrU9golCmW+9q0VdHaeCrt0dpUhJb6mtTDnrB0Xz0JPnJH5GHQyJ82Oo3f0drAebRR7gpmK7udcvcBvq32B/8SLGKz9aXeMZHr5lJtOd4Xmiylmuef+I8wDfb767Tx7ifKLKl7YlHwWSLwffwoekiQxFYc5Tre+4fUI+6z8uBZvBnltnyKO+OPwBPhNUACKxJ+eJ1bEBnBvfFe50U7CTYFVhjN/88oYGctAbzlfudYTLUWEznxMzoWbxeLgutcJTGBfWmkRuZFh1GnndIacyXk2Rdxnra6uA6pGkyShgIeNRifhMuVdWgJXAjb4xKZ+m5WYI7eQLZBldQ4g1IA7yLZ+BW5k13DC/0f0vbYBNjLLwo5oFB6lc6y3iH90T7pAhlu/Mb9ipR4a+WCaBgfJMPuGf0zhYIKsEc/hvPIPeSHq2Jx67+wUNofHki0yxvlRrcEX3SK2DFuUD7t58gR5X7L1yL2loszwM6UOXiecFZsIRXgNt+4PwUvQv90DsmDuEfIDdejn2ivMCBvM58DNa7tbHAfpH6e2gzu6C28Hlwd6yY1Ykc0Jwa9R9XZapoVDQWDB6QhfBMUc+PAJfw+a+FfB8+rX9CQt1ott/qsnfZ61m5v4bakXZEnHlppNujz1TLYg6dRIoxJnBAfb06VGye9CppAPyPsPMq3t0t/ZJwxXpnizccwPl+sj+erO7wp6i28CG+A1eASzU3cktayi7RYKVVG+24IR6lJ/urNl47DeRTSU/aA8Qw/4p1HKwLt6JQ1ZG5U19NTvmXunaTN7BwrcTP1d22TFfLddA9dzxmRTexRIdmZiGdLHjaS9m/0IfdoRpkiQNri8if1MaiJ5Vmu8T/ueKdf"}, {"__id__": "chunk-876619bb2dfd8f806693b18945045f7d", "__created_at__": 1760501028, "content": "/*\n  Check the balance of the root address of an HD node wallet generated\n  with the create-wallet example.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\n// Get the balance of the wallet.\nasync function getBalance () {\n  try {\n    // first get BCH balance\n    const balance = await bchjs.Electrumx.balance(walletInfo.cashAddress)\n\n    console.log('BCH Balance information:')\n    console.log(JSON.stringify(balance, null, 2))\n  } catch (err) {\n    console.error('Error in getBalance: ', err)\n    throw err\n  }\n}\ngetBalance()", "full_doc_id": "doc-876619bb2dfd8f806693b18945045f7d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/check-balance.js", "vector": "eJwFwQtQFGUAAOCiJpWYDIo44R57u/+/++/jIPJJLxLRRM1XWUY8LKSHaKhIjhExPlBJDwXh9MA7bnf/3f3/3eNlSlHapFjYqDWNU6mZU+lkOGUZqb2Uvu8euce3p2dMF878rbPRO1q2RETXxWfKWfwScEIodN2gDbFRfIHhpsC8x3qMLw50+Rm8ER20HgxvxcScAH+H1Z2NIEdR8YPmCHPL1W7/ZgcoQY+yqzLHyo9n3oa/JbWxtLQ+YZ+8EI1EN+gJajVpzhSVAXgj6yeUogb0YrFCney+CSepH7er4BjjQVvNpXq5vh7cSpvamiTm6IXKN0w4xsVyjYTMZeJYyy/mg9R4qd9iyiXJ5ulsusg+jaeQryIe8UBGObdYG8JnzAF8gO21FjMAfqyUo2ShERrWOLAkNpQRMfI8y8hqYz7/VOx2bX9M6agIY/kmcpvzrKu+FcmjUKFzLHbKShVr4vfKbZTgKu9dxt1mYdNZvd690Ljl9zY3S4uUIyiZzyRbuPlgfPc0cFK+Im+VC+wCo7QjgSyBY4RFKCd8XHlOveUp7YQBVqmNTMPn+Fy6qm1F/KK7173FHsZzKUOzxS/MXcricAp8WshFvez0uBsWGM+gYnxeeEc8b31tIxg0/hGyQI+2UFv3QBH/ohMQP6AXQEWEJyO+dUZXehttdArG/Zteq/lRCXRJlXy/52I0nb9kvCJu1IrQKX1yvIJOQAfgdfKQQjP6cRKNAI/zgP2u0w7zrR3ikJlsTe8sxMVxzZiLK5l5cDPUwGH9urkPHm0podVijd1tbaPbpQH9CL/U/q/1PknSr3k/iJwig9I17TvwqiCoE23BuegeYRU5CfxhXMFtSig2Qdm+u8pcTtLxWpBrlimT4EtclpJN/2p2WZNwM90B7vJf1oKy22myh6Tx/my+IfYInUFq0WeNQWlIfoNZwLWlBrqixvroZXo89TZpJfOReqjdAUH8JCkzj4b7hBbjLdSNZoUaQRZhtYzQUel1Wig2mN+4ZTwfjBLOwjwjh5a7llkILRTzzP7Mcyx2C0Z66E16yF/H1O+eQUMsJAPSUqGC/cFVbA7KrXGPfVM9H2kR+13H/J1aUFiFl4hrlEMdd8SH+UGzKtDGEek0Ydgp6GAolSTIbknbHhdc6A4yJJzmdsojHVb4GfC09Ur6GeMrlKw04b7YOdwHiHgV1zi6dlLLiFV1ZMOZkR2K6VlrDpifcD2giX1N22HXZcwH7+3NlT4l64REZb890TtFudMZ4DYwn8MetKa1VP579yZzu32CJmIZcb4n8HDHf7GXxS+FfO4tE/gvhZKcQVcPXt5ay5UqP5P12nLxe7NF7zArd6Y4K8jecIC5Lv0p77RXSpFYC31RqOWCkYn8mPgibWW0F16zr3Fvt/7JtbIKSmHv8yXEAtEy6VPvE/IBuc//uD4nksZeIGlONV+PfiRj5f0C09LgbVA/d16mTfQCOUfa2U1wBLnk8ahOXRm1eMzsQkneEJlnPG/Uy/lSkxmNbiBZVNX2oTRlUFyN3/P+nT6aJirdZH1LgnBZICkDzD+MDyV3juoMWenqHAI9bTRqPQ/PjquCMrnhPwj/wHV0A5cPeki5ks0cwR+RjfadJAdk0qPSHrLG5gzOWCOWpFUpga7NBmP17q7eewk0uER5hH8fq9EikIzzcCEokp/y3J0SzForbUOH6UlQo5VJs+mzTgG9yBRwqfjXvePZYLSfiOBHOuyU4Ee1S+RDF8tfDg9LS2GiNtcuhK/D0y5NbwYb8TSjCFeC0c5VY4TUsGfC9dpU4V7+mPGY+wznpok7K0QWbdJeM3Bw2P+J4yOrYZmvye4Ww/BhJsI+YtWRVk4XmzsW0O54cnwXqUQr1F71DU+5PQ5L5hBa0LZJf4Gepautw7TJkcypXD5tCJeGfIRFW8Q8owD8YtzPbuFmgX/1EvFL5kqgji/KKCY5wuRgEc6iv5KHyP+8I6AU"}, {"__id__": "chunk-3e7974425ccbc5b65e9b49c356088bd0", "__created_at__": 1760500242, "content": "/*\n  Consolidate all UTXOs of size 546 sats or smaller into\n  a single UTXO.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\nasync function consolidateDust () {\n  try {\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const dust = 546\n    let sendAmount = 0\n    const inputs = []\n\n    const data = await bchjs.Electrumx.utxo(SEND_ADDR)\n    const utxos = data.utxos\n\n    // Loop through each UTXO assigned to this address.\n    for (let i = 0; i < utxos.length; i++) {\n      const thisUtxo = utxos[i]\n\n      // If the UTXO is dust...\n      if (thisUtxo.value <= dust) {\n        inputs.push(thisUtxo)\n\n        sendAmount += thisUtxo.value\n\n        // ..Add the utxo as an input to the transaction.\n        transactionBuilder.addInput(thisUtxo.tx_hash, thisUtxo.tx_pos)\n      }\n    }\n\n    if (inputs.length === 0) {\n      console.log('No dust found in the wallet address.')\n      return\n    }\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount(\n      { P2PKH: inputs.length },\n      { P2PKH: 1 }\n    )\n    console.log(`byteCount: ${byteCount}`)\n\n    const satoshisPerByte = 1.0\n    const txFee = Math.ceil(satoshisPerByte * byteCount)\n    console.log(`txFee: ${txFee}`)\n\n    // Exit if the transaction costs too much to send.\n    if (sendAmount - txFee < 0) {\n      console.log(\n        \"Transaction fee costs more combined dust. Can't send transaction.\"\n      )\n      return\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(SEND_ADDR, sendAmount - txFee)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // sign w/ HDNode\n    let redeemScript\n    inputs.forEach((input, index) => {\n      transactionBuilder.sign(\n        index,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        input.value\n      )\n    })\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const broadcast = await bchjs.RawTransactions.sendRawTransaction([hex])\n\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${broadcast}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(broadcast, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nconsolidateDust()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}", "full_doc_id": "doc-3e7974425ccbc5b65e9b49c356088bd0", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/consolidate-dust.js", "vector": "eJwNzYlTVGUAAHDR0ARzXRHYBZbdd3/vWAgtDXM8QpTxQEHTxlJUFB0aNSelLE0zNQQMhJBj7933vfd9771FZRg08cijjBkPPFDGzAoByVtx8hyn/oDf/F7zGdyx8KYGm218QzmYImSIQeIMniytFPNJTdgZv9hIp7sCI8I73V+GTMBFnxZKk2aIK2WISbBeagWz7AvZxYaJktghmuaA3MP4hoRydo63wEZWX3T+VIoloP7ORBlWqZWJl47wVakavO/qZ7zmgbTVs0daCqz8A3zCWamZkk3cdK+gZvD3QATsgHfCxeRqgQulB7/jn6E8fi1V4iHZJDgahJUpRDjWnjTAUIJiTCk7DaXa0vXNON82wXeRmET/5Vpn7+SzSZ89gGbI81UbMxIfopH80t8EYvB+vZbNFtrBE/CB9gBc5dJ0oC7nHgUX8mPpdq4n2OlXBV9oBHgJEeVFt7nZyXmMV69GnWwVeIK+TrqltnBMYI7iAX5Xi3MGPRHsQv2d78r52jypK2UCiAmkqV/q29He2geMi9pG9ycsxNmyHHABTZWO83/AZJJQ+uFdSpdWGRTRUDWTWqoPxAKdiT3SQ7aA6eAwOCVsrc8xPQcbqKu4nOlI8bFJeoJnCP0edzO6FFthf/NTsr8RIfh8C/kPQ7VsvnZQznKcwHeMx1yfI7buHv+zUMHcYbrtu+n5TLd8gdmmraXerhhtpCO7fawQEehxz3RE2x5qs7gXMDnQoh+0l8uP5CPAXhOp39bMlSvAOneZK15C9CK+AW+DDeQ0JlZX6K3hAbuXhHepi5Jbmc9+WOm3ymL9lHovORi3svt5xI4RH7GVvmj8W2waVepo57Zr2wFQYlBhXAEP6Ub87/CztlGBNhEnthBdwpv0a881eFvLckUSz6hvPXH8VbUE7atIhBP4635Sn6PlVbR5DtvecqTyhFHsv+ltdjeAkWSBtpGp4F3wluOCuk9tZyyKoRaRLUYb99RdrM9hLfRK9Iw2qHS2RT0pZ9dexgZ9GpzxT4Q92kcJs63VpGT7E6+nEuLivCeIVnIHesGW8Z2Wu5oqJmqis8NzDFY4KgPThUa9SD4Xt4evZosSzf//N6TzWp+4nFtT/46xgDGFJjlfC99QUZBxHeUPy3+TK5yJzlj7lRHXucu6SK+N2S14QK682p9HR+KpDplbxPtwd/A5ahOsPIptVfuSLznq4Tkuwnk+uE+a5p3ly1XLgk+pkwmnyFfYUJcFzFSk8ABvEcLOI67IWjObqWSAr5lVAa1fMaAkk/y5bEmcr9HKMKFZSVX3yqLaw9yhloDviEJmHW7UX7HNRE1Vb4k3pcUbpVuY30ODQizMwS/dXcTjEd2ABFf4GL3D2hw8hxv9n8rjYBTbpsmGAbZzXu2+Zxc4oDTLx/ytaJAaB31KRk22TaFFKqysYLcoy3Ge/j4uUfqKC7RH9GZiPFcHtYRlhh+14x3EKSPZE7QcF23JMY4xus/d5R4qHgL5TJ1xE821ToSviF/kN5BT79Xm4RqZF/xEH/4VNdp0x/dMjy8JZoHx7KfBi4TED8P5qAb/rRfiT/73B2EsjhMmoxQuI26SOwkEuEOyRg2XdGEAGyGOMm8K2PR3XFHSdbmESDUr9r2wSZ4pZRlBQOxLQSxCbC/zsTAYscQgbr5npCHaOtRClCBES7n0KzSLN0mp3CZvNCgPjhN7grl7erVMb5PlKNLV0SDScoAr0xaiHJkCa5mDoT6z4LthyxXr2SJcIF8Cqx1rwCFYBNJUEnewywKrlAz0lZGOOeWAcktSlaqQEp8NM350q8P4ndQXVKNaMPCfxB3+JLpOB9SO2m6mXFVCiSjXH664xTjIIs81I81eqhcqwIGgGUbCBf5OaxVsGvYve9q9U9/oM+llmoJMRBMhy72x54jbodU8NZQIHHNU6xuo0eR+LUusVjJBjDNHmQu+CE7jl9B369ajgYqJ+Q9SZ57X"}, {"__id__": "chunk-557a75f7fb04e468bf1446292102d92a", "__created_at__": 1760500243, "content": "/*\n  Consolidate all UTXOs in an address into a single UTXO\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\nconst MAX_NUM_UTXOS = 100\n\nasync function consolidateUtxos () {\n  try {\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    let sendAmount = 0\n    const inputs = []\n\n    const data = await bchjs.Electrumx.utxo(SEND_ADDR)\n    const utxos = data.utxos\n\n    let maxLen = utxos.length\n    console.log(`There are ${maxLen} UTXOs to consolidate.`)\n    if(maxLen > MAX_NUM_UTXOS) maxLen = MAX_NUM_UTXOS\n\n    // Loop through each UTXO assigned to this address.\n    for (let i = 0; i < maxLen; i++) {\n      const thisUtxo = utxos[i]\n\n      inputs.push(thisUtxo)\n\n      sendAmount += thisUtxo.value\n\n      // ..Add the utxo as an input to the transaction.\n      transactionBuilder.addInput(thisUtxo.tx_hash, thisUtxo.tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount(\n      { P2PKH: inputs.length },\n      { P2PKH: 1 }\n    )\n    console.log(`byteCount: ${byteCount}`)\n\n    const satoshisPerByte = 1.0\n    const txFee = Math.ceil(satoshisPerByte * byteCount)\n    console.log(`txFee: ${txFee}`)\n\n    // Exit if the transaction costs too much to send.\n    if (sendAmount - txFee < 0) {\n      console.log(\n        \"Transaction fee costs more combined UTXOs. Can't send transaction.\"\n      )\n      return\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(SEND_ADDR, sendAmount - txFee)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // sign w/ HDNode\n    let redeemScript\n    inputs.forEach((input, index) => {\n      transactionBuilder.sign(\n        index,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        input.value\n      )\n    })\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txid = await bchjs.RawTransactions.sendRawTransaction([hex])\n\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txid}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txid, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nconsolidateUtxos()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}", "full_doc_id": "doc-557a75f7fb04e468bf1446292102d92a", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/consolidate-utxos.js", "vector": "eJwNz4lXFGUAAHCgwKNAV05l2d3Zmfnm+2Z2Ka8IH5GKFpRoKWGA8R4PLTWPvDs0UzxQMfBAYA93ZnaO75sZMC07MKVnlpmkWEqayvOFmkfPg8QwFfM/+P3q0VCmsTGz6Yz9oFXK3RDO8qK92awWFguAvYUGBt+xFoBXpDZrnWODWAriB3+MTjsFfqCyi9xlZ3mmgL6DZnMRVj4TARdaqyorwABmglJJZ/qXU+MiJ6YP9Q3wKhoDVHMrr8PXPBlobHqplkXNsZqR4NkuR3ttcCdfbFR5a4x49jb3HZVn9BX88L4ShW2NE3bMEVJVPrQaTTIooYjrFoPcGjGGHoETmYLkY/bZjb3SE7aZnIkHSV8aG/FQNiblGepzkEftpfZDQJ1MW4BTFbdc4sogH8Ln5WsNp1GcNsba57YhCSbAtSQK1sB6komPAkHJQ98y2dAlPxIzeJc6HTVrj4ekgjdD15lF1lrtJ/gj9zJ5UV6s7OCm1G/GK8E6mXhPMSy9DO/ynJSPkgGeW+nTuT/rTit9zA36QqmcLWfKQIyze2t5wAZjySWhA70rFlOblTgSqx41t6qL8DRlJG2zmvEXlED2eDZxkaAQymCb8IJ0P01H/WhoRILW9G7nHTLIv8W1iXuj4SIZr9lDRUyydVhokq6gafFrYKzRoF5wxxm7jQgu2p2T+D6ayd8FbnYve4K5xhZpPHPHaEy950y1AJaduXx7cJpT8T3p6CJjuHLVq/gtn0NWz0gRqFD6xbpBZvi2cjZ5YvCR4AJ+NNjM1R7SG5gzZD2sa/whVNp0CEfapzB3aodIHmmZb56Y7xqOW8B7fCSo5C+DZuUDsjttqStA/ch1GQq8pnyld1RnPfYcwiW155PG2u0eRN12fSJ8zXzVsF2JtNrlQncOaLErMEdNVl91+bU+sCfwu3nGyKFhaCpzNWEkmmy8rtC1rSn74Wgm25zB0ChKKU/7WSmQW93VajQ5Tx+x5sJfEwuM60wZMxZnuavAYRBWX8L80/2I5V6IKkJ2JZ9MtgsBgeZsFgnB5Um9YnXSP/aNRi5bgnyxTUavEDbuelZUlakHGEM0+SxyUO5NGMSncNEJwZ3nZMbzvUF5bqJ7vhvGZWapEuF1CtXsPJ2RJ8EasZY+4X3b20G3hWZzCeaEtN9cK/kjMFcrFJeLc9RL9HG6BX5L8sOP8BE4EvYJPIEddL1rvhoNWa8idXtYuaXqkT413OYocMxjxpMo/Uqg3HkVrjfuojbvnmCR+CaVqdehz2F/LS94AVQKF5VWZb1jGPGqq+F+vU1ZETuCNLHn6DjufMMexzjSZQEwi2r3DQ5vTAdhyaiDF8KV8gF1FF4tzqDLqFjXIjCOr7VCaUuCN0jpkDJ1myrB4da/1kgYjXaYM/z34En1oHwz3o7duLyhn5rmz3QvY5Pd07Vcrk2rIFONcbhTPm43yWIWsUVwrvqko9ycRcrI8YETrEniaNc6YWj/GKrQGC4eS/lUOIsusLusdtwYGKEOiOHkP3XNfMrcbkwMF6AGV6q1Tu9KnR96DVWFZ4nz4RFYJ73l7gSjtaV6D95vsaQWdjGZ4Zm4ku/F/WGJszNcBo+BB3I+RwnFcBjb1zPGni+nWsXiZGGUhux/V+9mepQsebPQbJkg+7OQ3olbuBp4DvYhs9nTbLKaZI2Pi9KyMY/2Ct8wXmyhy/wDtl2shVPD83mi/FGfYDxUWxM9+jXVw5E6Dp0l3Tha3gf/oq/Ic6kOPxM4yN+Bb5BR6gL+ABsBTb2Q4/A8PAwe8n2jB/TRZirOVHKwzVsi7dNPpUTinhAgPq4+6aH7WRy/87/6LeFiKtOgqdaGY2wFORVcoe8L6mlvclFszc5S6zPqS4NRu+gMfbhWqNQpw8Klen1yG3CG84xoOc+8bb6nlbiHMKukr7d9FKBCrYgOfadQTIeRwe1ybbI6+Vz1OTjHu0TdCNvEbMFy9QQn4cVaU+L/N52aGg=="}, {"__id__": "chunk-53d38b5b7b32d4fd0909ca94929d7ede", "__created_at__": 1760501055, "content": "/*\n  Create an HDNode wallet using bch-js. The mnemonic from this wallet\n  will be used by later examples.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\nconst fs = require('fs')\n\nconst lang = 'english' // Set the language of the wallet.\n\n// These objects used for writing wallet information out to a file.\nlet outStr = ''\nconst outObj = {}\n\nasync function createWallet () {\n  try {\n    // create 256 bit BIP39 mnemonic\n    const mnemonic = bchjs.Mnemonic.generate(\n      128,\n      bchjs.Mnemonic.wordLists()[lang]\n    )\n    console.log('BIP44 $BCH Wallet')\n    outStr += 'BIP44 $BCH Wallet\\n'\n    console.log(`128 bit ${lang} BIP39 Mnemonic: `, mnemonic)\n    outStr += `\\n128 bit ${lang} BIP32 Mnemonic:\\n${mnemonic}\\n\\n`\n    outObj.mnemonic = mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    console.log('BIP44 Account: \"m/44\\'/145\\'/0\\'\"')\n    outStr += 'BIP44 Account: \"m/44\\'/145\\'/0\\'\"\\n'\n\n    // Generate the first 10 seed addresses.\n    for (let i = 0; i < 10; i++) {\n      const childNode = masterHDNode.derivePath(`m/44'/145'/0'/0/${i}`)\n      const cashAddr = bchjs.HDNode.toCashAddress(childNode)\n      const privKey = bchjs.HDNode.toWIF(childNode)\n      console.log(\n        `m/44'/145'/0'/0/${i}: ${cashAddr} ${privKey}`\n      )\n      outStr += `m/44'/145'/0'/0/${i}: ${bchjs.HDNode.toCashAddress(\n        childNode\n      )}\\n`\n\n      // Save the first seed address for use in the .json output file.\n      if (i === 0) {\n        outObj.cashAddress = bchjs.HDNode.toCashAddress(childNode)\n        outObj.legacyAddress = bchjs.HDNode.toLegacyAddress(childNode)\n        outObj.WIF = bchjs.HDNode.toWIF(childNode)\n      }\n    }\n\n    // Write the extended wallet information into a text file.\n    fs.writeFile('wallet-info.txt', outStr, function (err) {\n      if (err) return console.error(err)\n\n      console.log('wallet-info.txt written successfully.')\n    })\n\n    // Write out the basic information into a json file for other example apps to use.\n    fs.writeFile('wallet.json', JSON.stringify(outObj, null, 2), function (err) {\n      if (err) return console.error(err)\n      console.log('wallet.json written successfully.')\n    })\n  } catch (err) {\n    console.error('Error in createWallet(): ', err)\n  }\n}\ncreateWallet()", "full_doc_id": "doc-53d38b5b7b32d4fd0909ca94929d7ede", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/create-wallet.js", "vector": "eJwFwQtUVGUCAGDBCoGVh6jxmIG5j//e/z4GWVD2ZK6VhvRS2nRBTU0KK0s56wttAXWVbdRxBFEmYJiZO/f+/73/fYCPY56MkwYnt5XWrSU0yweZK8ap1Bx1e7vfNyj5ualOzsEaqcWpjYr8c62KE+ouTR9bdFL4CbxFvahvYf/mHad/784w07LzuJROLxKpo8Ioiifw8CV1J+eTPjDjbRX6TOM+/BejuqA2v5gAw80nOzOKauBRuc2IcpTeF+Un/OptFFkw5BzROlGmt13uC66V75NfYq/otrxQb2EWyP9l0qNn4GzwDzgJYlDpH+edxg6jWWZBV420hvVxa/EOPSBc7YqbcWZT4nynfPe2cGt6qlPMltjunntGcXcue1bcI/0OPMY+6m5WOilamGsKegDkCCf5PESEiWSlsse9zK4MzfUc0h4m/bxKutBAXpPreeaY/KP8BK40CmkGeqXZSoe2cd8NuJpUIh410qf3DqDn9K5YJLcKxdVVzHl3hpQlauJh/iPQyK3UF5lV4VNiGEwRTf0QCaCUSAW0wDJutHOT/A1p5cbZX2YketfjrexMoczuyJ9m1bm24z7iY56yXeZldiwp54rwMLdJuMZ9AlfbLzMB5WvwBv4Z/11eSJU4peBGfjN1zx0kRxw271RkkFwUx6rtfJwbtCZHL+Bi7WF7g1ba9LhCh8vFh/hPwSYuS6hAh9UTTHEkpPX4noxWmLP0qWBGVxK9RPyjOtqWhieA0vZbZKq9btI/oxXCg+5RYwT79Ol6As5SPeS2ZyT3cw/Gx433g71cbng8uGf5iMt5HT45uaHgcWcWOLv/Y7ORWyW+QeLwZWZfyyDzLX9K3+00hftADdstIft9XIJfVdYJjaRN2aG+Ywal1/Rn5Q3epFid97wZyJtJsqMj4WQIwF6XQtz2Xv2kuD92Bv5Vm0ya7cs5G82bbHlhh9CnjMlMsrpt2sLIi2aJ80g/6ieXMrdqYUNS/qVb3Jb8QfY34Z3wOf6F2CIUZy/Ll0iypyIyl7pfWQ7rYoVv5lhjjGH3AN8bPgsTjHXe75QZwg5cTGWRA+JioVdfrldzu+zHxB/gtkiatQ+9IMyz5+OfFCTWwTn5C4QqfJ3NNqbJI/TtCK98yEViKYUH2QLuAaeWnsmpbDVTKjdAXi/JPyP4jVep/7jmiwgfQH5yCDcgi70mrZB2Zvca7eg0GIJp2r3YTWaDcjQyn/HFTmp+8RsGaHfJgOBn78RS9XbjSMFcbgk96kV6SCySypwnYCX/yd5lQg1Yx45EI/Sn4nUtZl3Up9gJzBLPl+jpjKc6/62tlurFStJirW3DxgozRKrRdVdsQpf0Ib7bOV380bpmDZE3zdmwmVTpy807cIxchXbRaYGAdRsWQcF82/ODfdgq4JPY4Z4Lwii3JbdfKIMplE/1hLq6v2IPjB+AhXByqEzL0QLZ0PnC2CkcA1DPAgtkoH1mbOCesZKN9SSJGmP35rUDD/UK/BNdDw96Vitn0UTvkc5jlt//mhoBteo2MaS+op63kHlBuCUcjGxFOVQNtcdpkIqJV/ehdP4jtdyzCzfCu1amc4Jssc6FQ54RK8XiYbNugjX8MFqs/j78luomAeYS86i3Ng/DjLYE/T17krDQbKKroxl4kfC0ninuxjyY4/QrJ4wGMKfjIZ4otzrGxhLV1Pw/w+3m/exS7StpTZvfbJ6SIz0i++2Nnts85lJJg960L4FbxH9MMvSwdJxbFrkoPGIFTXe45UE9epM9wNajzeBbWEKN4HZyiP7CNZTfQxWGfkVX2KtmsvWLCXB97n5zAoOFrZ6YEqQq+KXGjeA8mEqno3g7b/3W+oCTrNZxOXw6+h+fNX4xlR9ciVagFxNbs7aj58OJeBUpd74OLkXvmWX2u2YWezq4XjhO1k981vnc2mx2x86RIaXWqLbbmCXa28YM+Q/wZ/oOXBGdHkkxrijYUwb20N97n+Fr6O8iV8Fmq96+aPe4fun6PyRJqQM="}, {"__id__": "chunk-e08d7c7b524b459e1298f59062da48bb", "__created_at__": 1760501060, "content": "/*\n  List the UTXOs associated with the BCH address in the wallet.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\n// Get the balance of the wallet.\nasync function listUtxos () {\n  try {\n    // first get BCH balance\n    const balance = await bchjs.Electrumx.utxo(walletInfo.cashAddress)\n\n    console.log(`UTXOs associated with ${walletInfo.cashAddress}:`)\n    console.log(JSON.stringify(balance, null, 2))\n  } catch (err) {\n    console.error('Error in listUtxos: ', err)\n    throw err\n  }\n}\nlistUtxos()", "full_doc_id": "doc-e08d7c7b524b459e1298f59062da48bb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/list-utxos.js", "vector": "eJwN1AtXFNcBAOAIRg0YRR52WRh3533nzixolHh8oEarEjSaxHN89FCKTWs1NVU0PcEkPojmebAGBFxkWWZn7p177+yui4emOUYltWIqEttAsEoUo7XqSY0xkqCiMSTfj/imSoOgu6U8vsq4GtNcAwa052hWfI0W1k+HnzTPuR+jww3j/SODItqOMjPPKsmBMWDahEfgKJxw0sz73CxwGOyJvegvgefxY3RbcIq80HbcJvSF8h7Jz2s2Kgzb8VpdjfXmow2Daom6t2EG4nCHsDb/CSNfOhfIVVfbqeOPGV9TTh2jbVB7xvb5Umi1MpWlkfMkRTEi1ZKiP814vdDpMOc6R8O7A63qO6RLZGBdNCZPRj80n3Mxu+I20vl4iVvJu+oI7QIopptCVUyQSnw9rF28468AayNpQiMcILfsVPnL5lM4Xx7OMp2Z2iT2I3dlfyrOlAaMh8pq/AF9XSng02EDG9XcSj3a7NgrsDS20vMZ97Z9Em32Rq0C/3rzcnaEXuVSYD8sE79ENiy3Pmy5IR5S040njEGaTGq8h9AIsBBUwwF1hZ7q/F3JPrBd3mFMstvoDTAz8gbqpI8D8v5OVkTS6TEiSF7SavzPJhzHE1sU18QWTRhLP5TWsirwEhzl/gPvFCa70xsqwTGihUYLH4lf0TqpkCxTdyspbDm4Ytcik2XQJElCheykArVc/RrfIj9vpoPkyBI5xObCPizGFrmb9Rl1r6IXwGviZ9mi54gQ9yx2b7KucBsmWhn9D50Wv+H7hkylRfS0UCz0hnvrTXGUs0sNm2WxLuV7NoQLotNBdW6O8Bu3dPw98JAuBQdAn/MUzEBj5Qzdz2fEkki377s9efo26WsKEdFG0+VGTWSMKdH19nW1270bELUtSqN2k5WY2ZGXPSFWFoLgX7tVMDFrsnMG7PUj/c+0zD2LP4WdkXbtolEIbsr9/LpYEXvd9rvtng361iaO9v+CcitxGklHPjnIdzdtFi6oy+Q76hTvvtC8hnvG76K/BDYqtF8ItfDJ0u+b5uOD8fXcVvk6uC7LsaN5veocrhvNRkfYbHGZ9t8IjdZIVbQTeG2PfCbyJ+uY3kvjcWIdRV/JU0GVb4gEtBNWEiwwxj4+kyT4NXic8UA04ES0CQyCTbm3nB55QH7gWwwWyMXOkNXjX6X9yrcWJ6zk5qvUjjwDoDaR3iZz6SUhrAXBmPBO25thSEPCLb4OnzDeEiutJpSndDdvzmrwt7FZUqbyR7pVjmYJYHUgLYr8jvE3Mhr0puSBLuUU/tjIr9/olDn97ka7DTy0wlaWZ7dpa1/oiXCv0yQdtDhnT/N960l1NnTBOJJRGzcq3JdQPXssWOCeIPfFz4XFwnz5njvP2Ia2YOKrE+Y7L2fXuS3O9qY69R33Oznyfoq2h2/PqRc24gITm4u0BLqg7YObpKBTSu8Lq9wFTo7eKb7ojjMCeJ615K3Djd+yR6OzzEw0RP6fNYz7tVYBDWM1u2a+CVr5gA7V/qjqLCfbYKEUELbK2+kKOpOuMw+CAICEBJda79IVxsh4Dn8psh4M5y/xPeqnfJlTHt1IamIibgM7yG32iRpqfEo9Hd4LahWr6U231jcg/gHvU09KU/BfWSmb7H4khqTj8IPocVpuHnJGKwtz/6lLBxI4Tp/RhrHfVsdYEHrhiPHF9jjpjP9CTZ84V3tbfo2/HEgFk9RMegQcDQ3AifEd0QT9RG2xW2mZMBKKQhdtq96Cy6MXOU5a4Frye1IJ7tCGgePOedKpHJCuiTJaBvT9OZ5XnZTwRdZhd7hVYBpLyMO9K51FuJWfAYuEz8FJYYra7R9mbvDc4eeQ6WyNulDqw3linjxB6uFG0GlRWx2u1WY/QOmxSz//dhmqqp/eRXI84SsiFfoWtFQ46HrYKZLEdjml4Uq+Ee1MGgyeter3Z8DT/LPorFshnZHvkjn4nFQpN+TfVlqsVtwuLtGKI/+O/sW9gn4CAiGkJg=="}, {"__id__": "chunk-9c9c36489336ebb4175c7061f67faa21", "__created_at__": 1760503018, "content": "/*\n  Send all BCH from one address to another. Similar to consolidating UTXOs.\n*/\n\n// Edit this variable to direct where the BCH should be sent. By default, it\n// will be sent to the address in the wallet.\nlet RECV_ADDR = ''\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\n// Send the money back to the same address. Edit this if you want to send it\n// somewhere else.\nif (RECV_ADDR === '') RECV_ADDR = walletInfo.cashAddress\n\nasync function sendAll () {\n  try {\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    let sendAmount = 0\n    const inputs = []\n\n    let utxos = await bchjs.Electrumx.utxo(SEND_ADDR)\n    utxos = utxos.utxos\n\n    // Loop through each UTXO assigned to this address.\n    for (let i = 0; i < utxos.length; i++) {\n      const thisUtxo = utxos[i]\n\n      inputs.push(thisUtxo)\n\n      sendAmount += thisUtxo.value\n\n      // ..Add the utxo as an input to the transaction.\n      transactionBuilder.addInput(thisUtxo.tx_hash, thisUtxo.tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount(\n      { P2PKH: inputs.length },\n      { P2PKH: 1 }\n    )\n    console.log(`byteCount: ${byteCount}`)\n\n    const satoshisPerByte = 1.1\n    const txFee = Math.ceil(satoshisPerByte * byteCount)\n    console.log(`txFee: ${txFee}`)\n\n    // Exit if the transaction costs too much to send.\n    if (sendAmount - txFee < 0) {\n      console.log(\n        \"Transaction fee costs more combined UTXOs. Can't send transaction.\"\n      )\n      return\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(RECV_ADDR, sendAmount - txFee)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // sign w/ HDNode\n    let redeemScript\n    inputs.forEach((input, index) => {\n      transactionBuilder.sign(\n        index,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        input.value\n      )\n    })\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txid = await bchjs.RawTransactions.sendRawTransaction([hex])\n\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txid}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txid, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendAll()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  try {\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n    // derive the first external change address HDNode which is going to spend utxo\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    return change\n  } catch (err) {\n    console.error('Error in changeAddrFromMnemonic()')\n    throw err\n  }\n}", "full_doc_id": "doc-9c9c36489336ebb4175c7061f67faa21", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-all.js", "vector": "eJwFwQlUFeUCAODScgEE1Egvd52Z/5/5Z7nC6amRS0j2XM5hkcST9iy0IuK4vSc9ixNpEplKJYmowd3mzvwz/z8zV0XBJQIpMimPdEpRi7d5czlkvrK0zYy+b5Vy0FOTaNu3ljtGsyasksvl5bDGuSQPyDI6LYZZ0ToH/4+JXcDnhbZC238aHvIlIWbaaDe6R1kC/u49z/ZYC8HogG7vjqSiNBiP1arvxzhew7NyzwXmB3NJJf+tg6U7YI60XXxDVo0FwtxEj9QvVUc+UF4P1CnLHEH5kva6A8gXWEpb5D5hOfnGNJ1WJlNS8HtMMz+C/izn8cXhdWi7Fsly01zPo4Ei/9JENs5T58PHrGTmMmeDFWRt3yctpWgdusUYwr8Dd9jz5g/aaNrjv0i2SInYymYsbTP+51SDXyDLr+DzaT94Fg2Y2dZ+eCI8CBvAK0JRy2kNSetwhphrpEtf4Ex5KHCKr7JX6JeEDmSSleab+ly2P/WA5RbSvKOVDL420G+FlHfj40mKODvHDw56Nhhf0Qx9V+iaICI/yolN9VfF18Mh8wzqQ2OZbr9Xv2GVGJ87TKTQ/NFsZj6yppOy+0ba/1A+45+DtfJjaL5007jl80pjuC+tJu7hKZuZXHKz5WosycTYhbSTRtUfgUVtpd24Lv6V5UUXzcaz4xusy+QoC8HEwFm5UCqBV4VucJBZg14gp7wNVqf3fV9mYkhr4C/Ipl9napiJTAo5xj2i3Yhvc9iI2yxSfxJPkpKEQwYnr/GfwLVku9LGjRHLrLToYubj+3eQzTA70aCPSJRrWS2nvDdwfcaQXq9ujaZCVj0hSLKB9kqLxXvNeus15nKgS01FLlrIIbXLeJi7yl0b+SQ5FP9w1zF3hVKFxnpTghNd70X79B77eW0MJ6IdoA/2ml2awPQYJcI29aTT7AxDT9iBj7NjxS1ml9EcKgKM8Dh/m9xG09GDaoXnzcA05onIf8kkWsA4jiSOZwfNLqiBR6ySPaUSgHWhNKrvLKb5vjRkN84wckifu113g2zmCn1VVNSka7Ln0N5NVonaIeWpSVopT7GeVq7v/pVI2osco1wgt/Gk8CviGVQX2+z5UO0Xr8dnStMkLdxuXwB/w2OU2dLLwGuND3Vyv5NKcCR4Oxhkp973MUpxfsVNfC+bA2twA56AN+r/QjPhoDxkVBi1xlRxPbJ2DdAaYdn4d7Vv2ZNKgCXKNGZnuIfMjnZnF8F/cll0v1aQfY5vRXfogFQQHG22etZ7FWO5mBS2krvjQbhWzsFv0FZQRQuNOmkLGQnmQZPICAnHst14OkyjxxNLYTo40dIWvxrE+vd0lbiGsuY29R1aadS33D3hHl8v0kTJxirAq+0cZlGIN75DHYmcxA5hrdhq/4VMlUrwFXe1XmaMozPChtnpzt1VD94WnsG3mHq6yLpI9lip8U38cf08akP56JBeDs9bi+wkXR3LtWf5Qi0T5E/35I3Loe14LJMlFgsdQHQarOrIyt0PxnbHLpJG22dXWcOeFeIPTNIqiO9U5+G1cpMxrH8vfCKVg1J2Fs+Su6zTxnXrdbIJrAZ9zUN0WMwj+fxH6DntklDKD6o7uBB/FkWFOdJn0W+MYTuGGSVozIzd5PyTK+P/aVogL7b+8D514AjZQCaJR9Hb4hQDoTOe/eY8Zx9TQDNIprhQTG+M7p2hnJV6+Xx9BN8Exym/p0/nniFIf4K7pef7GpHq/opH1EUBGSe4QJXWEZjjSjJ/SJLUbrx1fykq5jvFzujPwlN4In1IGsW8Rb4mlGxRnyRLyQPBcrzAmIY20l7XQ7QN9YcOxCPkJRyY3KAfZj435sLfGo+jIgoAiNUbK5lRcAl8ga+z3gmftV6iCSbFWoefNQvxkshGY8DT7V+olzlDep6TbpXg/kC170i0otWOFcevoe1gX+RlT4Xpvsvh9jlDwp54Ao2acjirDLi0oDwiVqNvJDf1Tfyf4YSaYw=="}, {"__id__": "chunk-938cd35a9499a6325b205743312f0c81", "__created_at__": 1760503191, "content": "/*\n  Send 1000 satoshis to RECV_ADDR.\n*/\n\n// Replace the address below with the address you want to send the BCH to.\nlet RECV_ADDR = ''\n\n// set satoshi amount to send\nconst SATOSHIS_TO_SEND = 1000\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\nasync function sendBch () {\n  try {\n    // Get the balance of the sending address.\n    const balance = await getBCHBalance(SEND_ADDR, false)\n    console.log(`balance: ${JSON.stringify(balance, null, 2)}`)\n    console.log(`Balance of sending address ${SEND_ADDR} is ${balance} BCH.`)\n\n    // Exit if the balance is zero.\n    if (balance <= 0.0) {\n      console.log('Balance of sending address is zero. Exiting.')\n      process.exit(0)\n    }\n\n    // If the user fails to specify a reciever address, just send the BCH back\n    // to the origination address, so the example doesn't fail.\n    if (RECV_ADDR === '') RECV_ADDR = SEND_ADDR\n\n    // Convert to a legacy address (needed to build transactions).\n    const SEND_ADDR_LEGACY = bchjs.Address.toLegacyAddress(SEND_ADDR)\n    const RECV_ADDR_LEGACY = bchjs.Address.toLegacyAddress(RECV_ADDR)\n    console.log(`Sender Legacy Address: ${SEND_ADDR_LEGACY}`)\n    console.log(`Receiver Legacy Address: ${RECV_ADDR_LEGACY}`)\n\n    // Get UTXOs held by the address.\n    // https://developer.bitcoin.com/mastering-bitcoin-cash/4-transactions/\n    const utxos = await bchjs.Electrumx.utxo(SEND_ADDR)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`);\n\n    if (utxos.utxos.length === 0) throw new Error('No UTXOs found.')\n\n    // console.log(`u: ${JSON.stringify(u, null, 2)}`\n    const utxo = await findBiggestUtxo(utxos.utxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`);\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Essential variables of a transaction.\n    const satoshisToSend = SATOSHIS_TO_SEND\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount({ P2PKH: 1 }, { P2PKH: 2 })\n    console.log(`Transaction byte count: ${byteCount}`)\n    const satoshisPerByte = 1.2\n    const txFee = Math.floor(satoshisPerByte * byteCount)\n    console.log(`Transaction fee: ${txFee}`)\n\n    // amount to send back to the sending address.\n    // It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - satoshisToSend - txFee\n\n    if (remainder < 0) {\n      throw new Error('Not enough BCH to complete transaction!')\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(RECV_ADDR, satoshisToSend)\n    transactionBuilder.addOutput(SEND_ADDR, remainder)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`);\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendBch()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  //", "full_doc_id": "doc-aad38da74a8108ac6178308f1b7a9450", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-bch.js", "vector": "eJwN04tTFOcBAHCMCjE+SMXEgztu73a/79tvH0dNMIqoibHWGMagwsQYgylYHBnbmFYaio9qHm3TVPFA4gPuuH1+u/vtLlhFQjPiC8eIzIg1Gh2NT0I7TZopJWmxIJO0v//hlyPelE77Za3jpa9br6CdcqdUTUhrhVggrcCnxHio1N3MzTF3RZfwSe0SnqxdixvaQ2YGLva+y1kr/hMux7vEa34eOBuZ4iYOneSOoZUNS735zmvw14mjs7bBdPkLsiO31q0UJsiPS8UiFFe5AFbQfvFNYabcJa2Tgz8QnY9kTFP8RDiOfVqJSTfhV+Shotj1BOB2GleDMObVC01NhfYwve8ExanhEqaWlaMBb7w4ZGnJt4kKBv0l9Bjf4Y6L3gSNwRvhi/we9oL6njeo3bQf04oUUwi2LGyagc44I069fsNuh7OE3wWqD16HZb5Gxkv3QC2/kv8P3Gl0NFUKnWq2/C9nLOUzW9HfWhKs5T6Ss7vheW2eNyHnS+Wb5ue0LFa3Krhb+KQwCkXvNeEb9aG/AD4rLxJHwYD7mbfRyuAu4KvwBi5B58EYucSt9krwEvFn+AhzwlxG3rcna4Nc1/5trh0q9Td5a9F08oa4hbuB/yE+gqkYtzihsqkcb/J6QTLGkFn2Cm6qsyDUKdwy3nTawtVMIVWlusjjQjrcD9bSvtB60u0ElOpkLLU19z2hFHNCBjuA3lBHcTqZF/qcoJY/kx3eC/a/0Vds5MmUMN/ogp32VHyVTSrN9A/orDEdduUOO/m+5O8h7+rrVWj0gCvBQqFHQeTV0OVIj/tb0O/9tQm7Ce4T5x1uqXtbvWb+1DhJYsJ5M4De5QDfISRBvtXtnwhuBEqgR/yvswFt18+Zu7Vv+ThLLGAvgKIzR16M4zBbfl1PkN+7mfQFq04A0Y3QDew2GHoPmboifnQgzT3sZcFU+DReLw2jFfR5/Udkmd4eWZab4UCpy5aMCjUHjuSkBec7980Wcsi9DvcaBebxkCT8mJawBXKA265c0kXrWvM08AtcFeyld1xihuBBNpcbo5OkHdZfkEEmM2upqeVLHebf7XTpgTsjlhbYY5510rTrwgU65D3t9IA6sQ9CIT+8iC9UluM1qJY/42yOHI1E8mZxrUIWzVQ38/2wCsixI2IDGKcUCMetuYqFhqSM0LnQgF2lD6rfob34sNxqzUu9SHm5E32iJvw1YMgoavTAFJyK1EvzjB9OYlQETkxmhX2oxj2ktnEfc3PlbnPR/6eodDZXLs7cexLVom7dYfeFa6T9ygb7+nTT26CflhbbReb78WwrC3eLIasm1WtP8xv9UXjlg2dbPtQrY5/qZc5tdJgm/QD5wFn9xHxtgv7A7Ae3wCor74monemeUd+aHk/u40tbu/zT0fMHdvqrm4e5fLNR2ZJbx+YQClvIHXarOYSuCm64RleY+5HFdKG7Dn8NOqnOhyJ3NIneFV706/yf0005n3qKycI/oRT7UrTIrzTP4WnRvNgr6NHDtkcdERQFbrNRus3bbx91OsQG2MvOdqvstyLD+h4R0HesV+EzeKm9D7vGTxrWOU8ly7yFbVr4bRGr4910MNHsA9/zGfh7MGY+pRYwW3Em3ib3hwtQzJ/oXnS6hDIywyqIHMt+2ZpopwkXnQHebxvHjtALeM3BMzjLTIZOgV3O2b2FkTznIiWiJ78Cj5NUrDh2WTpAuxMvOTgP0inNxUY1+pb5lQdAgZSNzxtJ8NBgvJXMH8VhOhfvzGLVMZmRa9Rf2j56Ztp20A0m4Sy32HoMLk2cMhXngVV+sJO8Hr0nzwYDaiK6gllG2925Qqn6YXSxU6JlR9qcj7k+pjx61/0NP2BmwkfVVbn18HO0nAweqnKfcw943d5I9hGnqLWX3LHbW3Lty4pSH0ik+dvpltbVTiNZg3rJzCfnRIuav6RdOF9uMu8myq2ayBiJ01GwWV8vVMjVxmfMcu4LNGL5pNJ/OdVn/g/cUaDZ"}, {"__id__": "chunk-ad10905ee74f6e18e1c99fdf135032fb", "__created_at__": 1760503191, "content": "file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendBch()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}\n\n// Get the balance in BCH of a BCH address.\nasync function getBCHBalance (addr, verbose) {\n  try {\n    const result = await bchjs.Electrumx.balance(addr)\n\n    if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ', err)\n    console.log(`addr: ${addr}`)\n    throw err\n  }\n}\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(\n      thisUtxo.tx_hash,\n      thisUtxo.tx_pos\n    )\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-aad38da74a8108ac6178308f1b7a9450", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-bch.js", "vector": "eJwFwQ1UFVUCAGARNSl/UHnIz4N5b+bOnTs/D4mAJdx1JdsWI3TzbGYdlASxZZFWS1Bz3ZB0XdefJZB9gPDevJk7c++dN8DB0kyJyjKg06aQtm12IEuO62qHjgunTSn3+5CSq9V1nmK13Do6iG9rJ1SvdYSNyLHaSLQabHKwOkrnyEkG1V8ljWZv2jTrpnAbf6UNW/E+DlzuCPKf+Q65SP26ecI4LK2KrFG6/Fsjj3lO+O+wwcAMDWlK9+vNAfW+hbPEP8o3tNVuiRUUp/CQVoOKxH9optxu6O5O+SLbQQ7KV4zSlGVSXletdoaEgOZkycnwCXuXPBk55S+m/zR2OYvJFxk56IidibJRnLlNa4oHid2dVeIh+rQxxB6iV4U8ELJGUQ5t15PsXLE+9QjNxEXGNiUpfbMTL10nq60NoYOcBm1xs5ULa7HfmaLPIFHI4zPkpWkN7hw7JvTf9rN8mTn02rZF+7VB8rykRsTpI3rXgjpvitJDJ+0Gswl8BCeCP4F5MBd8YpepzaKvqwcMJyejQxLnjrAJ9SezTbyl5wZi0Cz5D0amWhHdIvcpp4UwbVQF1MfXGk0Caa+1GlgP/cYqlFdZVPpr+EX8uXlB6havO179F/YBtNHZ7v9QvGbMCZ0DvFWK35b65nzzN6xA7pK9E/0A7mqV/I96XJrWNpOmcoQEFQqH7QgqUHtBS8or4kttK+USJ9mKkH10nMS0rPHkBYopCZ5W3hLfbR7HpeldLenuB7QTphIix4a2ut87/WmfsgPR8+QLLssXb5WBfiHLHBRqOh6lbuIonVSORsPSJpDPA7rYqpWuRJqFfuVLnwuX4XWgUDGNKu64E9AlOl/Nh4/gNcGfhYaM90G/dQMnNf3cY1o7re+VsRYJztZa3cxZGSyOrtc1czYbB03gPjagzEQe+TntcfKeE3QWyQlws2bC7XiYHwuGydP4kn3JOswWagX2uP6gMs0pxgViLKeAD8xXIrd8jliX8qIWitxgvcf70YN0ORyjd5y5jefhGDpjpdJz0SfpR7CSlGqNeLqmhz+3K5yT/KvRld7nuWTC0/1wLxk1IQmSPycfA9mhJKfBSY+MJt1F98Q3xW9hLJqw7nkrAv22h+wNrkiIVXt9sajYHZCnN4zpCZ1+ZTY+zfLbJiEGCYeL0j9Bj/HD+DOlj69JS6fTZOC/aT8s3PMMxrehMyi8YIb9rKW33sRb0DHyW/QruyR8AR3gc+SroAMvw9e1TXAFLo9s9e8B0wPVXYy/pmnHLeVt+RhtQgGjFA5E44wiUuD06floB80zK6QMfFGd0nI4RmYJMWQg/Ei8IIx07BYqlXJzVwdLWtXynL0WvwQuJ/uM24Cjv1Tq0Vy6Td0DC92ptnXc/9gDyjjdR/7lXcEfogVcLP4WnrCW6p00jlWpt9w47ig9Al4T62G98LJbLbQ6Z/EFpQy57GTCKeUo+wqXK3XuXJZrVR2oxJmJli9WzDjeraaxXpbo0+HuwLyk7M7/4AEwnxvmX0DjYKrjDXLQOSmsUIb414VL+AGH02eiEoLlEjxDXMuu+dc6KWQPeaqz2Rh314En9LOkiusCv9bng/VmjVkNzgsVDPvDcCBcvOQF3N++xqpjfyIb/17oy/a20SF9H/mBLJWXRzYEvMZce5ITvL9vfRiWuTvUBUhp/5g1i2E6LzFfvJ5RBLewuoAQSFOXsv1hj3VFXt91dOHH9qey6GSzE1KOMjPha+axFnPvuZXKu/5EV+q4DQVjQ+oZwFm3uEaSCb7j34A7pCdpt9trpJCL/reoov9bfTmaCSC4zLLwj0oyX06+U3YDGN4Iahb9xZb5ArISnJMXq7luqlSuvR9Z4nxJc+lvuEfNu2aPf4O9PHq/ExM5L1Wzd+xs+pD9DnsWzYtkH8tapNlbnWXGnY4b/nK2hPbA9egqKfT8Tl7tPu6vd2rEVfL9ditoSt8OszJyxNNpO40lyoRxzix39rav5f4P68ycCg=="}, {"__id__": "chunk-dd150f4ecb12549c6bf250c5a802ee21", "__created_at__": 1760503198, "content": "/*\n  Some applications use dust (547 sats) as a signal on the blockchain. This\n  example will generate any number of dust outputs and send them to an address.\n*/\n\n// Set the number of dust outputs to send.\nconst NUM_OUTPUTS = 5\n\n// The address to send the outputs to.\nlet RECV_ADDR = ''\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\nasync function sendDust () {\n  try {\n    // Get the balance of the sending address.\n    const balance = await getBCHBalance(SEND_ADDR, false)\n\n    // Exit if the balance is zero.\n    if (balance <= 0.0) {\n      console.log('Balance of sending address is zero. Exiting.')\n      process.exit(0)\n    }\n\n    // Send the BCH back to the same wallet address.\n    if (RECV_ADDR === '') RECV_ADDR = SEND_ADDR\n\n    // Convert to a legacy address (needed to build transactions).\n    // const SEND_ADDR_LEGACY = bchjs.Address.toLegacyAddress(SEND_ADDR)\n    // const RECV_ADDR_LEGACY = bchjs.Address.toLegacyAddress(RECV_ADDR)\n\n    // Get UTXOs held by the address.\n    // https://developer.bitcoin.com/mastering-bitcoin-cash/4-transactions/\n    const data = await bchjs.Electrumx.utxo(SEND_ADDR)\n    const utxos = data.utxos\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    if (utxos.length === 0) throw new Error('No UTXOs found.')\n\n    // console.log(`u: ${JSON.stringify(u, null, 2)}`\n    const utxo = await findBiggestUtxo(utxos)\n    console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // Ensure there is enough BCH to generate the desired number of dust.\n    const outBCH = 546 * NUM_OUTPUTS + 500\n    if (utxo.value < outBCH) {\n      throw new Error(\n        'Not enough satoshis to send desired number of dust outputs.'\n      )\n    }\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Essential variables of a transaction.\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount(\n      { P2PKH: 1 },\n      { P2PKH: NUM_OUTPUTS + 1 }\n    )\n    console.log(`Transaction byte count: ${byteCount}`)\n    const satoshisPerByte = 1.2\n    const txFee = Math.floor(satoshisPerByte * byteCount)\n    console.log(`Transaction fee: ${txFee}`)\n\n    // Calculate the amount to put into each new UTXO.\n    const changeBch = originalAmount - txFee - NUM_OUTPUTS * 546\n\n    if (changeBch < 546) {\n      throw new Error('Not enough BCH to complete transaction!')\n    }\n\n    // add outputs w/ address and amount to send\n    for (let i = 0; i < NUM_OUTPUTS; i++) {\n      transactionBuilder.addOutput(RECV_ADDR, 546)\n    }\n\n    // Add change\n    transactionBuilder.addOutput(SEND_ADDR, changeBch)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendDust()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mn", "full_doc_id": "doc-edb78933ea2343689f0849c9a3e234d8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-dust.js", "vector": "eJwN04l3FOUBAHDkSNSAIYAhm+zO7sx+38z3zcy2nOEKRA5FDTSBvCgSgqaJePSxhiKlhUehgUQusSHk3N3szO73zXxzJKBo5FEFOXwV0uAFik0pqVDkUPBVQo2Bpv4Nv/fTUaM81x3eUYErO16HJ5T3lclGxD2qjA+dgTMlH6iwIzBc90NLPXrZWCGtStbE/qOnRS6C0/YprhAnpKHoHlprT4dP8/fZZXUwuMl/geTZm4xG6WT21gkve/KVbfGodtv+Ct9WKlUo/Q/Nt4ZiwV2LFGW4Mkl9VVkHzjE5tIOp+Fl4HdaMPKvcRElTBJx1l3wvbzC7POXgT04YfxDdY/BWzKrF1f4KoQ4c9uW5+9FtajS8QnITg04++zWezj7m/g06fTbnxa285RtiF9KN5ti2d8wpeH5kWrIL8/SyPY9uIPtECV7T2vXlYszNNs6INWAV2gT/jL4m85Lp8nB6Wv6l2U8Pibslrm02qLQ/AhtTPSTF/jq6NhbjliV+42+giviFjOUyuNKeIQ0mwm6luCcE1BvCh47P/ateBBy4LGeqWAI5WM/K9610p+BM3IRKgxGaYTczk1zNYolO5msETqpbAR40fsT5glcCSjG4Jw8hm5GXHyV77QGpOtRK3qPb/KPMh4UlaGfyiOEZXayXOY1ql5QjF/nC0E9TuWatzPw25akxC9v6eA51o8/wjeB02ONZJ10lgCuk/2ielYTOTCtT+gCWQB5fj1/19rKDsNN7LKfJ6ci8nzzMTwDAPGuPdQ6R/mRB60EzDKr4BfICkpIcDL4gPuRsAVnuSV+/PdfnNc9JxXZeLNvYSapYP9KMSUCDbXAYLod1xHAvxJE0PThBrbCOCqej7c3zjRhSfEvIReIFC9lWNR+lSbvV4+wRstOeyD43tqB9o+eJofFLtYi5TCxpnYX/GC9yn7Hbgke5fVIBrpV22AfZNOrQDnF7+izLUabQt8kOvU8cEE5nHWA5Rr5+1vlc9JuB+DveJeI2dgQ8qRYEh0RzknszCuIv8Wkos+VZNmht0TphWbAUNJGFaoEZhT16X/N8U/XmK5201PQpZa6h/j1WnvyGvGjclN+yuu2h1m89xzEFM8TFmV+ivTQDfgsvwLv2XG6Y3/eL83A/+s6aQUO4W9ogXgkVq9X4U+2YNMcI6jJYqRZ7svRDxNfWMeY7/AQ8oLYYIwLvWZNwDV5B3nBy/c/H9pBb4CRK9UE1FHldkK1d/InkZrQ853H7ujG5iUil6k36mLpFoaYu1KP9rW/j3eJLJCPyjFCIBgillY0L3AOJsKxbuvYvIcPKBF24Jv5myynjqPVP90f4h3FrzOrG82q1MZOOlfKsFPcVcozVNvgD4QTPrqBPg2/QFO2Gttw5rvdqCwPpUnX7Cncr7ovfcd5K9I/fwCjfE6x68Ize751MPuK+NNb/LHI1OJ4+r0eyZGcRWyz9CslsKvIHFnGzXQ9e5bzvDnfDnOO0+krQUhhqzgZ33fR4i3Q/PBai4Ln2QbuG3RK64oeFw87j9i6WZUL53Z+v/NdJsOv+edoafM2ayMYIS/Hvk5/hJkLG/cXUtK1OZftkYReWkxvZbNFLukUq1olzxTH6V3SScA09ir5QrcBU9JNbZZ9nmeplYz09BNIaFll3mCtfttejix3b+U77IeTlspGUsx7WS3FalUCBJdYIl1NGqdsChfqQ0E61T/6emdkj2PJQHTvhKW0rh1eEJ5xXA7lKJ7jd1AvnJNdZ65rvyCfMdmxGn4q76gPqx1FkjpBaoAB7pHvSauscS5HCxoDBsaHkEkkzX2spUosCE4293hLtAbeeDchH9JHCD8ajZLWv0swVLvFOgGfp4mLjE/EkVwu6YS9KZXOE2fZNptkHnBcCIetv7WtYHrnlwTTif4xPbXnEfdqe5j7J7jN7wWpT5343Li2aw+7hYXKtmdvWQO9G5pDNdhBs12rlS2ouleEp/hthNO2hI9t/0lbF/g8NJpZL"}, {"__id__": "chunk-89eb70d82ee14b669f2b1a91bcba7d83", "__created_at__": 1760503198, "content": "// import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendDust()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}\n\n// Get the balance in BCH of a BCH address.\nasync function getBCHBalance (addr, verbose) {\n  try {\n    const result = await bchjs.Electrumx.balance(addr)\n\n    if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ', err)\n    console.log(`addr: ${addr}`)\n    throw err\n  }\n}\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(\n      thisUtxo.tx_hash,\n      thisUtxo.tx_pos\n    )\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-edb78933ea2343689f0849c9a3e234d8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-dust.js", "vector": "eJwNxn1UFVUCAHAVsQSRSESE9zHfc++8GdlWV8koPW2wLrml0B5AU8tcZf0gTm2iFZUhlrLSIcCAx5s38+bOnXvnDSiSmrm1JafIPWbrquhyUnLZJL86BmLH5Fj98zu/D2GhWtORRE+l3ut02TnaxhCDQ/QVeDI0zqsSyt2hkE3WwIvmBWOVw1h1ga0oxP8v9h/1SWz43+cX652BMdbxikPdvqn6LbnILFCG2fzI8LujbKm7WvubukvN2LvRtziU6s8UqmGXus9j0fcSQnVqGhgvxNQQXGGs966AQjqZ7IDHrQm+Fgl2VquKc5cfpjdBndhhn4Jfm3kscCL6LVqKn8pJAYVOBRgP6tEE7Ww9n/lDR66YSk5G75LvnBoxjd9grwcfker2SutRMXf6bXI61hhVQhP8H7vD0g1njr3XSAw+LieI++zn5L9affQTEpMP8PcxPHwikNpxwM5PqY68ypwx47t3p2xRzznpsmVW6Nv0wZlpzDHYTPKcbn1E0OQfjSnCHbGL67frlSoRdjZLK/2X5d+Bx7wVdJ46FPuH+Ia+VVsJJsLz1k2lKN4Df4LJXBmBoQZQzFIrV1RaFuF36J/pdns63Il90m+iW1ChmQw2CanxTOMDvF0udldzDwvFqDy2QYha69AFKTtj7v1PK7+f8RKuAUN8hraTu6wDxpeZhwvYdTiiXJELnAdArXKezw0/KBVEJLjaHUZd+F9OAZn9tnD/y5pE7slOCRliRtixe/0V7f+OJ9NGuQhPVsray70cd1zwK3rJ9fC9wcVME1oiQi4HiUJJ+wnHbK0gcxUlvkUKielMAlmGXgCy+QX7gnKW0aUp1uf8XrgZvceMuquMTeSOMl1cgA6+V6GPWsl83HbtZVNqM3+0P7e3h45m/iDMVIu80h2f0jpcYd4yF9NatkQ8QZ9QoHwVvqUm4lJ3k7sNxKUSlZeGrDEWhJc4feg4brKPk4CqOiXGMPyGPoYSpY6sJmEBsvQAd0B4tnm+6jM76JpoAAyQleKDdG78q3CO/CXYZnNkojeABZkhcXW+vSOkRGc5f3eB0BV/M2XMvx8nkHGgDPeinF+3yp8s9rdfpANutrkoPRc+JBliugzlIfx22oAmOxJ5fs/Rd6uU+wJFsuDtg7h1kfmz16G0oqX0oeZvxZBwoulcEIML7BdWk8IIScwc0gPWsiP2eKE5MJrBwA9AVtZNPA5vbelFKeAR0gBu22v0fjCbGwTd4kH7eTtFK5GnGgnWf9kBdkg93HmE61Wfap+iVML9pEmeFRuUZnr15lGn0o3r52UfhQjLk+yx0CNaQrDG6WFG7EutD7Rd4aVGQWiGkxCIWMH32xbas9AefhfzihUUjzhnleugxbmlvCHu9m5HJmV96FLlazIX1/uz2WPk2+xzKFlKsoLRXuKSa8pZT+B6CBZOi0Piz0yZN8i+Hk+K1SmrwRw3b3q3cp0koDPKIW+EtFoX0/PspPBS5kuur20k9CQ9RZdP65UqtIyM773DqISvZDimD2j805ESkhCfKEgKYv7JU/QxrYyeBg/jFcpadEDMp4Avi1tOFtnYUYO6vbXiNH23M5XN50fNa8K8WLlRLLj8TrqLaZCouTFnHfqj7uCr9LdkvdmT1RV83NlsZjkTyCQYjlLtmNlgJwbvqTfaw1KpN01dB7SmFPqT+CIhjC38IWeTeI0u1/ZpPUojgdFEfBimdT4z+QreA/vpBroUXIbzfB/R69bmwGveHahzhd5fjLvyGfOQL8wfsiuYG7hMfI3/vzhfnk22eyet8UTjZEpj09TquM49y7e5+bF+pZvLdF781aGoI3wzcxmewQ7iY8J38JKieWPSYbXBrHNvklpylBkxAJrMvIWfie+nDZF50g3qd151DuIjtAW0m7Mj5TMQXuLOQQuN5sBCKpGw/Jk8gg+1VcHl3lXuHXe5aMAtqEos8v9J7tNO8rUBFl2CR2L11pjbGE5mfwGAE6Lt"}, {"__id__": "chunk-59376625775900d5bad46d960160926b", "__created_at__": 1760503220, "content": "/*\n  Same as send-bch example, except this uses a WIF instead of a mnemonic to\n  sign the transaction.\n  Send 1000 satoshis to RECV_ADDR.\n*/\n\n// Replace the address below with the address you want to send the BCH to.\nlet RECV_ADDR = ''\n// set satoshi amount to send\nconst SATOSHIS_TO_SEND = 1000\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_WIF = walletInfo.WIF\n\nasync function sendBch () {\n  try {\n    // Send the money back to yourself if the users hasn't specified a destination.\n    if (RECV_ADDR === '') RECV_ADDR = SEND_ADDR\n\n    // Get the balance of the sending address.\n    const balance = await getBCHBalance(SEND_ADDR, false)\n    console.log(`balance: ${JSON.stringify(balance, null, 2)}`)\n    console.log(`Balance of sending address ${SEND_ADDR} is ${balance} BCH.`)\n\n    // Exit if the balance is zero.\n    if (balance <= 0.0) {\n      console.log('Balance of sending address is zero. Exiting.')\n      process.exit(0)\n    }\n\n    const SEND_ADDR_LEGACY = bchjs.Address.toLegacyAddress(SEND_ADDR)\n    const RECV_ADDR_LEGACY = bchjs.Address.toLegacyAddress(RECV_ADDR)\n    console.log(`Sender Legacy Address: ${SEND_ADDR_LEGACY}`)\n    console.log(`Receiver Legacy Address: ${RECV_ADDR_LEGACY}`)\n\n    const balance2 = await getBCHBalance(RECV_ADDR, false)\n    console.log(`Balance of recieving address ${RECV_ADDR} is ${balance2} BCH.`)\n\n    const data = await bchjs.Electrumx.utxo(SEND_ADDR)\n    const utxos = data.utxos\n    // console.log('utxos: ', utxos)\n\n    const utxo = await findBiggestUtxo(utxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const satoshisToSend = SATOSHIS_TO_SEND\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount({ P2PKH: 1 }, { P2PKH: 2 })\n    console.log(`byteCount: ${byteCount}`)\n    const satoshisPerByte = 1.0\n    const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee}`)\n\n    // amount to send back to the sending address.\n    // It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - satoshisToSend - txFee\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(RECV_ADDR, satoshisToSend)\n    transactionBuilder.addOutput(SEND_ADDR, remainder)\n\n    const ecPair = bchjs.ECPair.fromWIF(SEND_WIF)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      ecPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendBch()\n\n// Get the balance in BCH of a BCH address.\nasync function getBCHBalance (addr, verbose) {\n  try {\n    const result = await bchjs.Electrumx.balance(addr)\n\n    if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ',", "full_doc_id": "doc-36356520383cb2d8c7377853caacc024", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-wif.js", "vector": "eJwN1ItTFVUAgHEhirQQrcvr8ri7d8/unj27+EAN0VKTqEyiqNEslDSdssIwTSsdFVFzgMuYhHmR+9j3nrO7Vykwx/DZgE6CZRplZFYDOcbEWFmpoZT/w/f7tkkvSAvdJ2MfjUtzVXBD7BS7yRznLHKF1VwnH/Ot9S5m34QUxVAP4N11B9j+nIdN3qoT/3P79HbPPaH1aB2/xh7mS7hq7WedUwG935zo7lLvRhdC708oQEfRbKMiO83u9gtiK7oGW++vIOXUbKcvNwoXo7jcRImK5pBWaawFvGnsJH87v198HbeFY/Rv+k6Fgk/pjaEd1Nfm9+jDlK/IcaPVyZc06hntFWFQeA9XAZ+ypdbFXSlbnLmkkO+1a7MJ4oIJKTWRl+tnaL2k2+h3JlF3SDlona8R9wi38PrAW+6FqENdFHaPfEO/Fso1fyELmB50nJ/LB0BZ6Cb5j/9n5wLpvFVtjqe2ovnWY4A2xvs/qMnHppGV9Sh907xmjQIHtBHcCHaUcFa4YPQyQXlFbLMWFDV4SUiMpbo3lH5tGpcnaPDOIELb7CxlH1HgN+jwGC85xFh03h5L2w4WNYbJMF5PPnUN6JfjxCUZv/KQ59hbTY87h+FekxElbEZzUY0hy8vAKvs6ANxkM5+chq/KJ+znUK3cL9T7Txmdxrv6WWMtSY6u0+6CE5vKhR44XkqDf/KVdoFwTG8EY8161qvHuVecXKY0iwMd0nXffVS9mc83G1XBv/FhNqrPhYGsJ8kOt84Z4frNfq0BL6dnRrbxoex8OwT7IkG8mn3JKTCA2YLOade4fLdev+I7ql/VU/gg9QmSfS4fQL3e+cZeQhsvcDp4BW7C8eoR36KMH1CJnoAfxyLzLDxLBoU46VBKWKojU5Vi/J3a7GmjN9OTmTowwnpD/xguUdJzh3TBXU3W0gF1iVCBRACsZdp5t0Xdrvyi3zTvlC6a5yID9C5YE71AGKfC6pbvcy9xs5uTQQQkMu/gBCNRHMgZjbrt6Xgpc5l5kCP8p84e/QT+mn6IbxQfbDaly2o5/EJ/S5ka/lzrgu3GsHWZ7yIzhKmh58nbVqE5CRZpP7sxEADnUB8Xz57SfoJzxySgSmGHv8VsoXvY9nFfMjulPrIheynwcLOsi9I93CFwEpyEtvx5pDp81LfNmBN9jAlEUrj47A7ByE2Rq/Wy2y1UQENX7M2ZmVqXulX/EYyVq+Ui35xIpxqXk5fqF9+3RjuFnmmwzb9BmAVO8xvhTrdAeF4aUr3sLHaOuY99MVwvXbIW4Kt4nlUpb+A4uV1uCD8VfkC4Q1Kxqh5pXkIG3X2gvmkHKIkuR9+bh7N+hzQudixrsp0XLjU4uyjShTbxXjMJFlu7SRmdCCewxelrYpXOxOA8M+a06e+CjcxiZSRbxfSmZgRWOCPBJc9CcRj8ixpIRK2DJ+SYOwOtEFqsJHT+ttci7BFuOjWx5eQROYP8s7vKv3/MTH4ITCNYjkpbogPSKmbALbaNjMkCzR6Ud5HZ+JR+QJkgTec9/uvWcW00dsgUVGV49fHyGSBZhc3L8PRQjvmd2YFb3WPaa/5260/1dHZh1gZ4Ov1Mxpuw3Ow03kn6kSpXjuUuVc+Ef3PS7XlGGx/FV30d2lRzJGhSPWhzZpnkc7/dZQYT6Cm6j/kjWCn07OkwJiSnZt27tz/UzL0muDmLtFvjjkgbxU7SoJ/U26VP8CbhGa0UJoOAdQqVimVcKlksdBurYp/Jwx/eILX+GVyy8jJEcKPf0Qq0UUxp8xE4ijO8B63yD9rYv8iQEw/WpN8ycqgkJNIr5EF2gI2QErxSovjM0CZzGUlrKLt9xSuwQrtBAAoGDvpXeqdQfyjZjQp8wqrThxzKKYwNhRLwl3YnrjWTqC3aJFYIx/MM8ZC/9v5rfBtdee9LVjpb4nuaoe1KdiXamjnITg9b0dXUEP6BKmL83NPSQrpfycMzWUDm4ytGk95h/Q8C36yq"}, {"__id__": "chunk-22451867f8c6b867704c34ada230010a", "__created_at__": 1760503220, "content": "if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ', err)\n    console.log(`addr: ${addr}`)\n    throw err\n  }\n}\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(\n      thisUtxo.tx_hash,\n      thisUtxo.tx_pos\n    )\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-36356520383cb2d8c7377853caacc024", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/send-wif.js", "vector": "eJwN1ItXFPUCwPEQBOQqkAks+5zd/f1mfjM7u5SYiM8iX5UeeqB1wsKyrPABmtoRbmouWyqYCqIgu+zO7Mxvfr+ZWai00qQX5SO9V81boR0hjXykecwj3oNxuyf/h+/n+5pYIk7vXGxWiLcTsH0IfciOJuuNsdwl0YJP2d3kIqyhIbRw5Nb8sNJHUuA8/iqbZiwSN9LPwZT8G+EhcEmxdvSiW54gU4hO0VpIuKUEWMvZaj1UMN43WczqOKJej9SwmEny94sR5RoZy/4uVwds/Flug3+GmKFPMvaJB1XrrlRx787uqOQ9pf9XmBhv3D1NL2Ofhda2IWFBzAtGkaflz/RHyZSCuOss9YoF6CtjEO4JXrZlGZ/mmJqgnMDT9EywWpg0ZpFrk9YXnUAWezdb4vQPeQfoQUHneTrK97L6tmrR5nkMsIjNi6UIFaCW9BuF7YWWJ3g33wUfNJ5V+pzvRryokQboY650fphxnevY1QMH9lRiV1s5XCntz1murGKSpCJbbyvL1jMTaIi/pZiJCvZh9JLtGXZD4rAe8kxSf/VdgMnMo+xUfoA0omRtlHhdmMGkmCfR/yPXQH3sP1x//i7yvD6GDOrV6BNchNbhWfbR6tcAaF3mhcgNtYqfYvxqOSZUySesa1ESnc10oTrrw+oQV+q5SYpRHjrsS3gx2Qa/JU5SHHPpy+FEpdG9HqSIgjCC3+Erkjl+FlkvW0i/dxyuVGu1lf591AWGC9e5Otdl5R9q7+6e2Dn5Db5EGo4u4ENmjXGSqdSH6TeZXfKRqMX5Hcz3dtk7hP3xJXiwfY7+PqikId9c6UfWRo7S4+hxplvzoYNoOh+Ub3mXCQeYM54UUhubCRN8CfxdrY+eC7fXtwin8fdSUM5j1saq9KfEHrQCreclczuZYK5S8tV0rbjlLbwJlurn4Hahy/Gz+AH9QR9PR7J/7VwgHII2pVJqyUNEj5cqV7Qrao142vF+66TW7HhA+tO7UpvHep2bm89bUtGWcBTWqY/Qz9wb+T6FYV+InyOVssddIngyHeSo/kq8zjnL8ZAfKYKvFR5UpqvP2SN0ZmMFk6wl04/a3oxUo2a5VJ3cWoRD3B26yljI/Oa9w9eADM9AzII2MIOoQMxtD9C9wAW/8Y/OZPiLxkLxC/7SHkYb4CxYwmct3WChViFVhQ9w62BTtojSUKpwRzvkS6DL5EelgSwHIVHlHPRLyRGtxKXcOOjEt/l3SCrM4Qrt02AOGkbL1RRA3C8pnexMaQ4zVdzSMc5+WjwvN6JKmKK8iO6B48VkPUNC2i/6UmWQC1kayADznLPAN1GY24boDHs5mUav2p5nzjNr1YP88XbW8T/XD/Fm9wm6Wn48sthdpQRj64QgOk3niHXRwkQ6vxG8g4dFZFpPr6mvysdMi/f4vUvYRTlp8pSW6dH3eL851lu/Ne6uaskWkpVkPEtI0yvMTnSILzG3w26UTarI2/w/Sa45Rutsnhy9n9XcXzu3gUFhDkkjY9ABt92fDhoMItt3/7ttH+qEG9z3xjdpVdqymIkAfx9YQZ7UmhgPHCAjcHFsEAyp1faJ+CYu0GsSF/U241NOYcv0JNAklN1tcClZrbQ1rwDf4CzGz41givzdWA5vxKOVn+jr3HuOvdwZa688liThAKqOHg4cJ1+REpzBFsZqOQtBdy/ShPbjMnal0hlr5Ep9QyCbggIa6BdS49/KD6oZ6Db9666SBjgVD5AmMN/3c/ZmskD6QNqXOAmXx5oI8P7JvxGfH84DHytZcoZ8BiiOMngLXXW5jCutTr1U205vRG0IGT3WJnaU8S+cBeazAekR3wTWxwfZt1SrzOavoWvkTBSCW81j3APC7p1LyDqjmLx732ypN5YuY+cJGjBWZ/Lsy7heOSJ7lQoiCk45Csq1vm0XzZ/2zCUPqEHioK/lhqGsJTNZ7mXGSNdUc6/UgLZYcnlb7hquraCMP+oJtM8IH40PJw+pMXUB/hv7jJPz"}, {"__id__": "chunk-ddc0d3e41c5abbc57c54b341364b6800", "__created_at__": 1760501470, "content": "/*\n  Cryptographically sign a message with the private key.\n  This signature can then be verified with the verify-signature example.\n*/\n\nconst MESSAGE = 'test'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function signMessage () {\n  try {\n    const wif = walletInfo.WIF\n\n    const signedMessage = bchjs.BitcoinCash.signMessageWithPrivKey(wif, MESSAGE)\n\n    console.log(`Address: ${walletInfo.cashAddress}`)\n    console.log(`Message: ${MESSAGE}`)\n    console.log(`Signed message: ${signedMessage}`)\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsignMessage()", "full_doc_id": "doc-ddc0d3e41c5abbc57c54b341364b6800", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/sign-message.js", "vector": "eJwN0mlwFFUCAGBTCVIikUgiuWYm092v+70+ZtyAa3EVFMQlqUASYVeWBEpWDhVBQ6jlyEIwFCIlRIhhAzl6pqd7Xne/190ZRVYFN5Qsh1xBPBLEUTk2GBMKIRzKgrrRn9//rzK4Hfzy9vGOM6Hlid1atbQclTswsUCmsatsA1/f9oS6gfIombOd3jLa/Kna48oU7BPrxWFkgzVgn8PnwNGWci+HxPXh1glrEvMD6oRlTi35C/os+o2ULrKhGvLUtr3mbal0dLXy17APbnRUugjnh6HczK1V3pcq7Nt6VDzIL+L7QSbzX0GMW3wdV6pN1JcGjvBftE3zRkp/i1crgfgFotNyZ1q4QJxFU/V67gK5AtCuTRxPsvAZt8crIU/TX2iber5gbfxDpij2jD7W3Blh7bFqn9EBlQgQjrPn9Dp6Cn+M9+Pb4mnDb3YjQv8klKLp9gIwFvTLW8mG2HhxnPlO1ky7KmZYjaDBTTT3kYdVBV635zAAhWI3LT+XQH1EE2vDGcoyUOOclwvJiI5PuFPKU6hO7HAm4MXEM/byUx/j92wdc0E+TBZmdtJ9oiVDq0fYyVe6FXihMyd3nNDtfYdH0L+TkPAPdSDkxk9pTwe25flBr/Owr8q6AVJIE9wsaW0rvP7cB9i83Fz2khqwbTQpN90YCy+ZM3UqlDmTfD12q/9Veo1eYQuZrngfqOAHUSH/R/AaLhRh9EnhdX+6kmkO9+6St6VpfAEuQXXkEY1z5oo31BOWRpaxEhn0TyddZswbIuN983zbGw8EVqG73Jfop9bjVjC46p8ynS34aRUpideyDv6JtWhhdCZK08vFIJd0X1TS6HNCLZoDJuBqzxGm5gzAo/DfdkpshTCkvqZc5A7pz+Eaox0t9H5VPL9Pekb6j5u0VOuFwCwyBm4BS8xnJerUeOVoSBxEefYB8il5kF8q/r9lTGiTEiWtwd00ahj26WYtNk7+s7besoTZDaMjd9TLMZ8yN5AhjNDfEL/m7wlXo1P1+Xyt0kIYMcs/vumYlQ7vBBmwKDrXe1ffxr8Kp+tFznDp55xMfjL+1O4RJKk0dAj303hrOvhY/ppfq62z9reW8PM84pzz7QKjuGVj7rP1vi70BE4V+d+9wkoGoniB/DO+jMLGy6BL6mQU4Xl4lhmA9fIVfrhnoK/QGZQwa5jB3O9pnFSniNLCUMKu27PYaJYPiwb8g6Nod/AuqwL1ws68xtAMc7I9Os8Pa2KXomu4j+hljaDK7LNSd8u78g/SQbIG7FC2xwR1AozAGUJDzm50Q/j9sJ3vPBo5Lb8S7NaMt9KM10PPKiOEOjzP2EUecWfj9cbL2kwkyWdj5cZJ7gNvnrfEm2zt1xc4R/AJHyukStfoo+I99yV3PreVN0gBKPKK8V5BxD96V9BF/VZrKtfPTPDxrGr3mRlSJqlU/qU0geWRRuYIJKRB70Wbse4pUkZ72H0/8gWqInzHLDzRd191wMpmXl4JstC9+Hxykr2ph5We9pesF+gxK4n3QYMZaRSZrjsqug8Vi71w0NiJvzOTTpe4BYdId5Qzw+Lq9kN5S0DAHW1dNTc7G5nHC7536+0icFFdKcKgwi3OP2lpZvue/eIOvVMSRhYHNrtrctfTFFkhs9nH7CHjxRxkNkj5dknozURq7C3SHVzPF6Mm9sOM5dKx/C2yP7/K/7wVBlPkBFfsb1Z8sIzpsSuZawyVp9EK77r5kPJje5Ksc55UamKYMjuT1v/o4Uge/3n2RDWYOgwPkzrlbHOGcxunYCt6gA2Kq7Kg9CtIs1abrjnkduanmR9J/WIhYo2j2lfiK7YMfPAmXNo0hdzHJbk76CQvG9xVs70y8B4qLHAiLXSFMSqYhOtUP+XdXlpKKPtQwep4a7RvdyICY0Q8gjvgjI4vnU2knBZ7ByN8fFC/DleRwzRHOQ83mgFwi4wPnNpRbI8rOIAfFMvC6M1U8E70c727YcD71tVifONvq8aqfA=="}, {"__id__": "chunk-f73fcb9ecf6704d615ea2e6bd4f8633a", "__created_at__": 1760503222, "content": "/*\n  Split the largest UTXO held by the wallet into 5 equally sized UTXOs.\n  Useful for avoiding slow indexers and utxo-chain limits.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\nasync function splitUtxo () {\n  try {\n    // Get the balance of the sending address.\n    const balance = await getBCHBalance(SEND_ADDR, false)\n\n    // Exit if the balance is zero.\n    if (balance <= 0.0) {\n      console.log('Balance of sending address is zero. Exiting.')\n      process.exit(0)\n    }\n\n    // Send the BCH back to the same wallet address.\n    const RECV_ADDR = SEND_ADDR\n\n    // Convert to a legacy address (needed to build transactions).\n    // const SEND_ADDR_LEGACY = bchjs.Address.toLegacyAddress(SEND_ADDR)\n    // const RECV_ADDR_LEGACY = bchjs.Address.toLegacyAddress(RECV_ADDR)\n\n    // Get UTXOs held by the address.\n    // https://developer.bitcoin.com/mastering-bitcoin-cash/4-transactions/\n    const data = await bchjs.Electrumx.utxo(SEND_ADDR)\n    const utxos = data.utxos\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    if (utxos.length === 0) throw new Error('No UTXOs found.')\n\n    // console.log(`u: ${JSON.stringify(u, null, 2)}`\n    const utxo = await findBiggestUtxo(utxos)\n    console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Essential variables of a transaction.\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // get byte count to calculate fee. paying 1.2 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount({ P2PKH: 1 }, { P2PKH: 5 })\n    console.log(`Transaction byte count: ${byteCount}`)\n    const satoshisPerByte = 1.2\n    const txFee = Math.floor(satoshisPerByte * byteCount)\n    console.log(`Transaction fee: ${txFee}`)\n\n    // Calculate the amount to put into each new UTXO.\n    const satoshisToSend = Math.floor((originalAmount - txFee) / 5)\n\n    if (satoshisToSend < 546) { throw new Error('Not enough BCH to complete transaction!') }\n\n    // add outputs w/ address and amount to send\n    for (let i = 0; i < 5; i++) {\n      transactionBuilder.addOutput(RECV_ADDR, satoshisToSend)\n    }\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n\n    // import from util.js file\n    const util = require('../util.js')\n    console.log(`Transaction ID: ${txidStr}`)\n    console.log('Check the status of your transaction on this block explorer:')\n    util.transactionStatus(txidStr, 'mainnet')\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsplitUtxo()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')", "full_doc_id": "doc-a6c548cca3bb19bf4e34eb410599c084", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/split-utxo.js", "vector": "eJwFwX1QFFUAAHAmU0mRBPkQOO726+2+t7cnJGpqqYOMYKUjCt4UmVpkQzmKWeaQigVpqSQodIB3x95+v327J1Zgg5WMJliaNk5mXypjZZmZoln5x2n9fg9Iw3C0uzZeAOfFU7mmSbMCD1q/uEdFVnqBKhXvz+0iSUjJewNP5s5bz9I7ubLoFHW4vYtrdoA5IF1lMX8Albhf8EtALdmmX2APUotwv8mRmVxNxv7CGZRX2h1tftexqrkJ/ktiCK1Cqfhf9jHnC/E0Khf2Ba6hLbkpZI+0zm5lz/O/cqvxbXEceFErTO62B+WwfxjLWg2cQQb9b3EdeqV1Wp8kjFSO01n8W74lzhHwofGIZ7m5QS921hFNqLEugtVo9sRbTDK6xVbG6vDjigdf5vrNWjg65Vk9Cd3W15N85XdlJgqCuF1gFHsK3F6lEs0Wrgn1MIMtClfYQXRXr5LqYq9EV4ZqpRtGGljrtoEcPmyeI8kG8DR1Nqgn2MnGVbow8Cpo4jVrnNTa3hdHoEHql87u22q97PZa7fQV3wHwJBzD1nIbvSVpEvkJ3UHd8K/o+GglKYo9YX5N3UeWWb6wZlPxct6nLBZ5uFE4zHOwTLqgzIOL35gDa5yU3D5ph3nV8vuKzcPtO4GIz+uv702oC8nSwOTxIXEJdxn8aTbpcuQh8qF+Xfg+1kcLYg6aDlymGhVEGvki4yjzpHUko0/Z5Np4OkdECZSi95Un9Hs4DEz5oNoajyiuNo2R+ZvahviAvVEtzJ1qbEvthVTHFbHT0Mwcdjm8SNLE487NppPuEKgzAhBaSttO87PWf1RFPGgIXd3wfeoQDLLNuNEZtjimhy+VCu1d0ShuNnL07RHaO4hXZgQzg0qf+D3/PPNCYJ/lU5fiejKkbOBs7QY/Vy62MnU/124tE6OxUkI5D8OouQL8JxTz75EpRoZep3wXGvaMccZKh5RbsdLYBmqS11R8JGQnWta7a1GasVxdzRXCZZjhp4gr6CTlOT2hrNBKvPejEROnGUeNH3An0IVc/oa1SOzMy+CxWiIP4SSmUjSNTjwo/eLOl0Kx3caRXNmo8VeQvaS+LUFVCGV8I/irbQ+q173+regprtsayh6lfhw4DH8UbuAF6kdUMnOaejuQ7T/O75zQC2qNh0lZ21n/FjZhdGeMUEenr4STuTP+VepsYwHOQtMFVX4Pj4Xzo/9pS72PwgOhhBiVc5jZNkVTuglHjjPwH/ofdA97GXbIf/sTk86QE3S2eEJm0WswJPfT3LizYrmeZZU1nbMPx9aJm405OAlWGfXUKOkT+S51Tp9JpsarqKzMVxS3xVfwpbnEWooQzrP3mtnm3Kia/ljOI9oPwh1mon2IiUTvkFP61siYzAdhIn7FYWGq52PnR9Oi1yn3uCJhPj9oFbA1ZCC6OzYTFlGrOEcvwLnmFbLNTkan+BD+FpyYeLFpsXUL7XG3E4tUqQ0k1Wjg5sGv6PPcMfK2JwSmw9JAPgjGAVljzALLuy6AdmsN6cBX7Vq4Fj7OBt0as7qzx4qIddZ40MNtRwN6K1zU9WZkV3SF3eai+BluGRgw0s0K9uQ+W6wFm8KbxdvhPj1BX4JJfA9qRpuFRiLaJVYp1GOCdjK8g11lzsA9qNBugeX7q2M89sJnGEnYhBl0AP1sZdpjFMdONVM4yj+LX2ntkhokgn6zp/IR4zXxOm6kHUNle9k0Jxs8JzZwOZTm+RIvJjvoOexZqwrNpbTwEekpcaRW0THEjEV32X/ooLDJ9jkv8f3ckDme1OO8rlFaWyw9wAjn7IWs7ekgC+27SMhJDVUaT+PfPdeUEBhBXfe+Y1/iCsyW/Jt59fnHsmahJt9PchG+g1PIEEln0uyW+Od4gn1cFtRP+Xn5C3z3nEx8zJ3mTtNOse+alXJ1rJUNKh8IW+A95Rs6yX7ApyiV+9fQ3pgkegJfda3ny/Wf0WmjUZnrfqvvYf8HiXaeKQ=="}, {"__id__": "chunk-75b7612e5f0e731e3d8d4e3fe3fcc1d2", "__created_at__": 1760503222, "content": "emonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/145'/0'\")\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  return change\n}\n\n// Get the balance in BCH of a BCH address.\nasync function getBCHBalance (addr, verbose) {\n  try {\n    const result = await bchjs.Electrumx.balance(addr)\n\n    if (verbose) console.log(result)\n\n    // The total balance is the sum of the confirmed and unconfirmed balances.\n    const satBalance =\n      Number(result.balance.confirmed) + Number(result.balance.unconfirmed)\n\n    // Convert the satoshi balance to a BCH balance\n    const bchBalance = bchjs.BitcoinCash.toBitcoinCash(satBalance)\n\n    return bchBalance\n  } catch (err) {\n    console.error('Error in getBCHBalance: ', err)\n    console.log(`addr: ${addr}`)\n    throw err\n  }\n}\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(thisUtxo.tx_hash, thisUtxo.tx_pos)\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-a6c548cca3bb19bf4e34eb410599c084", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/split-utxo.js", "vector": "eJwN0o1zFNUBAHBSB0JC84FJzstd9u727r3dtx85QZyBlGLBQiIBi4wRJGCT6VmFoJhAkVRIaVBCUglYkuhB7mM/3u69t7uXEIQGmvKhBiuMg4AYCHUoqCjSAdTCBJBg+/sbfrO5onBO77hkrelJRpUXuO/hRW36OxmgSd6XXhuss++Gv7G3Bs4WNvoewb9Ismg/fB5NTlzgufgp1M+eSh3Ax/Aa+zafre/hvHANHOIkrKKzXAtc65RJdTAn/NfeTeBr+Tn2TvB06CuhnvzdPSI+RZ+RR9hIdAaKwR/MmfZkyWetIplSpvIJ80houVMl/zxal5pNRlEvKjOS4SHyUyAd/w6sS6w055d2BTKMw8I85LK3CAl8WVjSszj0BDjB7Sz22ufECNu38xZcYZ4L5bFS4P6OPtrdPY1ZJ/6o/trqlgyrlVS6/yiOExHYVlAj69EWosTezy0EQXZOcHHHirSGZ7OKOqK1g2fBBljOv2bWoe264T2CbYbjLvD10VRIjtd4fik8T06ZODhhYrbShr7k1/f6UB/K8VczS9I++lA4g1Yw3xRelep3HQJ/MaZIn9JcebDzNX+l87X4HxRSqoqRNCn4Ktyn/Tc1zz0sbSM9+uOKonfin3YeMqrsBxNTzDa1jOTzGHWZ1XaMz9NqUl96q2P18I5wJvmwuZK7Ep8cXgZ+ht3oGW5+UAxVKKtEFu4N5vF1wg1B0Sj6wPcct0jfovqccmDR4mC2N3NSi1mLLokb0ccgam3WS+Bc41QsDE5qB9ASUmtvV8bwRfoe66a2C73HM54FfH/ybIAX/2mUdEw2e1InuEftuXERJbXr8Xt4QFzozoRNgQPq7+GH+N2EKtzdoZTsJ48HY/Si2KbUsgvHb9X+FqvUVpIXUBCUKTPAqHFdDObvBWVo1IqQLmfZxHLiMb9IbjQ+Q4o1iRtRu+UueTPJsjzMIuRGCbnSOw+G+BEMSaWOyNPm8XiJfA7fIUdhIb1pFHH52hSxSX2zs4tZAHKMYeg1/gzc3BhuI5mkeMxl9HsNyv8SrpnXko59X3sbjdNWiq8QG+i4A3+Eq9QMZ1nhg4artcO5CD5n2rUguWZEmBQY0Jcax6zz+HSJwm03+sGH4AK/lISwq/Q6vZs6RjaDQqCAB9Tb9gppamA5idAf/I+SgDKYGNSG42/Q+mhAXMx+pmTzzeKtXT3JA4nxsXljb2uz+Eupl8ROqRw1JCPKk3gsvcfs7u6XBqjjrUKdof+vALkuxmwt7RN+hQP6y+YN85I0Ie3yT5dGwGPi5SKWvscOKYf5QWoHjqshpzp+A0yz2g0BHlEPCVflYvN8ahqbp2G+I+QGYbNB+F2IIWGwvITdNlP4g1mbJMJ2/iTbhP3FJ9BV+ologk1WjnMFtjl/Eo6Sw9S1axZ80eLhPfMorNVPWmk6JvWk2GyZga14NS6ITuCvx3vIeXjQftfVjMrQHOstXwG+H/i4/VturfPvjM+ZLM9W81PWgzHITrwiGlaDJ+kqlW/JS+I56d/4vuO9aHfuBjhV9Kl76VHSSt5EUeiK3qM+OtX/MvTZS8FyMhS0yUfaHOu3pDV12DZUai6Q3OhHvBFYuVn5h0LFSpkegXe5d6wR7zBswXMfRsYbWluq2hzRIxrP3oQNykXc4dQlC/i82OvyaXzGGjZeNCv8Dthizwx3SIOg3/6gfZWxvmSTYZWuK5ptRcXR0qlggGnsblDS6Eh6QCvXGkvG0lEqy+v5M7kZOxvJwR3DtAJl8Ses/cZSFDGbwevtnL0IVZtf8ElhcTwLHCN7nIP0sj2XabLy9eNyl3GDlvu8vc3a2/wMbp/5mPyS8G3hauYJ/mma8K/2T4RXApf4zXZFd58cZLbZ92mDHhi/O7QGzMdn1S5S436fv4Zz7Ey7MfiQutAqKNK8VdYs321rPh2balFfTX2lJZUNQi+Iwaj5D98mZz+30KmBOeKQfwa6Za5DT8ntcFiYjtOgQdkH30qPp0eU/wERz6Qo"}, {"__id__": "chunk-29fe36e692f429fcaf0f4afa493043c1", "__created_at__": 1760501542, "content": "/*\n  Verify a cryptographic signature.\n  Verifies a signature produced with the sign-message example.\n*/\n\nconst SIGNATURE =\n  'H+Np7l5Ee/wTzpEIUYqcSDDJBu8BkOGnk/jCsZDiHzxAIu7V2rJsoisTftyF3Gx0Sk9In94GdiEX7C5xwb7ThmU='\nconst MESSAGE = 'test'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function verifySignature () {\n  try {\n    const addr = walletInfo.cashAddress\n\n    const result = bchjs.BitcoinCash.verifyMessage(addr, SIGNATURE, MESSAGE)\n\n    console.log(`Signature is valid: ${result}`)\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nverifySignature()", "full_doc_id": "doc-29fe36e692f429fcaf0f4afa493043c1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/wallet/verify-signature.js", "vector": "eJwN0olfFFUAwHEiJPLCA4GFXXZm583MezOzQn00LVDAUjI8+miUd4cdZpEpifJJKEuzRMQMdJe9ZmffzLw3s5vaheX1qTxKS1HCVCrNC7VMrbwyLf+D3+fz/Y2FJ50Pr/8p3nugP/6gx6Hkibz1z4cO6UBoPVOaXWMUqodJuZDses141yj1VWofeHPwSPESzLa+oWl4c6wC/RLV4/30VNAYmodbXAfgF3m18Z3kJ3EW0JU98IgyLN5TH91nIJwrNHs/GeiMNBiipdKJikMe03SPVxc4+7xWJ49jNfEmmB7dIx5yzvHvZf8NLlc34TmwTfPRMvFrXCD3MQZbLSan35F/l7zLOho8zqeQmat25E4FW8mhILZ8tFA/a93URwky42YX9EhST+DH3Rf8OZHR+krfJ8Cd+SmfxP0Rk+iXxMKduktoMOYHb4jDySj3RnQad4AI4tEiE6u/g6u4EKQbin7CrINm/GXPYlMLuvlvzYAngG6xDNnnegR00nnSkIHDlP/W1Fm/SpnhZ+yY06/UoC3y09YpMp6sUisEiZAsTrustNAnVcOcjN6U6/FR5hyssvvhHOttXhar46oxXb9Kt0spaqdynlyMlIB3MiDYGF8h3qAO9hjNElnUpR+3x4evZg1QS4Ru4UO4FA7nTxpT4TH9BL7Lk7CnOK/E1uSl0Ql2LbtVe8P8G7JiX6giHzcjnIqmkQ5hKjjAnzMNa7+5RBgUOBitkqpJd0ce3Q+Xso+RAK64LZoF2vQzZksiSDfp9XfO0B8JbPS85GyX01zzSSof9Wyjl9BhWkj6q2f4P1S/GKFb1XS4xHCKtXzI2qxgWiyUwfuDWbjU1rmzrkXiXPio5yAeKxzQipUJIJdcUNvDF4FKbihNTDfpO2m/tZr0Istz+uDxqF/O9eC36J745xTCY9zrsNhQrLXEAGG+VH3RexZej2WiJPuimqJzhhEslHe7CzQf/F5NyRwV3YfzIAL3MuOcu6UmIVey8HZtIVPj3YGdckrPC06HCWFN7lfoWr0j7m8u4bvzE4VGC8ileHKv/uQJ/VPuPtiGVpLrpA3fbDoN89mf/Z/RzFgMvBpfRavcT4Aj6QPy5kTK1x5F2S0l6G6BZfsZPnEJLpdK8SxYTDOYYXJIWAhGoGLQCkX5BXh3vEJCbBh1NfXiTgGF9o9twF/L+coWDP0djlny89IP2cvsY9lDQ81mmfACX9mywluDGx0dufXgt8hnXC0oJL2DE8TBkXKZ8zTLPrTLuM4cVxLkPaYvCvAR6PH1QFuEzuCe291/gc3SudwqtYRbqGUoXuklPmGeDw43JtuTtI/xPJAMJompbJf2JHzFesp22Ke058ns+N61jwsdYoVUSV6FM+I77WcbkvmlRpv7oD0F3/JURqck+sI9wUz3gtxuaeb7TzvLiG60isWR3Uqjsgj+qC/guoEuszH8j7RevZFogH9m1lNn0yDkNkh8cUzRTuIup6C2oiPObWKHsdg6C8caDymDgtPIclJtPpfzETzOrIom6SPjl7lfwDS4DIZd17QSvZVUocnRSn3pBx8z7SJgH8B/80XWc9FUg6FpzP1Cu72DDOGK9OloBL4v1CrMvn1RKp8FN9P90njfupxD9E61p3VCqjbT8wpMI7vEM2bACukdstebvq6H8bN1GvRk8lHYMVSYJBWpN+U7ol2xTUYE7pR/A5V9D3tHwg3CPvIwPMJOUjrIysQZS5ZmhNrpOkuU6gLrrbdxJ262z6kFLi87m12T/UWsC7qUylhvSzdrF9f6lwMLzV/diUpCjfjP2IboULKdQfhZ2AQb0BAyhc9ANu7vouI6uIsNxDINnPGAPZqegZf1K1YRd15syd6BN9jJxjXmlhjW5pIca5ZdZ61whFxp0TL9UnT1mokGgAV6d6GcJNmD6Vu0yB6l/h5Lxd+5/eRLU1MOwlcc2/hkug+8qwXIlWj3PglYnT9bmMl2RF4TZ4aSE110rdEY+R9bc6gu"}, {"__id__": "chunk-baf965d05a5989cec79f6c414f1654d2", "__created_at__": 1760503310, "content": "This directory contains a series of small examples apps that illustrate how\nto code up common use cases for a SLP wallet and managing tokens.\n\n## Running Examples\n\nYou can run each example script by entering its directory and executing `npm start`\n\n## General BCH Functions\n\n- [create-wallet](create-wallet) Create a SLP compatible HD Node wallet on\n  the BCH mainnet. Send a small amount of BCH (0.0001 or more) to the address\n  saved in the `wallet.json` file generated by this app. All other example apps\n  read this `wallet.json` file.\n\n- [check-token-balance](check-token-balance) Check the token balance of your\nBCH wallet for a single tokenId\n\n- [check-balances](check-balances) Check the balance of your BCH wallet. This\n  displays both BCH information as well as SLP token information.\n\n## SLP Token Functions\n\n- [create-token](create-token) - Create a new SLP token class. Run the\n  [create-wallet](create-wallet) example first, and fund your wallet with a few\n  cents of BCH first.\n\n- [create-nft](create-nft) - Create a new SLP\n[non-fungible token](https://coincentral.com/nfts-non-fungible-tokens/). Run the\n[create-wallet](create-wallet) example first, and fund your wallet with a few\ncents of BCH first.\n\n- [mint-token](mint-token) - Mint additional SLP tokens for an existing class\n  controlled by your wallet.\n\n- [send-token](send-token) - Send tokens from your address to another address.\n\n- [burn-all](burn-all) - Burn all tokens for an address by tokenId.\n\n- [lookup-token](lookup-token) - Lookup token information based on the token `id`.\n\n- [list-all-tokens](list-all-tokens) - List every token in existence.\n\n- [conversion](conversion) - Convert between address formats.", "full_doc_id": "doc-baf965d05a5989cec79f6c414f1654d2", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/README.md", "vector": "eJwN0GtwFdUBAGAHKsObFHITcpO72dfZPWd37y2JpAUfIeKgIwjEhBqDIlATJg3EIpimgzyMGjCxMkEI5LH3sbtnz57duzcBMhBUUiiCaQOUWEMcbKGWtCgyisYOQUJp/f/9+kQ5V605GOs6i5yuXqY69zNg4hK/D6apz0nj9Xo8GtPpQXlOhs2cwr3Mef9KeJc9JF5o6vAWZ2uwR19lrsx+0f0LrYg04MUdC+RxwpKWy8wQyUObaEnkJcdEjXQ4pwvXJM4pA5Jqb2JGEzVWOp4e2Q93hxrRZOCB8awqfBWQ5NvKDHiYHSOzY6+J35Da+BYnK/zdvhvTKuCxxAqIwAOJlXTINJTt0nEQ4VWx2G9Ce8Efg+Wk0u0jC7AkXE+s5quVNhCUPtxrgcfsJa3p6UpmBL6hBLQNB5qli1qzMbjvLN+bWA83wJQf0B+A/d4i8VT7Ex6vK1qjdrX9MLnCfoEjzGJ3gTciTgR/98rjt348OYKGaTR0b3+WVCef3lufUWrehQyslje7y2JBqYoOpgrCj6LpqBA1OQPGSWfIXMczUieqA/2oyJ6DBlN34MKQnuMEa3/Ux3BeirWvxC94dfhiqkh/kY3ibrk9+VvxU/mk/S7Mxn1ypTUR3iUM/ESrcALJQQO7SXY7qHQyvG7ch8bcKu6WN1mc8PYCX1Pq2PVZ/0xtom7iXLxSOpCI2Ms0RVS5qpz70ZfkD2C5czP4PjMrWWMktDK7J6MIbXM/giNWJ5ugTbl1mVPF4mghQo4K1BQbe8v6LHGIC0l3Wj+XDuY0zP4Nkw059B+nX/wJbfK3+eliPfOFZNhrcguFbFyvbI23kCrQS5FjiVe5Ge5NO18Mo8fVb7Uuu5wrF46QXrGfpBk9WKNF0q+cKXAWGmQ2a5b7C67W+zpYQkvlsFr/7hOgF+e5E+An8PuOR/BkJ809xuW19YvzlaeVmYms0Fv+BNJEnrTPitv53MxpXL53RmnzbiWi1la4Sjwj/pndoHVyE2QlOkIk4WGtOr42cwWO8dfIGdSpP2beFl72PxdPtY5Tssl9yUKtgsvk8+lEsbltmXQqpwlk2bON/GCeVgC2quluBRyv7OncQEfbXLtaLDDV2BzynnTZcdTzcoQ7Qa8LO3GJ9j/g8dHm00Km/BQew668B+4G+WGKTqQWhgbRVm07/ypYQrvIKx3QYOHv1Y+TN7x/eBfEBqUDXjI1a3nwVnQA7Qfp0l+1KncdHyQBtFB+PuNLMOjPpXfA99E+KDgJJajM8x6mzxxY5C80qugysUjeCNO1CnEpTcPFmDEXCatmfUo+DL2Bc0GCWy0+GdCTW5z10WtoJLZDXCX8TZvvlbkrtRb6Di40H/R2kLWkGeTNni+XKCX+f9lr+hpSLD/jmXgNGqK9VvfuGdI4/Ih2XD/HDmQ9b/fEGwP61CtOkfZaqEENy2+2Xp/2NJxCUu5ceEdcgW0/pUzSR8l5SRcOJ7vp4/QeLYku1W+2D2gTkQ57yMtSMz8PvI++Nna4RvwiqeBG2j+e/ib6Nd3lNoMzUIAt0l23QPwdG02lxDavNoZJHeLNFiig02h66jtnjV/r1sa+4S8QJ9mKspL/BmH0ilgK+nTg72FeeOchPIgaOIGfa/7gHfW6xTIngGeaw14pqKeHlAizUcpJHUkiPwh/lkwLTLJLtfXoPL3cNoo2KxyojEUiL8CXnNbIe+oshqdrE7v423A5afA5PDnOMB7tsjX5A3TbA/JJ71Cy1doiPktvsP+Cb1tF2k4wjyipe/BbYweemayR7vfmsNv0SquRvhr/aXJFeoegmfflZkg3yQ/kbLgMz9TZxFLzEh4m/XDflOVuP/0qlAEVq49z2WblIUOxJ4XqYbG6EV60nzUc1jLKRAWPHXhd2ptsdT+iq7kT+Jf2z+lVv81dbDHkkj3mRkJ/yh7GR+OqMEMh5jHJChUYDj8V7ASnhaei67SwXB49jo+Cdfzr3iH/Qe+S838Np5w0"}, {"__id__": "chunk-f09c3ef4186d8d1b823165d9b9799fbe", "__created_at__": 1760501901, "content": "/*\n  Send all BCH from one address to another, burning all SLP information.\n  Similar to consolidating UTXOs as done in wallet/send-all example.\n*/\n\n// Edit this variable to direct where the BCH should be sent. By default, it\n// will be sent to the address in the wallet.\nlet RECV_ADDR = ''\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nconst SEND_ADDR = walletInfo.cashAddress\nconst SEND_MNEMONIC = walletInfo.mnemonic\n\n// Send the money back to the same address. Edit this if you want to send it\n// somewhere else.\nif (RECV_ADDR === '') RECV_ADDR = walletInfo.cashAddress\n\nasync function sendAll () {\n  try {\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    let sendAmount = 0\n    const inputs = []\n\n    let utxos = await bchjs.Electrumx.utxo(SEND_ADDR)\n    utxos = utxos.utxos\n\n    // Loop through each UTXO assigned to this address.\n    for (let i = 0; i < utxos.length; i++) {\n      const thisUtxo = utxos[i]\n\n      inputs.push(thisUtxo)\n\n      sendAmount += thisUtxo.value\n\n      // ..Add the utxo as an input to the transaction.\n      transactionBuilder.addInput(thisUtxo.tx_hash, thisUtxo.tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat/byte\n    const byteCount = bchjs.BitcoinCash.getByteCount(\n      { P2PKH: inputs.length },\n      { P2PKH: 1 }\n    )\n    console.log(`byteCount: ${byteCount}`)\n\n    const satoshisPerByte = 1.1\n    const txFee = Math.ceil(satoshisPerByte * byteCount)\n    console.log(`txFee: ${txFee}`)\n\n    // Exit if the transaction costs too much to send.\n    if (sendAmount - txFee < 0) {\n      console.log(\n        \"Transaction fee costs more combined UTXOs. Can't send transaction.\"\n      )\n      return\n    }\n\n    // add output w/ address and amount to send\n    transactionBuilder.addOutput(RECV_ADDR, sendAmount - txFee)\n\n    // Generate a change address from a Mnemonic of a private key.\n    const change = await changeAddrFromMnemonic(SEND_MNEMONIC)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // sign w/ HDNode\n    let redeemScript\n    inputs.forEach((input, index) => {\n      transactionBuilder.sign(\n        index,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        input.value\n      )\n    })\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    console.log(' ')\n\n    // Broadcast transation to the network\n    const txid = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txid}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://explorer.bitcoin.com/bch/tx/${txid}`)\n  } catch (err) {\n    console.log('error: ', err)\n  }\n}\nsendAll()\n\n// Generate a change address from a Mnemonic of a private key.\nasync function changeAddrFromMnemonic (mnemonic) {\n  try {\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    // derive the first external change address HDNode which is going to spend utxo\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    return change\n  } catch (err) {\n    console.error('Error in changeAddrFromMnemonic()')\n    throw err\n  }\n}", "full_doc_id": "doc-f09c3ef4186d8d1b823165d9b9799fbe", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/burn-all.js", "vector": "eJwN0YlXFGUAAHAS0lCwQ+VY9pjzm29mZymlR2iJB+KqUQlmh0+yl/BU1NIKpBIw8YhMFEQUd9edmZ3j+2Z2laTMRAlfiRhFoi9SeIlddkhiWPbwodTvX/jtEL+xy5G7kQWOreacPU4xTygF260e93JxEeyFQ5Oum8e5OvVb08ltC3zMVBDxzFhbDfsb041IsEWsBq8SN0GF9SnV4iyyuoOJXCNhBXIkVSugj+gFj5xjPvOk4UXMpnCK8DY7WYiCJ4U3UQzfFx4RkoXk4FiPk17v9oYzPDPMUT7Ev0WPxz+6N3AHjCNGV3iYrHX3qEeJeHYZrhcNLmfXYjhDJZJF9Eull55FlEe8IVlOp+fg2N1vWrHmFva685iUyI2HITIOzmcWs9NQpQLw+AlT0Szh1+BK6Wv+Z3V2WKJaWRVc4f42/NTz7B/GUvMPttx5lf2OkcFHEiHdLzRovfwNzSXE6nFiJnWQtYWj5WXgAriMaZSvb3AGG3biGPiS7677BXCR2IgzPP+EImYC2JZ6lN3g70dlJq0p6iDXCWbDFMego66hj5mPn+Yx/w45biKraua7apm1Vrqsp2l+ut6qwdnJWWZI7IDXmHjxTy5JmKv/zqTDEaLMHHKe9nDULtQYyK6jyCJmJu5FY7R2EpgdYonex7/IPsOvQxfVKuk07sMVbA9V6dDcx9yPc63cXfoakQl9xkzqlhm1P+RfEOH1E+BP4SpxkplBNBOlqIqKUTKkgvAvUjg0UNnPM2j0oWlIIursLr3XsIlBuolfaQ4HDlNScBUaYtIjrfLzkVX+eb7HiIvKS45ZxgXplHwBkAe7mXT3s8wpfjZXjc6aUoruatv/JO/H6xhv6IiexOwmJ5NrUEwg2VZv3yoegDeS13gopnj8iDxkZYceZQvZRLaSXYciUiEdjWrgQuX98NLweXaCtA68Rv4LJ6N/dEuqSlkC8+AafJM3QJN0y5VKjmMq7SSqxEFXc7gdBIkXURw3he0ypybeFqaygvIBFuVOoygxG86VEtRVWHood18MYdrj8RfCgsCAHfjb7S+bnfJ84Zj8pMmL5618d0LDRrQmlFdtE/fo8UjxvwF3w+P+wolL1U94U10hpAivP5hpFTJl2iyxS+gHO1BxoN1+BmUxxz0lnn5Xac3T8IJVaxQSA0wru0RarR/SZaUc3MMMCNP1xciF7sBO7ljwPCoCn0gfKefoJM8GV6MIU1rkM6hka2ZiMz2G2Wx0KO+TbdwmGMDRYnTqX4aXfIbZoq13L+X+Rnelmyxwt6rHjViyBTmNXuEv9PBBnfkSnYKxMGrSTGUaMxFXR7z0sE32tyvbPYT+G87l683pxg4tzaxS5+45N6lMaYJR/M9mXuhhtdbqTLgkr1RZriQSG3GDQr7UakB+/nP9HXtuyKMswPeR9yNnUo/dT6VyPn0J2WLG4HSzGcftvglytNL/Zx6Ab+gDVL1ZYa23ooJXrMcCDzm+Ewb3Zdg7cLlWzJwSVgtFXEv4PDICSa7DqndvFeozz5pZ1ufOfr4qJc7aq16TFqpdbknPUDLpK0I2M4EGgNQL0Gy0xRrCm+jl9LJADi4XthptzHPwsJwGLrO0MoksgMPcCBfn9vjK9SlWQLvjXq1nyT6q7cED6r1Bh/grTqwf23gW5eJv4SDXzvu069wN+wq9yrKlFOAS4yno4XXnE9Jz4g/u2yA/lAYr2HgxdaeXqsBrtWL2tFZPdMP7GIttQmWozBgNG8lLWjRR7DhK3hICwlV1jDODC3ME3xxQgE/PxVlCDlWHV5g2vFCbZwyjqZ6g3KVfBF8Zq6RBFM13OIqTpqExBk8s05o4U/+B3qV8z6lIJOeoP2k11B2wGRwiUlF+aJTZg7sTHOajeiy6bKQrUHvc8aFzrXLWagvtCV/CJ1SB3m7LOxBpOLrvlUAWj9mRYDUbQrUT3yOdkSNcu+blX0htduWyOfJn8FCgVss37Ooi8B9YOaOB"}, {"__id__": "chunk-8d5eebb49daed107c031af759075cca7", "__created_at__": 1760503403, "content": "/*\n  Burn a specific quantity of tokens of type TOKENID\n*/\n\n// CUSTOMIZE THESE VALUES FOR YOUR USE\nconst TOKENQTY = 0.01\nconst TOKENID =\n  'dd2fc6e47bfef7c9cfef39bd1be86b3a263a1822736a0c7a0655a758c6ea1713'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n// console.log(`walletInfo: ${JSON.stringify(walletInfo, null, 2)}`)\n\nasync function burnTokens () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // Generate an EC key pair for signing the transaction.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.HDNode.toSLPAddress(change)\n\n    // Get UTXOs held by this address.\n    const data = await bchjs.Electrumx.utxo(cashAddress)\n    const utxos = data.utxos\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    if (utxos.length === 0) throw new Error('No UTXOs to spend! Exiting.')\n\n    // Identify the SLP token UTXOs.\n    let tokenUtxos = await bchjs.SLP.Utils.tokenUtxoDetails(utxos)\n    // console.log(`tokenUtxos: ${JSON.stringify(tokenUtxos, null, 2)}`)\n\n    // Filter out the non-SLP token UTXOs.\n    const bchUtxos = utxos.filter((utxo, index) => {\n      const tokenUtxo = tokenUtxos[index]\n      if (!tokenUtxo.isValid) return true\n      return false\n    })\n    // console.log(`bchUTXOs: ${JSON.stringify(bchUtxos, null, 2)}`)\n\n    if (bchUtxos.length === 0) {\n      throw new Error('Wallet does not have a BCH UTXO to pay miner fees.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID.\n    tokenUtxos = tokenUtxos.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID && // UTXO matches the token ID.\n        utxo.utxoType === 'token' // UTXO is not a minting baton.\n      ) {\n        return true\n      }\n\n      return false\n    })\n    // console.log(`tokenUtxos: ${JSON.stringify(tokenUtxos, null, 2)}`);\n\n    if (tokenUtxos.length === 0) {\n      throw new Error('No token UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const bchUtxo = findBiggestUtxo(bchUtxos)\n    // console.log(`bchUtxo: ${JSON.stringify(bchUtxo, null, 2)}`);\n\n    // Generate the SLP OP_RETURN.\n    const slpData = bchjs.SLP.TokenType1.generateBurnOpReturn(\n      tokenUtxos,\n      TOKENQTY\n    )\n\n    // BEGIN transaction construction.\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Add the BCH UTXO as input to pay for the transaction.\n    const originalAmount = bchUtxo.value\n    transactionBuilder.addInput(bchUtxo.tx_hash, bchUtxo.tx_pos)\n\n    // add each token UTXO as an input.\n    for (let i = 0; i < tokenUtxos.length; i++) {\n      transactionBuilder.addInput(tokenUtxos[i].tx_hash, tokenUtxos[i].tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.", "full_doc_id": "doc-9b79d87a2ecd53460d5a0ff2aa960bf6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/burn-tokens.js", "vector": "eJwFwQtwFdUBAFDSVEIsQR4mMYT38vZz9+69u/tapAVECgokRYqUAjbAAJoaQ1JC2ggVhyofcXAagvIJIZL329/dvXt3H4jNDFBCgyFqM1UcpEIQSEDSSjuQYC0kRZSe8321ZWJb8F1GUiYHX4IFyinpsD/l0C7VwzdLfgceCcrHPWEF+L7UaOfQelvwP7TC4fteQj3u1HjVSihyDnQLg4GYeE4dC/7UWpv4THnfvsL+k8hCzW56Yjm6o00PlnHQ+I3+hXJQuadNsZbTT6zs8J3YCWUm8ICi7CwgQi9q8nPsSlFSDifbpV9lPivamJ4tn3PLtH7raVYk/1P6O1pIymitd9Ec/cNsOntCO3wGfUCQNKlwsvGod0r8PZseNtLbyLAQ0Q4nVHjYXks5eoUMbh3Ljuiu8A80AJ6NjtEWWt1sAdkxYR5ch+/7fyONZNCR0/v42nhI6cN/1FznhDPVsMxuZQqJk1fN99Bf00HLoHu0BEc3uVeNSnGFjMR1/Gg04JbJnYhCIoh2CijO9cwqfF7sRjJ6U/+INYZBvEB+GA/iFiFPqzZ6cXZQJc5AbXKVf1Re5THYyz5Ey2lP0YP6PW+d+1N1QO9CS/wr3E38DWT6geTrwhLaI/0rqHCuAT111bhcUE+/MofhbWMaOyPJMOJchiuklfgvRbMoGD/LmWtXkifFBfBVeyBai3qBFv4I7VQGmmIlOyiMmK3v6oM2x1rZ47ERrDq1VJ2aGAZD5q/BdHEWGbZOSc871fhR2u9dyLzBBv2ZblXJTuHB6Nf6Mn4mXr19Bk7BJG2wX6S5zqHgMfQxuAj6nT/QC/YdpxvyPAvdggR1SrZ6TWynplsR+UBPoK/Vi/tWiCvtTYkj0knvz3sucU3cQaIEfWg27lDXqnVujbk0uGyctIv5s9Jt1021+oTrQUtSZQjYoeAV1gMbrQx4R+t03qIPyfkHS+3NepR9gQvUS2SNMJ52tMSaH3Z2JOuiq7gq5+QjJ+C38Uptq/ATJ7CPqavHe6A3eSxjWKfheb4Cv+C59Fw6rCCUB94lSHtBf1La7GZHnYeM8AlpnL7N+jFv03b8Yup6ySE2LNWH++xf+CFpfeo1GEdn0JrIz3FW4i4oVrbEny55j20Ec7Sv+IvqXXoVNggBzPGfA8vQbetN/Ibcx75n1aMHFCbs9haBNqk2spPUqErheWeZ+UxQoy4WppPHvH2t7fZ8bjW6IPfRNjmVrpSPN+Tju/JwuKdoY3A//IlynZahmiKIKrDhb7JWyyknTBqkbHErt0F+WZ0V73bKzfnsKXdP7LKj2KWAJDO4A/SYEUKCuDWXDKWzlRsoR++PfWO30ELcRXOITgaNvEjd2916O52EbkqLmaZs52d4Q8IN7iypErb6L7EN/BhPZlPkiDwKvt76v/ACe05EUA/QIbHTBkqDHEcT7ITdhrP9UeYtNaeoLlgICvBmZ6rbpRTT9kypvt56gP7MqAw9Hq03TqLT3mhzvj3MVWu5gun3mwn3S5hCBUJV8acU03LT0v6bzAfl5n4rP7PbaBC7SBSuTabRwubjfDk5u//fbj4bGbwUFNojsGUYyXfgj6yr6l69Up/MOU2Vvg4vYT70fmxpQZ62ItkVfcs77eQaAG2Qn3e3JD+1z8GPBVXNyuRMuOHMxSK9JnGsCu2KL2e35G+TpfqW0OeRl2MzlCx/r9YUa8MBiZn76HX1B5m3aR2ZLA5RlnlFz1W2iJ/Tcfxit/AgLy1RjrEnlBK40Z2njUXrraPeJGkm6GjeBQ/AafsX0ZF0XHIv6STN/BpulNGJv4OiaI0UwIA2FHIT2/PzzHnuBW8OP6JwTmazXyEfAzXGNMSJ2XiSmUNa9BqptLihsBnVuCuNMhZP/HZ8nncP/tKPOHPpNGGROxvqRnFrPDizZ4zXx3V49YlV1n7nqcBApzBjucJuNoaeh1nOs8Xz7SPSeiUmTnQaiaqWhLe1nPWYYdP/A4zNqjU="}, {"__id__": "chunk-c5f7bdc3e98b95279d9afba00a6fae30", "__created_at__": 1760503403, "content": "get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.1\n    // const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    // if (TO_SLPADDR === \"\") TO_SLPADDR = walletInfo.slpAddress;\n\n    // Send dust transaction representing tokens being sent.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(walletInfo.slpAddress),\n      546\n    )\n\n    // Last output: send the BCH change back to the wallet.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      remainder\n    )\n\n    // Sign the transaction with the private key for the BCH UTXO paying the fees.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign each token UTXO being consumed.\n    for (let i = 0; i < tokenUtxos.length; i++) {\n      const thisUtxo = tokenUtxos[i]\n\n      transactionBuilder.sign(\n        1 + i,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        thisUtxo.value\n      )\n    }\n\n    // build tx\n    const tx = transactionBuilder.build()\n\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`Transaction raw hex: `, hex)\n\n    // END transaction construction.\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txidStr}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://explorer.bitcoin.com/bch/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in burnTokens: ', err)\n    console.log(`Error message: ${err.message}`)\n  }\n}\nburnTokens()\n\n// Returns the utxo with the biggest balance from an array of utxos.\nfunction findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-9b79d87a2ecd53460d5a0ff2aa960bf6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/burn-tokens.js", "vector": "eJwFwQtUFOUCAGAvPjiC8QiUXZZlZ3b+mfnnses7UrQgsUA0sE5lpJZ20EJP5TVfYWYe0UIjDBSQXXZ29p9//n9mt4Dr5YqmphKaVyszuWHWIbtgj5OWmBWJ9X0OlarfRMvtpXC1fT14TfmnVGp9b1nKTnU2amRTrAqmXjhQE3SkubaQ0eynoNMYaxyjl9ST5iU6gyvCn3BzuHD0knAs/YwzmXuACUNNX26xbL8cIr2TiMzBb+2j4I7QwfTDQ6ITPhiJI9tq3Xim719yjnOGb6tA6UV8FjbYL7WMkV9AA42y2G0vA5czj4b76GX5leAps0u6EZkubWiqIK+SKnOEvxMuQK3SYm7I3KYUGyu1qL08GKZXSHLoOWsNrPR+sQuDPHyFfxLlk63NhXYJbJRPSanZA0aJnEFGk11WtZEm3Ks8EwKefdo6UoAGpf/IT3MJcJb3vHUoMg3+D6yS/CiJ/JffJoXIfJhOnNw9aD5+3ngWHAk0hJ4Gh713gu2O4cBwxk2YS17ip7rKW+cKDfw+xQvAeyWxE7DT8yrLSOVwMjtPXo5qxSiZCz9TD8Bx9P/CsPea+xSqhxdM25xNE+lUMh7W43YQ0t/l2/Z2CVf5fLoBbCV/SPmx+7SYa76+O/Sbu5Q8RTr5Aa8aOCzMw7nWHLlM05V6rozw3FVciFbiI8xBaZOWx+9hP5dWCcz4C1JUawPvGKvNJejfGT+SQsOPU31D6H5RVIsd/dnlkVTx7QZNbyU5bGxEB3xSv58cjrpJORWirwVy9RwmZq7OcPBJEa/SF3jRugl2aFmZ3VaztCpEpYcpDpXqV8zj2g6Fy74g9OBksVhdm33eLKOjjZVoKlgn9NvFfAHzg1GUUhO+HvzTUDz7GT3ysdop3+BDSpz1DT1L6swGNNT0Bd7kOc6dxWO4GmEz9PjbmNZoK/Xyn7NjlXoxA21vbJrQHf3YHWeuNpvSp/t0a0PzufETUBceihwmxP0X2eE8zuqhmLhCXojzyKzmL9VCcgh0m4vNPkeONBLuJEuNRdZF44bk9K5X5nnn+GMNpa7hsOCtthj8mVBIekgXL5rbPXvMPrpzz0PhWyCFbooWBBRcJo5l0qVlnvfBbdTGPOUjdZWRs42VoEBZAEZLt+wVsMcYp/tpCXxiX29WkrSDv8XJNgi9DBIFBjU4K+ESdwm6S3pOXmH9pPWj7+BpMSa8gSHtb0lOHw5XOg7iPhBn8uOGjAQowc3syNpMootzxQWoQDgD0rgUH4ktEdb5RgkW3yGPDC0Sn93fJzNmM51stdCj4TFqlZlCh3jR2QIr/FXhAbKenLDzjfbMUvExMV69BpPo2sYc6SquseK0mcanfDJ7MviAuUXo9dTQc9KC0OOxn8kH7t0aYsts3kxo7q3dRS7ub6hbKlTh3SCBX2N1qAeM08JG+i2Mkz5RkkmXHRYiZIR1XTzDVeLXpQ+cz1jTqSgtjg7Gvsa9xhbzK8+P2VXiJTBFXEN+Dv3GbxTO+aErPjYRVYNBUQEzhQn8RfOFSJXRzn8kdIBXHB66G3v1tqxi8og6F/0OuyLVgbjYnKY3SZF1ii5/NztyNKOWXOUqAOB6xKJIR/YAHJExxTrCTOI92mnfP3A9KCI9zecNHVWIlWCQzTKqKaAfSoNgsdpNXsO57vV8Ff5FnE1WKW3co3gy0YRSsjerzpWsDsF08y6/f+Ik+SRNQB8aYfVE9EjwLcMNN6JE+jq0lO/EaeZEdgrqjK3lM7VJ9ij+DX5X5JhyE87SFgZvhhfBwsy3xPeFj7IbSdLeEP4zsiE6j+elkdSXmSgjXI7iYQeoI+fTDkp1YiD1ttaizwd5+kY+QV5Ytd5+Xlsp/goFIzGSl+kS69+8h81Nc9jTogG7ktO50tgdfIDcbrmMHwatd6fyNtlsPh5tD9ShfG6FlYR2cigcH3S2FMupJN09ihZAhrlMlwEXKJaAUs4WBdPQdiE/MEPrs1zh+Lv/BgDloCw="}, {"__id__": "chunk-782efc28b4b87e9f534a57e7ca6f275c", "__created_at__": 1760503490, "content": "/*\n  Check the BCH and SLP token balances for the wallet created with the\n  create-wallet example app.\n\n  TODO:\n  - Add diffentiator for TokenType1 vs NFT1.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function getBalance () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // first get BCH balance\n    const balance = await bchjs.Electrumx.balance(cashAddress)\n\n    console.log(`BCH Balance information for ${slpAddress}:`)\n    console.log(`${JSON.stringify(balance.balance, null, 2)}`)\n    console.log('SLP Token information:')\n\n    // get token balances\n    try {\n      // const tokens = await bchjs.SLP.Utils.balancesForAddress(slpAddress)\n      const tokens = await bchjs.PsfSlpIndexer.balance(cashAddress)\n\n      console.log(JSON.stringify(tokens, null, 2))\n    } catch (error) {\n      if (error.message === 'Address not found') console.log('No tokens found.')\n      else console.log('Error: ', error)\n    }\n  } catch (err) {\n    console.error('Error in getBalance: ', err)\n    console.log(`Error message: ${err.message}`)\n    throw err\n  }\n}\ngetBalance()", "full_doc_id": "doc-782efc28b4b87e9f534a57e7ca6f275c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/check-balances.js", "vector": "eJwN0otbVFUCAPAkWc3HogEyODDMzH2dc+8dFDJfuNtumuVjCfx8kA+0TBOCHDW/VD4euUBGmqE8HWbmzp1zzj3nzOVRYn35ZW0uYaRmak9j1/Jz2bSXpWglRf0Lv+93VZmoX+mo6LycOYNT77eJO/Qq/lbHBqiDNKG07T7XlUMbDAvUp21SJiKnN4ZPw82gky3Rf+ZHxAqeQcqcCaGzvBjmaiXRk2SatUc9nTqdv97sBA/FTmXekP+pf8bqPE4+Td2RegdcD5zREzYLb2dFU0p1rhzRSvWHRNsqcVq8G/fK38sHm7S0QGwL6EeLI/nWbalI+i3tVe/TxmE4XriXusj/aJf6j9awCygO+mjHGWG/uE3Ntl+yumPXyUhUQAOuIn0/3KRsafsajUbL5b7GlXalldlyUdwJv5wcp2cLYxXJGIYD0gjxhLzC6AnK1kBSXvge69eWQfkudXdEOnCz+T/WA2oR2pRSbmXJHXxV0nXspK8Yw0n1USAJmBlJ0Wvwi8ib4D5xm7ZSKibnHNkZr1O35014LnmROo9/z0KOgwn3T+jz5olD7Ig0my8Es+2TgMOuutV0plCN3epSvrfpTjqR7g/6+Sn8RkY8TwEFzo3KoJSL5zb025PFJjJC9/JL4SdhEQbYkTaK/0taKPcalfxz5NVLWLbS3CpGVsI3YkBMZ7kE2iXR7cZ8+d/SbJggjdVeko/J2ehV6GfHQI11N5wV6KRlzKddkHwt5WC5O0suJoVwDMPoEMsBz6IRoCu8iM2zfzF6bYEOhnvIhFpTKIDLBTPyg5LTVk9yhST6XpALFSCL+pWF2GAve3fRP8Mkj6PlXiXODMjrhKVN3/J36XwwXh2lKqCCwrRdugLO+JbQwbZSdYHneXEVvenbro5WHlB77TtaO+lOGkSFGaVacK9D1G0TrdO70AJwDM2w5+AnQEE0y9ekdeI1ZG3LW3YxMpxDZEn4Ud/8yMfhH5oy4dOklv2XVHsSXW72KVyqlaRtVfrwKtJKTb2kdTEcwhuFbwKDwo1UY/Lj/Bm+RphibUA56gehTm1I7PL66frG5+gl13733fJcchqtlf36ZVcNKTXjIjXp3SnJ4v/F6ozxYGT6ncZhayqICo70NrgDZceumkF0NdOIdqm76EFQWH+/XEGPggg8bw1It0AeH3uwxjusVHiW4X2ec45TUlFGPgxo77BLqIcIcJH6LL2GWtKD45yo21BgfqBXHZN4IfRjNM+jgkr4i3XbHMbLwHfmDbmHhuBqz89/DIpX4tBib7yI8INQVGM6Ce/j99hr2E3cD6cnJScXiOeTVytVylE8x3rRKjA32yNAoXMFtoQtvrqm43ihuo9lxb7ALtxjNYQq2XXUCgrhE9ZikGM9wo7DySTOikdtHWvt8mgxq+ESmmW+L01q3Oj2kxS1V5qGJNBOh7Q65bR8ns5AAniSO1i790OtmpVow9p61yLXHNBPjXaOdtMEXltvyU+1QckjrEgo46niX1oX6KvEautDdly6kPK8Usc/x1PZe2x8qMw3T3GCmXS741akNvYn/RqhUZw+KIyLblQm4VcOzbfvilF6gk6lR6WnHM8FqdDM8w+UkbcP7fT8taWRfAKqxXG035cZOtOsxpJYbvttIcL8oj/8IA5IjXSdtlXM1TEbIDm4Siyu75MfdubADrPP6nePFv6GP5EOmyG9xXHRuWdKr68bnrTyvAMNt/UXyDhrunIlOgnn81rllhoKxlNv21fsACtydwbKkdgwQf6yFSlz5Y8i19lc+bL8EV4qSEql8lNojHdWKMT+jsrgTGmUMDKUKLxD3o48Y56Sz5Kv9j0m51bt/kPp49QgK7M0FJAS3SK7DJ36p+oLGTOCVxzlE5bJicJZY1sMtr9m+WGAjo78Jq+mR7wGkaUeyZaX0Wqy194cbbY+s9RUH7kY3unYwvfoWxsqiCnFSd+ZK7QXSVXi+96ZuEjPAh0mJuViU3Q5S0U9VlbsdyqSpS8="}, {"__id__": "chunk-06e848f27e2848b2da6b87286a54b9d6", "__created_at__": 1760502133, "content": "/*\n  Convert between address formats\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function conversion () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n    const legacyAddress = bchjs.SLP.Address.toLegacyAddress(cashAddress)\n\n    console.log(`SLP Address: ${slpAddress}:`)\n    console.log(`Cash Address: ${cashAddress}:`)\n    console.log(`Legacy Address: ${legacyAddress}:`)\n  } catch (err) {\n    console.error('Error in conversion: ', err)\n    console.log(`Error message: ${err.message}`)\n    throw err\n  }\n}\nconversion()", "full_doc_id": "doc-06e848f27e2848b2da6b87286a54b9d6", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/conversion.js", "vector": "eJwN0At3FNUBAGAkJZFaEMk7+8jM7DzuvTNLUZDHgoRaqZhjQAzKq0oVJB5MxZKEWpFCeFiJiIiQkH3O7My9c+/MbAgI9SBIoc0JJhYJBFQIhx4rIhSMQhAQQ9N+P+E7iH7TeLQ1252s+cRK+xOUtv4KasV52uFwL9wNBkkNcgP+jjsgbBU+dGjpzPRPo//J4uIeUMGuh+bD8SAidJOpUdX8O80G1V6CYssSmFUEKtUYnqftRWeUGlKXGsWK4WX3vPiUfAo3m11wtfVmrEaa5O3UfRBsOse1+8ObIwyhocYZpQEs395Jnklfdr7mc+FDVs8IgMzYq2GftVF8TaqmQ9yt8X56SL0Gl3h13jSronSLfZAF3HjyOChgvVKXKKjLwDGvngxKyFKFZete4WAhoO1hCeVhbQEKOqWxj4O7zTuww/rWfki6ZQL3P+7Ljd+S++BtOGC00ufVpNDjn7GtnPultYd043fgRWsZ6RCG8Qf4xdEjJbdANu2WFyplsSpnBXhLv+GcDiN6i80nD4s+9iTI88qCBcGx+qrGtaAquJO/5F9hd4pz4s3qzwAWb+DxMDvxBa6gJ9Ovy3Veh1jpVOJ3EyM9Wcnja4zJpsXKOCuzTzmXKkdnrCbUp22Wv4Ed+ph4a6xZepDOdTXwtfIgGAe3EySuFsv8GppSMo4OSfZbK5um40/kPnmL2KYGwBj7U18GHLbGkUe9L/jvlb7UtHSBlmUUwlXyKbVHGkz/QY9v32a0B4roReti802rluXRl0htmrei3L3eMWl18qQsgMn0dbVNf19uw9VWHvel0yUWrj8LSEBu3uW8Lf6Om8SeUcYEv8crwhfDamIheANn41Y7L/YinuKMin6gcO5lAZs33adojv25Ns/dG/+b9l+Bov1OuzGH5qBeK9+YLLXrr0jLSRW1ml/QJsKb9CStVtbbF0DX0BLpnBDD+a7PuAslwH3+DGkGb9GQdyzU3bQODmI/T1yT2kYsKLltz4JjhT2gkebT2bwfuva5oi7gMzxnBvShI7jfXGafQV7pSuU57gKLgNb0Z3gDrJCH2Q5RUYlS4+bwiyU2/Dx7TnrRG258g9bajxtL/XlyljsX3woUki16P+jCA6X7jRtOm3gktAv0gKn5J2ijLPhrpZxgUOa1bPRb+CoIeC+LK0F+k9I0N73Sqo92wzrowoZw0tvorN8R0UejEjXiHcDHg3FuDXha3oiyUC6+Rq7aESGV61dO6Fu5u9LH7/6VPr6gj/0a7S2eR2+LPxVX0knoF+AH+Xl6QiwoXZQupwZRvcftj8ODCxdasrjNfNrwwV1FueSgsNTJpG3EyUnFAVPTMzOHta9UqeU17pXgkJba0ELxKC4GWfgo4sk69ja9QmbF30Hz2RU7krnuNkhH4+OpxIipC6uSfyGPmJGgnY5Za2ALbi/eKT7Af5W+bkwX75EXtWyyNwGN9QsI13OD6Ucwi+TrzJ6W+M6cqIbwDHmCfse4O1OeapVOlU6BE5r/RHf7H4CfhcamFqs6me5ls8fEFHOkQ9IEO4bQjjJ3A7jCZtuz8XnOQdU4V4WEeh3WJeM9pxMNV2dhoA9FA+4LtqU8SaNWb0EvW0I2kcdCdehH607xszSlH2i5hKrwWbhG8Xmj6BNyrcyRDSPXZf7tBO0OY03yJPzy3h60Dx5rJP4b8CNyWvoXlwFluFEeQDMVN/B7Z24oLJ3SVHk3q0u/zxdvuRAaJr0E+kie+wGu0QNegxn5/9pZ+xFQLULpj+ohvVP/kC0CcXj/jmiomJ22JfkHWo4XsB99nWCOWR4I6vXGaX2iXBW/EFqhXA7lwAX4NhgQA8ld4h+K1tNRqXuCMtqs52pvCku9JXKUP4xS8KZ1v1Fr1hOsjHBOoBTJjcdo0HxWG8Sms+WZDeBR7wj/OYvK7xG/9CmNmnMcG8Z4P39VvJrkaba6TxgNssS10p/DE9WRyRTu1vfrS51Z2yaZW+H/AHNurIE="}, {"__id__": "chunk-7b429b48b075d4b41539f8ea4f774ef2", "__created_at__": 1760502156, "content": "/*\n  Create a new SLP token. Requires a wallet created with the create-wallet\n  example. Also requires that wallet to have a small BCH balance.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function createToken () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // Get a UTXO to pay for the transaction.\n    const data = await bchjs.Electrumx.utxo(cashAddress)\n    const utxos = data.utxos\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    if (utxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Get the biggest UTXO to pay for the transaction.\n    const utxo = await findBiggestUtxo(utxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // Set the transaction fee. Manually set for ease of example.\n    const txFee = 550\n\n    // amount to send back to the sending address.\n    // Subtract two dust transactions for minting baton and tokens.\n    const remainder = originalAmount - 546 * 2 - txFee\n\n    // Generate SLP config object\n    const configObj = {\n      name: 'SLP Test Token',\n      ticker: 'SLPTEST',\n      documentUrl: 'https://FullStack.cash',\n      decimals: 8,\n      initialQty: 100,\n      documentHash: '',\n      mintBatonVout: 2\n    }\n\n    // Generate the OP_RETURN entry for an SLP GENESIS transaction.\n    const script = bchjs.SLP.TokenType1.generateGenesisOpReturn(configObj)\n    // const data = bchjs.Script.encode(script)\n    // const data = compile(script)\n\n    // OP_RETURN needs to be the first output in the transaction.\n    transactionBuilder.addOutput(script, 0)\n\n    // Send dust transaction representing the tokens.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // Send dust transaction representing minting baton.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // add output to send BCH remainder of UTXO.\n    transactionBuilder.addOutput(cashAddress, remainder)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    // console.log(` `)\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://explore.cash/mainnet/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in createToken: ', err)\n  }\n}\ncreateToken()\n\n// Returns the utxo with the biggest balance from an array of utxos.\nasync function findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(thisUtxo", "full_doc_id": "doc-273d8fc533eccf00ab0f5b4d7e614aa5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/create-token.js", "vector": "eJwN0/9TFNcBAPAStRoRogl+4bi9u93bffve7t5pKwJSGMZGmtiYsQmTgBarCMng2GiZ0MZGmzYQv0aNURg44Ljd27e77+3uhQwYhwAhzWiwarXGqVTTGAWrwSBGSFFqgjY/fP6ET48EFd6VnVH5WmJ2Rpciynfs1Y6LvgwVM9+JTDwzMIWXxIP8vsgkbQxmCZ3GfKPRui8fpLvwMO8E34TzYJE7C3YlZ+GetNkxCTxg1roMzgG/0o8t+gyVoXb7HyrL5Hi3iVh8QvlaW0yWRxrsDfIZ5bzQHdovH1FX07lKEr3CfguXahNqqpxN3xay93riH9N+aSH3cdzP5ZMe0Uva7Bpnp50fjoEq7T1UGCymbeBp/Oe6W/Rhyjl7hnUW5zpLuTaoECWQ7nk1vhZPIUvUQnKaHWMvgIQ3t6lUetV8Sws5nUatMICm01ptMDbV/bVajXr5XP9xaRI8bT+IN4jZeho6j8tIHXsVOsae4Dwy7htr2W69a13lvo+9bPh9CH4VPwO/QaqQgRaSr0VVNds6ff8VUuWtkHPq3H9zS7gx/hlvjXyG2yIXYA9a4qSgNuW60IzPwEj8Sf+IuQlct9fZF616qlAb7taquEcDL/A+poRPFYtsXehr5SSPOxi4KiSsqHHOv4iwnjvS5kiRtxNcaJlF+0BY8CApMMcsYS5jx1DjQvwidxF/4JkmfoqS5UG2Hd5tLQE/pesDZmO+1WvcNHYarjTNHxb6pDeNF7W15mfgF9xrpN3eF9wanwnzGu/RRne9xZH3nZ9jv9nFZdefhP+KbiRd4BWhgU4ImTTdz7rX0GXDrxwiGk3SPyfbm9bI9XiqmIzr+cfES9xF8yHhaA3bjlbIw+SJQ/cbH2Cy4EHLRv211kPqNP8la1IZErPgDWmXe6Q1iSTsytiz7MtEF+4wG8gz6SPyG2BYOaytcUqdUfGbPSXyFaTgdwzL86GTUMcxweVGRLlLR9Ivz5+IztBT4w1kZmte7By5wH2HT4tjUiGbT2uCsdDvM4rFL/ApNTNaBfJgRuRF4rF7rGWovPmkDN9ZHs7G5bxr7J03bm3jJ4VyZz89ATuc38GFsQi+p3XrVaCW/tbZb3yvV0pIeB4d570o2RgRdXkxv8/4TzShVofKuaNyhTvLW+oPgRhllVT+U22Q2QCmwz+Z17QJmKvXYQ9fDKp8z/qXiZvlMqs09vgPP15Aj0QPm71Gect6vZ4pEj6JZ8Chg4vSD8SL4JZgPki3OswWUAjPxrrBXLEflSqZ71XCU8rfmGqhT0TNb4EFjdtgm/Vj6zdkhNwKDMsfmfeNA/B1XwHIUhzvuHnMOEYZV29az/1IvS4MoWrSZ4UQsBa4z+lH5x5VG/BqZqK5Gnm4N6x/wttNX7lPta7gB9QSZqWbh3vATWMdZfkcbYBdGu/gbs0Nm3vQKkK5lfi8dA91yzeMSroKbrX/Tqcoe8EmogWPg49ICumAW1w+4bd/Er1Bwi0zxVHYGB0DGy1vUxZ3Sng/HGMfS6hmZuskt4MDCAYkUqLVmuXobbgq4wi+bb6Lr5OVwqEf5JvXxD/gQn6fmx7/hKxxqoyexAw8HphFZ+N+fg7vkQymO/YzuFPNtX38bTAVDIV+Ga+AUXuOOd+qDQ54Kj0n4qNqLX6J/lWS1CTlL243l7o7n0vTsHCALkMPYQruMEOwk5hGmXBJ0YRddDw0P5QjtblPNUt6cuhwYkX0dYNBZ3GJvVvcpHwRzLXvQhAZTPRww8GFrh8k6f3GAuUseh7PNFKMPFQR/Jw9jY4ZhbbqHyIvEcN+JHJFKKPtzHMo3fMl6QoWin1OBZOJmvxitLehXO9k1tHNvuVSGEzaAV+qUCB8q6qHTxzcASu0FKNGTXNP2rKbo60UEonHiUhj3lHzPpoWG+Mt8gotdrYaGdYO7gS14pnBxaDfvAnbpf/RVfNqrSPih3qB82TLdnY2SgqX1t3gC9Kms70kJZpK/7hnAP8ftA2seg=="}, {"__id__": "chunk-f44f9ad9ce0982190e8307881d6b000a", "__created_at__": 1760502156, "content": "let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n    // console.log(`thisUTXO: ${JSON.stringify(thisUtxo, null, 2)}`);\n\n    // Validate the UTXO data with the full node.\n    const txout = await bchjs.Blockchain.getTxOut(thisUtxo.tx_hash, thisUtxo.tx_pos)\n    if (txout === null) {\n      // If the UTXO has already been spent, the full node will respond with null.\n      console.log(\n        'Stale UTXO found. You may need to wait for the indexer to catch up.'\n      )\n      continue\n    }\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-273d8fc533eccf00ab0f5b4d7e614aa5", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/create-token.js", "vector": "eJwFwQt0FNUBAFAxMUrCJx92u/+Z3Zk38+azm2JiUnMUgi2mDSUELGnBYAKVaKLWIyi1EIUGWAtKFAMhIfuZnZn35r3Z2aRptabYg1ZAKIhUNKhBEOhBIOLBU3oAawq9t1kuVwuGVtg41ECbySX1DEiQ/fRDZY/6b7sdTLPvlcfxLDDN3NmXR3JoRp+bd4F/3b5VXUCaub/ypUzglS15Zm4DbGMTaV3qRAtlGG7LmzywJHzRprG56hV19WDRD8qlJ1kuKSk31abcmL4G4ERp9E3xouvu6J9hl/u3TrPM0Hf1dmmPxmRkPp7drEzGJ5luu0heFb6Z+kj+ItMh/A/PCvjtr/GK8g1wElklLYJeq0g94HqRL8uNsnGjJzRI+kgt0DmUyQM3reOZtzN14lZDpCqKabuUZ5jH7f3gTvoN/k/wMOyC7vBk3KDUacftXnotwprj7HooCysHyzMP6EtCVzIdhi/9WqJVGaFD4hTUlvre/GPqF9y3gguPpevYVjgxUK1FmZN859Yp6COpFv0094xE+L+LhaDC+Q3hFB2tj2x3laoa3C4CvFiRnQ+UBqXP8wi9Dx4UKrrvtjYKfzBryUYyRKtImVxI/dwtY0zXdQHURErse1GjMQHeocciT8Nl/bXW0sj1dBW+U6zV3uS8krtnPtkhzQM+1QoXpBihMvVZeizYiQ/KJ7kbyAXPy/XgeiIuNIeuwlbbj0fxRoToz7S/patjt+iD4ffgdHg5ZdAhd166y75BtgjnEJWPG4PZ9+k+fjVuJRfRbcLxSFz/Jfi1cIxpEq9rZ8y16Su0Qpye7QbXRV47jSvImPSl3h12yXuYh6Si8FGuG3oyQ8wFuzpTgorlmbwns9tgC2vMZ7mnzCr8Atvu22GY2FEWBHfCB5Srzg+TD2ZXm8v0TiMfbdOXQH92RF4n/FzaqQasOB0iiuQCm+XDcB+uCnkzn6OZRrEx2RpGhdHPjXHULk2iH+uzxZ8EKJgTnJFXywzCaUmfkkXtlAksgjGrB1ZaEzRldQGP2I4vWYyzABHQkFoQnYfSyrVAHv0H7QGn7SP+4iRnxMkOwZN5LNmorTOK+RQ3lz9nD9pioC61CTrMZ/5BsE0MWht9E2qEanRt8lHjDmWpsDT8e+ey1AaG0RKnSVqJDtAqZp+wuL8gfShUIQHuC1SnHBHWiWmSg98wy0krmwq9EShVV8icccmarkUHRo0Y/I5MUctILFUvnRA4YATf8d9OW9XFwiFztvZI5mGuODacyy84oA7vfk0qhVcxL8xPzYcN2bPoR6Q529j9lvScddhMQtHIKFXqCDcbbwl+gJ/P3JOqE+LGc6AeDvT/pX+zb7p5h7EGvev+nnGSCiwZeAtWwg+JrvSzy3NT+RLGlw3DGbQelYVPvdpG57CKiYE/2WuepS+j15X7nOrIZTKLLeV1/j32FJ1a8jvnUbxNDkBPrizcISZwHK2V9tpzrCa9JeAg75aHPUVwlvtbZSUdp4vNEX5qtDG83/EaOtfj6Y7skrOhPdMK7acdb/9DUmfYLTTgRfav9IjcYTbyTw2cEmrwi+xS+jbx22tyf0I+ex4sjYybRvCkOGwsB+f0l/XtXGXkNAn5emENnlueSLcULyTz6QhtSaT77ucPa+dTKm2w5kLLeCFWT0poD06wTrpGfD17K/qS3M6fICXgx2a2uF7oid3Gv0HvinbFXpLuwQNJtyVJZTnR3GZ+zY/SSbQSHFOueTtIHUolTjhPSO8Hhul2wy2tMS6DVSBOBpgNeiO4H8Qi1fATPJKtRneR3dpWLOKFygVbCBZwLicfrZQ3weeNfHWE7WB1fj3bZhwMNeKzu/bCnDThTJKmRr/LHKJHaT65EO7SFuLHQmOZU3aLvTfRy26ior7M5K2qbIu8qr/V+1/DY7rsYeMoCjPUbrLOgH+Km6wRrlpqd5aF85zh3k/lI4lOLuT9SrgRmxlpAUOaW5jYPeo5Tz/RDOb//KuP4Q=="}, {"__id__": "chunk-6cfbe7b9c2fef74869731f8a355c8588", "__created_at__": 1760502231, "content": "/*\n  Create an HDNode wallet using bch-js. The mnemonic from this wallet\n  will be used in the other examples.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\nconst fs = require('fs')\n\nasync function createWallet () {\n  const lang = 'english'\n  let outStr = ''\n  const outObj = {}\n\n  // create 128 bit BIP39 mnemonic\n  const mnemonic = bchjs.Mnemonic.generate(\n    128,\n    bchjs.Mnemonic.wordLists()[lang]\n  )\n  console.log('BIP44 $BCH Wallet')\n  outStr += 'BIP44 $BCH Wallet\\n'\n  console.log(`128 bit ${lang} BIP39 Mnemonic: `, mnemonic)\n  outStr += `\\n128 bit ${lang} BIP32 Mnemonic:\\n${mnemonic}\\n\\n`\n  outObj.mnemonic = mnemonic\n\n  // root seed buffer\n  const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n  // master HDNode\n  const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n  // HDNode of BIP44 account\n  const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n  console.log(\"BIP44 Account: \\\"m/44'/245'/0'\\\"\")\n  outStr += \"BIP44 Account: \\\"m/44'/245'/0'\\\"\\n\"\n\n  for (let i = 0; i < 10; i++) {\n    const childNode = masterHDNode.derivePath(`m/44'/245'/0'/0/${i}`)\n    console.log(\n      `m/44'/245'/0'/0/${i}: ${bchjs.HDNode.toCashAddress(childNode)}`\n    )\n    outStr += `m/44'/245'/0'/0/${i}: ${bchjs.HDNode.toCashAddress(childNode)}\\n`\n\n    if (i === 0) {\n      outObj.cashAddress = bchjs.HDNode.toCashAddress(childNode)\n      outObj.WIF = bchjs.HDNode.toWIF(childNode)\n      outObj.slpAddress = bchjs.SLP.Address.toSLPAddress(outObj.cashAddress)\n      outObj.legacyAddress = bchjs.Address.toLegacyAddress(outObj.cashAddress)\n    }\n  }\n\n  // derive the first external change address HDNode which is going to spend utxo\n  const change = bchjs.HDNode.derivePath(account, '0/0')\n\n  // get the cash address\n  bchjs.HDNode.toCashAddress(change)\n\n  // Get the legacy address.\n\n  outStr += '\\n\\n\\n'\n  fs.writeFile('wallet-info.txt', outStr, function (err) {\n    if (err) return console.error(err)\n\n    console.log('wallet-info.txt written successfully.')\n  })\n\n  // Write out the basic information into a json file for other apps to use.\n  fs.writeFile('wallet.json', JSON.stringify(outObj, null, 2), function (err) {\n    if (err) return console.error(err)\n    console.log('wallet.json written successfully.')\n  })\n}\ncreateWallet()", "full_doc_id": "doc-6cfbe7b9c2fef74869731f8a355c8588", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/create-wallet.js", "vector": "eJwNzo1XVFUCAHC1DlmBO6I4zAcz7828j3vfe4MgbbtUeo4uWLKVHUVRE4s1URTT8KySmZnpESkRFQ8gzMx7b+67976PSU9q2UELacVyM8zFRQtxd9F0A3RddbNEd/f3F/zek6u5h509Hx6Ei5Np3EoZ8YX20uRscXpOB/coiLOmuQCeUfJpB9NAHoodC7zh9uOZvFv6QX9bK1amqC+LPvGEdVZfYfSRAdyjzg5diS00gmQfWG3/NmeU2KO8ZA4GKvAsY2TwhpIhfxY6Z5e0NtEWpU4pbV0RGS2/CVljvjxI/p01TfpvuBgdAgXsBn8jd2f30ZRcJRS/oHUkPjEyI9XgGVit7iPvC276PZW4FGODc7JZbuz2DDuTYznJcfshDTlJ9qaSCWtgKieBeNNB903+KSs96x6WZRd/Fa2X+ugs0tWYY9ZGJ7BdeBi9Co0oS7vDlXEPKIl8K/8JiaSEPyYklXDLJfUbpkphaMRbiB/nHkXl+HemG/2kDyeyE10t6zzDoF8+B/XQb4Re4CDRasCVkUoowi/RIbPIiO89DyvENO56dI50wzgtXjdXhfqV9mgecwXMt//F5ju5ca/5itEWajVn0TPir/AieTE5L+bBtXAyXGef8o/jboROo9eM8XIZN8/6uPkxvirkD51C79muEEhfZ1TJD9QZICB0oHp9Ov1nbMjOS7Q3LNnbxhB5FdjErREvgAL9a+Zm00FmwZiAfldbbqbTPeC88B/RBYlWhVz4aW4GukQvWtMzBf3XcBm/m75ofkJaonnoOE3FudK48CZhLt5hPVR3FM5r9sB0ewoadni4MV7mDTlRzy09z7oi/iy102+AE76mloNU4QKuswuNYlDBBJUCes/wkgO0kn8H1cTX0tcSXeHRKE0pUYIqiZSbI72TcTr9CLHcVn2hXzUW2YG996TD0U2wxZhopTgnYxXmgDAlcpL7FDmqbfSa7cZ36C6ZL7+OTiSG6Ar/QHwRfYq8ZaeK2zQD/AFGcCsoYEJZrfyn8ii61W1pknodNfBIuNPCmKtJnXct9ya/U1QSb0TGumvAt1o0WmHmSoPgCTPDLAP19u+lz8URxlf4L5nHwJP26OZeNE1ShHpekAF5gV9O+mXC3vd/gBxunD4nu1p0C9vtSWA0/zNf4L+s7Jdva2dbX5G+xpNQOTNXejq+2mjQP0JXtQC3HG5TNnpaLUi3cW/DIr03fph/ltajd9lY8KgxAi7iCvV263Gw3n9QPabONIfCl3gmNKjc1VeB48oX9gRxCzzeMAfMDgcDLv8TgV2Ki/bQaWissyy+lpubcJiMzE7UBo8IKtliten/IMV2NjnOrmSXakr2AG5tzpdvGZusU/geGh9I4qnGED0JZ0m76MbMNfX9pkeaGa6kO/nNDky+Cim/5sMlgsLz0SPS30FnhovscPc4t8PdPh6MFI7EDvvKaIF22RqgPliVtQU9xy2TS6Pderl4zeqky/CPOxdaJDzMfyeofL74R1Td3Bgcw/cqtepFu91YqVpCT9gDqnAbKbGIORUOSs9Hd5CEN5+5bf0EOskjtMZ/AGKcznWjZ8QyYlgR67BVz5SSFOtFaw0/El8TkkCgtcF3mio1rKaCUvFJJQyeE86o5+gv1ussQld9Tdok1A/HGmH5FCrlvck+3TG62BtsJb+OzmDOcWl0CNliLS1ilmYeAZ95Oumz2VlytfTArOQS/h/5KlNzu7R8LstnGY3+hcoCfkPTu+C++cBK4XYwfbgYfh/q0MeDH8SS2BiS7asXtsfnZR4Q+sLXzRPM5v9fv7IW09p9o2gBN1f+QAN4F7+V3U4mqiliWsYGPJEU2IfUiyYKJLybwWn8Vy4nxoAa7XLiLVzqFYX3jX4138g1d9v7URzdsnZZddZUbrbKgnZ6NjjVLrUC9p+pn3bHffQRc3q4E1/b0y4zQnGgCC7BI/RJuNC8w66P/+Ltye4VrjCHXPflIio4E5xRxt98/wODnazF"}, {"__id__": "chunk-55c18ae0657f1b4d6b7c7fbbdc750759", "__created_at__": 1760502248, "content": "/*\n  Get the token information based on the id.\n*/\n\n// EDIT THIS WITH THE TOKEN ID YOU WANT TO LOOK UP\nconst TOKENID =\n  '8de4984472af772f144a74de473d6c21505a6d89686b57445c3e4fc7db3773b6'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\nasync function lookupToken () {\n  try {\n    const properties = await bchjs.SLP.Utils.list(TOKENID)\n    console.log(properties)\n  } catch (err) {\n    console.error('Error in getTokenInfo: ', err)\n    throw err\n  }\n}\nlookupToken()", "full_doc_id": "doc-55c18ae0657f1b4d6b7c7fbbdc750759", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/lookup-token.js", "vector": "eJwN0otXVGUCAHBCT5mV4GFQYd738d3v++bOOImakqzsikX0kiwU34/FJCMjQinDStZMNw6iAwLOnZk7c+8333fnDkEP2/XsnrT1sXp0feWxIsNSE8qxcEs3UNx+f8OvVpxl5bobO5tlS3IwnCnMhfuTbeZmnx8uVbqBz2jQbYYHvhebqY0AN8FMrUEeKZU1XcdfsTvUEiY0WyoDP5sWbhB0Z/xJHYPGy0vFZuI0qvl744t8i2GRdyh+SE8LZ3MdZLs4T1hoGbIuytlEi/11ntWRM/gKbmKNqgufJzt11JKG/5sTCOWZ7XwmySLT6HK8UFhDTrjcNOSZby+naY6QvnbieZQhAMEnZiaHhSzbfucefaU718hgDiOg3UdCUo0gBkfFJusvx0ZqdltBxBfrbSuB10Ii+Vz8PnJ2Qqu2GVYil+u6nmovEP7IxumnwK7Y0owF0kzYR+7nTWGF9CC6qEXZKTaDy0/YpR5WwerdOPQmHZJU9dnWfnZH1LVvYLH8EizlxlOfNEe80lku+fF8eAZidtS61+6NHRibzeWiFTvmwS79Q+H1ZBG+icaQqfSg8KPxJGo3wrGPO/zG7cAmzZ+IT+iLXoUHiKiPs7/AI/yz6Y/8ElmCZVIFDuNOIZceAAH2U0eja5QRJiX6LU/K7BWbqD/Y5f6BvY9U4ahSk1jNLsJh99u7f8LXxjqQKfW3HaJnBasxzS0zDNeH5pp5VEIbR58B1WI/v1FJN9+Gm6KKVkqP8SljL34oelfTmmSATtHmkD+zUVEb6BZesuxx1MJC945ImXlBmKb1sjI6Cdh1h3CdPsUKsJfdQOvgjHiG1xooVG/AWfAgG2F+Bz6NtTuPgCUZncYK5Itfw89al9Ehxw03D2i8WL4qVsFLcoV4d0sby4+f05EwoDaHoqiFthr96C6tQ6ygW+ml8EDOZxLjumSROxk9rVnZOTWTHCb9kf3wDdtEpRK2PHBGna1Pso2SVsa6dtuhw7VePQz2kQryEXnV29cyUa4PtovLSA084trKler+94uFHksEZAMWZ56geC/yJhr4b7W/4fSm08JxY1+skH6B5uuzgNuKuMX4X8lfaRk31f45+De8RP5BquUfVAfsAHvBgPF9UNWq5HJFcXbpBfg0t1awsNn8w64suBrfJ9YZTVI9cKPxWn+kGD6jlPClwSLU7RiRGNC2k6fAMlxkf4ekaWu5X6wlkUfCKc7vCxBX9sHgIHpGvMCnj9tJq0Nj4EY9G17mFPibrLPynPWeepbtKkaQexwugkc9Vao9to1B0xYeRn/dHXIMWleFTHgdPC7VdXzJHjOP68dtj/JfOqfABbJFk1id6112maw209inxuXIg3w+NxOMAJ8k5nnGxg3ypHqBVOkbhC1Jd3J6Wx4d1HzqZk12nRLTuQGrBJ3SKv4PqD72FZwDz+I8ozrxYvBVunTHRukomEG+9vY6GsSnHe/u7GQLaNaYv6vHyOjxKa4fTUUQfUHepFtQGRf0pOB5cyXp1Tk3FWazLWqh9jrbEbsqNvKr7Edylu+arKXoPqmW1bZ7hAtinTufnyV027ax6XRyfA5N6g34HqFOqQB9wa5An7R2XCW8o/eZy38/8RBNoVxYHc03Z7c+Z8pghpaLW2lVoja0n94W50uTvC+YTtcrxKKejKbQBi5TjknKhFvKFfgXbXvzyvZK+YD0xPaLPuzNc1UIW+GS0PN4pBlKLMycpGfpLyaLuXNwLF0XV1p72n3sLeeQ9s7uE7FGriX6MSjFFUYW/RpswAG4TZ3uGm6+W1vH4m6FORJrKBZGk23K81ypcps0qKu8w1Iu9098wlETfoyeyrXpRcb/nOlwp/s2C3oOSa94jmmfERjXPFvFg87XtA6qsJHxuWJS/CiecteQPHAz4zX+Hj4XlpA97FZiglEdPez8z66z0Ue1k8HF2q+oUEonu6ChlqMpth5javA5YYMU9VqlD/gnwpVqG+5hx9hCsyD+fxornYw="}, {"__id__": "chunk-a879848e4912b2b09780c5e044dcde8c", "__created_at__": 1760503530, "content": "/*\n  Mint additional tokens. Provide the TXID generated by the create-token example.\n*/\n\n// EDIT THESE VALUES FOR YOUR USE.\nconst TOKENID =\n  '98773910969bba301095e88bf997178a3aa753fa0147449d39da299c4f188bc4'\nconst TOKENQTY = 100 // The quantity of new tokens to mint.\nlet TO_SLPADDR = '' // The address to send the new tokens.\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function mintToken () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // Generate an EC key pair for signing the transaction.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // Get the UTXOs held by that address.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    // Separate UTXO types\n    const bchUtxos = utxos.bchUtxos\n    let batonUtxos = utxos.slpUtxos.type1.mintBatons\n\n    if (bchUtxos.length === 0) {\n      throw new Error('Wallet does not have a BCH UTXO to pay miner fees.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID\n    // and contain the minting baton.\n    batonUtxos = batonUtxos.filter((utxo, index) => {\n      if (\n        utxo.tokenId === TOKENID\n      ) { return true }\n\n      return false\n    })\n    console.log(`batonUtxos: ${JSON.stringify(batonUtxos, null, 2)}`);\n\n    if (batonUtxos.length === 0) {\n      throw new Error('No mint baton UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const bchUtxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n\n    console.log(`batonUtxos: ${JSON.stringify(batonUtxos, null, 2)}`)\n\n    // Generate the SLP OP_RETURN.\n    const slpData = bchjs.SLP.TokenType1.generateMintOpReturn(\n      batonUtxos,\n      TOKENQTY\n    )\n\n    // BEGIN transaction construction.\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Add the BCH UTXO as input to pay for the transaction.\n    const originalAmount = bchUtxo.value\n    transactionBuilder.addInput(bchUtxo.tx_hash, bchUtxo.tx_pos)\n\n    // There should only be one mint baton UTXO.\n    // Add it as an input to the transaction.\n    transactionBuilder.addInput(batonUtxos[0].tx_hash, batonUtxos[0].tx_pos)\n\n\n    // get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.1\n    // const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    if (TO_SLPADDR", "full_doc_id": "doc-389335bb71c913c13ded40def0c6f2af", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/mint-token.js", "vector": "eJwN04lTVGUAAPAKTRiNgqB1Ya93fO9933uPQImUMSZsLDWlNNPyKo4AUQtMDo1pNM0jxW2lOBZY9njX9+17u0lqeOGVSZaiFWlWmmOgiJnjTOCURfX7H343xEDGr2a+8S2s06o5D1pof9j83jgGzgtfaROanzPmwwT9ihSDBpL3+zaFkyNjGcBA0igsU9bgWqHbea7pOHMgmmcbQUfaq8iFVitYq/cYpc532QRDyBgRVko9Zn3LmkCx4ZJi+CKJ0daGg9DiqkzTmaG2P9Fc1M8mgULhdwPibjiTNemR1CxSQXONw/bRO/tQlzfDqIaz6SXuTfQ1vAsXqW+kLzPiqQ7UTyVrCXB2e5/lRxJFU/VXqY2hTL2Lvy3uoltgjwZ9b4a3ktPqEsOtlIApYkybQb0HrWqW+ZPvlGyje4XDgVRyUnGQ5/EGv4cZy5dJk8U4ZUimICffEKYpU50ZPhs623ayKVejPJfkcl+BjigrekdeHFoHn9J6+Eb4KTvGmaLfgZNwf9hw/MYluHhvuTJMaur7vHvhN+JFaT9zF04MnkGLFdMegxwg26xAIdXduC8MpOxAg+9LdYyh6pViqpIu9OMB12pYBYflq9pE7oB5A8wgs/RFoFCvaN4CXySd6lG+RP4Ab+Qf8N8NDPOUZYK40SHhm9QfuCFpbcCr5jLbaYbewEdREGSycXA//TUKGSKw4oTAZ0qMmUWqkBG5wipp+yiAZsKp2tXgRe2qcYdaZOkUntW/IJPNRt3l3+O7ppxn4tHjD7upOwIjP4WynadxjuMhvF3banggdnU12Gz/eqf53P7PQ0dceY6TTYNCr71ErKRrmk7gt+wXPZe47Sgn4AbxQVUu4Pf7ET0CX8eDakKkHGwW6tFlvtYntPWTU84YI4tO5WfgFfRo7Ak4xUnBEmqBtjAimdXUIZoVDktr9Rxlt37R/EGLTUnDEb4PVeAtbKtcjneyL/rO+UdSsq1H9YK2SnFW20pxHjM+tTyUKT7Svnt8jVITXaHHgm+ZJlhqjjKXMjkoES3gilMWO1pIS+P72mQK4ofG94IkfIJE2/NIn3Ao6S5nMzPY2bwWijPzwR7fa2w9TOGz2B18D3jf5RNFVQ+t06vZTHHI3wv7tNNcPbRQcXg0iENT1E4meXNSOE2fIRZBt/CkVqxOh8UwQ3UIxWCz3oFjzXg4x7f+ozHmoLc6lUfPgAY0zrjt4oOvoxfYYWYVP8JO54/icSAHrdALpFP2OOSwVZA6/z32ll4Umm/32x8D5dRLwmLnKyTXVkdKcbc01/UyNri81n8kyG1USvUa85RaG1RCZ2E3sAWLHt+Of8ED4MFwWDuAs5RS+ZoaL7NhOy1SXxFTYICLUNRNplYthXuMhZHaJDa0I9yNs/9fOeRM11YH9oZGi22ahyvh3ewENheswQ5+NyrUFrXORutp1qxDfVKnCnVWOE5qP7EEM4Or9dNWT8t8YbnzrOO68XGgTK5q/Vg445wTiRC/lsdL/BHbvJQ+PV9f2ZInlrdOh19q6cq46Bn7JfZDvCA0EMhwjJW3UX51UNmmvRc+YvyMn2/eJYxRzmJe8lmWUl2hKex3zKREhx6l6+FJ20Fhjt0FKgPNbC+Ox9x9Gc3LmfGuG0oB8wabD+KExsg2q5dYpXn6/a4Y4gJ/0VZjC1fGval+uuNvui79J+GcrqalS6vgTMrqO0Y67Ll4HbGET9i24pvmHqac76QcKi8n4uXRBGEI3SSylA4ZvUe8AM9T6SQRjnt0rJwCjlFLuFfZ+cqvyVjJpKYojfAVti5YyneDKuqQRRVz2VteD7eowQF+IGVQZc0wFZ6BVoHroUH4BHgaXld2KhcSK8jb/unaca6LtmuHwgfbk+RCxdumk2Qc1Wb55xpl8F7LKDzH3KDG4gM7nGRlMKTVaYrZYXOjfLw0GIsHlCQ0U3OCd7hCcJ8IwWVt2mPnpA7rzmCy9q96OPwf9NqUiQ=="}, {"__id__": "chunk-ea5b80e7190d455404a86bb76ee0162b", "__created_at__": 1760503530, "content": "Fee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    if (TO_SLPADDR === '') TO_SLPADDR = walletInfo.slpAddress\n\n    // Send dust transaction representing tokens being sent.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(TO_SLPADDR),\n      546\n    )\n\n    // Send dust transaction representing new minting baton.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(walletInfo.slpAddress),\n      546\n    )\n\n    // Last output: send the BCH change back to the wallet.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      remainder\n    )\n\n    // Sign the transaction with the private key for the BCH UTXO paying the fees.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign each token UTXO being consumed.\n    for (let i = 0; i < batonUtxos.length; i++) {\n      const thisUtxo = batonUtxos[i]\n\n      transactionBuilder.sign(\n        1 + i,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        thisUtxo.value\n      )\n    }\n\n    // build tx\n    const tx = transactionBuilder.build()\n\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`Transaction raw hex: `, hex)\n\n    // END transaction construction.\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txidStr}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in mintToken: ', err)\n    console.log(`Error message: ${err.message}`)\n    throw err\n  }\n}\nmintToken()", "full_doc_id": "doc-389335bb71c913c13ded40def0c6f2af", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/mint-token.js", "vector": "eJwFwQlUFGUAAOAETUhJ8KnLsbvM7Mz888+xWAqESpFFiZpXKkVevEA7fE/NlCgPKtQ0eeqiJLAsOzP7zz//PzOYhoJWmiJpllQeT7v0aWZokWnSfdD3faMslpN3f+ScU+vIOqpAJPlxkve+4KPqVf9a2miFxUTvSpDpz1HB4HQ61WxXi8k1ckLBJFsMiRU0YA3kSMswGq+7/nnUFD7T/HUteA/ukyeg88GTcIXUSecDShm5LfM3/sWNIPWaPRvq9jGlSZRBn/c7cSIaa91Uu0PTyRblMfoFOy653BgLy7gTVgXslrOZdf5xzENwJ3iYfY202kHyArTYreRfGESau5RnuWLwviXDPTTJ3t+4rXGwmuDfQEvhRZOLVYMy80xGK/2EXyTlKePRsVovrORyB76CEgM1wgKwE9y05cx88jJ+ESB/HymBk4Lj8ZdsNfS6jHSquV3olS8PayeuAFAg1msn6iF7pbMcJsROkBIwW/tM+R4ehF3wOXeaVOuudrvZKlkMZDg+pw6l+E+KLzEMu9fanDoD3tRLAwMNTmIVifnTuhB42fmJv99dzbbsnGtPpmcC/9gJTdXuD0rO8A8jQ+BlN8ywu3JgBuXl46Rdrwq+G90R7aMZtNTor94FFpsfaHzsZ1gm9nNzwVDUR9ayH1NZeMHxNGejmHZAbQWnpVYhxofj+fQs7wRrE+NYUdyCWkmKWRYU8QDhCcUb2C3FbysjQ2PNnr/JVVTUMM5qi3UrQbeH64KX0ADyDRoitwEbajJr+oSqpvfMU8N77drojbqVwWR0JXQHc5yr02/jNUzPoOHWVzi+2UTjAhojMl3mUhnynzNfA5/dZmcJC3Yk+jqaE5iVYpylCyvoxuAzcqHUrtyglvcLLBiz9ZBwlJwxOuDTxIr+Dr5jIspCs9odpbUz671pQ8NSgvKOWWHeIk+kLWpqdbKBpJ6P7rNsXAx/TRNxqlsIfeQSPqGNUAdK+WA2non6czPVeHg//Crs9ZewNuxLN7hy9L2bBa9HPMoq6bhuKjMbSuQfow+mz0fzzZHgiDDP2o+ne7uYAImXDxvLeFmuMAsdjVmOhYRkC9Nn0VtwlzCo/pxwVTulOU7IH1Py+Caxhi6yL4UPxUbyOWCwbzpYL9kpvbbrEGkF0wt7mAzrPXMLn5vRut1USslFcrRhWoMFr6uzjOscxQqdSuz6X/h90tS6OKagMaQ9A5O4bcII84iIuCKuU/5ZC8IaudDJB8ubK1GOsi32A64S3mQqhWj0IfsgPUerzWsj+wuvGrmRbPS7wiiruVCUMRIMjzZKmwzy9AZmkDjGaePTlD/oBsfn7XQP0loDWEV4mboBMhpODZKz9ixBw7d8t61dLd2kUgs1xFtddAF9UrzA/K0thj6YypXpo6KpZrqal7YpMsEZ8VY2F9CL8AA5P9qDP1EvxO5tGu3mwyrna2ez8y8+SNqUGqNCTYH3ij67nC3OHCt65MK0Qzvj3Jhpihr+JzCJJ0yc0RF5QF0lbZED5BFw1ikwj8hnrClaNekUV0hLPFulFLTRLTGfJeW7hpA8uIMuqj/P8sxVoRQTOsM73jDoZfQ5f1ezRwjSV9xOZ5100t4bXkAPG0ZTULvlRkkIMuKnmbUudUbrHdzMSKIQEw5IfumW1WoMCJQ7ntR96H3lonDSimT9pc5Rq/UkfhNIUlLqF9IeZxX6U3vbXiK8rhTUt+FsjTNfbTmnTzE/NRYKlfx/fkudCnfDYusesxc53GU4R9xuPk/8cLutRLpwgfcGeyeSPP1qb0vr0Ru4KCZaW5Vf5FGgBHyZvjegw2Nmspgr1mgL6RhwmouDa6W5qEg6Bl8CudJyeNrZYV+jt7m3rQ7xqLNMig0b3fyttEYPNizTf0Vz7GKyny0gj5s3+Im4iKwjTcJmYQ0EyuTGhPAV/gFaUh9uSBH4rDHKnvq7yVMZ8fpZ8wrZo9Xi/wFqG6Ex"}, {"__id__": "chunk-949b945bcd88957bf733383c7141c40e", "__created_at__": 1760503537, "content": "/*\n  Send tokens of type TOKENID to user with SLPADDR address.\n*/\n\n// CUSTOMIZE THESE VALUES FOR YOUR USE\nconst TOKENQTY = 10\nconst TOKENID =\n  'f28ac3a87c3dc89f6d1c5256ca169de4112ef40aed2139d82384e861d5fe779b'\nlet TO_SLPADDR = ''\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n// console.log(`walletInfo: ${JSON.stringify(walletInfo, null, 2)}`)\n\nasync function sendToken () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // Generate an EC key pair for signing the transaction.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    const slpAddress = bchjs.HDNode.toSLPAddress(change)\n\n    // Get UTXOs held by this address.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    const bchUtxos = utxos.bchUtxos\n    const slpUtxos = utxos.slpUtxos.type1.tokens\n\n    if (slpUtxos.length === 0) throw new Error('No token UTXOs to spend! Exiting.')\n\n    if (bchUtxos.length === 0) {\n      throw new Error('Wallet does not have a BCH UTXO to pay miner fees.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID.\n    const tokenUtxos = slpUtxos.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID\n      ) { return true }\n\n      return false\n    })\n    // console.log(`tokenUtxos: ${JSON.stringify(tokenUtxos, null, 2)}`)\n\n    if (tokenUtxos.length === 0) {\n      throw new Error('No token UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const bchUtxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`bchUtxo: ${JSON.stringify(bchUtxo, null, 2)}`);\n\n    // Generate the OP_RETURN code.\n    const slpSendObj = bchjs.SLP.TokenType1.generateSendOpReturn(\n      tokenUtxos,\n      TOKENQTY\n    )\n    const slpData = slpSendObj.script\n    // console.log(`slpOutputs: ${slpSendObj.outputs}`);\n\n    // BEGIN transaction construction.\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Add the BCH UTXO as input to pay for the transaction.\n    const originalAmount = bchUtxo.value\n    transactionBuilder.addInput(bchUtxo.tx_hash, bchUtxo.tx_pos)\n\n    // add each token UTXO as an input.\n    for (let i = 0; i < tokenUtxos.length; i++) {\n      transactionBuilder.addInput(tokenUtxos[i].tx_hash, tokenUtxos[i].tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.1\n    // const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }", "full_doc_id": "doc-bdd34363de4995f6f7b730d874d6b692", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/send-token.js", "vector": "eJwN0otTFGUAAPBKAxxJUQ6PO+Tudm+/3e/bXZCyhNBCbczQ0chnmiZqaDH4oPAJJJox+X6NinLH7e19u/t9u3un+RgdldQIIZWkrMyRmQIdzBjNzHyhWb+/4ddfqsh61QbWFaGYGv54cb+zyzoSncb/Lbb1f+zLpVeYYJ3I34Yfhwu1beo8WqaIIN7MlU5jhzFPqvAcBqe8oehAX5KYUcsbP+Am+IzeFs3Czf7n9O6sa/LIDNl+QZmqjiRQ7hJHZQRpp1HOVQ+8K7cILHNCLhGj6QeZQXC8+aZS7suEV9mA32efC7RrD7jPSTuapbms02BTaAe65nDQWuLWXIMKaHZkFVwB1ygP4Abja9WvFYlxZhlT0p81n3W9KlYqLfBXzR3ZZ+aZg3EyORaJg/tgA3MGHxFyyDjz5O5ErS1YKS01OsnpQD7NIat9y3z1XIv4GczDlTiFr9w+V5yoMWyjJqFvA7NA33AR/53q1KdqC/gm4U7tefcNZrR5EJ3wCzDKH8Y/wx14eDQXbOSH8hDewiMs1X9bdQnd6KeMRq5UGhy5I3xBGr1/iGXsXnuQbyP5pA6TTeLEgXU1E9S9ZB99US5NzxdWkwRvAmpFr6nF2jF/kv0R/N0sMzK5y/ht5V3hZZKjz0FeXGh8Ba/j60YTWs/9Ld1SMt3zaiqMJWEVJ4bHuCbhDrVTmACX+xOgLaTtAGiBOSr9Jm4NX9IL7G3mj0iwF4ePSwW+KjA/cYv3wq5s44FeDhZGfpQp/oiWRlfRs8ZDPH7Pl3w+bNU7uFliN54Dnwer6VHXXfK60s8eByezW9hiLZsEwnxdQSAbjPC8ARW4HB6UY3tnawodp1bUnOWGgN7Bc5w6gBoH+F7G1ros5nZwKW6xe8APUbn0hG/HUPfpVUknjW+4Zfy/eE/yFn2Or0Z6RhsLi5WYnR6tBGvYT/lP5QaKtXdBSvSmGnJn0QXwuriS9OTadkZxcdoxTejzl7E4ZQ+doXYilLZeeofr0I/hD6RE737QS2uI3cMbuWrusuiwLxOgVqBMOFSQ8L9CPE1iDhlRbrd+M3xNaCZQc8HpdLgQDK9wX7DmeobwU/RXopd8WNsAF6K9aDvXwseDS/xhlBBqcB3AObhIvMw+FB+RYchALVy2OVW4hzykBn4JXXRr5EVxhrCef0pM/0EP5rzKArEkIZfM1qPmFFmuzQwctcvwruBRtIFxiZ10KfArH7JnUtbAXNgHWLzb7Mc38y8bOfITsOf/d5uNlRGndERdrnBwtr9aOBGcKx/3lJNmT4x0qc1yQWiS0hc01V2U64WLxkztHaudTNdfiiyHmagj5W3pA62CLOXmmxv1tXTxtgfBdq0WtyoGMwLcpgNEJ/ObeWpAEkpTE7hHpmYd4tLxfuuko0RKAiWpZ5QzdbzqkJ26DbrZEEwTFsE/tF98U8Sw/okxDm3hOqyf/fmi0+zSL6JMnY3txifTOozKUAbr8l9IncufoO/hybseqlWIrvs8OlofQcbA72FcapFeZTpJacgprlRmcrz7Ps6LefFTJpE8iVzhznk4cs0zmNTgZG0tTTTv0BvKEhhTVui9URq7Ew3AyYLla3D0JvfhLeFiuDTjCbcaLYn0cxeRXbina6dQxi3E7O76QDbXzmyWCmM92N9pirxJvwLKzKvcgW2f0dmg2u+I1KtvgQ55vHjeGJwhZ7TCX8h+hdJCYZ0VT5ItyndrbdYStgXmCP21PFBJimIivC8VWkNRPoozRot54iR3H9LIX2XKmFX8fMD2WrSz0ETCZONC+iP1EgzgscJNsQvWMCuEieK01BnBVN7avtbXSDaBaqaHNd12Mqe4R2oTWtfvdVisFRMW1+uR4CwyFKr6EHrXnldTysSZN8Bf9gQy3GQHvk+HcSPDrF5lRxSTpAAXXZj4vTZKNeyzoUa0TL+PK+hwzQsr6D/e+awM/hQdSiV+XLtInqlMCzcZj2u99D8N/Kdx"}, {"__id__": "chunk-b05cfda709b3fd3b3ae7e059b7f10893", "__created_at__": 1760503537, "content": "Byte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    if (TO_SLPADDR === '') TO_SLPADDR = walletInfo.slpAddress\n\n    // Send dust transaction representing tokens being sent.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(TO_SLPADDR),\n      546\n    )\n\n    // Return any token change back to the sender.\n    if (slpSendObj.outputs > 1) {\n      transactionBuilder.addOutput(\n        bchjs.SLP.Address.toLegacyAddress(slpAddress),\n        546\n      )\n    }\n\n    // Last output: send the BCH change back to the wallet.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      remainder\n    )\n\n    // Sign the transaction with the private key for the BCH UTXO paying the fees.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign each token UTXO being consumed.\n    for (let i = 0; i < tokenUtxos.length; i++) {\n      const thisUtxo = tokenUtxos[i]\n\n      transactionBuilder.sign(\n        1 + i,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        thisUtxo.value\n      )\n    }\n\n    // build tx\n    const tx = transactionBuilder.build()\n\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`Transaction raw hex: `, hex)\n\n    // END transaction construction.\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txidStr}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://explore.cash/mainnet/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in sendToken: ', err)\n    console.log(`Error message: ${err.message}`)\n  }\n}\nsendToken()", "full_doc_id": "doc-bdd34363de4995f6f7b730d874d6b692", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/slp/send-token.js", "vector": "eJwN0ItXFWUCAHBluS1qIqgIXO5l5jLzzXzzuKamrPQgO5rr45jFUqIpkOLbSssTKwkUFEVlyUPkcR/z+ma+b2aA01KdPeihs6l7UgktMjWU9vhsOwG+DbSo35/wOx5I5p9r/bKViMuc31Gu9FRaqW07Y4KfyI/WpSkBYzl/HSwNJ7I6PxFX8xVJ7IRL6ALOkv5tn8Eb6ZB1gH2UG9/uSbtIdhiFdnsDElKUbnetUwzn4ykz9sBsocGZW5uLy+k6sI8bYFvRbvwEFXV/k+PEy4Hbck5wNnqW3A5ups/Rv4vVejk7Bn7a2BJZHn6DuFY+fMQYVLdoHVGTf4ftJQ+7DSRRZpsOWUe4H6z1JA++4OTA9sA+flPTW+a6D4B5R3gmvUjr4IphrF7AXbRWG8dJD1QynoRl2seNudKAtqdxLf7L5KPiWXkd3aBV4QQ3ER+QroCu9KvMA+mj5rGWkHgrulz6pykZU0MZqTXmHfq0fQ/22nVIVrPVHDjZbDLmiSucvTBZXsCPgN1kBMjmgtY71E1xr1yVcMO9gndOyxDz2a2TTmSMpS+CBfY80ms1Mq8IC6kysyTwppPvv+SofgqfdregEVJCFvJSGPHrfffh9cDjoQ/BgD2Pu0bGyw1kKy4W2syo993mfCyiWum+lyf/Uw0ToW/lDfp2JivyulnXckk/aTaanVYfk6lm8dV0E38YlofcCBN9EGTb4ejq+DymRHnNnY+zhIl4mjhX1OFRtsV8Fs6MxjUVuePBdqaQXaI1KyPui+xHYovVrNU6RcxcEAuvcTPx9xkgmuTO0ShHR/8BK+ASMgN0ESMwrGEUZwzzC5vXCuV1v3h7hDHif5MrnFPR6VBnKsSv7e/1Svp8lJm2hcUo3qStUVhuK9IacZZ0Vr5PUmpvW0/jG/wFOop+NW9QHqsdMcwpb0D8HJ22+8nzehhcYAvlRd5VeKOSaR1Rs5PSw+u0HPkq8dv97Fn2X6DArjHrI++TYx+G/DP8EpcZ+AcYtH/b+1PwyVSP/KA3HnQjwsYIOXAb3oW/+XiOxshPSKoyKqpKFddoOqEKQ9Yp4VWsWp/R94xWfpt6fuqQcdLIhPNrr7ovob/67/GFYCd+OGOydFToo75JXYnW4q6mbMsXXBV4W1RJB5pNF9Ad1F75CH+eS2NvgQ3GVvtQ+i0ux/pZ60d/VyZx33Hzk7rlNPIq3oBn81HYA2PtvqkafRITVJG8ub4UZrI8r1tP0+XGPiAI9aoHXuA+B9PFMr5MPiVq7iphSCytjzSOEwv0TVR1JEE45EfuEqcNf7u/X6yOdoIhoVcZhLtkjLKZRWkTnJes2fTugDeyWloM49wY/zPCTFNsGzCLXMYo4VKV6+ghXkjJig6lFuJht7hpE73dsLHovkD6Q922B/2ID6cWJXwKDoZjgCdCs9xkQxvFL0tL4Eo+21HxMvYz/XHSG9jPrDNHpWTFxmVWDixtS2ld7OZ6KeMKvAPnwPNwBX8bb0z5gt6kvDbdoZa21pOxvnY+q3kcjDe24U/UbvQmvxGOEeYY7+lR0mlViorhTatU7nITmQ2gHjHaiHMOQf2M26lLcoHt8U1nkqQqjgIPNBWJS9FR/Sc1GVS/0yDtMM/5nnc5X7V7AD5nvKXUgKFwt/GD0xNMZE15jfuLeTky1nuzZT/3565YKuT4X1F9oMh5L9QnfgX3wP8zh4NmcIrscYupwfTcoKKstGIxDQamjHWH+XZpF1tk3ppSYpwgV+BiPsbk2ARjJ8mTarjY5FTEGMtAIsgPzpIS9VblbP16clAdb+yh76ZvruxIu8z/HB2nVfm88BoidFzwa3CE2Wz1p8ew06xjZhlXH9iBbwqvI1b4G3wqqZOZALLDawQJEQu0Afwu/RHuIi/jHn9fIN44DvXQY5zHPWPmObPMEmo4I8kKgi+MPLoF1fhqhKnaXfqhlEGOnTToNOhIPyFg+UuqK06iFgYOWpmkkvFHFml/AHkkpGM="}, {"__id__": "chunk-88b219310e63c2631cc449ab90a9edbb", "__created_at__": 1760502453, "content": "# Non Fungable Tokens (NFT)\n\nThe examples in this directory show how to generate and work with Non-fugable\nTokens (NFTs) using the [NFT1 Specification](https://github.com/simpleledger/slp-specifications/blob/master/slp-nft-1.md).\n\n- [This YouTube Video](https://www.youtube.com/watch?v=vvlpYUx6HRs) walks through the examples in this folder.\n\n## NFT Workflow\n![nft-example.jpg](nft-example.jpg)\n\nThe workflow of NFT tokens using SLP and the BCH blockchain can be non-intuitive. The image above is an example of the workflow. Here are the steps to generating an NFT token:\n\n1. An NFT 'Group' token is created first. This is not an NFT itself, but the raw ingredient from which an NFT is created. This is analogous to a stem cell, which is a cell that has not yet chosen to be a specific type of cell (like bone, blood, or nerve cell), but has the potential to become any of them.\n\n2. NFT Group tokens can be created, minted, and sent just like any other kind of SLP token. The reason these are called a 'Group' token is that they represent a class or group of NFTs. So a Group might represent a class of items like swords, paintings, or concert tickets.\n\n3. A NFT Child token is generated by consuming an NFT Group token. NFT Children are the actual NFT tokens and represent specific things with that class, like Excalibur (a sword), the Mona Lisa (a painting), and Row B seat 24 (a concert ticket).\n\n4. NFT Children can be created and sent, but they can not be minted like other SLP tokens.\n\n## Examples\nThe following workflow is recommended for working your way through the examples in order to learn about working with NFT tokens:\n\n- [Create an NFT Group token](./create-nft-group)\n- [Send an NFT Group token](./send-group)\n- [Create an NFT Child by consuming an NFT Group token.](./create-nft-child)\n- [Send an NFT Child token](./send-child)\n- [Mint another NFT Group token in order to create more NFT Child tokens.](./mint-nft-group)", "full_doc_id": "doc-88b219310e63c2631cc449ab90a9edbb", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/README.md", "vector": "eJwNzYtTFeUCAPAKdEwEQyXOQeDs2d1v9/t295zQJFCqC16bUXyV6PjIR+WkPRGCNA29KiDXnohHHocDZx/ft/vt7jlMiVamYhMzWdlQaTjNiAlYlJZaJhqZeu/vH/gVtRYF9r3n63gQteor7LDjwz36mhgrPQUrxBl4JXOJG0u2SmnoDMjDY0ClM02h3Cn+PLnh5nGfQMv/ojUfTIyV0r/RXn86LQyvZa5BmTtplMFNTjx4zMqTJ8Q/J70aTuvWRkCUrfT8q7Uy7R88XkqVz5Lr4ijlJ/5+9W8wCkYj5WId16t4xXz+VKTRfJirwy+hU+hO9qegpMVnnG6c6nC0hZ4PcKGxpshwtmOrsBmE+GJ6Vt3JBEmq3uHsQBv4Li2qFMNq8SFz0FlNHrfrpWv8ROtPU4XlSrHpxcnkB+k6mAk5z2kyC1x2pwh5kQN6Ct2iJ6PzemJ6KWqN7sdn1WvsYONb5KBRAzRrqfufcF2WIozTZ/x/nOkiYa+xAPWylUxNOMdx382jmDJwQNkOv+dgfFi7SBbDmfLT+07AxeZaW6O7cErH3co0/t/8OOEdMS32JBmyaiedZEPmIfV3O5Prz5jvW5HxXyOufZ7dafVYJ/RO0EymBsew39WnBgIZLzCWthN/Q5YpfnOlXZC90P8svJPRR75lJecjsttKo4/KR51C8KPPy8yBr0vVTCWqi13xbeT9oLxpa0sgPmKd09a6v7iT4Sy6Sb1jXcjIhG06ppeh4K1yHkCbcRXcH1uY/rGt6Nv1HHU9k4h3yjfgaKWOrFZfUQT4Dz0uraOX6Vw7yC+nxc2fCV+BSe2dkIFXnVB0Cl9IZrO/AT+YjGvMal4DHf5OFG5fbPQIEK8RytruVlPkJly2Z7s9eH8Xt04ZkW/SRW2v0YrQl6Qt0xsotaF6or6F1ouX+PVqpbbNzY8a1gi+IIQCt8UmOgUi6jG7wIiYCMewi/w36Gqz1r+ntS+w2T8XVNAQS6wrjTOyZidW8ofYfb57gy8TVziqD3HbtHuinVwuKaeTrC1gNh3Wa5jvTVU6gx3rKBxHu52LmRabYJTrVe4xoQquogUA0Sel3Xwufd/+lZ/HPCccNqbHNht/wBVNiXQst4rWuctRlVER2OBfbfWm3Uu/A6/ron8ZfluJgu1ghK+MF+uHYTJqM6P2BHueaTWjyOjAupwiY7yTQNPFOcEuYZPb5CryLc9c4xFQiDr5B9Sl6iiX48Zk1zpJ8rfOLe2WcAgXIsZ4FSUopt4lxNjlxsPmLlPiJkcywXVPgbjDTAAHHV7vl5aSy3AuOu80REopSP3rvll3Pe9g/xvhddA7gYMpwX5zFz6tbKCP4OFYLf1KOEuukiF5GDeJK/wHtFq7IPpKZgR+TI1YFr7tBsSntVZTQA+yN6Qk/k3ylLZY6cIboxthKY6gieJQtA/fJx4P97JV7BXuMSYJL1LanKnyRtDPlpqPx7a4yYbSUMKn6yH0hXBESHEb1CNNSUK1b4H+ofmNu9feTE/aFj4Nl8SCmmIlw23MpzKizwvn6PRYCRokuWQtWRXObDHwo8FkaLi9TfPjiSRuT5PLrDfxCLqJv2xIAypf5ekxKrz59ANuPqyQ+5w1PLILsadjERiw+oWZYkOkxnWcPqXIHuDL4sQssSLsTu8T3N6s5bCaSwpPjr4jrQTLnGF0RD6XnRMdkLFy0y/wf1j7yTAc3fqFuwTMcSc1H3fGSr/46u1UccC7gF61eblbTODHhQpIOLYeHUdedpXdXq+RVPHrrDyxQ89HXtSwr9C+abTZvj0nWOQOC3nMMTYXO9IAbskYz+XHsqX0zFuiqCp0yHDTz6AS+jOoFkfE3eQg2dFepbyWwQQbre5Ij93d/ivMIreFWu0SZtty3WvMG9LX2X3az7H13kGP69mk/enPSX6GdNJCulX2ykH1IpguH8Y/+cLiJW1J1gGpSH7bvEAO4GnwB7GRmnxK7JTzPwN6qIw="}, {"__id__": "chunk-d3813c4e979824211e71f12d0c71225c", "__created_at__": 1760503559, "content": "/*\n  Create a new SLP token. Requires a wallet created with the create-wallet\n  example. Also requires that wallet to have a small BCH balance.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function createNFT () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // Get a UTXO to pay for the transaction.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    const bchUtxos = utxos.bchUtxos\n\n    if (bchUtxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Get the biggest UTXO to pay for the transaction.\n    const utxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // Set the transaction fee. Manually set for ease of example.\n    const txFee = 550\n\n    // amount to send back to the sending address.\n    // Subtract two dust transactions for minting baton and tokens.\n    const remainder = originalAmount - 546 * 2 - txFee\n\n    // Generate SLP config object\n    const configObj = {\n      name: 'NFT Group Test Token',\n      ticker: 'NGT',\n      documentUrl: 'https://FullStack.cash',\n      mintBatonVout: 2,\n      initialQty: 1\n    }\n\n    // Generate the OP_RETURN entry for an SLP GENESIS transaction.\n    const script = bchjs.SLP.NFT1.newNFTGroupOpReturn(configObj)\n    // const data = bchjs.Script.encode(script)\n    // const data = compile(script)\n\n    // OP_RETURN needs to be the first output in the transaction.\n    transactionBuilder.addOutput(script, 0)\n\n    // Send dust transaction representing the tokens.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // Send dust transaction representing minting baton.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // add output to send BCH remainder of UTXO.\n    transactionBuilder.addOutput(cashAddress, remainder)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction with the HD node.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    // console.log(` `)\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in createToken: ', err)\n  }\n}\ncreateNFT()\n\n// Returns the utxo with the biggest balance from an array of utxos.\nfunction findBiggestUtxo (utxos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-d3813c4e979824211e71f12d0c71225c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/create-group.js", "vector": "eJwN0YtXFWUCAHAgQ3E3RY3nfc3j+2a+edyrroZxFBPNUrPWdVMwy9pFtFa8ra2iZfFIPNpFaGERBede7sydx/fNDAqsnl3tYaYd3U2j1pZIMtdETeXssoRK9rB+/8JvUPiHvNfl3TQ0250QXy4/KhGbdpfyj4QG9XRmtnYIvMLlsP/zyuAuyWKXw+1WRyBid8nlpMg+BlGsh00Cfmc1xwTS6CH/dmUNJRmnnQfBcuEqxlOa0BNIdzLUM3BD1lOwmQ6LPya2m6PGu3hY+FIuVs6GtvGNeMiYIH9iD8ROwhE1GfeL8+2xcF3WRfWULUhX2GnqEGKtg7DbmJQw8RZcGUrhUkE2mpN+3a5Fy2ItyY+5voRifG29RBWTvwtF3H/iQcpW+6ldLWus1fEa51XYBnn0MvWJ0iiswwlzotsQn8a9LuaZpckvab9yBhQeXeEn1zeiWb6wM1P/Aj3vXYQazIDVxXVIh6xavsTsos5pQ3YdqVOS6FHmeXoeW5ldklvJvODPRtX6DbixbU1HHKbxjvgpaGyvbr8jzgKFng5wVuCV/4qLtKO86gCULnejy3glisTvUXMTBfzLuBmr+Cx511DRM8bK8UM1ZXweTKLnspfsXrrCrOTr3UpYnOMlObjcf9mklVv8P5U9SphLiXfij9Bd5nGxZfcLiUzmtLFTy9f+5o2gcbnJgZ3sHXQX2UyNUBRYBbbqfl+NPpK4Qw4ZXjw9GImmoAXyW7FtqV3mbnAvmIG32dM8Ye8e5G3ttCpJgfkaOe9MzYno3XCFSrNLMpNJTKyhq+wWPtPckbHD7RGeV4vEXvKOdd/PY2vNSXKgyUPvio+B5cKM+GFrtr2JZBqmOB0VkULG679hlO3rbC013mttZL31HxqTgnVCLfDJ+a4Pa04Jfsey/BUmm/0G/EMu2XcVxeDoUJ9GOflkKs+Nd+Qn0Zdaf+sb+np3CvNgzLDSjfPBQnwi+qYyL4aMEu05YvqajO/aPExUi3DHhYe9Yy0mvUo+ZJyGudhnPaB/Lm4Vu8wp5jA5rlnCQF2fdED5c2iUcSyjXC8Y10NejI6jNtoz3CFmqVvkTQ1UYS2x7Bd/RaPNbLfTfMV+Cjm530iL+Hl0vjEjUBu8ADS8pHU9dUQMMuslxrlODar/pxbjYqHDP7X2Cr8BTOa/dTZ5PhOrcpSmC9S9Qom/SL2fvc7/YJS9+V39EZrnzikXzP34PWqucrvhUaZPz+Mr/J69u8kO9AjfDWXjbXM2t4VLij4AY0xAWCofay/mbsobwBE4Ha1oi9K/uz8hpFi/wV85K/CqCXMkhpyyQuhEYjGUg7eaK8hVbRdZTb5t62S/oZPE20I5mec7IK7DJ8nivUnRdnSbPa5/qufzm70JvFCQxx50f20WAEWbDzxubjwd+rRmcsZnB/7NNulL6B/of1m3xNetAXahOQBPSt1SAdnuzEc38Gi7RoiCamOAnc78CW8gd4Xk/fe4J0hB4n17hDkK1vKjs4dB2Gz3n2Eni6mhBWyPe0nzq3moN9op0FTIjrUdNN6ndvKr4DL1EuaMw0Y/PaQHxDKtTCq1qlHZ/jvqTWML6TPr2ucqF2CDURYfAHOpBXKk5aZ6UchgxtgjnIfZCD8IxfUwf9vupFrNJ/WF4FWY7fvcgngzOSymAUr8mKRnyfGlcP2+Z7lqa6r8AahS/4L3g158JPY2my0H2XJrjxwNPSaFSH3saTwzeLz9FLWi4Rgq1D4iI+iq9AzYZxaxXVF/ez8ah645r4l5oDTxrjweFOjxhKt5pL5MAtNQj7nVvUmvNDbjiW4p38uX4Ot6DH1hHTB/zx0FR8m1yENiM/di4LPdJzHFztIj7EXpq0A1GVZXwnVoUAvHvmY3wR+ZFP17pdYdtG+Ry6AQfO9GrHM4N1ZhzEHD+um2OThsb8FvaUu0gUCqJVnYb4Fn9SwmU8hwmuKjyB/5+YqJSykMwhIfHJP5W+qavhZhfdGEifbM+C8TPwHrp6Os"}, {"__id__": "chunk-0ff4d188ced883ae293a61daa84ee0e4", "__created_at__": 1760503559, "content": "xos) {\n  let largestAmount = 0\n  let largestIndex = 0\n\n  for (let i = 0; i < utxos.length; i++) {\n    const thisUtxo = utxos[i]\n\n    if (thisUtxo.value > largestAmount) {\n      largestAmount = thisUtxo.value\n      largestIndex = i\n    }\n  }\n\n  return utxos[largestIndex]\n}", "full_doc_id": "doc-d3813c4e979824211e71f12d0c71225c", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/create-group.js", "vector": "eJwN1AtzFdUBAOBKoIMRMCVAcr2v3bvn7J69u5ugDVTQtsJgQypGKZSnIQ8ZQGIChDTWYAHBABJoXuRx33f3nt09Z3eT8PBB2oxAqQbD1CQiFmsRktKm2og4aYpCp9T/8M33HupRDnRfpo2Jmfi8+U0wPjOb7k98Jl1Xijt5bptVJJcZbe6HYRsQ6f0kO9QXXCXc539E2kHvY58W9rMvHPur33B2Rx9OVcAbqD/+rlCTXCi4pY2i3tWgpImsfKj7IrtbLvdOjlaiReLL1nJ2L9eLd8uHuO9p8+TnkWIuJsvlc1Z65F1xS/IaHlAn7I+Q7P5E20d60RJ1HsnM3U+Os+3qL8T3kxlmdc4Rz2/wepkRz1o54qlZHwZfIa+Fr7Dj4pTpAWMj/wEqwG54l85tr/D+jBcIY3e4/cm4DHSf71H4lJ1lDbEe2UKlGflMtexOAucgPhX4n5r/0PisJxIHu1Lqc3wFsEnYfUjvwyeETfatgGw2zx4m//F+iVhwCVw5FnKlC7/kqulNcw9c45+O97BNRn13Hb8UcqHBI5p92npHLsCjqRjzrNiMzwh/JjOkM3SydB1dgkcoxw+hPjKc/NLbH23ytFJo/KvOCdbjv8TO6Tjyk6yXXC7uW6dS3UeW4gV0SIDCTuJyJndciZaRC8kcs8q/QVwX/YB0SeWRT+VB3yw8KKRFfUKt+gROC0pADO0EpcJZ0WuWIAVloCrzpv6hVcR02g1Ml9qrxKlLXCgTuEMATnVml+s5MqD2cT1t18B56rEDRhH6r7dCJ+pjYj76p3cUbp11GPxRzNMHGAUzvgfwiHU3slAs0jPDMDVFycj6lL+DIjHAL/YVNTZJEZyVWGFtjxbRrcE3w3PBMB5E3Sr0ndRKscznxRkISAiUJqaJs/k8Z5nR0Lka7zJ/a6zVHiemuDe2kaPMV9JmOZdOtfZq9aAcXEUTaKa2LFWnP2OOHV2gCdY08oayU62nH/Pl9BX8Plwa3YWqkMKu95TC+fhJ8aAVA/2gV5jb+iyfY/RSg4aCP+IjZKqxzTmA9wRvc41KIDLOrNUYUkLWpHfRcliDR9Qe57QxH2bGTqSC/oT2g8RAw1r1Bg211JJ3PDu1dcLlxAbhcfZ1vy13GG/TWKIYquI1dNj9oP2H4N/hbfIJuc2cjPpj96DX1ZTk6AVXXBoUS8gB1Iqyo08SCtJBszFJHee+4s6LW6VKskhXw5dcy8kGdzf+qXzbdJuH2Wa4JrYnkOHXSYWcF7RwTzKKt3vCSpnl1V4MTrAL+ByhTP83MxaLi7/WJ0WX6IN2RZZL0shKfYg/je8Jc8Xq6DNmM1egdyZvqS2QxA7DYa4Ov80sTpTQ+2G6uk1vEI/y84Wt4AQ3B3Q7n4tN2CYWwWLIWdS42XyPGNyZ9i32cOurqf7InTmXaaU9lqqBhd9JrsFp5If+MfgnQzTedJXaq42Q0A5zO/t83tQCfkfb6mCLVWhkx0cCjOFLm4p54emsl4J9+jAoAGVsrdyvznR+D90w1/PtsRdFyjU0FdtV9DNzpfchr8Z+n14ly9V7XJ0+7NGNhHgn/FZynu21O82bZr1RG3aUCcQm93MDqDK5SejBrF6MTvGMs87zc7AKX1Su6w3e6OxH9TxroXqBB4IaCKdk815gCfhxZIbyqrHJqnVeRusTG7/742JuoRyANZTiSZ6VjeM8UO6Cj8hxKZb7tZCPJuaMkPlCh5NpZeApsSy6z/pd8G/oDXbSg7vIa2TEPgvbhbcMT/R1KV8/j65yo84tNE2VwGMgOWM3ukSn0lGzIGWYK4xCY5G0gnysD0PSlc42i5r0fIKVV6ET8DjMAuPWF7il7euUKlTDUcuVfVIq5S/TEvq5Xs92CF8kYbIw/g+SYwyh6doWZ7vZ5tH0DGIiFlZrFzWPJZNleq9xDj9CWswbviuBePuvAh3gKetoIEwVPCZuYl8A61rLg98oKfaB4C5cIVRxY6DY2WzNIP8H4quoKQ=="}, {"__id__": "chunk-f3ea542d21b3e0f5247dfd3044f07047", "__created_at__": 1760503601, "content": "/*\n  Create a new NFT Child SLP token. Requires:\n  - a wallet created with the create-wallet example.\n  - wallet to have a small BCH balance.\n  - At least one NFT Group token needs to have been created with the\n    create-nft-group example.\n*/\n\n// EDIT THESE VALUES FOR YOUR USE.\nconst TOKENID =\n  '961c6a9f40da97c032b7249493a0bf70944696bbacfd94e831f58f0737e2e9be'\n// const TO_SLPADDR = '' // The address to send the new tokens.\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function createNFTChild () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // ge-childt the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // Get a UTXO to pay for the transaction.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    // Separate UTXO types\n    const bchUtxos = utxos.bchUtxos\n    let groupUtxos = utxos.slpUtxos.group.tokens\n\n    if (utxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID\n    // and contain the minting baton.\n    groupUtxos = groupUtxos.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID && // UTXO matches the token ID.\n        utxo.type === 'token' // UTXO is not a minting baton.\n      ) {\n        return true\n      }\n\n      return false\n    })\n    // console.log(`groupUtxos: ${JSON.stringify(groupUtxos, null, 2)}`);\n\n    if (groupUtxos.length === 0) {\n      throw new Error('No token UTXOs for the specified Group token could be found.')\n    }\n\n    // Get the biggest UTXO to pay for the transaction.\n    const utxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`utxo: ${JSON.stringify(utxo, null, 2)}`)\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add the NFT Group UTXO as an input. This NFT Group token must be burned\n    // to create a Child NFT, as per the spec.\n    transactionBuilder.addInput(groupUtxos[0].tx_hash, groupUtxos[0].tx_pos)\n\n    // add input with txid and index of vout\n    transactionBuilder.addInput(txid, vout)\n\n    // Set the transaction fee. Manually set for ease of example.\n    const txFee = 550\n\n    // amount to send back to the sending address.\n    // Subtract two dust transactions for minting baton and tokens.\n    const remainder = originalAmount - txFee\n\n    // Generate SLP config object\n    const configObj = {\n      name: 'NFT Child',\n      ticker: 'NFT005',\n      documentUrl: 'https://FullStack.cash'\n    }\n\n    // Generate the OP_RETURN entry for an SLP GENESIS transaction.\n    const script = bchjs.SLP.NFT1.generateNFTChildGenesisOpReturn(configObj)\n    // const data = bchjs.Script.encode(script)\n    // const data = compile(script)\n\n    // OP_RETURN needs to be the first output in the transaction.\n    transactionBuilder.addOutput(script, 0)\n\n    // Send dust transaction representing the tokens.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      // bchjs.Address.toLegacyAddress('bitcoincash:qqlrzp23w08434twmvr4fxw672whkjy0py26r63g3d'),\n      546\n    )\n\n    // Send dust transaction representing minting baton.\n    // transactionBuilder.addOutput(\n    //   bchjs.Address", "full_doc_id": "doc-72e687613e082509a01e484c7f56cbe4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/create-nft.js", "vector": "eJwFwQtUFWUCAOBI0CgLCEQe3ss8/pn553GRFAm1sqLQ7KhFoia6ICcIpfXBAfMYYmbUupEiElweF+fxz8z/zwxiIRa67J4eeo6IokQYWiuJWZb2Ek8no2W/7+PA0kDRodgOCZzGJdxucV1bAX6qnZJ+4h/holpycI3dy/8ubwOFwo/2XL7fOwp63Sfwr+A0+d6qE9Olm2Y630RqzJeUT82hgyf1/XyFLhhrzEZ4GfnSTmn7mGFnv7l8Sk7CFpGT9ojbMa0vpA+TpdJaqatpTL4t7aZucFPFleg8XQIuKfHUDeaf+nHqsppO9zeMK6dJOLpG1xo/wGorH/3dXm01pK4IpnFN7Jqpf9nl0jR2Pve1Wbu/FC8xE+A8JxzcFpr5CVgKRpkaUkeA727yUcJcsU/e09pJH5GO2YvdraESYyEQZAkVO4KY7V3kBupPAQnuEhbIAyij7TfhCvUP/gy6Nm2MmcYv9I/WDeAqOyiswKVaXnANu5eZrGcIinlYzIcnwQf6Eu8r3z4yu32CTZE+lJBGnDnui1qsr5W749/Jz6enwDScqpZ55VwHrfBH7QrwBNnC7nIa4Va0g+zx3+UU6UjqVevASruU6pEnRy8HQ2av1GdOSOvdqOnd4Bnqsj5uPEUMUgW7zTNeWE11wwqUJwf4SHgX/6gVr6XZxdxZJwe8D7rNefwtcAHkwrGQP3C/9grcZUWo/7PKrFzcSX7G/fKfThdrik8SShhkp+q5alRwCZoN7p6RzvU6YfYkd7NjeiUHN/PjbCY3yqRyV8F244LYDtudt8UbTrhb4THSM+intmzrnSRIzhlY/tz3sr6x9WnwJZrJdlGddqUvH2b7TvBwJmcfTJjNC7iIzkQFtWX0676V9mb8nTBLXA9niW/j282Vjq86HL/Kz5Gut/5ZfwXHoyyYXVvIfKUWkXcISHFJGTtJDsHPcSts9wZwzoHS2CRJ8C9Jvspss98TJpvxwmLfaXjW32OdSmyZkaTb1HZxWD9qNSifMXfAh9RMc4RrhveIYRbUj4e+57PgN4zO3ibn5aV4JKkUsOZfxgZ+rD7SrLJ7jAXeTfkHdTG/18mDnfzaxovu76yawgn3hd6git89BERsx7wlKlyGkSZcEuYFlrV1Czwe11uYN6UN2gVYIg3Wh00XW4+Q9ZYsFypZ9cn4cuJ/fFH8EQCUSCUDR9gxHpTOw0yti6y2spJ/Du2mRv0xpNA33V7uGzW23lOutdDRlOstNd8M9KisuJFrlGaLfXiV+jJ8zfpRyxEjYiL4k1wQPkDloXxfHs5Sm5R15IDRCRm3BDzO/7ctEZV5O9FwMM7fLBwH48bx1G/xLFIub3cHyJC9Gi+Gg8mL6I9D+0K3IMbV8AqptHNRFayo38Gex3+QncL7+xlnBcDSdTW8aQjEqvks26SYt+hkDQEPpotFjizHvteBm4Rj/CRD8q7DRVwxyLND/DG9saPWTsJXsGPdNFWxj5KkOJeAZdQf7AkBtgy7e7xxp4V/Bf0bjDl37EftcCs2tUqcKz6n2Q2F7ge4yrecO6IXo+tSbmtBUqS0CT7i5tL3HbK9h6wCsA+XoE3casLIlUlbtDi4zUnFb4Gs5rUwLDBi9iq/zDBwu5uJOh+0UDqsNgcTPzEPKwNta/nMQw9b10gErMJhcOH0PrATzXcOwBHmXjuanBMWiNF8uXM2UJYaJT2GJsyVTqzyJd6EDeo5HGVNeD3c60ocn2vGw3gSaP8FqClVuFu5FTpLspVVcmpwPa7Y+zwY1OITCugT5F9ty+CrerUzoWrcN+YB7sXkq1BVNKs/ulNqAnPsB1XaGakdNR1+I3fOOQOGUx4KxpEN4hfNl/gdrIbXNf8qjwqRcj/Tb5WhVc4LrXuNGPVZe5GzBb2AZXjRXwe7SJ1TS+JTBDUsKFg19CUr5CxwK+VEkUL3+7+zZ7V0oDdQRtIUKyS/FPibXWBvJkhOwNdIJhmyhr3/A9+RpI0="}, {"__id__": "chunk-422048c608c434855e60681819898ef6", "__created_at__": 1760503601, "content": "0)\n\n    // Send dust transaction representing the tokens.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      // bchjs.Address.toLegacyAddress('bitcoincash:qqlrzp23w08434twmvr4fxw672whkjy0py26r63g3d'),\n      546\n    )\n\n    // Send dust transaction representing minting baton.\n    // transactionBuilder.addOutput(\n    //   bchjs.Address.toLegacyAddress(cashAddress),\n    //   546\n    // );\n\n    // add output to send BCH remainder of UTXO.\n    transactionBuilder.addOutput(cashAddress, remainder)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    let redeemScript\n\n    // Sign the Token UTXO for the NFT Group token that will be burned in this\n    // transaction.\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      546\n    )\n\n    // Sign the input for the UTXO paying for the TX.\n    transactionBuilder.sign(\n      1,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    // console.log(` `)\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in createNFTChild: ', err)\n  }\n}\ncreateNFTChild()", "full_doc_id": "doc-72e687613e082509a01e484c7f56cbe4", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/create-nft.js", "vector": "eJwN0YlXFGUAAPBMBW9BFGEP2J35Zub7ZnYxpQemWHGs5Zk98UhFQJ/mERqmSJmE5p3P46Ei1+7M7Mw33zezoFnPBETxqEwL8cCDUBNTS80y08JK6/cv/P6ROuAbe8bXdPfcNw+z8zw2CKoX1VQlPBT/4OPZG4GX9NnwIFMk3GJq6U9xE60dEqQTaBJssCbhXaiev6T+ApxWbNkttIFM0BYGD3BxVTfxBrKInQftg0+CYaiFfKAUhfrCbDRRLECbtXfUcm2FXi8dRS8J3oQVMMAdjElDh+UY5gvhLrJtXwD6BZGerpRq4x2n0GJ6Rr3MLFBV8RU5j2q0gKR4y5nO5HX/FE4m14TX9LcAJnV6CR2md2Ivk5HQAVeqX0NVsLO98T7tgJ5kJqKFIA0+iolX6qUOPNtoDPavhKAWriLL8B3+D2u5soIvdr4LBDSanaadx/+CH9nbKFeuNX5wTkKXSCv3iEas3qRmkv1auN/iOpwZFQ0wM5TE+8QUFK7eoPnwCBm6JyAg6YDHDXqQl+neQIV7CSiyn2aoMBF+aToqx4cKxJOQMAuNp642OktrCt2Gq3DALAwuocdJJhwZbObT6WDuZ+QMjGbW6D3ZK8526ULoOZCKmsvuG7202ypvzkAZeifyWL2v9KSfSMdljzDOZVfSN2bgv3f7zOqq62ASMcBZrgxdRRUOiq4Er6EmvFU+EdOmRBk1VqSVLe0j2N0N3TFmgQbFxq52XNR/pd3Ztoo57ps0M7iuusg6Jw8M7nT5HF24m1Up6ELcIz0R5qFCU4fnzAwtyvoUjtWPwRQa5lxIwk0Q62Ne0JrBXHmLozPqzadpRThd/kxYwP2Gos3WsgKhiA50ZyijtTGRkdp8poAu8bDiA2STMOmt55jb5ZG4ibNzqfJHwirSzz5VGKJ+C1erS2k0vSu7FJtzv4cKo3Tdv5LWVY0rzVckLhqly/fUc0rr/9ttMgmU9r/bhej5LgKyQDacjNbqBfYIz/LKKXCmrZfRTenqDgh1XKO2SJsZv5E5LhaKMeYt6W55FPsPM1WJ1Acwy2KfJ8nbWP5HbQbyybW8xxzL5sFsrcL63Z8aCCGXK9n11Kmj7X6Fz4V2e8AYKoyJGZUwRWoXloWcFWFwJbfPHucJ44e4l4IcYRR5qP4trJM2VXLEaz/q/hCVgGRPvLcbzTV+x4/E96R78FR1oq0ZXJDXxjn7vEpSxEz/YpcDd/CNu54EcpjUUJ/Sjfwp52S0xR0u5ngEM8yxHhWXi67TAPCr2GR7lrcFJAR3aZvpk6oo72zSdcB5OF/9XqgSdbVBLyV/4jS63nWF6c05mEZxAvF1zvEUm99aVw1281X1BZrkuORuddVzXY1ckBEqrN7qZoiqfKDttEqMKNgYvEp/lluE5XG1fIwwmx/ewxEbK98S8micpMMO2Mu6zkVo2eZ9YwRqKf08NEtcX9m69WPtAXuNDqpx0mw6w1zKJnIRMMTno3lWz7JToLu7FEY7ymmUtQynC8/ch1hgnDG3aXeUFHEl6oKGbn0T7zQUM098AmaSJOc08aL+zHGR/650t8UGs2piQqfJBiagNxgT3cO0INz3XD+uSRiJPaR+91pBdcleNboz0k03rrHmuo7LR2KPOYu1AnWEuUTao8Z6ztd8SF+0bEI8XgDPqQeQAGf4O9Q/YwvVZziceSztAe1GuzfLG+F1EX/fEybr9emJZII+3TEcV1QfYnTPCf6ito7fFTxZPYcLE6ZgCiP975B4b6pnVNUVGrAzwM6V8MPF7417qsiNUH6iyfZmPNNWp62Be1EuSKdN2g54VPtLTeO39FkK3ict8DL/lGzCx4BPrzbz4bjAaDiLO4tflIPi2+42hNXt9BU62cxVgeM6HiF/ZS4eyJKp4sNgHBSM3cY31nTloFHL+kg7WKs30+n0hlDIJSn5JZj2wcVlD/CdijqFoMEJIWWQNo7WcrmkAWcZPfTF5D8DXaNu"}, {"__id__": "chunk-f33d23b7209e387030ddb437659fa49d", "__created_at__": 1760502707, "content": "/*\n  Mint a NFT Group tokens.\n*/\n\n// EDIT THESE VALUES FOR YOUR USE.\nconst TOKENID =\n  '961c6a9f40da97c032b7249493a0bf70944696bbacfd94e831f58f0737e2e9be'\nconst TOKENQTY = 1 // The quantity of new tokens to mint.\n// const TO_SLPADDR = '' // The address to send the new tokens.\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n\nasync function mintNFTGroup () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    // const slpAddress = bchjs.SLP.Address.toSLPAddress(cashAddress)\n\n    // Get a UTXO to pay for the transaction.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    // Separate UTXO types\n    const bchUtxos = utxos.bchUtxos\n    let groupBatons = utxos.slpUtxos.group.mintBatons\n\n    if (bchUtxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID\n    // and contain the minting baton.\n    groupBatons = groupBatons.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID && // UTXO matches the token ID.\n        utxo.type === 'baton' && // UTXO is not a minting baton.\n        utxo.tokenType === 129 // UTXO is for NFT Group\n      ) { return true }\n\n      return false\n    })\n    console.log(`groupBatons: ${JSON.stringify(groupBatons, null, 2)}`)\n\n    if (groupBatons.length === 0) {\n      throw new Error('No token UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const utxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`bchUtxo: ${JSON.stringify(bchUtxo, null, 2)}`);\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    const originalAmount = utxo.value\n    const vout = utxo.tx_pos\n    const txid = utxo.tx_hash\n\n    // add input to pay for the transaction.\n    transactionBuilder.addInput(txid, vout)\n\n    // add the mint baton as an input.\n    transactionBuilder.addInput(groupBatons[0].tx_hash, groupBatons[0].tx_pos)\n\n    // Set the transaction fee. Manually set for ease of example.\n    const txFee = 550\n\n    // amount to send back to the sending address.\n    // Subtract two dust transactions for minting baton and tokens.\n    const remainder = originalAmount - 546 - txFee\n\n    // Generate the SLP OP_RETURN.\n    const script = bchjs.SLP.NFT1.mintNFTGroupOpReturn(groupBatons, TOKENQTY)\n\n    // OP_RETURN needs to be the first output in the transaction.\n    transactionBuilder.addOutput(script, 0)\n\n    // Send dust transaction representing the new tokens.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // Send dust transaction representing minting baton.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      546\n    )\n\n    // add output to send BCH remainder of UTXO.\n    transactionBuilder.addOutput(cashAddress, remainder)\n\n    // Generate a keypair from the change address.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction for the UTXO input that pays for the transaction..\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign the Token UTXO minting baton input\n    transactionBuilder.sign(\n      1,\n      keyPair,\n      redeemScript,", "full_doc_id": "doc-313e46d9a2a12367f42e155fb0e878d1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/mint-group.js", "vector": "eJwNzXtUFWUCAHBjV7ROUILxEO69M3Pnm/m+b+ZSKhypfIUg5galdZQ1ZddK7ZjHOh1QXFNZactX+Vgel8t9zsw3830zc8mtCHMjTDPWPJUKaa2n4yqipuALDff0/vP31y+Mn1SntXe6lXBZcppUgPeja+SFZJEqqRd5j1hjpsMfxDT5PBon7Wb353HO4qwH6SSzF810PXQ+mgiDwln4kfuufwV+MN4UzQZbxTmRO6w1rxy/Rv4wcTJ3QDxLz+XVO/uNVLybq1VHCyvYjztL2AewVOnLfFjlfRT1i1GY5lwFRcYBpTOR4M8nMvI/IOP43iAv7dOXJmSUGk2iLr0pWOzccrqVciGpb2lEcLlbhqKRkPYqDUcFd9A6IhfQQ+IeOD+8Wl4PSmINTrf9Q9agWStujmaoBblP6C5+S69zDhCFB6Fn0AM0zDr9zckbnudavo7ulj5Cr8CjpJ9Uwz5rSF6Z+M/4DWCjPJaUe3m6tqkhNEALzYO5qxBPAtpo3TUXgSR+D/pZjBbk19JnkwEhLp0BD/9TotttumeUdhuVhV5E1fIVudZeJXe6H8JmlAINKwXcMcblA+eyslHbSO8297q3SS9ODftlIX5W1OAt7zWwiVz3t+bPQZ3uLv/TONV4MV4YTaGXrbuUHnJanwz+QRbro/nP+VnCsPd7Y7qvwVqlr2NfwH2xUrINzAv9Ba9B//b4ldZYH2zQcGRCYvWEcnO2XUZPKLu0wyBdHSAThZR4CZkVm2SW6HPFm8bL9/2VTbKWuZ8aaSw/ouaFxIVYim2Wh8LrSY+0RbrsTBenmnG7O7kZYUuH881HhSFSYbQJS0CWsV07buSI/XLx7jXkNj3vWRr6I5iqrqRcbGT8LusueWf81ISVYIMlGafsxcoBWIZewCfYe1avnclvtbO5n9E7GcWkg7W2puMAKhKHWNwa4wjSL/lHeL+6WP6JtWS84taZfwtPaUqXbkmnydzIOE89ep/IbZtGXUTYaHAGOXeCB3SLr+Pm+Mtcj3p3xj38J0YmSeG7xFX4auRr66TRLWxE9f5hONbNKYDkf3AwZ4b+uPEMXCEtJyuDS+Qich1d8h+Hb7On4My8QrbNqYssalmAHUOQD5Gv8ltolnxQDOA5oCzYLP0p8BlYiJY7ab5KaRdcFh+jqPBj4NnR5hu0zESlWoFtM0o446iUzP4qWAE2qPusTeyg3aA8Je2QzjHYXEpGoj1SqVz9+1updUg/6n8XxnKp4lrPDLc/x4GPx+egM/CGMhtzrE8YAYHfHc69qs3zHkZVgXpugPw/cYT91+pXXWNKIlOuslLgEDwWfYCec0556mgOXCFuFUv1rQUnzFptEWZO1DXNh7R6ZEd9tIVrwsWgyXgUfmctcLa8XSivJ13+Rc4hNoAj/u0sCXz+7nTde03i4ZHsT/QnaYqoa5fgs7gDHrNG/OtaHftQRiPKjO1k7co6/hFynJahvWZbcpMTTLvEcOxLzxPoG+4Y8CTD3orQiOxFc/lqN+ReZp96kHcB9xIZa+9tUs31gVH8GshYFc11Q6wE7NeANZl+jE8Zjd4b3nekKYka62m3I/mq9SX4NV5pficOmQ8p3UKFsADNML4gS6TrYjcEag83UV1IJfaGPTVvjziGDnpq2GHfBWsQl7d4caT9dfMbOhtdNHrlbBaUJ43fRrfza5FF6tmf0dzAsPgSuxm4H/crZbGjps9WVN6+V0vAx0BR/JZdJb8fuCOfbhkCq9k97fv9N+V/RVvU6oyftZLAh8o844Qx3Xyz6d1GzMekrkaHVsFZ4UJ2ie3Jnsm/Bp4TXZQlSXQ49jy+SetaOWGYFBOvXZrf3DZozTZ/ASFhg3VF7Mk2lV8NTqvxTpO/5d6AESnpdmiinW045E2nhHJ2BWs3apRcY4p8gQ7Yn7k+8xg5GiulJ+F9pIvecdagcnkHPSMstPrI+NBjpFh0g1fw5MAAWUov0OlghjPGitu52kn6GxgWqds="}, {"__id__": "chunk-228e78239bf9533ae483a38142860e64", "__created_at__": 1760502707, "content": "const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // Sign the transaction for the UTXO input that pays for the transaction..\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign the Token UTXO minting baton input\n    transactionBuilder.sign(\n      1,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      546\n    )\n\n    // build tx\n    const tx = transactionBuilder.build()\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`TX hex: ${hex}`)\n    // console.log(` `)\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in mintNFTGroup: ', err)\n  }\n}\nmintNFTGroup()", "full_doc_id": "doc-313e46d9a2a12367f42e155fb0e878d1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/mint-group.js", "vector": "eJwN04tXFWUCAPBjliYKIntBLtx7mZn7zTffPC6ixm7lMTQN368sTuUDKk8PFd3OqthTEkQtgVDe98GduTPffN8398Y5iaEgbg/atVUXyXZL8rG2aZjLakmPo6n1N/zO70PhbnVK+/nEHPT5u6fppcBhUXEms1m5pdrRphdgyGPD6cq/w73iGN7FCvHzOF114Q67Fs2OH46+IY8FF6SKLPHdcqNCam+YRp+B58U6o4XcTefLu73j847BtWoJa6zvp70tmzwFqFtLN476Jutb6FKlXAlyFwNMXAPfsc2AhwzknPJVipPAf9Ak63tjib2VDhv5KIrXc/VITrVRfr2L9DjrnGH5LF9hylw/ukXr5O9DIzlTn2uV0yq70iubh8TN0EtuoP+KhSTT8NuL8E16Bhn6BpgVDRoPoko8wZ5HZqgzeF6rIku92oTuxAbCo7C3D6wQ16GVdgPeJg+ZA6CE/zI21zNbOedc899mP6EkspymkVezoTKdvGJViQarEIsDZ8AJYyGtQQtYe/s36Ih2n7yaW0s7yERDGlMojYp+y9dKR0EWhY0baZ92CH0INO4Et5G8bxU4g3AhyWfLyARSSYfgG96RKDX9z+D+UD4u9tUzJ/hSfYdc68xB92i8PosBwxVbQA6iYToYS4XdVr+9QllunuVOxW7HdoZKjOK2DCd/+3PRKuM6+Iq/pPxR7Uv/Bk3NHCH/GF3R8Jm7KCdk/eh0snS138wUT8PD5rfC19GimGBEjb0sEM3CBQDYbmEgPjZsgBtt+zAAm+Sfw42yLt5jfgKSgeYU8+nxV3AKbUJ/oUQpI7eaXvd1moWhvSCDbIEN0aTM92A73xVCzDF7xSloq3rO/AOZLSzDEkobf82yg7+2LYYH2W4V+rer1eoP8cfxTppKoD5aHMsXhXVw05pLKF8ANqmP2NVstLPcPV90BzXlTWka+yo6DRdEn+Uu2oKL01jzsNMqLucWmMGgrd8Rt9id9D1un3uG9L5SKVYTKpVpT/Aj1PEYto0jV+B2ZQ9EsU9oplElrVbmqUMsPzCz+Ul5l12fWVB3XORlHynWc/iRQYRKOQRu4n96D8IxtCmRzDcGk9Ca+lP7CqMemJ21XtZzDvircfvErgjMXY1eRVPjli1KnWK35yHtReFjeFoSpRa8A/8NZSlee2Z4fKTE7xEexZehW7tOy1iPfVWcoaYE1tOzZlFsILbQ/IK74HsgcED/VfDbIiodvb8NiycTXWBIqHH9C6VlbdE8gTg5BpCS0gLVFKkGPhhZ5E5oB/Td9n57P200a7TR1vXm+9EXrS+jbaotJIeVyCOZsxze5wVFe/fAPPUX/dGGWuUGfStuNX9gppivhcdZe9AhVAFsc668g7UkSkBnKKg/gJfEH8aL4FV/hAzSo55R0CV2ud8Sl4GvW28RX/MudkpV4DzluLPONPCn1vP4qd/H9LJe7TyZYu0l/0C3WX58EdvR9neyVGrJ/ghdAj5lCVsFxgodqVfVbbGLbE68yUy4yzIuAVB3xk5Lnkq+k+ahVWgMvkI2sJX2HHQikmfeEbbKydLEEblSqd3TJtnj4o3xVvw0cpGXzCLuseyYdtk47h+UhVgOLslKVab7n9TWc4tDv8Qf52J0IKfbfcU8Hf6TFbd2Oce0ePAhtS/hY3/FeUL575KX8ZcaVRfyD0fzQK31Jm2UixWBO2fwAUv9QHmOX5y9MXRZiZOfcVKoRFqGn3YCfqBN4nrMTa33YpZwxAuwny+FfLgW/xDo0ja3rNS9EY5r9fNKg9Jj9bFcfq1nAdtpidQVvC+UD/uh6L8WLcYvw630MTQZdUnloFqPea6LT5EniCTqbXf0UWjAM4jKMv5vrdFvohJwEh4Pb7YEVkO/C7+tz3eGzGfsVdGOhiYt5jkCjrC76LCTTUyckXnWviIxY4N3M1vKvyCdjFiggv4Pn+N1ss2w9CR1OHfA/Zk/DadEPyZ1kZVWDvE1/QZa6aEt"}, {"__id__": "chunk-9808247404b09dbb8397ae22054b7291", "__created_at__": 1760502718, "content": "/*\n  Get the parent Group token, given an NFT token.\n*/\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\nconst NFT_ID = '45a30085691d6ea586e3ec2aa9122e9b0e0d6c3c1fd357decccc15d8efde48a9'\n\nasync function getParentGroup () {\n  try {\n\n    const tokenData = await bchjs.PsfSlpIndexer.getTokenData(NFT_ID)\n    console.log('tokenData: ', tokenData)\n\n    console.log(`Group token ID: ${tokenData.genesisData.parentGroupId}`)\n\n  } catch (err) {\n    console.error('Error in getParentGroup(): ', err)\n  }\n}\ngetParentGroup()", "full_doc_id": "doc-9808247404b09dbb8397ae22054b7291", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/parent-group.js", "vector": "eJwV0PtXFXUCAPBQSRMIFEiu3Me85/udmYtXT1t0RC3cyh9CTcBHphbmtQ5hrHY6WCqk1QrkA7wBl/tg7tzvzHy/M4MHssAH5jkpkZyO1UrHdNGkVtc12chHq6tn3foTPp8esEna3d3QOSatdZYa+1QYqbZofEs5gS4yCnNNd+PtXJ+Qwp2Lvyic5MbrD83oEpfm+5mb9vKOIbGP/ZLJ1MbIHVAmL2lPMWZHv4NBbzu2LYM+YcQK3GqVMpVk4F6umJbxDU8ldyKa7T4yuS2WUZDu70IH/JfkOrQczRWWAFtvSKwBlVIuTJJduI/04u3qLOEy3KOHfekxaso9fYhMMh7GbwUeVkbod1yo43FnoXTAG2u1zOoE1i2kmiW4GQnCefacNCPbyw2bT2lzUZod82w2ziYCeh29EcwjV9nJWJKHRCDV47HpG2E+btTj6mEtpzXpqqKbrFHwvrAG3uZhPKgGrL+Bo7gfVFmr7R5YoXFaQDibuEG/Yt+H+cZdWA675KPCX+xhb2bHpP0/g9nyf+FEWGF3Gv9LrvN+JWq+VLDYc4lxwlOjszrH+XfAbjSFelXHJE3bgweZkY4F9kE915qHp3Nr9TVSzh9XkXOxRcIifJodSU6SDiTPiMPMqBgmDb637T51PLhhb7Qapx0Tc023fDX6bRSzV5qyAcPslBbZPtLDFgnlxjTwLyEiLhPbhVRPABZHX2BKrBNiQ6K085QJwUBoppnCtCQXtC6zHuO+11OMyySDz9d2S4fIMjNtf41V7HxMrhvv6deYMs7DH4mueuR3b2zMiijd6AHz1UQFtd3smnZAr/nIK3SEf1VaWov0y3IRTBGDII4M6xsz1beK6xLL4Pj4VmsG/KcxLOlMur7N97pQ7K0kP4GL4jEhRckIP5b4GkeMJ/VMtmX3BhwUsxDrDEkutAAE6Caz1hPltnF36KOyyvXh+XA5uUqIsZP6AjlggGax3xc0d2o/iA/l10syaXBXsZvzNuorAPa0o78ms/3LXaMwmhdgTHSP2wDGtGWkyZmdrOTXJp6S/0yq5C/YIB+aUoHTyFzwG78H/axCbSTzjHhd/4dwKr8ZStJFlGrPMV77aAXcAdc5KyMfSGnuWu9tbmJzuqNIZYnFBS0e1n1BLeTC6s19p/W80BkFUyFwZPqb9hx+HBiTaPMq+dD3ZUcRG9SKFZf/zeQFs1/bAusKBuQ7pBs3umLxgehe91n+FAjoRuIYeo6/xW3Sf+tYj/vRbLglOUtdC3KUrxXd9MUXyCud1fgOHAIan8KU8ozwiGumfs2aaVyXd6F0djXMIs/Ej3vHIqXtRb4iUmj+neLBBvdzQrBgMt+MD0qH8ai6kCSTCyPZeg27XrzgzmEo4zPJ2/m69UDMYubFX1O3Ob3kLj1dh2iSvki+kAzF/x2roHcpVHKCMAPWoc+F9nC/2G39QlpQBlcSCwlTYbnxrP+GeZitSR6NlegzrUY1gPZ1HNSLjXpxKwjLT5AxtVfMTfK0ypQ5w2YWwzEc12NGE9PI82Sw7W6okbnN5mjn1XZyi2wGhexb6BD/EidSD6IBZg8jOplaoXPd2kQmKlTbXSoVxvUM6j9aMf2y65B5z6rVIiB7bzlUorzvR/ypGXI8cFjrES7VfYV70J9wtv888EtLOoO6X69ojSEZfsB9CwbziTr44USlnrThEW85zKD70fECVWnm5scOxlahYsWDsvYX5j3ePiWe5QzKtcLH+A320bwishcfZkPop52tidLEM+YhQPmr0UprMR+nV4iftY2ntthLM/LCqVQfKbVewZ/kbcIbUDW1I35z6nu58xXCPN2y3vUGzgf30X3ORr34SpYIKsFJ+11w3D8KGsybuIRMUKqlNrGQXDEXOnNIHZgQraSX4LnWFi4XjwM/SFWwGdfaLxvfkGzybHMud8kMoXX0PGOFuI863nRasLQ2ditbr9ag1XwNbPX7+ZOUQfy59+jv0TsadL7D/we4FKM+"}, {"__id__": "chunk-96da3b76413f947d457607691a74cd2c", "__created_at__": 1760502767, "content": "/*\n  Send Child NFT tokens of type TOKENID to user with SLPADDR address.\n*/\n\n// CUSTOMIZE THESE VALUES FOR YOUR USE\nconst TOKENQTY = 1\nconst TOKENID =\n  '961c6a9f40da97c032b7249493a0bf70944696bbacfd94e831f58f0737e2e9be'\nlet TO_SLPADDR = 'simpleledger:qrxnq2ta5fe3whyfsekfz648c48tzd8urspw8f3h07'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n// console.log(`walletInfo: ${JSON.stringify(walletInfo, null, 2)}`)\n\nasync function sendGroupToken () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // Generate an EC key pair for signing the transaction.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    const slpAddress = bchjs.HDNode.toSLPAddress(change)\n\n    // Get a UTXO to pay for the transaction.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    // Separate UTXO types\n    const bchUtxos = utxos.bchUtxos\n    let groupTokens = utxos.slpUtxos.group.tokens\n\n    if (bchUtxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID\n    // and contain the minting baton.\n    groupTokens = groupTokens.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID\n      ) { return true }\n\n      return false\n    })\n    console.log(`group token UTXOs: ${JSON.stringify(groupTokens, null, 2)}`)\n\n    if (groupTokens.length === 0) {\n      throw new Error('No token UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const bchUtxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`bchUtxo: ${JSON.stringify(bchUtxo, null, 2)}`);\n\n    const slpSendObj = bchjs.SLP.NFT1.generateNFTGroupSendOpReturn(\n      groupTokens,\n      TOKENQTY\n    )\n    const slpData = slpSendObj.script\n    // console.log(`slpOutputs: ${slpSendObj.outputs}`);\n\n    // BEGIN transaction construction.\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Add the BCH UTXO as input to pay for the transaction.\n    const originalAmount = bchUtxo.value\n    transactionBuilder.addInput(bchUtxo.tx_hash, bchUtxo.tx_pos)\n\n    // add each token UTXO as an input.\n    for (let i = 0; i < groupTokens.length; i++) {\n      transactionBuilder.addInput(groupTokens[i].tx_hash, groupTokens[i].tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.1\n    // const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder", "full_doc_id": "doc-d606a96aafa28b55b3249e9b70ef5dae", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/send-group.js", "vector": "eJwN0Qt3FNUBAGDqYoQSpSYx5LWPmbkzc+/MbImxIsgKsYQQRB4Nj/RUCaFHARuTcIDDS2uigFgkPBoCZN2dndeduXd2NtGiiICKIFjT0ARJ9CA0DQn0UKtoiIBRwfr9hc+S0grrvcnJB8VNbhYSYU4gw8trVeCgtC20k82jS5n2ghkQSILerc7VS9xj477gz9IK5Za23SmTtFAl2x/Kbj0TSsCZebNorUFgNVZTh/RoQYd1qZAoQaXNHY6aWg5RpbUSCXO0nVQIr2ztCkfQSeZZZZJi6Z0FPphwy8zSoA/O4+PcQHLL3qi9VXTsZnTLbPN28BfVSvHP+0Q3SQftcOEN57IVRT38yVg9THcuGCvMekmkx5t6c6vcccF/o7A2wD9jlO/udH/j9uJass5ICFloLPeTLcIymu+KWgMJjw0pXfbXpN7IJpvJbf+y7Y+BpfInwiZjY8s1sSx+Fo60Z7AT8N3oHq2En22WC5mJl0nYKYInxGK1Lr6Bn0TLUY9wlN/JncaPyPPtI95YoVt4RXxHKLbP0tsJTp+CnpNeD58BnZKifQzXOVe5afLfwHlvtPoHPLllDm1FN0MZWMCLyKvJNMUfrYJ1FACV3wD/FPsMy+Cz5I9wWbKPRPhNxnF/s2jQfKLDFitLuyL6cJeVCT8BJ5XTu5a3fJqVQYa0F+3maHveGPKReQcsEepDPrQbBtUd8EmXy5DxQ1nVzv2e6d6NirxX9cXKIdAngKaVibUFnbjROcTVGO8q04wl7ulUkOaSfjw6Nof9SvzKusCXwMO4CP2WTdHunH5SrYeTEZTFrAazrTR7MHoi8R+1HNwCi+BGWMk1KMc4Ztd4eof5RoywEXEt/iI0rN5l94Nse8F9HNtlzcVdXh/fg25KLn/GumqvcjpCVXYM5MFB/JSukR+Cn8s+6yZfqxnJl1ME/CVno/CRwtNB08fs9A7iKSP+6HaJmyTGWcHs0kdYfc0v4vRAlXNKzyWzs7egbfcdkPoF2/mnWSFNLygVpxrdqTLsclXCHIS8iP2p6kMN8E1hAKfDLJIXHWWP4V/Cddb9MEU77QnwTvewYKo/xbtpgq9B262pqSQzU2tDB9EV2A6Ww6e5Jr4L7dCm+jOtRm2PPCpzvHyDMlIclqQXug3iQvQ6XQXH8dfI/8yjqBwq4F+klp3G3BBr9n0o7WVlcgovTMaUtNwRufO9j83M2DvoXMHnYo+bK8zTzvFzuQ4+BnQQBcfcLRwvpjsHlcXij2IRnGf3xjfLYbtej4JnQ7dRKDZNyeZHk6n776SXzNXh681+fACsj6eUfvgtHml4yd+RWrLGeENYB63YVaXaOOTs4/vIr8l1d5u+2d+Lx9lPGBeFzfxE6peOB4q9JfnfojbrNJub/Ks7AXQS5Ll+XZ4OMtSxcT3nnLlQrsMr2TWwDNXw6ehde6DAkYacnwfRaubh5BL+G+kfLkcfkZ7GH6Y0HOGOOJeNBQDzxfsr4C16As8yz+mVUmHwmdSvaCkuFR5EvwyW2sPuFHux9pbo194WftjdoB9urdDbwBqny/kOLFIDZCi0gg7oLU6MrHLvpeeNIVRCjllt8HlmPoybLzBfMovAsP0AGhKr97eHFbYHTbT+G5zonN9To3XAp8T39dlaMOEIs5g9yrrWJs6gO+SYs5Rn6DDz5GtFbg+7UnjBvmQ3gtIwq/Q6Y8KjwmtQNVliTaZHYIt7HRd6cb5Ey3HLQ9fgL/hacgCcJxNbH4I+ZaUbQRuEo9ZVxEjFfp8dAW72evYS28SomfP3P0pl/gFnvL/DWg+nmHEI5EYhEgjArVJ3YGPjUcHwzw0spwe5i+ADd1IyK+Cw0IqjBWyd+J4+bGuWTETVcEbCC06lu9Z7W21hEG0ATyR/j9vp4wGTnhKWmZft8V4edsiV4HLy9/wPnNZ4lfdN83PidPu41UC/Ny6L/WROaAZ3l/CSrBjY6cx/TO7T0400p/a1Le7/Ab8bqn8="}, {"__id__": "chunk-bba3435eabe824ed4a9ed8c9a3342c6c", "__created_at__": 1760502767, "content": "console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    if (TO_SLPADDR === '') TO_SLPADDR = walletInfo.slpAddress\n\n    // Send dust transaction representing tokens being sent.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(TO_SLPADDR),\n      546\n    )\n\n    // Return any token change back to the sender.\n    if (slpSendObj.outputs > 1) {\n      transactionBuilder.addOutput(\n        bchjs.SLP.Address.toLegacyAddress(slpAddress),\n        546\n      )\n    }\n\n    // Last output: send the BCH change back to the wallet.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      remainder\n    )\n\n    // Sign the transaction with the private key for the BCH UTXO paying the fees.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign each token UTXO being consumed.\n    for (let i = 0; i < groupTokens.length; i++) {\n      const thisUtxo = groupTokens[i]\n\n      transactionBuilder.sign(\n        1 + i,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        thisUtxo.value\n      )\n    }\n\n    // build tx\n    const tx = transactionBuilder.build()\n\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`Transaction raw hex: `, hex)\n\n    // END transaction construction.\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txidStr}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in sendGroupToken: ', err)\n    console.log(`Error message: ${err.message}`)\n  }\n}\nsendGroupToken()", "full_doc_id": "doc-d606a96aafa28b55b3249e9b70ef5dae", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/send-group.js", "vector": "eJwN0I9TFXUCAHDN0AwFFXz8em/f293v7n73x8NEofN0iim7wQr8rSXowfMXBqU44zkSgpaOkKMn+gwevLdvf3x397v79uEvxrAwGynt9PQIzbQyU87hbKy5vMzB6/T6Dz7zGc6dLsztyujqFRe7O4wqcX28AG9PlAVnCKNAS2CbvIOew9xVMahhBnEVOGf0gl2KxymFfveE8xzlakfTlk+KuLrvZzxLm2zOpWXhrF9wF7udcI4x6ZkFICo87zTHi518+gZTR1+gTmLHmuo9nzgvhQUfafO6VKmdcXZIbWqpslsY08Ew18F1za8n5HIc19KE38JF6lvGh7771B/ZI/YttxpPDN5kJzoYXLIv4JellYljnKTO4LqiHpslZTUdfqluNp6EDfAlpSn7q3gBKk94BCe6SvIon3j/LN7Th9FIJyq3SmOlGdRPcjZqT96zv4VjVS8x/v1/je+wWplH4q34ALww/mF8+YFKdgp66L/rbIZ5tmsPoUvGJPil8T0ayX9kp/2uX8MB9lf7KIeNG66P2yF8LRVGKDcLjyNGiXfAAQbkZeZcBKwRwufwYX4b+z96nYXpcme0l0jMBwHltPsLPmPvtb9nFpsl/GqUxaaCMv06fU8u4UznohBwZlvZfNTb64vFbltFRrO4oa0b80hCSzvW8Mcyz7GhA3twjbbP3mnZ5qDRkbXWPg68qI96gzjqv9l8upOhGecEWhFvBJeVwuSQXSTNt1bwlPiz7xGL9Dout2N6e7G7NLCJeIK8olxWS7vWgfe5EdaZGGGvIwfAi8IDKqH91lpBtyVem4TtrdpjkMkXOwKlo+NEvblW7YqHGTM+3dfkq8hbJPRzU2M9ifO6yPUylfAF56TZ5Fmi9OS+RL+HtkXHWHfhoBmQbop7BEUsc5vzUjGBv2Z356TJ9VYFU4Mihkb1xPrFNFLG/TY9elW0kmkQq8BPuDXcYz5GCfLjCZUohXfwBWeAu8ze8ZHOffx3bxPmI83e7yb00aOBB35uazlHpBJ6UKiNneWWqSYniWQgaaSYOHe2ulm4L47B6cEfI4iLGAdRuf4ORkIK5k1x/3EtFXZravQQbiUOCk3+Zcl3lZC6iV/G7jRmgXrREB/teoUcjSjzCVXKKczPAL3wbWea9pn6QO737IWrYRf7FHOc/A+ucUbBecx1nNpxHqX4VKDBCXkr8mut9VaNvZEfEG/wEL8QvZrzHPYjkSgPbIBy4DG7St2w+3Jai/IJ++u4H8BV5gr5IXwKjgt+Kt1yy/gQ+1dfKL6fGzIgG4kSMIstdf/h9NkZnaelf8qrYIGUYo3gesQ0vB0MEL/guPEs2k7Vqo4wLHyG/xv5gDcOLk3+Bd1J9OUEmT+hgejvO4Fr+jgo2sPuTeJzdYSn2up2q+1NKMMt13NthZlC3A4XESPBKaZgFBEoNNLxan4N20DWJt8wzcAVNN+W/IfbhuSnpSnZ+4wS+w/C6kOu+2+3inpR3cNb9CkuBRBsu/M8M5toNJYH3975wK2z+/YHmH1ql1iHQk5NeL3RwU4WBgXemIPS3Ub7dWmhmbJvQ+wrvhZoVEjrJ7diRakw48nbxnf8ycQAM01+Ei7hSwOp7QvhWitbP5c7j38oz5RS0WPEJdeTTydD/LfWSK2Ymqluwbed+vwt3Luinbhmbwzne7+w9vOP+F3CM9BDTtUPw1eTgm8tOAJXCjx5NdgdXCbOcqpjl4jG/Gz/LbNYLQFb5AZnJvTw3XSG0xHoM8JOE7+VXRE7xeyUh40iaSLzJlWdV2nUBBoZMbhX4JUfdQRIHA8PW0N6p/qpDxMT+JBVqC06OAVW2d/oi4UFZB/H4tfkjUykU7QK6BzyLF4gCPo7Qgv4m78enAjfCdSJ5UYYj03OM2/krLQ3ZRLORfIhB3A7nOZtgbsSZebGxDWUBtKpRU4F62lPJ7faCgKwSM/SLmYdym7xd+JMfDZ2Db4qtVNjFVqZT82zxjtHJjegNuP/vN6bXg=="}, {"__id__": "chunk-f0942b4c635b0fe22038a600808323ca", "__created_at__": 1760502794, "content": "/*\n  Send Child NFT tokens of type TOKENID to user with SLPADDR address.\n*/\n\n// CUSTOMIZE THESE VALUES FOR YOUR USE\nconst TOKENID =\n  'fb4b972328199e4538b93760ce4598b087ccd5c71e459c6384dc2ebc20b743a2'\nlet TO_SLPADDR = 'simpleledger:qrxnq2ta5fe3whyfsekfz648c48tzd8urspw8f3h07'\n\n// REST API servers.\nconst BCHN_MAINNET = 'https://bchn.fullstack.cash/v5/'\n\n// bch-js-examples require code from the main bch-js repo\nconst BCHJS = require('@psf/bch-js')\n\n// Instantiate bch-js based on the network.\nconst bchjs = new BCHJS({ restURL: BCHN_MAINNET })\n\n// Open the wallet generated with create-wallet.\nlet walletInfo\ntry {\n  walletInfo = require('../../create-wallet/wallet.json')\n} catch (err) {\n  console.log(\n    'Could not open wallet.json. Generate a wallet with create-wallet first.'\n  )\n  process.exit(0)\n}\n// console.log(`walletInfo: ${JSON.stringify(walletInfo, null, 2)}`)\n\nasync function sendChildToken () {\n  try {\n    const mnemonic = walletInfo.mnemonic\n\n    // root seed buffer\n    const rootSeed = await bchjs.Mnemonic.toSeed(mnemonic)\n\n    // master HDNode\n    const masterHDNode = bchjs.HDNode.fromSeed(rootSeed)\n\n    // HDNode of BIP44 account\n    const account = bchjs.HDNode.derivePath(masterHDNode, \"m/44'/245'/0'\")\n    const change = bchjs.HDNode.derivePath(account, '0/0')\n\n    // Generate an EC key pair for signing the transaction.\n    const keyPair = bchjs.HDNode.toKeyPair(change)\n\n    // get the cash address\n    const cashAddress = bchjs.HDNode.toCashAddress(change)\n    const slpAddress = bchjs.HDNode.toSLPAddress(change)\n\n    // Get a UTXO to pay for the transaction.\n    const utxos = await bchjs.Utxo.get(cashAddress)\n    // console.log(`utxos: ${JSON.stringify(utxos, null, 2)}`)\n\n    // Separate UTXO types\n    const bchUtxos = utxos.bchUtxos\n    let nftTokens = utxos.slpUtxos.nft.tokens\n\n    if (bchUtxos.length === 0) {\n      throw new Error('No UTXOs to pay for transaction! Exiting.')\n    }\n\n    // Filter out the token UTXOs that match the user-provided token ID\n    // and contain the minting baton.\n    nftTokens = nftTokens.filter((utxo, index) => {\n      if (\n        utxo && // UTXO is associated with a token.\n        utxo.tokenId === TOKENID\n      ) { return true }\n\n      return false\n    })\n    console.log(`nft token UTXOs: ${JSON.stringify(nftTokens, null, 2)}`)\n\n    if (nftTokens.length === 0) {\n      throw new Error('No token UTXOs for the specified token could be found.')\n    }\n\n    // Choose a UTXO to pay for the transaction.\n    const utxo = bchjs.Utxo.findBiggestUtxo(bchUtxos)\n    // console.log(`bchUtxo: ${JSON.stringify(bchUtxo, null, 2)}`);\n\n    const slpSendObj = bchjs.SLP.NFT1.generateNFTChildSendOpReturn(\n      nftTokens,\n      1\n    )\n    const slpData = slpSendObj.script\n    // console.log(`slpOutputs: ${slpSendObj.outputs}`);\n\n    // BEGIN transaction construction.\n\n    // instance of transaction builder\n    const transactionBuilder = new bchjs.TransactionBuilder()\n\n    // Add the BCH UTXO as input to pay for the transaction.\n    const originalAmount = utxo.value\n    transactionBuilder.addInput(utxo.tx_hash, utxo.tx_pos)\n\n    // add each token UTXO as an input.\n    for (let i = 0; i < nftTokens.length; i++) {\n      transactionBuilder.addInput(nftTokens[i].tx_hash, nftTokens[i].tx_pos)\n    }\n\n    // get byte count to calculate fee. paying 1 sat\n    // Note: This may not be totally accurate. Just guessing on the byteCount size.\n    // const byteCount = this.BITBOX.BitcoinCash.getByteCount(\n    //   { P2PKH: 3 },\n    //   { P2PKH: 5 }\n    // )\n    // //console.log(`byteCount: ${byteCount}`)\n    // const satoshisPerByte = 1.1\n    // const txFee = Math.floor(satoshisPerByte * byteCount)\n    // console.log(`txFee: ${txFee} satoshis\\n`)\n    const txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transaction", "full_doc_id": "doc-456f61c8b68f3290611c329679945d35", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/send-nft.js", "vector": "eJwN0/lXFdcBAGDbIidBgyAii2+Z92a7d948kaRkMWJJsUZcYzRoq8ZKFBeULCA2mLRG3ymaHHuKPgKPtzDLnTv3zswjag6Kp+EYqx6NIRIjsQUXNBY9xi2aY0pSleZP+H74npBTJ73mpNol4El7I8gFs9lr9sr2Ab5OmuZvEMroWubraD4YDa/oJ1rfVrJoHgq7P6Y1AQ85hoKBGob6XFxVcrdvF+xTRtLZxjq+zrzlNKAp/nzsLXxePiFJdHv23dYCcjCQF0gG/0FukgfCYn1XcDy4xffLowMfq9Ny34QcnRGuy/slmM0lfWtsdXs1UkXHfBrewpvtZj5gFAMnpllZlMWbCm6YH6qnQQYYq94W/oXTzTnGXniR5ram+IqdkO8snMJkCFf1ixkTnXQ7Ypy0ypvGgv2A8htwFcT0I5psuk0OZS+XFxhvkaNujXSYRZ4YXy3elpaDxsS7aq2AmOug1DzFyNrj8OvEUn5V20RuuO0K4XAHXwrWqvui+4VKaw70uR3xQ/YL4pFexCOS3wl/5d8WQ+xMMmRNjK3QQ9IPcGOQ467CKPLxO8w7/oeBZu+PzveeeXicOkzSAn3+N/Rk7BSVaYV8zZ0qPmu1MuOF9eJYdab5W7DRXg+fdEbh89w5ZMT7WN46ZaRBagSxBc7gPmO+dMRTIK/w/eRKzS/BOS2d5mXPp/FLxirlkvgaGOQGwEHY1RaHv6YvMH8xGpSZZJW90y4AZVZvfIOs7gyCvUx7jHG/g5eTufz5xATZbTxlFSdz7HfoJ9jrfuCTOI64uH74R3wSvMvX0j+4Mq0S5a71inTG2+P5MynGIb0avZ+/jD/N/ApMh89zn8lVbHnUTY8rk/V6dq4YNsq8ldF+fIyLoPXq75sXIkv/TfITYREkUhrIRs+ReaQ0YxuaJT4Cl9CrLRdxl6sxANQKcbP+O2thsl54KjqeD8nzzP/qpfyAM6QdjK8mg6AZbiIDzB3te1SdCbUIN9W4oW8yF8WviReU1dAGLeY2fYG00FMOrES4vQjNZzt5CiLOATxCnykNC01itXEGHDWf23kAnXfFsBKrAy6rXSsAaXav+MCzaXe/fYC5KryMFOdTrxVXAAMfhwmhns9hU/idcL6Sk/tQq1U75H/mZcv76TjohgLXSipANxiBN4gRXqRLzPHwS3jON0z2+6JcAbgbL5BnCVfwSgSsfrm0aWripnNc+1ydBNLZdnGPVc7/W+lgH+N7uWXCZrFeVK1dzENQgdxBi/PD2fAQvp6/Rj6MN7QMgy+5InhZDQdSuCyieW7QPShNRnkhzItvRebKt+DLZDtaZN8z2oxIZFAIwVeVv8vN+D8GFQzrAVlNX1KLPJ/jsPo6ep/bwt8hJ6V1LaOdF8O9oEdbwg1ZJdasUWcMj3MiZ1lgi7/EfY85NiFFG5RumgfZpXwV9Al7pSPmVn8UrDA1fA9M9h+2p3NbYaF9k/wJXjCXtK9HK3dkk7NKl/sDMbMtJLZZ+/BgFCo90oB3V3IkPYU7QC2c7isweqwuMx5bBesT08CbOUfQ1uQ69C1biWrMS95R+Wuo/vOwjPhHZIW5xuq0IqgB3kWnMSeudadKLyg17D72aON1sgV4/SXpF4KFPreUoxcmYsZ70W0RFkwSarQP0DfNFfx9pijwU3sZn0OXSiOJKTzCDezhxnv0PtfHLcez0DzOlPMkgbQG7werpUxrt/EMuSKdI4uNXmtICKjFzn0uVzouLCaTxXTyKGnyEdhvqVKPkKK/JH0FmTEz6AwmVb2aF+Q8vj1KY3SB2c0uNn+MxbROMfyzd44Ugn1qDdClvcw4VC4cUrobd9A8PpNNtThSJvyNfUUbA3/hHc1ntQ2RKcYYo1sbQPOFQpxlP+FYylnfIep4SuyTRiWtc1XSRcJ2o9Z0JS9rXeR/vibS7XrMmIBq7apoobRE/waJNJL4gn0Dr+QT4bPgafmw4TanKvlyA+pX/WYnEuj/AQXZreE="}, {"__id__": "chunk-dd532b5b92be0823a70df636a0910189", "__created_at__": 1760502794, "content": "txFee = 250\n\n    // amount to send back to the sending address. It's the original amount - 1 sat/byte for tx size\n    const remainder = originalAmount - txFee - 546 * 2\n    if (remainder < 1) {\n      throw new Error('Selected UTXO does not have enough satoshis')\n    }\n    // console.log(`remainder: ${remainder}`)\n\n    // Add OP_RETURN as first output.\n    transactionBuilder.addOutput(slpData, 0)\n\n    // Send the token back to the same wallet if the user hasn't specified a\n    // different address.\n    if (TO_SLPADDR === '') TO_SLPADDR = walletInfo.slpAddress\n\n    // Send dust transaction representing tokens being sent.\n    transactionBuilder.addOutput(\n      bchjs.SLP.Address.toLegacyAddress(TO_SLPADDR),\n      546\n    )\n\n    // Return any token change back to the sender.\n    if (slpSendObj.outputs > 1) {\n      transactionBuilder.addOutput(\n        bchjs.SLP.Address.toLegacyAddress(slpAddress),\n        546\n      )\n    }\n\n    // Last output: send the BCH change back to the wallet.\n    transactionBuilder.addOutput(\n      bchjs.Address.toLegacyAddress(cashAddress),\n      remainder\n    )\n\n    // Sign the transaction with the private key for the BCH UTXO paying the fees.\n    let redeemScript\n    transactionBuilder.sign(\n      0,\n      keyPair,\n      redeemScript,\n      transactionBuilder.hashTypes.SIGHASH_ALL,\n      originalAmount\n    )\n\n    // Sign each token UTXO being consumed.\n    for (let i = 0; i < nftTokens.length; i++) {\n      const thisUtxo = nftTokens[i]\n\n      transactionBuilder.sign(\n        1 + i,\n        keyPair,\n        redeemScript,\n        transactionBuilder.hashTypes.SIGHASH_ALL,\n        thisUtxo.value\n      )\n    }\n\n    // build tx\n    const tx = transactionBuilder.build()\n\n    // output rawhex\n    const hex = tx.toHex()\n    // console.log(`Transaction raw hex: `, hex)\n\n    // END transaction construction.\n\n    // Broadcast transation to the network\n    const txidStr = await bchjs.RawTransactions.sendRawTransaction([hex])\n    console.log(`Transaction ID: ${txidStr}`)\n\n    console.log('Check the status of your transaction on this block explorer:')\n    console.log(`https://slp-explorer.salemkode.com/tx/${txidStr}`)\n  } catch (err) {\n    console.error('Error in sendToken: ', err)\n    console.log(`Error message: ${err.message}`)\n  }\n}\nsendChildToken()", "full_doc_id": "doc-456f61c8b68f3290611c329679945d35", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/bch-js/nft/send-nft.js", "vector": "eJwFwQt0FNUBAFAMKQeQQggQNtnfzOx7b+bNzEJoCWJPiYUkWiKfIyHgkYCchAiU8AdzDAVEiAZKFUiQ3WQ/M7tvZt6bnV3UtmjQAsGGyEfJoaGCliOfCFrFH0IQ0PRev/QLcmfWpp/ETc4l8jd5CthLtzhPq4PUBfEmbRZZ5x/h+XV8o0DQCloL7PA46LP6WDm2UqdoBbrIFrmLxJJMt+/H5AX2KNsaOY0nefY5ZaxDnMQaxzeJ38rrUzM9NawO3hA7Ub7Qbj5jTEuK9qzgC8pu9xzlvNpAIs7Lqo9vjIxSD8c+RkWBdv59rSiZsdeZIfWKvsPoNX/K6RH7xTHsYuol64ISBnOsG76wnU2nY8KGSLGW5ehkZBh9OrqOFODfmxujvZDHOaRqzCKzJz7QrsWn+EqcIIX8MvyK/pUx0ewls4Odaq//atJN5zsfGo1ylT8vthgOk8LmxRxNbor+R75ruKJ9sMP1A+/lv6cviqo916i2xpG/onJjlZmLa1OncDe+DZvRCOcM4qiZ3gqOyYbapVc5y81n0DycgX1C3e7jgQroZUPYdvtdaa4kcs+SYrgoXcKtdF4Qx0fuOFnGa3bG3gSXGAfxI9EGuRPuTzwFUuYQ+SN2QJnCZpMAhtH3tEMRDx1+4JhaHD2bqtdPJjqMDiUv8TUs9e6gS7Rr5gbyvSlYowLz9BB6EHs98A34hFucGNDSBNK0dn9bdKiEtZAz13Ypt+kN6bJyPMDDOrJczIzw6J86DeANOC5vquVpvZx+RNDk6mTzgUPMCfwJdkkJVGMO4Jfm86lmbmaqIjEHviYF2OeRduNh17/oOXM7fxRMTbRyIf8mrgT/ET4wTGeeMBIRCaIdTh6JDSfRX7XEOTP2j1g/W4AQfUw5L6+Rr6rttNC7wRhJG8WAdzlxs/OCSh+QEn8xyFNQy+JUt6nE0+5c2KWeAwuYN3mJHE1cH33LdcXKVTxsgD2Eh6hLmGLnkrd23qOytzoxD95HXwBLXM0Wtn4crAB38LCCd3itdbOwVzyLllpt7Ahvx9YoB2UW8aiZ/dOkcq2H/KBPsLIwpIRlcaXJTnGF3jsybU3Ofx7/O/FGercRoZV4Hcqmj6Ol6ivSwPxa/zLjgXUm8YnJBc+CH/E3dmF4bsFwPRqvVmejI2A7N0OaYe60d0nLpBLrUd9kmkOm+9JSra8+WGNu0PrZqyhLni9m7Ch6DpSzwc0lgfxwtljElYBcMnTsZ3lfCTelxubj4Hk0GZTLdwNdapH6Vrpcuim5Au3mNvGENZhfE3lC/l9ghtPJ6lPF+pfKWG+vb7fMkfH4nHKBHuEnkhq2lWSTh9EvY3rkMik39TvOJxWQm85jZr8zWrfBm/H/GqfhP733Y1M9m42Zznk4Q7tDnqWPOx20LlTKfo62UYnv1UfASp2C1d67YLyQl8in13C3NEv6NlVmQvCBdZTd4sOeFvKQ8vO+J9hAo06+n6lw2hyB/9KI46N8NWoDJSJmReF7nJNYFRzjm+pMTPVpM3mP+Wd1mvkTPdEUJjvxWlwsn4ra+nfsSbtBicW2ua+TKukwEMVbWqtwkMFYn341HSaLpZdS++L50UkSkv4CD7cdEaPme0TzhMRFWpm6kIxK3nYmjB2cXolDZJvXgYXcB8YK53Iw6O1Rzzlr7frILlRprMCV3OdyuTTZHddfl4an6n2/BZXKapjxtI/7LKgrWc4y70Oh94Nfh1zsmqlxE8ir9nHx77gRZLMKsdbMso9J3civN6CnyCBapo4FGZ9lfEHugp1gYnCwXGPxoyyQZbu0LeE3YQ/f494lbMbPteUm3vb049FWzR6/MslzCPiNyvhv9q4h15Lf5VQJ6y0o7yGb8CB8KWcbKveDnE/lYfFNOkinrdNcC3ObK1m9twKVGmXS9MQqdNK+Sgud9ca7YIvwohmCZdqJ2FB6S4DymchGf2nTdSi1NlnzSa22By9RXfl/0IyCK2LG2svuJSN0ofV/CvafOw=="}, {"__id__": "chunk-5ccbb936708d04166f2e8812ecf8c9e1", "__created_at__": 1760502962, "content": "/*\n  This example task a private key as input. It will report the BCH address\n  associated with that private key and the BCH balance currently held by that\n  address\n*/\n\n// CUSTOMIZE THESE GLOBAL VARIABLES FOR YOUR USE\nconst WIF = 'Ky72RcsMytFtBzSmyS4XMJdCpXd4pdAWanmWwZJkANWX3oV4AqDY'\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\nasync function start() {\n  try {\n    // Instantiate a wallet\n    const wallet = new SlpWallet(WIF, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.initialize()\n\n    console.log('walletInfo: ', wallet.walletInfo)\n\n    const balance = await wallet.getBalance()\n    console.log('balance: ', balance)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-5ccbb936708d04166f2e8812ecf8c9e1", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/addr-from-key.js", "vector": "eJwN0otTFGUAAHDFlDOxCRSB425v93a/3W8fJ6FpVpoEpkQPEi2lsLBxItPSUjNKSknMSl4O4sEdd7u33+5+394eQjnRGImJheOoJdTkg3ybkz2NGSoqrd/f8OPFMWJPx9SOusBi5ylwUviWPosmJ1ZLe+i0zCQQMsojveR7WKJVsUN4N3vbjvmBcW3vg4+YgJosvKofV4t9B42Ze8rUOliEbhjF4BgYCrrTPsMN4GFzgtLHbw3cTf5NnopEYRy/I5DsbgSH2xqD68K1OR9wpbfXBMrBWe1Za6NUEUJgTnCJNAx1S/LPZmfi6XgAzIALMlegleJcMCVQEFX0IesZ84wSZWu4FP5dL0hcFg7WP8gPqY8a72J/3G0VtSTYQgFTrNtH6eA4+gReJiBa6XbxvWIyboRzxVdwqhWK1PqS6M+lfUYXmA9z41sjRmOePZPfKUOKx4w1QXqarTeWkUryTWRYmGWnC5fQW6bS1rG7i60FWaA/crj1BDed/CzXwgkKCt/qjJMBmtO+Xxkr05IT7iOfmldR1MwQV0iPgXn0iPyXdtj3VGKflOzv8bjQPMNj7XT/YjdlraJHbFO/Ss7ZjriBzJOv4IXcduCjj/g/tTfA7qw56TbNS6vke7T8xMkpVbF1UZY+Qg2q5/3lXBn+TPTr7dRJUBlfIpTiKcyW9mInFw62Xvb7pQFQrpSjj9XlkYel/lgNnGSfFjzGYPxlMgjbzPuyfwMueqFWSxQ4ykozSXQVtb9tmmTaLxjVie9RKb3HsGJ93ETubZjE3A0G1Ev+L1sfMeszc9uTndO4lB6lnhfOG2vUs0KBuVQ5LKxEx8QC/6ysUdDDWXoYb8yq5sfLqXAWqTRzpInWaf4l/wlKtGwrFeY7ltTLVYmLmPH2YmOrWUsnyIy0MuV344pQg1+LvwnfEF1MOe4g3+EN6a10NtsjZ4PC2Gojw2FwwjwZv0542C08anYa3d5eq8I72i4DQ+yHsa/BdanEVwH7UV+znr1fzoulMoWh/rbHECWf844BXd658a8yXPpC/g75mHORsdj1cMDTCZIatkVDXGW67BRxdfzHgZj4GrsucifXAh9wUp0mrcnzu/Ai5UJh7QI71yRCi1iMv8OzxZRwpUL5I9IhlAdniXkeyrdWcTEpRonyppjZvkaYL69X1ruviDnm69Rm8pY+WQKKZiPyEVqiXJD2wihqiV3LnhbsbfmW26b/oJwyO7jN6EeeAp+nnQkL7dON5WJK6Ax7h1VC/SpcsINoqnRP6C5qJ6tzBXAqd3tAYYKxO9G9ZB39gvQrej12FK9235RZcBT0pJzCOdpavBaUgFp1Q3NYyTCX4gG+1NxqEjKPPG/sA3UNXvESWKbc5UwTu5wRrXVXR7Q+1smOJj1x165/NIXsVTcbc5iDnqtqvVkB861V+nK5mDnCNXM5odMN29V93AL7Jt8dakW3tRP5Iu2OtXAH+DXkn7htdNsVdhF3f+M5pUH8W2xSI9TjwhL1hMSrYcLqD+AkbZMQNg9G8tX37O1gSzBTeUcc59nVluS/jjP9b6Mu8zl+pdhkve/5AlazDe3zSR2+xdzGrOd/JLlWD3O9eSzbwl4ROn1j3PfiyklV8CGDDpTxRbFCzAULST4P1aO+y9Fl9kT6Yvhf6cPILYHyRKG5wxn6/+sC/3NaH3+/oqH0KduogsnD+iRurPIgqI59oxQpDLUXb6pZoH0hZltDNrBmgH5+ZzwQDSrNxgr7PfSTlZegyQH1Pi3XJ9FPal+Li/gTag7eKA3zT2rFviZmGOel/xGpiCcbi1Ft/A3vQAjqKYB4pNhuVC8WcBv1h+CBzENgPOmkfqZTjA92eK0RzzU7Ko54p3OjtZtWk1ENquRnYJr9p7EWrdYJc6p1efaNsEEkIxkdkmena9lCPBJ3O7PRQnspKcC8KnBF6iDhhU3wCdNQXfFr9hYpH6Zl3jAHwW9KBAb9snWOeVU4jnOdRXgo4z9wUZR0"}, {"__id__": "chunk-388cda3c6428d6efc621262219e64ff3", "__created_at__": 1760502966, "content": "/*\n  This example creates a wallet.json file. This file is used by the other\n  examples to demonstrate other common wallet use-cases.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\nconst fs = require('fs')\n\nasync function start() {\n  try {\n    // Generate a wallet\n    const wallet = new SlpWallet()\n\n    // If all you need is to create a new wallet, then await on walletInfoPromise.\n    // If you are initializing an existing wallet, await wallet.initialize() to\n    // retrieve and hydrate the wallets UTXOs.\n    await wallet.walletInfoPromise\n\n    // Save the wallet data to a JSON file.\n    fs.writeFile('wallet.json', JSON.stringify(wallet.walletInfo, null, 2), function (err) {\n      if (err) return console.error(err)\n      console.log('wallet.json written successfully.')\n    })\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-388cda3c6428d6efc621262219e64ff3", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/create-wallet.js", "vector": "eJwN0otXFWUCAHCkMJSWeMrj3su9M/PNzPfNnctm50jqctJATDHcTY8StJSBKLn5iA3QskSN3BVN5X3hPud+M/N9M3PxwWHxUUczWba1PJFEuma7mJ51NRdU8uyW5u7vb/gdQX3ynw4WH5zuls10NQ/e8t3TYBTgmZ4EtD3UuPs6+BuugtVqvz+Tprj+6nve099Sl93t/IYwYi2oSh0P7tbyoon6ESlES/HroV6uve0Jfrb6O6nASs49Ktzy5NObtij3FfcLmPzLOg4xq7Q0UuDi5CT3oOZwv8Zi34fefLmGVeEaeAVUgm2h/8B4OVVBvkztsvwb9izeiHP4xdIztD07Ble46uWd4FXhVXupcTz6KEjVHvKrjM2kWX3S7AsMpn8NK6RZUrF9Qo3FSUqj/HbPRe0jOs8Zi7wwDr3h7sDvRWr1Vj7CsmAMVynfSluNescFNt56F6/NTZCT1K20BF71FwmQptGUSJN42lgVOqBe1Nc7l+Btjhz+BP9W0ocd3UKjutd9MydJnsgqITUwlsom6wnCDYILHMaD+uvBP3j7UA13xL1P65VukCsgJYqEhg4v5+If4Ya00jBr9HqTbCVGjnbDiJIJUGzeFaeS83AlyCBKJxetATfxD6lzcyg8I2/WwtYa9XrkppCY8w0Xo1NmIfyy6yW4NBgHR1OmRpf4FCJqx6L50e/TKwj0BgWHkCAPwjKtzwlhIy0XW9Rtdi54ihynA9IftUP+l4X5kdtOoL7Prw2eJ8P0bCarUW5Uf5Y8RV7B+2zl3T9k56qjWj/8bdagi4lcUm3CZKDRecacadnpLMXq/kAMawtSBsBGukVsEtbSV9g4BrAvsM1gv37WWC2dBI/Li+C79DZ+UViq8/BiiHM6U2JoNVpAUjwjUjqc7m605uqX1QvMDvMl9qFnY/gjLh1X0h447HSw6wkgfjoEHs3aAVZ7AIphbgh7jI+NtJDPaiJV0noUq83SV+ITpFVvwsOCKH0r0PApzyTDSEPGdjDj/7PzlIZQLFgBG/SnJAU7+Q5+Hb3vetixEGbI861xqYuZD2Ptb/D3lAyXGx5Im6a+Y78TxnKiG6JE9VjwaXTSDLRBPFXdxaXpqbhVLXJ9SSbgOTRGKunUrJ0kXq71QnhZa+lZ4qbgqrhJnCEs4w7Lt8VPo3slzPwodYMxx/KuIuGSf6wrHelolIwEvgtdQ1H3Cfhvfzk+aM8nV8Vfc4l4qzyg/ytCtDauhTftK0G1GQnWZ/4Zb0ZDJB3VObaQwtAn4QX6HeE7X5FUBjbALShP3K79ntGNfoD4cbzfd41NZuvdL4YA80XoTnC5066tcxX3DIC5oFaeDJTRarGWNHsPqMvUhLTyEJf9WI7EjXuGjXEhamwATewcdYWW7yi0ODJFGGou0RX4F7z28Vm+M3yp2sAj5bheCE+nVYutwpXQFOd0l1uPsyTp2J5/qrGHRoV4tEcn9mYwTPfqEbWRJJs2bp1tjlyHFqA9XIlrpx7wz/TE21rbd4OC8Gl/T2SAvxYYUQqsFGebcl66Kt7ThJwYscJ4AU6GFwW+dySgmd1lzGIhFYHeBmsT3afF8Z3Sz+Zjhow24V/B58FzfDGut/WRcKvg+kCd5qlAF7nP8WzlvpnmPqctmzHhu0ctfptSxFeqz7prekfImmgTmqKxDinrHNMpyerT+gg3J+sSeG6fLhc4PiOnc0XppPBMpKznvpghlFqHzDP4bnganG2W0SqhtaVE/6/rlDnPqIvsYkp8THthpCbcgI4D7/4HRgY04Y5peRhyR8k6/0LNtArDCbianG/7mRvUHwlkg0/wdscutB/TzHNdn4LKdkZbGt4ZUmiBsbyzwf8mSUI7+MNZYeEnvUK94O+UeOZN9ePgE2ZVe69wlFzLgIkP6CZ9lPTDdDxmK7eqrQR9INlJP9MfkH7joG+ech3fld5yrPB/7f9Kn6v9XYpHo2GQuhr9IzcOdsOX8Y/MT/ZbxqQVUrPw/wCSgZaY"}, {"__id__": "chunk-a5f08246f9ac6f9a7566ea5ca0f06ef8", "__created_at__": 1760503746, "content": "/*\n  This example retrieves the BCH and SLP token balance for the wallet.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\nconst walletData = require('../create-wallet/wallet.json')\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(walletData.mnemonic, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.initialize()\n\n    // Get the balance in sats.\n    const balance = await wallet.getBalance()\n    console.log(`Balance in sats: ${balance}`)\n\n    // Convert the sats to BCH\n    const bchBalance = wallet.bchjs.BitcoinCash.toBitcoinCash(balance)\n    console.log(`Balance in BCH: ${bchBalance}`)\n\n    // Get the spot price of BCH in USD\n    const usdSpotPrice = await wallet.getUsd()\n\n    // Calculate the balance in USD terms.\n    let usdBalance = bchBalance * usdSpotPrice\n    usdBalance = wallet.bchjs.Util.floor2(usdBalance)\n    console.log(`Balance in USD: $${usdBalance}`)\n\n    // Get the balance of tokens.\n    const tokens = await wallet.listTokens()\n    console.log(`Token balances: `, tokens)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-a5f08246f9ac6f9a7566ea5ca0f06ef8", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/get-balance.js", "vector": "eJwFwQtQFGUAAGBEUdJEAw71nuzdPv5/d08MFZMGrUxTS9NMrJQKLUYBrVQq7CHay6RMUFG4vWNvd/9//3/37rCoQcCpSRsni2LS1MFRfOWI+QYfKU71fUMlV3Bv05omQa63ljt+CCzlS9GH8VxuFBzB5/nnqevCBeYLsD/QrHqsg0IuMeVj6jzjAhgTe0tAfl5f6TuPV8Xvhl8NvmJcM7Z4rsIu8wvnJWMpvIPOBou5qKyTEne5aw/7OXxHTgbLa4pRlnE/Kow7AksCdXKTEEEzlFGwrTHCu7hucIR/Ef0b0fg8+p/aYZTIKZ4dETlQz+bL1eFQ5BoStdLgCtd8Ng1sNG7Fr/Nbdt3jR1o/IAeFpF1zmaeEVXI5rGDPbZuj9pI+vwNNwJW+10EafAmOF5zSanW//jVWwb+sBHeifLZa3Ecz9FT/bySibpAP82EU001+8AOZ7GDLYRVGp4ADdCl3cBch9e5v1VnhlcI+mMXURm2YbG0Th+3oFOtVF1kr7NbC8YT8Nn8PaPw3lNClegdSRCg/DBb7WGktOe4vi08Vz3BBb535WLhJPcT8aR8LtI0qthbRdRThKrHF2gH/JLx4hyvenImPx84yCaOTy0FDhE6xXGuJHXQnyB+RWv/5hr6Ic0wv2GX8w2boNZyWeiQ22f+EeV1riy+08plfoyO4D+A04U25l+sbw6M32Dx6BsbIfe4v92baY2eIy/QGtRQEUZr3TXMw9JBH8GyjQEAkF/aSH42bsf1oLOG0nFGzIrW4VrzHZvIO/Yjwi08mrdyA2Nex7+lB16poJSynU/BKoRnVgTqmCt3hk9xve9PBbaXSeooQUAEWyzWCRKprDolrSIt0FJdyLuNlR49QRPfL6eKTgiS10RtkLt2Dh5PD6gQ5F28SOmk3YaSMABTazUdJj3Uzez52iKVyaGihP8XXF3vPXI8T9mQzH4SV5IYVxgWmndaTErOKfQEM8iX5oTx4ew88pwZCD7qeETeOuSykK1kNP2k1oCCL4S21n97yKCgXLpBK7N3wKHtReCey1V1Ijimvb/XwPdaZzN+9fcGvxOdAj7HT+7eQaleT1kiangVmNx6L9OMk8K16lHkfThrdiZ8OlKK5Yy8re6QW9IAvQ6pwv2/8Is7hy/B78kjxXGwRuML1gwXMaOb57B/9+f6T0Vtgo/i49ZE5jUyTVkinGQbdieahuXhJoMafY5RKMdqVvUXluIuwjRUyp8ZHkPXCa/ghoUzh+eFMmT0gXAUqyMxt3d7t7FsgJJbIx10sZtR2vIEbLT5ojjVNfaRnCDCiMxiiTyY5yiX8CUgFDv5Sw7JgKv7Q2gw1kzfKG5sI6x60czQeJLXAFnmcvUdqovfwAOcm5NKvCCftrXROZA46gRv5NrXNt8wwnSfNJ0GRkURsOIMLsbPBQE+J9oQ7me2iOncilKNciOfDDmEsfpy5wY2zztpNutPusD6r1esS0hVpIMivk9VDfH32o9IANpnUG/fVNQwKJOGpyrOom6zl4oFW8JN4AM0PfaqU0rusM5zmLg4U+7+jw7jfPTCwKbHETrMWm3XRDKHD3oUK/Gm4CKxmOgMVjfmhQivQEGGLUHPwV361MZ86yEXrb269vpapbOy108FA9KXoYxcG5cQBkkIXwilmUlRzS+BjTiBX1S7utq4xkJ0g17MM2ZqzTa7hO3V5e2b2s8Bpv0tfM5e4esLV1idKN/hea7eXc6fpzPgpfbp2njRzMWWvtk9oZuaRRvskSAGK3q+e4j4ge9lC3Kj/jO6bTpSxvVeYRz6OLmNeJkd9r4ojPCk4VOvwTcxYQMqZfvU2CWFOr8x2EQJ94hS+1TfemGrm8gvEfUwVKSBn7Ol4oseL4tladoIMMhrIULFcGcn1WHF7kp1Ai61W6sXp5gHl9pAv6c8wj6eGqRfhOpQuPg28oYaaVfwFuQtUhJ1WB7vBN53m0TK7Av8P5fSkyQ=="}, {"__id__": "chunk-be24517fe3894cb0c05ab4dfda201c30", "__created_at__": 1760503813, "content": "/*\n  This example retrieves the mutable data for an SLP token.\n\n  Here is an example of a token that has mutable data:\n  https://slp-token.fullstack.cash/?tokenid=4540a1abe8fc1cdcd92c199c454e6f67391e312de11d7b17f4f0ef3dcaf11e25\n\n  Mutable data is defined by PS002 and PS007 specifications:\n  https://github.com/Permissionless-Software-Foundation/specifications/blob/master/ps002-slp-mutable-data.md\n  https://github.com/Permissionless-Software-Foundation/specifications/blob/master/ps007-token-data-schema.md\n\n  NFTs using these specifications can created here:\n  https://nft-creator.fullstack.cash/\n\n\n  Mutable data contains the tokens icon. This example shows how to retrieve the\n  token's icon URL from the mutable data.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Edit this token ID for the token you who icon you want to retrieve.\nconst TOKEN_ID = '4540a1abe8fc1cdcd92c199c454e6f67391e312de11d7b17f4f0ef3dcaf11e25'\n\nasync function start() {\n  try {\n    // Instantiate a temporary wallet.\n    const wallet = new SlpWallet(undefined, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers:\n      // https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.initialize()\n\n    // Get the mutable data for the token\n    const tokenData = await wallet.getTokenData2(TOKEN_ID)\n    console.log(`tokenData: ${JSON.stringify(tokenData, null, 2)}\\n`)\n\n    const tokenIcon = tokenData.mutableData.tokenIcon\n    console.log('original token icon: ', tokenIcon, '\\n')\n\n    const optimizedTokenIcon = tokenData.optimizedTokenIcon\n    console.log('optimized token icon: ', optimizedTokenIcon)\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-be24517fe3894cb0c05ab4dfda201c30", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/get-mutable-token-data.js", "vector": "eJwN0YlXFGUAAPA8IHwqKLIsxy67M/t9M983O+tqHtGBJQWFoeKRCJiWaUjmVZpWWiSiIWJZxBF7zD3fHKBpmj011DIK08xE42npS0VNtMOM4knH71/4dWojcdyOwpYwv8YGrF+NU8+azzSf5vng98xVWELuww7yOVODuZH50st0g9UBKxG2W/gSc780E/eIc8QLjgPmvHCFEU9dtAroPNAFr0sr1J9FyswO3i90ph+xliBfyhPsq3YMTkQdMEY5Qy+0OvnrKJL2HVUP7xC39zf//sSvhTw43XdK6oaPNhyEW+ANfbgaZspdO/W5yU2gg+3nLQitN1z2bv/fzD7v61SDNL55psYYue6J5FVus8JabfKEdwKUjzvGXFanZuRKt93tvgL6irXP3h5CPE1HSTuuS3q+yciYyl/D9WgAXaxU6S9KDrEXjjJfUbJw1chc4wWUzC0cfltqRTPVKdZStdJmES+WKaUU5z2UWMoM4CgwRZ2E5gvVPqfeBg6kjiBjI8ERgMhJUeZ8UzvossYbT3sGsQ/B10JObpTeo08iEOQYu5U1fjXjjsaHrsqXk2PNqYxTL7P3aJXGVbIOYW0Paxt/QkCWkAuweEeRs1ps5Hh1gTA2kANjyHpcRqZT69jbntliRJ2HZ6OxQ1Bjlnac/K5tRIXuFjXd/le6QQWtWFDDbYge55LVgWwqOwBP810kg5oXm/uoeCIoddwJOZmfCqqZbeBLe064G+SGzkeOZsS4c8JrE86Ce9I+fv9rLSN1Bu5nVwp7qQnRIZgH3XSROIY66ulv+Ek0+pj7LrKT2iTFiHLolvGS+jHop8/wHNGvGyHwFr+dLCRILcAhzo/qUKX3IJCT+sA58Ss6gY1YQa5WjwVPoYE8h++onelOY61+EsxN28W1etoQ9LbVFwTOb3PCKcJz5mzSmbIVsooR+Cf9kPya6z6zO+pI6ZO3Dh3PBSEbLadboiM8qwhJa/cDuJRc8MawvWwC1o0iI9vVwa8Ek/l4JgbuU7NolV6nLEmpbNmGK8Kr2UGBPGMNPKbPE5LEVnqR8SDsHbbefbHuWlOKsIzLcvaCdFcA7kQdriFigt/nGf3eaqHKzodjwtmwAqzgjhmCUSuf9v7FFaLPoEN63pUOT2k73BQawSxOq/bXqb/aqra16ayYA24pi6UcNLbpPa+unPRNa+5QEtRIRh8/Dp0nUfsM3esqM5ZCH/o8MNjJcnTSG/DNtOPoL+6A3SNlgqVRC/yo1HJOfMkqw7OYL9zvMsXsriTCuAOt6LT48PbXrd/toshneK9Y5fmGyecYvJGdBQcb+73RpgfIMi6OStVLmMMg3rjQcI9+QpfMZnW5/Qk4xWwXrqBm7yryi7ErkmBtNev+n1xr7TFX29XWGf/j0mgys7FYwLgCjaPzPvhCqqDzFBTGSgkyI0+yz6pBbTnYZMYRv/8lT19LYqBK3f9BNjnpq/F9ZHxbbssZFo8W4OVcDXMXcal5pkNK8fzAQX6RVQuOorfpw/B7eQO3Vn3cOKhna11qrDDX/oO9ps/Q3qcSyCK7hu7PupQXsa5cNh3WOSVfjzd/k/5ArbRDWcaVysPgeo/LLIRBPVk51Njnyh/qYefDHlL+/9IZcjwwxMozn4A55CuyR/sUDHOtC5XasdIl8yf0c2gLNw8ljRzDnPaskOJATFSgJ/lHMXfTM5QPeT/3Fr4Z2ajG8e3cHa1d2wHqNCYti0xGd7OxZDSsNC4ZmbYL1g3tCp0IF7Nv+L4FA1A5niS45eQU1rdZ7eIGkhXCEXjTnGgWGtNBJl3CzCGJNGtuCj3inY+FtB5YgroyDoovkL/xYfejpFs/J5eQvsg/jQvAFf6Id6VJU/XICQr5UrO/eq/sMQ6jcaQN8swsukZZ1BBBXZ4kmEkE6qhxg861N8m1ISwlK7vpCUZRwJE6pt5T+6T8q5XJB5UAGBp9Bs4NDMf9wE3WS1tKpoZRhXZF/A+bS4y7"}, {"__id__": "chunk-e32595d1a040af93448ff24bec76ba43", "__created_at__": 1760503818, "content": "/*\n  This example retrieves verbose details about a transaction, given the\n  transaction ID (TXID).\n*/\n\n// CUSTOMIZE THESE GLOBAL VARIABLES FOR YOUR USE\nconst TXID = 'b4ad5678644f889d4ae6145e1f56a0a1abde3efbafc800c445656a4508642754'\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\n// const walletData = require('../create-wallet/wallet.json')\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(undefined, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.walletInfoPromise\n\n    const txData = await wallet.getTxData([TXID])\n    console.log(`transaction details: ${JSON.stringify(txData, null, 2)}`)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-e32595d1a040af93448ff24bec76ba43", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/get-tx-data.js", "vector": "eJwN1ItXVGUCAHBQasUFRHmMwTzu+37fd+8gHiUFn+UL08Is7KF1EjE71oFdH6kHPXqSl0i06CgjzAxz3999DFDIidAelIVFKrpqNXi2tFDzLLbtuntC0939/RG/GvEMWtm1r6MXPuMkSVMQ23hRes2p5SrFQdZRP8brtFTlMO/xNFHLw5LSmlnkf0rvl7eAJnMa0QyO+C5Qw8zFznwFs37jSzWRqOYz6HLPv+1SMNkel/801+S/a47gHu9t32vc+bxh8i2tQDmo/cj25o34JjHXBQ/aau03OsR692JPnSgI3eReXAuaYIVZqN5r/R6dYD6PbGp/JMdAW9UKT4q2LGu2/zqxlmZ909Xy2Gp6izqLHpGa9APqIcfrcRGr4DTxgTefSsyOSylhJN6N6rhU+5nYDdOpBdE9dByf1LfqF8AqmES/3DJANbBnzGRd8t3HqWSh0MC04CtqHzlMx3mgF9nbg1XgHcfH7jOGvA34VfUN+S3S4R8135D2if1WLTwFSKGCuKmXglE1ENsmyNxCuFiq177BtdG48SsfB2f5zIwu5NI/kHFsG7iZk06tUKdQd/RKPt0K+pqP/mZ+oP5g1lvl8CGrns6WIuxOdi0eyFGsSk8VHmqL6/fhn8WJxhx7IZ7fHjDq0WT3fqn92LP0ab1P6NGLQAv7CT4VbcczjEAHETvNtobWUY3sMPMZGGCeI3ND20Exzgdfa497I5FEq8QKAMtcxDahVMnFL8GPUsXyD/rb1ut1ZwMxFDAQmRKbEJ1KL4j62pLUoPQhM8Ed5Cer77deZwScRnY6PdY27THu1eh31FH1ojxCzzBWCyMw2docXMrwWubUpdyY/MDqAs1khrgHLXf+hZPBoHEYVCg3yBR8VdnAzzSxGIZloA7UKtfUZ4w70ZvKsKsGnLcOCBAvUJ8As9TNfDEu04es9HBn4DhNioCdGM585Iz9rr1Gq7KfMpF/AoeMFcpf5HRtmR7QTnM1fBKVoReIO8PNfFzPYm6DsrwX8Shdypw49l5kPZt/ZCUzj611lila9I/oM7HBHoZ7wU98snGISQrJemG0lz1g3WOKzGp0nynhw5lBXQM38D5rjqdUH6RlVcajRgKXLc1FOTBP2YrveJsU5P9NfhEN4DC3HVzh48xCND/cQo4ghxp0+vk+oltMonbTiUQPuMZtalPgt+B1vUtahQVUjrpgslakpBG/40+5p4mvlHf853Ao6OABbj3Fh46Dw46LE9gmYyqXEJ0Lk9Blu4D5lKsOVcNU+CPzfcq5EEBBdm10ObvM+ac3Sehv/atxi5ibqQkDUgmxQmnEhe1jmiVdnTQDtKq70CTjLN7FbDaHtG5DNAeDjxEl5CbilfALcId1CTTi7vQe7k3dzPpa3mjPMfdKVRJpXmtzSf+lvyHSQZYxjXkpt1HNBs3h2cDP33j4AP5Py988yPIJi5ml2lisFvZ77mjd6gQ228qyD+p9VppjkTPIB3A/wvAJ1UUsclcS5/K+Ym5JG+mZViZ1UK1kf28ZDT1uFKh9mb+gf4DhyCStgsgyWVJQvnAVUYcA0Fv4d2kvLI51WNCuMub5LC4Ht4V6uQfhXnieFxJqfGnaDuvqsd3sGnmJ8DOK0BvUXdlXcCosyS0/cj/npDnK6Ob4/y+W5Q/Ezhqa8yZaoglMY243fxldjibyNW5evjv+dvZdYR542OqbNl0MwIlvj2f+wJyInLJk++/GVX0jWxfLOXoJ3jqcYH5EjekX7I7wiDvV9RDzfEiVLsNLYKU2zqpDa+DMXLd8g4zjIerJ8BQ7R0Lqc/bS6AluvrI6Q+OGZULpR4w2RJZQx8FPxDFzi+tJdZxZRl6Qp0u77E5wnDiZupNP1v3KIuDAld4XVNboVNOM6fKv7TNTXfKzdoFMa/eEDL2aNp35zpiVoFNmhQnNQuVPUbe0zhgTZsP15qxInX0Kvw/7fDukYno2iuadZ7z8HukXdxm3AUO7wRC9/wMer5xD"}, {"__id__": "chunk-d26dd9da4b3078c3f990f1f198fc1117", "__created_at__": 1760503835, "content": "/*\n  This example retrieves the UTXOs for the wallet created in the create-wallet\n  example.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\nconst walletData = require('../create-wallet/wallet.json')\n\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(walletData.mnemonic, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.walletInfoPromise\n\n    const utxos = await wallet.getUtxos(walletData.cashAddress)\n    console.log(`UTXOs for ${walletData.cashAddress}: ${JSON.stringify(utxos, null, 2)}`)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-d26dd9da4b3078c3f990f1f198fc1117", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/get-utxos.js", "vector": "eJwN0Yl3FOUBAHCpMYmS8EhKjl2yyexc3/fNweEDIagUSrAEEUQCaAjPRK6XhkugJJWA5LVNw22IYXdldzPHNzPfNzOQSADhGTlUSjgUbVCqQvHRmjQRKD6VagPW/v6F30PiMXVCx7YD76GtBJH1SOO2kHb/Wv4etVH73JCcP4FzCZ3Zy+blr6AOe6Z1zagFWo+Rjf5HFsa+RDR0m11gzD0wmwyTO50xZDmngEG9uq0hOAO+4l9QZ6ELSpVXt783eir4pnBSzQKfDdtgfeEMCC3KYWV3WlTJfG1ZsDQ4R95nPAgSoAlmMdOT/+VLYSottpNkspIFV5pfiXP4OkkiR4Y/Tkqy56suxwrBxnnGdv9ouoIniZtoH9lNWukRba0dlEXl76KPdjh/tA36nPyANeh0hUbHdLhK6Ae/VJC7lGbgQoly3fCYaSdWw3S3Jgz5Gd7sQJ96DVST+2QjeidUxHU4b9Mf7aekKm+esMe5EL+dTFjN5kLQitKH3sk9BPYSU6wILVVvGi1WUvrIsQ9iJSfSBWcIS6079g4uD/Poc3hRvpn7rLTNmgXvHlgk7gjPh11OHeiI5OZvoAK/SptCviFpbr+Vgn7rrYbn8UPwUWYiScU9/rk4cN5I/sXarFC0kSzxiki5NWtIJYJ634irzPsgLzSJ+8WIr2FhKMO/xDRShD9wVx0oEVOwnpgH2+TbclnRoLkFngS3CINmEou5rls03W+Sk3E52gpPOQlxHS7NuBpd5EO3LVlvPy2Uuyou8NfE+wt0qzJZqTfE2eBAYD2fYv0mWME/Tlr4U147ueF9qe9kWsQFZKx5reis+z5UxZ/c3li1vkzoAcfYf7r1ZKewldmunmQXkum4F9aSz6Rb5gSm3mo0F8Nvqa0eAmVoQOz1guQxq0b/N/m1XSNRPBWd4znjvPwqa8EIWYQl2gD6mQrwgForRuBhYZmruU9mnfFL7e1yETxBSN5l+7T9qaMlRsCraBevmgmlnuGVHlKDTqKkkk8mCIHwjziDrBTa+O9DJdoe/36iNDQW8EqL3ym1i8f4Gu0u9xpZkzaGZ9ly96vC7/VKZT4YD69qe+Md4jj3Ek3a2+jQEMHdAcEkTL0e5wPSOOMEbgyNNWcrkngbXTSn8QFF41ymTHTEBuuakir+2c8SssB4qUxYhwve+BhlMUC/IeZAm36AWZIt7pPrFCH+Ci7hjxo6XwwraVj9m5WHx+Ba8YrgBo/zj/m/4rtCRaSeeUo7C9fBDre89R6oz2fg9ZEx9AJTEr0hwXAz2cyd97iIJk0mD+p8oCkQQYXmlkxkf2j8/pFUO1MYLPoEDhU81EaovQF950SZHH2+PlM3CnOyy+Elplta4kGpzFxr/ov7ndNtns4f540imcww+LbVB6flDuFe3v8Po8Z+mvH02v8/3SqKsqNhcWJn6yZcUcC6w9EkAPDNdgEEtMvW8XCnAN3T3n/0ATrVSxchM165Dp5AnXggtLt5vZCp9vKI2syWtt6UudoVroqFzlTnxfgPtAVF0AniWnf3TKUvgUlkTezj5BMAJH7iirnnmWm+4vfQla7OVaFd9B4tRkv0/WhyuFz8zrwoTPHnsMPRSjxRuo/uZBTiFeYJ7yioKujk0qxqd1PrW/hZHrdtlUMHV7jd/l25Gf+gLbfC6Lh83rqA6/jmkMD/IdQvqcwLVuYoRVoN51ivi5+yM/ngwXFelxvTHrVG+iX7IvAT4yw9Hl9AVW8bUwd1/MXIiPkMvofOgNOW4tZKO+Ep/azeD/9K/WSLs8lbn4uNxfh1MIV/yXiLtCf6jEGmBx2OVfAifhdG+XJr9Mjl2mj6vJetVeR0YxXuhotyisUeO0HSwg+j6niVtdgZ4uXFMsUJ+qHkdH2jG9bnOpfll3FTeAot9Sc6pZij6/Qmq4t8HXo39pHziNQQjpFU8qTfSKLIAZvtVcEj4MNRBwVZqHb6wBX+GSfFX+quZX8GIQmfSA=="}, {"__id__": "chunk-a6f32060dcf6ed8d873f594c5eb2e988", "__created_at__": 1760503840, "content": "/*\n  This example will execute the optimize() function on the wallet. This will\n  reduce the UTXOs in the wallet, making it faster to run code examples. It will\n  consolidate all BCH into a single UTXO. If there are multiple UTXOs representing\n  the same SLP token class, these UTXOs will be consolidated as well.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\nconst walletData = require('../create-wallet/wallet.json')\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(walletData.mnemonic, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n      // Alternative back-end servers: https://gist.github.com/christroutner/63c5513782181f8b8ea3eb89f7cadeb6\n    })\n    await wallet.initialize()\n\n    const txids = await wallet.optimize()\n    console.log(`Wallet optimized! These transaction IDs were generated: ${JSON.stringify(txids, null, 2)}`)\n\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-a6f32060dcf6ed8d873f594c5eb2e988", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/optimize.js", "vector": "eJwN1ItXFFUDAHBMOSpiSQryWNiZnXtn5t6ZNT4fgWSwhEaZWklKhQgVn56OYXRMSytBJTEt01awhd1lZ3Zm7r0zA5F0DmqJWfbwYAR17PX1aWmpvXyRGRWn+v0RP4DyppV03dFRqRa6daFLKDN7PXnctcR5qiLnxY6H7ZxSkiWv5Wsm99HpokBq/acyPyYfSgLb5ivHLNRnfM/N6URtm/wf0YtGFrdYprFemOnUozVOSe6Z1B9V23nDLDUaJmXCBv91vioa5CrYYnBSPQxXmjPVWaEV8d7xEdxlcDBR/Au9FEbmty23igdotnm71a6EBZ7snrpW8Mnp5KfkHrvIXOR/0ZfuOwquZdR3vC73enJRBf2KzmS95jV4KKxADlXLG+V047BeS87CMXo//SFWzm9UpsDtcBLaHKq0Z2iDrWPl87iR7G5+E97ubhXug0NObaxH2Yyn2ROIIZWEkwSdXmV+rx8Xusu0T41xNEFKYHnkc/A33BH2ZZ9DLfQ+1PXSDfg3QyJlYh1b1fGbioGOu6UUFrB+FkZ5jsoIj1JFwQsisa0Zm5yzYD33qAgtCc/lvmk9xo6IT0Qt5wQZ7IgSDU92A7iPfAP/F15n1eo/sQG+PtTHX4rZeLbaba2ye8gs60NyFabotfTe9Hx5tUWFYuEmODWywJkNVeqYqQ6jR+XpeqN3LG6Gn+M2fQMIQqRssReJ6eZ+/ji3hc13q/Dv5jPeZDmBzhKBkZ/yVPhVa5hO43G0i9PYFbPZHtKSaDh8wvMaKG07LGVl9/lu3NVt5sNK61k06Dj2TPcO3/rYPml/+0Hjtpx9pB//yV0zPMn/5YeiHtTprWdvs94UXnpLrZAX0efBMH8PG/Axo1AIGvV0hTzRnqnW4URQhX92jsc/I49qirsMuAoXPCflRopb01ElWCN1GQ2shFbDvZ5SfEXN5T8Rf/dcc3zsLvAuK6Nx9DBIDNWGG7gmZrRb5GMwUeg2H+Mu4HJYLteH/tRGuG7/++aTni/EgrhrCJMNoaRtvljtkvThLEOowpc7q3Cx71cu2YhKU9mn4l3gaT7G3uNHxw/gPFwn5xoLuI3opDPOuZ/GyYXsB5nQInmu8F9TBx3Cw9Ysq6N5rrlEbeRKpBJtfLainIU3hR8CQfB4KAGHpGZ3HxgjF6kBbizoMZ+Slghp8RFphjzOHibJ7BdRVV7Ht1ibrSlZX2oTJF1O1Zf6d9MWEwoLlF3S0qwd0uWOwrQWaZ+2VzpmAcArGW52OFtsMsaIB/UBuEwuFMepA2ApXb7niDsS+ko5S4rsSPIMYwvey62QjhhLWdGrLlcM+4QmcZS4EJ0j77MmdJR6rn+I3Gns1BA5LTah7XwluugO4Hx22iwI/2ommgtj+9lo+gg42SqTi/LlzGrutWi+55HoxEibSK2teF6aF/jQM+FjwQneJWkB+4GMJ+QauqfzOWXwlR+M5a398t3sAjtMT1gB9g6sjm5UzolvYz/L8yWBt7jv/G76Tic5Z6c+N5JAGkCKECer6bocv/GHyPlOm7WeQE4SW42X2wUpV8MJOKavEXvgHPEx9xe30V7JZsTG40RGaaOy1/hWLuFuFCuNPGu6k+Dpl9XW0cp5uX5nrtkdqbf/D6r1Qe0F67xZZtW80g90vkj1u0G60l0jbbP/CibZxf40VYsV82ekF/WQPC94RZkvpVrN0+5WasDx9oV8xcuXYUFHHptrfWQOxS+xrKkxtUzYbZ/gbmCNHailD5axO9NkEI/baJC/xNm0WkmDLVonOSTmkQb9nUjA+Y+5K7aYOdzNyilziFsHCsxTYEA5Fi1t3+EdkeOe7zUtZz2opgftk/GRPS4tA2vRBmED2Epmky/kOuWA50xGiumhRZaLvjbdCN+qultY1b/7zNdqQBlNtf12AGynXhZwfrTi2pm0yXQTmiKWm5OsDxzenYOaUWpkkVgO9/sdWAE/owDdDFaZ17PZRoD+A4rqlbM="}, {"__id__": "chunk-c3c0d90373a037f2c59861c35b48847d", "__created_at__": 1760503852, "content": "/*\n  This examples send 1000 sats from the wallet back to itself. You can modify\n  this example to send BCH to a different address.\n*/\n\n// Global npm libraries\nconst SlpWallet = require('minimal-slp-wallet')\n\n// Open the wallet created with the create-wallet example.\nconst walletData = require('../create-wallet/wallet.json')\n\nasync function start() {\n  try {\n    // Instantiate a wallet from the saved JSON file.\n    const wallet = new SlpWallet(walletData.mnemonic, {\n      interface: 'consumer-api',\n      restURL: 'https://free-bch.fullstack.cash'\n    })\n    await wallet.initialize()\n\n    // Overwrite this address if you want to send the BCH to a different address.\n    const address = walletData.cashAddress\n\n    // Amount of money to send, in satoshis.\n    const amountSat = 1000\n\n    // Send the BCH to the designated address.\n    const receivers = [{address, amountSat}]\n    const txid = await wallet.send(receivers)\n\n    console.log(`BCH sent with TXID: ${txid}`)\n    console.log(`See on block explorer: https://blockchair.com/bitcoin-cash/transaction/${txid}`)\n  } catch(err) {\n    console.error(err)\n  }\n}\nstart()", "full_doc_id": "doc-c3c0d90373a037f2c59861c35b48847d", "file_path": "/home/trout/work/llm/ben-training-data/knowledge/shared/code/psf-js-examples/minimal-slp-wallet/send-bch.js", "vector": "eJwN041XFVUCAHBFHmsQiMCDBzx4bz7uzL0zA7zWY9BR045f2dZBDpEWaLAGmriafdhmuxomdngRyhEQ+Zg3783MnXvvGzTyqJmmp+xkbe1ap/CDAk+U4u4e23SzsAx3f//Drw4e1YJvHjlYoR5npT23tLqCVksfwOgUupn/XUfEPh8odmbJDbI3u8xZIKaym0qRc7bwGU5h1d1BhVpvC69Gag8EIllwI2l3vuhagSqjyaSSZWpH8VAxA9eKTtMGax5ehtu1P2kN4kdYd2YYi7jtxc0Aixu0DCRmX8HlaCx3HWjQHlIq+HTrjtwMeuwL2I5dVc5EEuLHZI+9V1G4tCbIbllJ2ueWzyhDsznkXhL80Wru38y0+qlp/+zdHAjL94J3wKMgU5guzjJDEQcvdd4JpCgn0Ji/Sz0O/2avcM6TXfsW81/BfqOnYA9oIZvMMXAYp/JAreXO2AeYjtr4BqmOJVLBicuXyT2F/yEXnG3G10IodiqYAlbqEzqQJZJaVAU96NdIOL5XOm2NupPwttoOPWIfnkMqYsXZI+IKNSsgwM9Ar3Mk+M3AD6he3AAr8cWYDy+xOuIhuZVvYrudKe6QWYUsskx7kzyrLFEvST+aMSbKm+x/iaqzIJCuXmdb3BF/Apltdkh7+7dilJ7qrTGvqDoulzrgPLaAHIudDdhuI63my3AGfFceF9YrN/xf4lBnjTTBJmVqeQqXWttYJ+tBa2iWuAymYj8qiX4rf4Afx1Gcke8juers+E7S4YbwDi7Wx+2P99wU79b88mdiRmxm9uZwKXtdnOdeZi20y6woSOI5+2LOfUDHz8Dagom+JjgVbATzUGVeBh5np0AQPqdmoSU0zH+P0mgEro9OgIV2Pb4MHqDX4ZNKBvpQW05bCWeb0bX2G6KiARYVh2mYDYMWuAXo9A5T3MKCxPx6obQoobdNCHmnuFOs0dxXrB/xb9KjsaVGj/NI8F79Kq7DI9Zqea78oN+jBcQL6mv+7L6krve1WnxboP4g8bByZTsuUVfqT9Pu1Ie42WoVrGZT+d9HRWk8sF/chKE5LudKT8d52Ze/uihBOcStpSqokYYoc9eTIfsl+JeCGV0+o1Ea5PaASijgRMdAXQUfa4elNrTZLLF1+BH4mutAT0nJdqVSik6wdWAQVaNhcZv0vDUWuJ63KvsguqMppMG+Td4uCoJdMJ+s7N5qX7E88Jr4sP4xnEmqjD3RhWCYP5aThmYO/MQtFE+IUXTIapT+Crvj78kS9JoGXwRWG8lSZ++IshxcxPNBc3wxmKqusf5gH5n5GtmtLgo/YN7QX6JD5HNyzn9HvF+8j/uvdhd5nnwlnbRm2YfxMOUsDh/gbePnnBlaojtdLo23WAf5QXsOvsTfJCmsNDpKd7OwtK73BXOy/bYhmXsCN8yjRgWaDxr5MfSsE+qtkYuDt8hPvm7ubHS3+xiaQJ+SVl8rKnH1gWJz0PY5U/fp/D5tDK1Vz5IP+0LgXGCR2iidiXswIL/6DOP73DX4ipNEjxumFFPeRdtjVt+1zhKqKFX2NvuWXqu8Sud3+rhy1DZAaEf8H2Ra0Au9rIFtRy8Ep+/fCPfBQTEa/S2+sccF1/zrtG7hnKCQ03htfKG0SFhtrRImSTL4JoqQHL2qnjzY5ph0CyJ5D4MUpsJCxSB/l18O/jOvJtoHUorLwDR8qPgXJdua5qSLBNtw1EpwX6Rv8FfTclhzACghkMiuRzykyK2PPAcICYFMPEDLNE4JG/ez9VqzWGG8yJ+Uk0hY3pX+FkkkvcIf/7/3lLKje1SslZp8O3rmosz2o1lN8hedebCO7pfnChvYcnt5LCLdTWXlzwKGXxpe43dGi9mEzsNxe5XxiVNPBTCH7DSruSfICJmkS8E9aQ/qXXHoimyrVU9mMMf5RB/vzyQj8XLZReXWD7yXZtJkuFP+jvu2Lwe9om0A8/sXG91wwn+cAdci0PkfvuiSZQ=="}], "matrix": ""}